{"version":3,"file":"badgeList.js","sources":["../../../Framework/Controls/badgeList.ts"],"sourcesContent":["// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { Guid } from \"@Obsidian/Types\";\r\nimport { useHttp } from \"@Obsidian/Utility/http\";\r\nimport { popover } from \"@Obsidian/Utility/popover\";\r\nimport { tooltip } from \"@Obsidian/Utility/tooltip\";\r\nimport { BadgeListGetBadgesOptionsBag } from \"@Obsidian/ViewModels/Rest/Controls/badgeListGetBadgesOptionsBag\";\r\nimport { RenderedBadgeBag } from \"@Obsidian/ViewModels/Crm/renderedBadgeBag\";\r\nimport { defineComponent, nextTick, PropType, ref, watch } from \"vue\";\r\n\r\n/** Displays a collection of badges for the specified entity. */\r\nexport default defineComponent({\r\n    name: \"BadgeList\",\r\n\r\n    props: {\r\n        /** The unique identifier of the type of entity to be rendered. */\r\n        entityTypeGuid: {\r\n            type: String as PropType<Guid>,\r\n            required: false\r\n        },\r\n\r\n        /** The identifier key of the entity to be rendered. */\r\n        entityKey: {\r\n            type: String as PropType<string>,\r\n            required: false\r\n        },\r\n\r\n        /**\r\n         * The list of badge type unique identifiers to be rendered. If null\r\n         * or empty array then all available badge types are rendered.\r\n         */\r\n        badgeTypeGuids: {\r\n            type: Array as PropType<Guid[]>,\r\n            required: false\r\n        }\r\n    },\r\n\r\n    setup(props) {\r\n        // #region Values\r\n\r\n        const http = useHttp();\r\n        const badges = ref<string[]>([]);\r\n        const containerRef = ref<HTMLElement | null>(null);\r\n\r\n        // #endregion\r\n\r\n        // #region Functions\r\n\r\n        /** Load the badges from our property data and render the output to the DOM. */\r\n        const loadBadges = async (): Promise<void> => {\r\n            const data: BadgeListGetBadgesOptionsBag = {\r\n                badgeTypeGuids: props.badgeTypeGuids,\r\n                entityTypeGuid: props.entityTypeGuid,\r\n                entityKey: props.entityKey\r\n            };\r\n\r\n            const result = await http.post<RenderedBadgeBag[]>(\"/api/v2/Controls/BadgeListGetBadges\", undefined, data);\r\n\r\n            if (result.isSuccess && result.data) {\r\n                // Get all the HTML content to be rendered.\r\n                badges.value = result.data.map(b => b.html ?? \"\");\r\n\r\n                let script = \"\";\r\n\r\n                for (const badge of result.data) {\r\n                    if (badge.javaScript) {\r\n                        script += badge.javaScript;\r\n                    }\r\n                }\r\n\r\n                if (script !== \"\") {\r\n                    // Add the script on the next tick to ensure the HTML has been rendered.\r\n                    nextTick(() => {\r\n                        const scriptNode = document.createElement(\"script\");\r\n                        scriptNode.type = \"text/javascript\";\r\n                        scriptNode.innerText = script;\r\n                        document.body.appendChild(scriptNode);\r\n                    });\r\n                }\r\n\r\n                // Enable tooltips and popovers.\r\n                nextTick(() => {\r\n                    if (!containerRef.value) {\r\n                        return;\r\n                    }\r\n\r\n                    tooltip(Array.from(containerRef.value.querySelectorAll(\".rockbadge[data-toggle=\\\"tooltip\\\"]\")));\r\n                    popover(Array.from(containerRef.value.querySelectorAll(\".rockbadge[data-toggle=\\\"popover\\\"]\")));\r\n                });\r\n            }\r\n            else {\r\n                console.error(`Error loading badges: ${result.errorMessage || \"Unknown error\"}`);\r\n                badges.value = [];\r\n            }\r\n        };\r\n\r\n        // #endregion\r\n\r\n        watch([() => props.badgeTypeGuids, () => props.entityKey, () => props.entityTypeGuid], () => {\r\n            loadBadges();\r\n        });\r\n\r\n        // Start loading the badges immediately.\r\n        loadBadges();\r\n\r\n        return {\r\n            badges,\r\n            containerRef\r\n        };\r\n    },\r\n\r\n    template: `\r\n<div ref=\"containerRef\" style=\"display: flex;\">\r\n    <div v-for=\"badge in badges\" v-html=\"badge\" />\r\n</div>\r\n`\r\n});\r\n"],"names":["defineComponent","name","props","entityTypeGuid","type","String","required","entityKey","badgeTypeGuids","Array","setup","http","useHttp","badges","ref","containerRef","loadBadges","_ref","_asyncToGenerator","data","result","post","undefined","isSuccess","value","map","b","_b$html","html","script","_iterator","_createForOfIteratorHelper","_step","s","n","done","badge","javaScript","err","e","f","nextTick","scriptNode","document","createElement","innerText","body","appendChild","tooltip","from","querySelectorAll","popover","console","error","concat","errorMessage","apply","arguments","watch","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,yCAAeA,eAAe,CAAC;MAC3BC,EAAAA,IAAI,EAAE,WAAW;MAEjBC,EAAAA,KAAK,EAAE;MAEHC,IAAAA,cAAc,EAAE;MACZC,MAAAA,IAAI,EAAEC,MAAwB;MAC9BC,MAAAA,QAAQ,EAAE,KAAA;WACb;MAGDC,IAAAA,SAAS,EAAE;MACPH,MAAAA,IAAI,EAAEC,MAA0B;MAChCC,MAAAA,QAAQ,EAAE,KAAA;WACb;MAMDE,IAAAA,cAAc,EAAE;MACZJ,MAAAA,IAAI,EAAEK,KAAyB;MAC/BH,MAAAA,QAAQ,EAAE,KAAA;MACd,KAAA;SACH;QAEDI,KAAKA,CAACR,KAAK,EAAE;UAGT,IAAMS,IAAI,GAAGC,OAAO,EAAE,CAAA;MACtB,IAAA,IAAMC,MAAM,GAAGC,GAAG,CAAW,EAAE,CAAC,CAAA;MAChC,IAAA,IAAMC,YAAY,GAAGD,GAAG,CAAqB,IAAI,CAAC,CAAA;MAOlD,IAAA,IAAME,UAAU,GAAA,YAAA;MAAA,MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAA2B;MAC1C,QAAA,IAAMC,IAAkC,GAAG;gBACvCX,cAAc,EAAEN,KAAK,CAACM,cAAc;gBACpCL,cAAc,EAAED,KAAK,CAACC,cAAc;gBACpCI,SAAS,EAAEL,KAAK,CAACK,SAAAA;eACpB,CAAA;cAED,IAAMa,MAAM,GAAST,MAAAA,IAAI,CAACU,IAAI,CAAqB,qCAAqC,EAAEC,SAAS,EAAEH,IAAI,CAAC,CAAA;MAE1G,QAAA,IAAIC,MAAM,CAACG,SAAS,IAAIH,MAAM,CAACD,IAAI,EAAE;gBAEjCN,MAAM,CAACW,KAAK,GAAGJ,MAAM,CAACD,IAAI,CAACM,GAAG,CAACC,CAAC,IAAA;MAAA,YAAA,IAAAC,OAAA,CAAA;kBAAA,OAAAA,CAAAA,OAAA,GAAID,CAAC,CAACE,IAAI,cAAAD,OAAA,KAAA,KAAA,CAAA,GAAAA,OAAA,GAAI,EAAE,CAAA;iBAAC,CAAA,CAAA;gBAEjD,IAAIE,MAAM,GAAG,EAAE,CAAA;MAAC,UAAA,IAAAC,SAAA,GAAAC,0BAAA,CAEIX,MAAM,CAACD,IAAI,CAAA;kBAAAa,KAAA,CAAA;MAAA,UAAA,IAAA;kBAA/B,KAAAF,SAAA,CAAAG,CAAA,EAAAD,EAAAA,CAAAA,CAAAA,KAAA,GAAAF,SAAA,CAAAI,CAAA,EAAAC,EAAAA,IAAA,GAAiC;MAAA,cAAA,IAAtBC,KAAK,GAAAJ,KAAA,CAAAR,KAAA,CAAA;oBACZ,IAAIY,KAAK,CAACC,UAAU,EAAE;sBAClBR,MAAM,IAAIO,KAAK,CAACC,UAAU,CAAA;MAC9B,eAAA;MACJ,aAAA;MAAC,WAAA,CAAA,OAAAC,GAAA,EAAA;kBAAAR,SAAA,CAAAS,CAAA,CAAAD,GAAA,CAAA,CAAA;MAAA,WAAA,SAAA;MAAAR,YAAAA,SAAA,CAAAU,CAAA,EAAA,CAAA;MAAA,WAAA;gBAED,IAAIX,MAAM,KAAK,EAAE,EAAE;MAEfY,YAAAA,QAAQ,CAAC,MAAM;MACX,cAAA,IAAMC,UAAU,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,CAAA;oBACnDF,UAAU,CAACtC,IAAI,GAAG,iBAAiB,CAAA;oBACnCsC,UAAU,CAACG,SAAS,GAAGhB,MAAM,CAAA;MAC7Bc,cAAAA,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACL,UAAU,CAAC,CAAA;MACzC,aAAC,CAAC,CAAA;MACN,WAAA;MAGAD,UAAAA,QAAQ,CAAC,MAAM;MACX,YAAA,IAAI,CAAC1B,YAAY,CAACS,KAAK,EAAE;MACrB,cAAA,OAAA;MACJ,aAAA;MAEAwB,YAAAA,OAAO,CAACvC,KAAK,CAACwC,IAAI,CAAClC,YAAY,CAACS,KAAK,CAAC0B,gBAAgB,CAAC,qCAAqC,CAAC,CAAC,CAAC,CAAA;MAC/FC,YAAAA,OAAO,CAAC1C,KAAK,CAACwC,IAAI,CAAClC,YAAY,CAACS,KAAK,CAAC0B,gBAAgB,CAAC,qCAAqC,CAAC,CAAC,CAAC,CAAA;MACnG,WAAC,CAAC,CAAA;MACN,SAAC,MACI;gBACDE,OAAO,CAACC,KAAK,CAAA,wBAAA,CAAAC,MAAA,CAA0BlC,MAAM,CAACmC,YAAY,IAAI,eAAe,CAAG,CAAA,CAAA;gBAChF1C,MAAM,CAACW,KAAK,GAAG,EAAE,CAAA;MACrB,SAAA;aACH,CAAA,CAAA;MAAA,MAAA,OAAA,SA7CKR,UAAUA,GAAA;MAAA,QAAA,OAAAC,IAAA,CAAAuC,KAAA,CAAA,IAAA,EAAAC,SAAA,CAAA,CAAA;MAAA,OAAA,CAAA;WA6Cf,EAAA,CAAA;MAIDC,IAAAA,KAAK,CAAC,CAAC,MAAMxD,KAAK,CAACM,cAAc,EAAE,MAAMN,KAAK,CAACK,SAAS,EAAE,MAAML,KAAK,CAACC,cAAc,CAAC,EAAE,MAAM;MACzFa,MAAAA,UAAU,EAAE,CAAA;MAChB,KAAC,CAAC,CAAA;MAGFA,IAAAA,UAAU,EAAE,CAAA;UAEZ,OAAO;YACHH,MAAM;MACNE,MAAAA,YAAAA;WACH,CAAA;SACJ;QAED4C,QAAQ,EAAA,yHAAA;MAKZ,CAAC,EAAC;;;;;;;;"}