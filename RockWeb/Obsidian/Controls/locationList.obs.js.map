{"version":3,"file":"locationList.obs.js","sources":["../../../Framework/Controls/locationList.obs"],"sourcesContent":["<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <template v-if=\"allowAdd && isShowingAddForm\">\r\n        <RockLabel :help=\"help\">{{ label }}</RockLabel>\r\n        <Loading :isLoading=\"isLoading\" class=\"well\">\r\n            <NotificationBox v-if=\"fetchError\" alertType=\"danger\">Error: {{ fetchError }}</NotificationBox>\r\n            <NotificationBox v-else-if=\"saveError\" alertType=\"danger\">Error: {{ saveError }}</NotificationBox>\r\n\r\n            <RockForm v-else @submit=\"saveNewValue\">\r\n                <RockValidation :errors=\"validationErrors\" />\r\n                <TextBox label=\"Location Name\" v-model=\"newLocationName\" />\r\n                <AddressControl label=\"Address\" v-model=\"newLocationAddress\" :rules=\"addressRules\" disableFrontEndValidation />\r\n                <AttributeValuesContainer v-if=\"attributes != null\" v-model=\"attributeValues\" :attributes=\"attributes\" isEditMode :showCategoryLabel=\"false\" />\r\n                <RockButton type=\"submit\" :btnType=\"BtnType.Primary\" :btnSize=\"BtnSize.ExtraSmall\" :disabled=\"isValidating\">\r\n                    <Loading :isLoading=\"isValidating\">Add</Loading>\r\n                </RockButton>\r\n                <RockButton :btnType=\"BtnType.Link\" :btnSize=\"BtnSize.ExtraSmall\" @click=\"hideAddForm\">Cancel</RockButton>\r\n            </RockForm>\r\n\r\n            <RockButton v-if=\"fetchError || saveError\" :btnType=\"BtnType.Link\" :btnSize=\"BtnSize.ExtraSmall\" @click=\"hideAddForm\">Cancel</RockButton>\r\n        </Loading>\r\n    </template>\r\n\r\n    <template v-else>\r\n        <BaseAsyncPicker v-model=\"internalValue\" v-bind=\"standardProps\" :items=\"itemsSource\">\r\n            <template #inputGroupAppend v-if=\"allowAdd\">\r\n                <span class=\"input-group-btn\">\r\n                    <RockButton @click=\"showAddForm\" :btnType=\"BtnType.Default\" aria-label=\"Add Item\"><i class=\"fa fa-plus\" aria-hidden></i></RockButton>\r\n                </span>\r\n            </template>\r\n            <template #append=\"{ isInputGroupSupported }\" v-if=\"allowAdd\">\r\n                <RockButton v-if=\"!isInputGroupSupported\" @click=\"showAddForm\" :btnType=\"BtnType.Link\">Add Item</RockButton>\r\n            </template>\r\n        </BaseAsyncPicker>\r\n    </template>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\n    import { Guid } from \"@Obsidian/Types\";\r\n    import { useSecurityGrantToken } from \"@Obsidian/Utility/block\";\r\n    import { standardAsyncPickerProps, useStandardAsyncPickerProps, useVModelPassthrough } from \"@Obsidian/Utility/component\";\r\n    import { useHttp } from \"@Obsidian/Utility/http\";\r\n    import { LocationListGetLocationsOptionsBag } from \"@Obsidian/ViewModels/Rest/Controls/locationListGetLocationsOptionsBag\";\r\n    import { LocationListSaveNewLocationOptionsBag } from \"@Obsidian/ViewModels/Rest/Controls/locationListSaveNewLocationOptionsBag\";\r\n    import { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\n    import { computed, PropType, ref, watch } from \"vue\";\r\n    import BaseAsyncPicker from \"./baseAsyncPicker\";\r\n    import RockLabel from \"./rockLabel\";\r\n    import RockForm from \"./rockForm\";\r\n    import AttributeValuesContainer from \"./attributeValuesContainer\";\r\n    import TextBox from \"./textBox\";\r\n    import RockButton from \"./rockButton\";\r\n    import Loading from \"./loading\";\r\n    import NotificationBox from \"./notificationBox.obs\";\r\n    import { BtnSize } from \"@Obsidian/Enums/Controls/btnSize\";\r\n    import { BtnType } from \"@Obsidian/Enums/Controls/btnType\";\r\n    import { PublicAttributeBag } from \"@Obsidian/ViewModels/Utility/publicAttributeBag\";\r\n    import AddressControl from \"./addressControl.obs\";\r\n    import { AddressControlBag } from \"@Obsidian/ViewModels/Controls/addressControlBag\";\r\n    import { validateAddress } from \"@Obsidian/Utility/address\";\r\n    import { FormError } from \"@Obsidian/Utility/form\";\r\n    import RockValidation from \"./rockValidation\";\r\n\r\n    const props = defineProps({\r\n        modelValue: {\r\n            type: Object as PropType<ListItemBag | ListItemBag[] | null>,\r\n            required: false\r\n        },\r\n\r\n        allowAdd: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        },\r\n\r\n        locationTypeValueGuid: {\r\n            type: String as PropType<Guid>,\r\n            default: \"\"\r\n        },\r\n\r\n        parentLocationGuid: {\r\n            type: String as PropType<Guid>,\r\n            default: \"\"\r\n        },\r\n\r\n        showCityState: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        },\r\n\r\n        isAddressRequired: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        },\r\n\r\n        ...standardAsyncPickerProps\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"update:modelValue\", _value: ListItemBag | ListItemBag[] | null): void\r\n    }>();\r\n\r\n    const http = useHttp();\r\n\r\n    // #region Picker\r\n\r\n    const standardProps = useStandardAsyncPickerProps(props);\r\n    const securityGrantToken = useSecurityGrantToken();\r\n    const internalValue = useVModelPassthrough(props, \"modelValue\", emit);\r\n    const itemsSource = ref<(() => Promise<ListItemBag[]>) | null>(null);\r\n\r\n    async function loadItems(): Promise<ListItemBag[]> {\r\n        const options: Partial<LocationListGetLocationsOptionsBag> = {\r\n            showCityState: props.showCityState,\r\n            securityGrantToken: securityGrantToken.value\r\n        };\r\n\r\n        if (props.parentLocationGuid) {\r\n            options.parentLocationGuid = props.parentLocationGuid;\r\n        }\r\n\r\n        if (props.locationTypeValueGuid) {\r\n            options.locationTypeValueGuid = props.locationTypeValueGuid;\r\n        }\r\n\r\n        //var locationTypeValueGuid = \"C0D7AE35-7901-4396-870E-3AAF472AAE88\";\r\n        const url = \"/api/v2/Controls/LocationListGetLocations\";\r\n        const result = await http.post<ListItemBag[]>(url, undefined, options);\r\n\r\n        if (result.isSuccess && result.data) {\r\n            return result.data;\r\n        }\r\n        else {\r\n            console.error(result.errorMessage ?? \"Unknown error while loading data.\");\r\n            return [];\r\n        }\r\n    }\r\n\r\n    function fetchValues(): void {\r\n        itemsSource.value = () => loadItems();\r\n    }\r\n\r\n    watch(() => [props.locationTypeValueGuid, props.parentLocationGuid, props.showCityState], fetchValues);\r\n\r\n    fetchValues();\r\n\r\n    // #endregion\r\n\r\n    // #region Add Value\r\n\r\n    const isShowingAddForm = ref(false);\r\n    const isLoading = ref(false);\r\n    const isValidating = ref(false);\r\n    const fetchError = ref<false | string>(false);\r\n    const saveError = ref<false | string>(false);\r\n    const validationErrors = ref<FormError[]>([]);\r\n\r\n    async function showAddForm(): Promise<void> {\r\n        if (!props.allowAdd) return;\r\n\r\n        isShowingAddForm.value = true;\r\n\r\n        if (attributes.value == null) {\r\n            isLoading.value = true;\r\n            fetchError.value = false;\r\n            saveError.value = false;\r\n\r\n            const url = \"/api/v2/Controls/LocationListGetAttributes\";\r\n            const result = await http.post<PublicAttributeBag[]>(url);\r\n\r\n            if (result.isSuccess && result.data) {\r\n                attributes.value = result.data.reduce(function (acc, val) {\r\n                    acc[val.key as string] = val;\r\n                    return acc;\r\n                }, {});\r\n            }\r\n            else {\r\n                attributes.value = null;\r\n                fetchError.value = \"Unable to fetch attribute data.\";\r\n            }\r\n\r\n            isLoading.value = false;\r\n        }\r\n    }\r\n\r\n    function hideAddForm(): void {\r\n        isShowingAddForm.value = false;\r\n        fetchError.value = false;\r\n        saveError.value = false;\r\n    }\r\n\r\n    async function saveNewValue(): Promise<void> {\r\n        saveError.value = false;\r\n\r\n        if (newLocationAddress.value.street1 || props.isAddressRequired) {\r\n            isValidating.value = true;\r\n            const response = await validateAddress({ ...newLocationAddress.value });\r\n\r\n            if (response.isSuccess && response.data) {\r\n                if (response.data.isValid) {\r\n                    validationErrors.value = [];\r\n                    newLocationAddress.value = { ...response.data.address } as AddressControlBag;\r\n                }\r\n                else {\r\n                    validationErrors.value = [{ name: \"Invalid\", text: response.data.errorMessage ?? \"Please enter a valid address.\" }];\r\n                    isValidating.value = false;\r\n                    return;\r\n                }\r\n            }\r\n            else {\r\n                console.error(response.errorMessage ?? \"Unknown error while validating address.\");\r\n                validationErrors.value = [{ name: \"Server\", text: response.errorMessage ?? \"An unknown error occurred. Please try again.\" }];\r\n                isValidating.value = false;\r\n                return;\r\n            }\r\n        }\r\n\r\n        isValidating.value = false;\r\n        isLoading.value = true;\r\n\r\n        const options: Partial<LocationListSaveNewLocationOptionsBag> = {\r\n            securityGrantToken: securityGrantToken.value,\r\n            name: newLocationName.value,\r\n            showCityState: props.showCityState,\r\n            attributeValues: attributeValues.value\r\n        };\r\n\r\n        if (newLocationAddress.value.street1 || props.isAddressRequired) {\r\n            options.address = newLocationAddress.value;\r\n        }\r\n\r\n        if (props.parentLocationGuid) {\r\n            options.parentLocationGuid = props.parentLocationGuid;\r\n        }\r\n\r\n        if (props.locationTypeValueGuid) {\r\n            options.locationTypeValueGuid = props.locationTypeValueGuid;\r\n        }\r\n\r\n        const url = \"/api/v2/Controls/LocationListSaveNewLocation\";\r\n        const result = await http.post<ListItemBag>(url, undefined, options);\r\n\r\n        if (result.isSuccess && result.data) {\r\n            fetchValues();\r\n\r\n            if (props.multiple) {\r\n                if (Array.isArray(internalValue.value)) {\r\n                    internalValue.value.push(result.data);\r\n                }\r\n                else {\r\n                    internalValue.value = [result.data];\r\n                }\r\n            }\r\n            else {\r\n                internalValue.value = result.data;\r\n            }\r\n\r\n            hideAddForm();\r\n            newLocationName.value = \"\";\r\n            newLocationAddress.value = {};\r\n            attributeValues.value = {};\r\n        }\r\n        else {\r\n            saveError.value = \"Unable to save new Location.\";\r\n        }\r\n\r\n        isLoading.value = false;\r\n    }\r\n\r\n\r\n    const attributes = ref<Record<string, PublicAttributeBag> | null>(null);\r\n    const attributeValues = ref<Record<string, string>>({});\r\n    const newLocationName = ref(\"\");\r\n    const newLocationAddress = ref<AddressControlBag>({});\r\n    const addressRules = computed(() => {\r\n        return props.isAddressRequired ? \"required\" : \"\";\r\n    });\r\n\r\n                    // #endregion\r\n</script>"],"names":["http","useHttp","standardProps","useStandardAsyncPickerProps","props","securityGrantToken","useSecurityGrantToken","internalValue","useVModelPassthrough","emit","itemsSource","ref","loadItems","_loadItems","apply","arguments","_asyncToGenerator","options","showCityState","value","parentLocationGuid","locationTypeValueGuid","url","result","post","undefined","isSuccess","data","_result$errorMessage","console","error","errorMessage","fetchValues","watch","isShowingAddForm","isLoading","isValidating","fetchError","saveError","validationErrors","showAddForm","_showAddForm","allowAdd","attributes","reduce","acc","val","key","hideAddForm","saveNewValue","_saveNewValue","newLocationAddress","street1","isAddressRequired","response","validateAddress","_objectSpread","isValid","address","_response$data$errorM","name","text","_response$errorMessag","_response$errorMessag2","newLocationName","attributeValues","multiple","Array","isArray","push","addressRules","computed"],"mappings":"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"}