{"version":3,"file":"numberUpDownGroup.js","sources":["../../../Framework/Controls/numberUpDownGroup.ts"],"sourcesContent":["ï»¿// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\nimport { defineComponent, PropType } from \"vue\";\r\nimport { NumberUpDownInternal } from \"./numberUpDown\";\r\nimport RockFormField from \"./rockFormField\";\r\n\r\nexport type NumberUpDownGroupOption = {\r\n    key: string,\r\n    label: string,\r\n    min: number,\r\n    max: number\r\n};\r\n\r\nexport default defineComponent({\r\n    name: \"NumberUpDownGroup\",\r\n    components: {\r\n        RockFormField,\r\n        NumberUpDownInternal\r\n    },\r\n    props: {\r\n        modelValue: {\r\n            type: Object as PropType<Record<string, number>>,\r\n            required: true\r\n        },\r\n        options: {\r\n            type: Array as PropType<NumberUpDownGroupOption[]>,\r\n            required: true\r\n        }\r\n    },\r\n    computed: {\r\n        total(): number {\r\n            let total = 0;\r\n\r\n            for (const option of this.options) {\r\n                total += (this.modelValue[option.key] || 0);\r\n            }\r\n\r\n            return total;\r\n        }\r\n    },\r\n    template: `\r\n<RockFormField\r\n    :modelValue=\"total\"\r\n    formGroupClasses=\"margin-b-md number-up-down-group\"\r\n    name=\"numberupdowngroup\">\r\n    <template #default=\"{uniqueId, field}\">\r\n        <div class=\"control-wrapper\">\r\n            <div v-for=\"option in options\" :key=\"option.key\" class=\"margin-l-sm margin-b-sm\">\r\n                <div v-if=\"option.label\" class=\"margin-b-sm\">\r\n                    {{option.label}}\r\n                </div>\r\n                <NumberUpDownInternal v-model=\"modelValue[option.key]\" :min=\"option.min\" :max=\"option.max\" class=\"margin-t-sm\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</RockFormField>`\r\n});\r\n"],"names":["defineComponent","name","components","RockFormField","NumberUpDownInternal","props","modelValue","type","Object","required","options","Array","computed","total","_iterator","_createForOfIteratorHelper","_step","s","n","done","option","value","key","err","e","f","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,iDAAeA,eAAe,CAAC;MAC3BC,EAAAA,IAAI,EAAE,mBAAmB;MACzBC,EAAAA,UAAU,EAAE;UACRC,aAAa;MACbC,IAAAA,oBAAAA;SACH;MACDC,EAAAA,KAAK,EAAE;MACHC,IAAAA,UAAU,EAAE;MACRC,MAAAA,IAAI,EAAEC,MAA0C;MAChDC,MAAAA,QAAQ,EAAE,IAAA;WACb;MACDC,IAAAA,OAAO,EAAE;MACLH,MAAAA,IAAI,EAAEI,KAA4C;MAClDF,MAAAA,QAAQ,EAAE,IAAA;MACd,KAAA;SACH;MACDG,EAAAA,QAAQ,EAAE;MACNC,IAAAA,KAAKA,GAAW;YACZ,IAAIA,KAAK,GAAG,CAAC,CAAA;MAAC,MAAA,IAAAC,SAAA,GAAAC,0BAAA,CAEO,IAAI,CAACL,OAAO,CAAA;cAAAM,KAAA,CAAA;MAAA,MAAA,IAAA;cAAjC,KAAAF,SAAA,CAAAG,CAAA,EAAAD,EAAAA,CAAAA,CAAAA,KAAA,GAAAF,SAAA,CAAAI,CAAA,EAAAC,EAAAA,IAAA,GAAmC;MAAA,UAAA,IAAxBC,MAAM,GAAAJ,KAAA,CAAAK,KAAA,CAAA;gBACbR,KAAK,IAAK,IAAI,CAACP,UAAU,CAACc,MAAM,CAACE,GAAG,CAAC,IAAI,CAAE,CAAA;MAC/C,SAAA;MAAC,OAAA,CAAA,OAAAC,GAAA,EAAA;cAAAT,SAAA,CAAAU,CAAA,CAAAD,GAAA,CAAA,CAAA;MAAA,OAAA,SAAA;MAAAT,QAAAA,SAAA,CAAAW,CAAA,EAAA,CAAA;MAAA,OAAA;MAED,MAAA,OAAOZ,KAAK,CAAA;MAChB,KAAA;SACH;QACDa,QAAQ,EAAA,ypBAAA;MAgBZ,CAAC,EAAC;;;;;;;;"}