{"version":3,"file":"rockFormFieldError.js","sources":["../../../Framework/Controls/rockFormFieldError.ts"],"sourcesContent":["// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { useFormState } from \"@Obsidian/Utility/form\";\r\nimport { newGuid } from \"@Obsidian/Utility/guid\";\r\nimport { defineComponent, onBeforeUnmount, PropType, ref, watch } from \"vue\";\r\n\r\n/**\r\n * Displays a static error inside a RockForm.\r\n */\r\nexport default defineComponent({\r\n    name: \"RockFormFieldError\",\r\n\r\n    props: {\r\n        label: {\r\n            type: String as PropType<string>,\r\n            required: true\r\n        },\r\n\r\n        error: {\r\n            type: String as PropType<string>,\r\n            required: false\r\n        }\r\n    },\r\n\r\n    setup(props) {\r\n        /** The reactive state of the form. */\r\n        const formState = useFormState();\r\n\r\n        /** The unique identifier used to identify this form field. */\r\n        const uniqueId = `rock-error-${newGuid()}`;\r\n\r\n        /** Holds the current error message for this form field. */\r\n        const currentError = ref(props.error);\r\n\r\n        // Watch for changes to the modelValue and update our internalValue.\r\n        watch(() => props.error, () => {\r\n            currentError.value = props.error;\r\n\r\n            if (currentError.value) {\r\n                formState?.setError(uniqueId, props.label, currentError.value);\r\n            }\r\n            else {\r\n                formState?.setError(uniqueId, props.label, \"\");\r\n            }\r\n        }, {\r\n            immediate: true\r\n        });\r\n\r\n        // If we are removed from the DOM completely, clear the error before we go.\r\n        onBeforeUnmount(() => {\r\n            currentError.value = \"\";\r\n            formState?.setError(uniqueId, props.label, \"\");\r\n        });\r\n\r\n        return {\r\n        };\r\n    },\r\n\r\n    template: `\r\n`\r\n});\r\n"],"names":["defineComponent","name","props","label","type","String","required","error","setup","formState","useFormState","uniqueId","concat","newGuid","currentError","ref","watch","value","setError","immediate","onBeforeUnmount","template"],"mappings":";;;;;;;;;;;;;;;;AAwBA,wDAAeA,eAAe,CAAC;YAC3BC,EAAAA,IAAI,EAAE,oBAAoB;YAE1BC,EAAAA,KAAK,EAAE;YACHC,IAAAA,KAAK,EAAE;YACHC,MAAAA,IAAI,EAAEC,MAA0B;YAChCC,MAAAA,QAAQ,EAAE,IAAA;iBACb;YAEDC,IAAAA,KAAK,EAAE;YACHH,MAAAA,IAAI,EAAEC,MAA0B;YAChCC,MAAAA,QAAQ,EAAE,KAAA;YACd,KAAA;eACH;cAEDE,KAAKA,CAACN,KAAK,EAAE;gBAET,IAAMO,SAAS,GAAGC,YAAY,EAAE,CAAA;YAGhC,IAAA,IAAMC,QAAQ,GAAAC,aAAAA,CAAAA,MAAA,CAAiBC,OAAO,EAAE,CAAE,CAAA;YAG1C,IAAA,IAAMC,YAAY,GAAGC,GAAG,CAACb,KAAK,CAACK,KAAK,CAAC,CAAA;YAGrCS,IAAAA,KAAK,CAAC,MAAMd,KAAK,CAACK,KAAK,EAAE,MAAM;YAC3BO,MAAAA,YAAY,CAACG,KAAK,GAAGf,KAAK,CAACK,KAAK,CAAA;kBAEhC,IAAIO,YAAY,CAACG,KAAK,EAAE;YACpBR,QAAAA,SAAS,aAATA,SAAS,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAATA,SAAS,CAAES,QAAQ,CAACP,QAAQ,EAAET,KAAK,CAACC,KAAK,EAAEW,YAAY,CAACG,KAAK,CAAC,CAAA;YAClE,OAAC,MACI;YACDR,QAAAA,SAAS,KAATA,IAAAA,IAAAA,SAAS,KAATA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,SAAS,CAAES,QAAQ,CAACP,QAAQ,EAAET,KAAK,CAACC,KAAK,EAAE,EAAE,CAAC,CAAA;YAClD,OAAA;YACJ,KAAC,EAAE;YACCgB,MAAAA,SAAS,EAAE,IAAA;YACf,KAAC,CAAC,CAAA;YAGFC,IAAAA,eAAe,CAAC,MAAM;kBAClBN,YAAY,CAACG,KAAK,GAAG,EAAE,CAAA;YACvBR,MAAAA,SAAS,KAATA,IAAAA,IAAAA,SAAS,KAATA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,SAAS,CAAES,QAAQ,CAACP,QAAQ,EAAET,KAAK,CAACC,KAAK,EAAE,EAAE,CAAC,CAAA;YAClD,KAAC,CAAC,CAAA;YAEF,IAAA,OAAO,EACN,CAAA;eACJ;cAEDkB,QAAQ,EAAA,IAAA;YAEZ,CAAC,EAAC;;;;;;;;"}