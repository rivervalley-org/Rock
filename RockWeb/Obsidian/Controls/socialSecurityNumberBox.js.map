{"version":3,"file":"socialSecurityNumberBox.js","sources":["../../../Framework/Controls/socialSecurityNumberBox.ts"],"sourcesContent":["ï»¿// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n\r\nimport { defineComponent, PropType } from \"vue\";\r\nimport { normalizeRules, rulesPropType, ValidationRule } from \"@Obsidian/ValidationRules\";\r\nimport RockFormField from \"./rockFormField\";\r\n\r\nexport default defineComponent({\r\n    name: \"SocialSecurityNumberBox\",\r\n    components: {\r\n        RockFormField\r\n    },\r\n    props: {\r\n        rules: rulesPropType,\r\n        modelValue: {\r\n            type: String as PropType<string>,\r\n            default: \"\"\r\n        }\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            internalArea: \"\",\r\n            internalGroup: \"\",\r\n            internalSerial: \"\",\r\n            internalValue: \"\"\r\n        };\r\n    },\r\n\r\n    methods: {\r\n        getValue(): string {\r\n            const value = `${this.internalArea}${this.internalGroup}${this.internalSerial}`;\r\n\r\n            return value;\r\n        },\r\n\r\n        keyPress(e: KeyboardEvent): boolean {\r\n            if (/^[0-9]$/.test(e.key) === false) {\r\n                e.preventDefault();\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        keyUp(e: KeyboardEvent): boolean {\r\n            const area = <HTMLInputElement>this.$refs.area;\r\n            const group = <HTMLInputElement>this.$refs.group;\r\n            const serial = <HTMLInputElement>this.$refs.serial;\r\n\r\n            // Only move to next field if a number was pressed.\r\n            if (/^[0-9]$/.test(e.key) === false) {\r\n                return true;\r\n            }\r\n\r\n            if (area === e.target && area.selectionStart === 3) {\r\n                this.$nextTick(() => {\r\n                    group.focus();\r\n                    group.setSelectionRange(0, 2);\r\n                });\r\n            }\r\n            else if (group === e.target && group.selectionStart === 2) {\r\n                this.$nextTick(() => {\r\n                    serial.focus();\r\n                    serial.setSelectionRange(0, 4);\r\n                });\r\n            }\r\n\r\n            return true;\r\n        }\r\n    },\r\n\r\n    computed: {\r\n        computedRules(): ValidationRule[] {\r\n            const rules = normalizeRules(this.rules);\r\n\r\n            rules.push(\"ssn\");\r\n\r\n            return rules;\r\n        }\r\n    },\r\n\r\n    watch: {\r\n        modelValue: {\r\n            immediate: true,\r\n            handler() {\r\n                const strippedValue = this.modelValue.replace(/[^0-9]/g, \"\");\r\n\r\n                if (strippedValue.length !== 9) {\r\n                    this.internalArea = \"\";\r\n                    this.internalGroup = \"\";\r\n                    this.internalSerial = \"\";\r\n                }\r\n                else {\r\n                    this.internalArea = strippedValue.substr(0, 3);\r\n                    this.internalGroup = strippedValue.substr(3, 2);\r\n                    this.internalSerial = strippedValue.substr(5, 4);\r\n                }\r\n\r\n                this.internalValue = this.getValue();\r\n            }\r\n        },\r\n\r\n        internalArea() {\r\n            this.internalValue = this.getValue();\r\n\r\n            if (this.internalValue.length === 0 || this.internalValue.length === 9) {\r\n                this.$emit(\"update:modelValue\", this.internalValue);\r\n            }\r\n        },\r\n\r\n        internalGroup() {\r\n            this.internalValue = this.getValue();\r\n\r\n            if (this.internalValue.length === 0 || this.internalValue.length === 9) {\r\n                this.$emit(\"update:modelValue\", this.internalValue);\r\n            }\r\n        },\r\n\r\n        internalSerial() {\r\n            this.internalValue = this.getValue();\r\n\r\n            if (this.internalValue.length === 0 || this.internalValue.length === 9) {\r\n                this.$emit(\"update:modelValue\", this.internalValue);\r\n            }\r\n        },\r\n    },\r\n\r\n    template: `\r\n<RockFormField\r\n    :modelValue=\"internalValue\"\r\n    formGroupClasses=\"social-security-number-box\"\r\n    name=\"social-security-number-box\"\r\n    :rules=\"computedRules\">\r\n    <template #default=\"{uniqueId, field}\">\r\n        <div class=\"control-wrapper\">\r\n            <div class=\"form-control-group\">\r\n                <input ref=\"area\" class=\"form-control ssn-part ssn-area\" type=\"password\" pattern=\"[0-9]*\" maxlength=\"3\" v-model=\"internalArea\" v-on:keypress=\"keyPress\" v-on:keyup=\"keyUp\" />\r\n                <span class=\"separator\">-</span>\r\n                <input ref=\"group\" class=\"form-control ssn-part ssn-group\" type=\"password\" pattern=\"[0-9]*\" maxlength=\"2\" v-model=\"internalGroup\" v-on:keypress=\"keyPress\" v-on:keyup=\"keyUp\" />\r\n                <span class=\"separator\">-</span>\r\n                <input ref=\"serial\" class=\"form-control ssn-part ssn-serial\" type=\"text\" pattern=\"[0-9]*\" maxlength=\"4\" v-model=\"internalSerial\" v-on:keypress=\"keyPress\" v-on:keyup=\"keyUp\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</RockFormField>`\r\n});\r\n"],"names":["defineComponent","name","components","RockFormField","props","rules","rulesPropType","modelValue","type","String","default","data","internalArea","internalGroup","internalSerial","internalValue","methods","getValue","value","concat","keyPress","e","test","key","preventDefault","keyUp","area","$refs","group","serial","target","selectionStart","$nextTick","focus","setSelectionRange","computed","computedRules","normalizeRules","push","watch","immediate","handler","strippedValue","replace","length","substr","$emit","template"],"mappings":"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"}