{"version":3,"file":"saveFinancialAccountForm.js","sources":["../../../Framework/Controls/saveFinancialAccountForm.ts"],"sourcesContent":["ï»¿// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { Guid } from \"@Obsidian/Types\";\r\nimport { defineComponent, inject, PropType } from \"vue\";\r\nimport NotificationBox from \"./notificationBox.obs\";\r\nimport InlineCheckBox from \"./inlineCheckBox\";\r\nimport RockButton from \"./rockButton\";\r\nimport TextBox from \"./textBox\";\r\nimport RockForm from \"./rockForm\";\r\nimport { useStore } from \"@Obsidian/PageState\";\r\nimport { SaveFinancialAccountFormSaveAccountOptionsBag } from \"@Obsidian/ViewModels/Rest/Controls/saveFinancialAccountFormSaveAccountOptionsBag\";\r\nimport { SaveFinancialAccountFormSaveAccountResultBag } from \"@Obsidian/ViewModels/Rest/Controls/saveFinancialAccountFormSaveAccountResultBag\";\r\nimport { PersonBag } from \"@Obsidian/ViewModels/Entities/personBag\";\r\nimport { useHttp } from \"@Obsidian/Utility/http\";\r\n\r\nconst store = useStore();\r\n\r\n/** A form to save a payment token for later use as a Financial Person Saved Account */\r\nconst SaveFinancialAccountForm = defineComponent({\r\n    name: \"SaveFinancialAccountForm\",\r\n    components: {\r\n        InlineCheckBox,\r\n        TextBox,\r\n        NotificationBox,\r\n        RockButton,\r\n        RockForm\r\n    },\r\n    props: {\r\n        gatewayGuid: {\r\n            type: String as PropType<Guid>,\r\n            required: true\r\n        },\r\n        transactionCode: {\r\n            type: String as PropType<string>,\r\n            required: true\r\n        },\r\n        gatewayPersonIdentifier: {\r\n            type: String as PropType<string>,\r\n            required: true\r\n        }\r\n    },\r\n    setup() {\r\n        const http = useHttp();\r\n\r\n        return {\r\n            http\r\n        };\r\n    },\r\n    data() {\r\n        return {\r\n            /** Will the payment token be saved for future use? */\r\n            doSave: false,\r\n\r\n            /** The username to create a login with */\r\n            username: \"\",\r\n\r\n            /** The password to create a login with */\r\n            password: \"\",\r\n\r\n            /** The confirmed password to create a login with */\r\n            confirmPassword: \"\",\r\n\r\n            /** What the account will be named once created */\r\n            savedAccountName: \"\",\r\n\r\n            /** Is an AJAX call currently in-flight? */\r\n            isLoading: false,\r\n\r\n            successTitle: \"\",\r\n            successMessage: \"\",\r\n            errorTitle: \"\",\r\n            errorMessage: \"\"\r\n        };\r\n    },\r\n    computed: {\r\n        /** The person currently authenticated */\r\n        currentPerson(): PersonBag | null {\r\n            return store.state.currentPerson;\r\n        },\r\n\r\n        /** Is a new login account needed to attach the new saved financial account to? */\r\n        isLoginCreationNeeded(): boolean {\r\n            return !this.currentPerson;\r\n        },\r\n    },\r\n    methods: {\r\n        async onSubmit() {\r\n            this.errorTitle = \"\";\r\n            this.errorMessage = \"\";\r\n\r\n            if (this.password !== this.confirmPassword) {\r\n                this.errorTitle = \"Password\";\r\n                this.errorMessage = \"The password fields do not match.\";\r\n                return;\r\n            }\r\n\r\n            this.isLoading = true;\r\n\r\n            const options: Partial<SaveFinancialAccountFormSaveAccountOptionsBag> = {\r\n                gatewayGuid: this.gatewayGuid,\r\n                password: this.password,\r\n                savedAccountName: this.savedAccountName,\r\n                transactionCode: this.transactionCode,\r\n                username: this.username,\r\n                gatewayPersonIdentifier: this.gatewayPersonIdentifier\r\n            };\r\n            const result = await this.http.post<SaveFinancialAccountFormSaveAccountResultBag>(\"/api/v2/Controls/SaveFinancialAccountFormSaveAccount\", null, options);\r\n\r\n            if (result.isSuccess && result.data?.isSuccess) {\r\n                this.successTitle = result.data.title || \"\";\r\n                this.successMessage = result.data.detail || \"Success\";\r\n            }\r\n            else {\r\n                this.errorTitle = result.data?.title || \"\";\r\n                this.errorMessage = result.data?.detail || \"Error\";\r\n            }\r\n\r\n            this.isLoading = false;\r\n        }\r\n    },\r\n    template: `\r\n<div>\r\n    <NotificationBox v-if=\"successMessage\" alertType=\"success\" class=\"m-0\">\r\n        <strong v-if=\"successTitle\">{{successTitle}}:</strong>\r\n        {{successMessage}}\r\n    </NotificationBox>\r\n    <template v-else>\r\n        <slot name=\"header\">\r\n            <h3>Make Giving Even Easier</h3>\r\n        </slot>\r\n        <NotificationBox v-if=\"errorMessage\" alertType=\"danger\">\r\n            <strong v-if=\"errorTitle\">{{errorTitle}}:</strong>\r\n            {{errorMessage}}\r\n        </NotificationBox>\r\n        <InlineCheckBox label=\"Save account information for future gifts\" v-model=\"doSave\" />\r\n        <RockForm v-if=\"doSave\" @submit=\"onSubmit\">\r\n            <TextBox label=\"Name for the account\" rules=\"required\" v-model=\"savedAccountName\" />\r\n            <template v-if=\"isLoginCreationNeeded\">\r\n                <NotificationBox alertType=\"info\">\r\n                    <strong>Note:</strong>\r\n                    For security purposes you will need to login to use your saved account information. To create\r\n                    a login account please provide a user name and password below. You will be sent an email with\r\n                    the account information above as a reminder.\r\n                </NotificationBox>\r\n                <TextBox label=\"Username\" v-model=\"username\" rules=\"required\" />\r\n                <TextBox label=\"Password\" v-model=\"password\" type=\"password\" rules=\"required\" />\r\n                <TextBox label=\"Confirm Password\" v-model=\"confirmPassword\" type=\"password\" rules=\"required\" />\r\n            </template>\r\n            <RockButton :isLoading=\"isLoading\" btnType=\"primary\" type=\"submit\">Save Account</RockButton>\r\n        </RockForm>\r\n    </template>\r\n</div>`\r\n});\r\n\r\nexport default SaveFinancialAccountForm;\r\n"],"names":["store","useStore","SaveFinancialAccountForm","defineComponent","name","components","InlineCheckBox","TextBox","NotificationBox","RockButton","RockForm","props","gatewayGuid","type","String","required","transactionCode","gatewayPersonIdentifier","setup","http","useHttp","data","doSave","username","password","confirmPassword","savedAccountName","isLoading","successTitle","successMessage","errorTitle","errorMessage","computed","currentPerson","state","isLoginCreationNeeded","methods","onSubmit","_this","_asyncToGenerator","_result$data","options","result","post","isSuccess","title","detail","_result$data2","_result$data3","template"],"mappings":"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"}