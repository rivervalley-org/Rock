{"version":3,"file":"groupPicker.js","sources":["../../../Framework/Controls/groupPicker.ts"],"sourcesContent":["// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { defineComponent, PropType, ref, watch } from \"vue\";\r\nimport { useSecurityGrantToken } from \"@Obsidian/Utility/block\";\r\nimport { GroupTreeItemProvider } from \"@Obsidian/Utility/treeItemProviders\";\r\nimport { updateRefValue } from \"@Obsidian/Utility/component\";\r\nimport { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\nimport TreeItemPicker from \"./treeItemPicker.obs\";\r\nimport { Guid } from \"@Obsidian/Types\";\r\nimport InlineCheckBox from \"./inlineCheckBox\";\r\n\r\nexport default defineComponent({\r\n    name: \"GroupPicker\",\r\n\r\n    components: {\r\n        TreeItemPicker,\r\n        InlineCheckBox\r\n    },\r\n\r\n    props: {\r\n        modelValue: {\r\n            type: Object as PropType<ListItemBag | ListItemBag[] | null>,\r\n            required: false\r\n        },\r\n\r\n        multiple: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        },\r\n\r\n        /** GUID of the group you want to use as the root. */\r\n        rootGroupGuid: {\r\n            type: Object as PropType<Guid | null>,\r\n            default: null\r\n        },\r\n\r\n        /** List of group types GUIDs to limit to groups of those types. */\r\n        includedGroupTypeGuids: {\r\n            type: Object as PropType<Guid[]>,\r\n            default: []\r\n        },\r\n\r\n        /** Whether to limit to only groups that have scheduling enabled. */\r\n        limitToSchedulingEnabled: {\r\n            type: Object as PropType<boolean>,\r\n            default: false\r\n        },\r\n\r\n        /** Whether to limit to only groups that have RSVPs enabled. */\r\n        limitToRSVPEnabled: {\r\n            type: Object as PropType<boolean>,\r\n            default: false\r\n        },\r\n    },\r\n\r\n    emits: {\r\n        \"update:modelValue\": (_value: ListItemBag | ListItemBag[] | null) => true\r\n    },\r\n\r\n    setup(props, { emit }) {\r\n        const internalValue = ref(props.modelValue ?? null);\r\n        const securityGrantToken = useSecurityGrantToken();\r\n\r\n        /** Whether to include inactive groups in the results or not. */\r\n        const includeInactiveGroups = ref(false);\r\n\r\n        const itemProvider = ref<GroupTreeItemProvider>();\r\n\r\n        // Configure the item provider with our settings.\r\n        function refreshItemProvider(): void {\r\n            const provider = new GroupTreeItemProvider();\r\n            provider.rootGroupGuid = props.rootGroupGuid;\r\n            provider.includedGroupTypeGuids = props.includedGroupTypeGuids;\r\n            provider.includeInactiveGroups = includeInactiveGroups.value;\r\n            provider.limitToSchedulingEnabled = props.limitToSchedulingEnabled;\r\n            provider.limitToRSVPEnabled = props.limitToRSVPEnabled;\r\n            provider.securityGrantToken = securityGrantToken.value;\r\n\r\n            itemProvider.value = provider;\r\n        }\r\n\r\n        refreshItemProvider();\r\n\r\n        watch(() => [\r\n            props.rootGroupGuid,\r\n            includeInactiveGroups.value,\r\n            props.includedGroupTypeGuids,\r\n            props.limitToRSVPEnabled,\r\n            props.limitToSchedulingEnabled\r\n        ], refreshItemProvider);\r\n\r\n        // Keep security token up to date, but don't need refetch data\r\n        watch(securityGrantToken, () => {\r\n            if (itemProvider.value) {\r\n                itemProvider.value.securityGrantToken = securityGrantToken.value;\r\n            }\r\n        });\r\n\r\n        watch(internalValue, () => {\r\n            emit(\"update:modelValue\", internalValue.value);\r\n        });\r\n\r\n        watch(() => props.modelValue, () => {\r\n            updateRefValue(internalValue, props.modelValue ?? null);\r\n        });\r\n\r\n        return {\r\n            internalValue,\r\n            includeInactiveGroups,\r\n            itemProvider\r\n        };\r\n    },\r\n\r\n    template: `\r\n<TreeItemPicker v-model=\"internalValue\"\r\n    formGroupClasses=\"group-item-picker\"\r\n    iconCssClass=\"fa fa-home\"\r\n    :provider=\"itemProvider\"\r\n    :multiple=\"multiple\">\r\n\r\n    <template #customPickerActions>\r\n        <label class=\"rock-checkbox-icon\">\r\n            <i :class=\"['fa', includeInactiveGroups ? 'fa-check-square-o' : 'fa-square-o']\"></i> Show Inactive\r\n            <span style=\"display:none\"><input type=\"checkbox\" v-model=\"includeInactiveGroups\"></span>\r\n        </label>\r\n    </template>\r\n</TreeItemPicker>\r\n`\r\n});\r\n"],"names":["defineComponent","name","components","TreeItemPicker","InlineCheckBox","props","modelValue","type","Object","required","multiple","Boolean","default","rootGroupGuid","includedGroupTypeGuids","limitToSchedulingEnabled","limitToRSVPEnabled","emits","_value","setup","_ref","_props$modelValue","emit","internalValue","ref","securityGrantToken","useSecurityGrantToken","includeInactiveGroups","itemProvider","refreshItemProvider","provider","GroupTreeItemProvider","value","watch","_props$modelValue2","updateRefValue","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;AA0BA,iDAAeA,eAAe,CAAC;YAC3BC,EAAAA,IAAI,EAAE,aAAa;YAEnBC,EAAAA,UAAU,EAAE;gBACRC,cAAc;YACdC,IAAAA,cAAAA;eACH;YAEDC,EAAAA,KAAK,EAAE;YACHC,IAAAA,UAAU,EAAE;YACRC,MAAAA,IAAI,EAAEC,MAAsD;YAC5DC,MAAAA,QAAQ,EAAE,KAAA;iBACb;YAEDC,IAAAA,QAAQ,EAAE;YACNH,MAAAA,IAAI,EAAEI,OAA4B;YAClCC,MAAAA,OAAO,EAAE,KAAA;iBACZ;YAGDC,IAAAA,aAAa,EAAE;YACXN,MAAAA,IAAI,EAAEC,MAA+B;YACrCI,MAAAA,OAAO,EAAE,IAAA;iBACZ;YAGDE,IAAAA,sBAAsB,EAAE;YACpBP,MAAAA,IAAI,EAAEC,MAA0B;YAChCI,MAAAA,OAAO,EAAE,EAAA;iBACZ;YAGDG,IAAAA,wBAAwB,EAAE;YACtBR,MAAAA,IAAI,EAAEC,MAA2B;YACjCI,MAAAA,OAAO,EAAE,KAAA;iBACZ;YAGDI,IAAAA,kBAAkB,EAAE;YAChBT,MAAAA,IAAI,EAAEC,MAA2B;YACjCI,MAAAA,OAAO,EAAE,KAAA;YACb,KAAA;eACH;YAEDK,EAAAA,KAAK,EAAE;gBACH,mBAAmB,EAAGC,MAA0C,IAAK,IAAA;eACxE;YAEDC,EAAAA,KAAKA,CAACd,KAAK,EAAAe,IAAA,EAAY;YAAA,IAAA,IAAAC,iBAAA,CAAA;YAAA,IAAA,IAARC,IAAI,GAAAF,IAAA,CAAJE,IAAI,CAAA;YACf,IAAA,IAAMC,aAAa,GAAGC,GAAG,CAAA,CAAAH,iBAAA,GAAChB,KAAK,CAACC,UAAU,cAAAe,iBAAA,KAAA,KAAA,CAAA,GAAAA,iBAAA,GAAI,IAAI,CAAC,CAAA;gBACnD,IAAMI,kBAAkB,GAAGC,qBAAqB,EAAE,CAAA;YAGlD,IAAA,IAAMC,qBAAqB,GAAGH,GAAG,CAAC,KAAK,CAAC,CAAA;gBAExC,IAAMI,YAAY,GAAGJ,GAAG,EAAyB,CAAA;gBAGjD,SAASK,mBAAmBA,GAAS;YACjC,MAAA,IAAMC,QAAQ,GAAG,IAAIC,qBAAqB,EAAE,CAAA;YAC5CD,MAAAA,QAAQ,CAACjB,aAAa,GAAGR,KAAK,CAACQ,aAAa,CAAA;YAC5CiB,MAAAA,QAAQ,CAAChB,sBAAsB,GAAGT,KAAK,CAACS,sBAAsB,CAAA;YAC9DgB,MAAAA,QAAQ,CAACH,qBAAqB,GAAGA,qBAAqB,CAACK,KAAK,CAAA;YAC5DF,MAAAA,QAAQ,CAACf,wBAAwB,GAAGV,KAAK,CAACU,wBAAwB,CAAA;YAClEe,MAAAA,QAAQ,CAACd,kBAAkB,GAAGX,KAAK,CAACW,kBAAkB,CAAA;YACtDc,MAAAA,QAAQ,CAACL,kBAAkB,GAAGA,kBAAkB,CAACO,KAAK,CAAA;kBAEtDJ,YAAY,CAACI,KAAK,GAAGF,QAAQ,CAAA;YACjC,KAAA;YAEAD,IAAAA,mBAAmB,EAAE,CAAA;gBAErBI,KAAK,CAAC,MAAM,CACR5B,KAAK,CAACQ,aAAa,EACnBc,qBAAqB,CAACK,KAAK,EAC3B3B,KAAK,CAACS,sBAAsB,EAC5BT,KAAK,CAACW,kBAAkB,EACxBX,KAAK,CAACU,wBAAwB,CACjC,EAAEc,mBAAmB,CAAC,CAAA;gBAGvBI,KAAK,CAACR,kBAAkB,EAAE,MAAM;kBAC5B,IAAIG,YAAY,CAACI,KAAK,EAAE;YACpBJ,QAAAA,YAAY,CAACI,KAAK,CAACP,kBAAkB,GAAGA,kBAAkB,CAACO,KAAK,CAAA;YACpE,OAAA;YACJ,KAAC,CAAC,CAAA;gBAEFC,KAAK,CAACV,aAAa,EAAE,MAAM;YACvBD,MAAAA,IAAI,CAAC,mBAAmB,EAAEC,aAAa,CAACS,KAAK,CAAC,CAAA;YAClD,KAAC,CAAC,CAAA;YAEFC,IAAAA,KAAK,CAAC,MAAM5B,KAAK,CAACC,UAAU,EAAE,MAAM;YAAA,MAAA,IAAA4B,kBAAA,CAAA;YAChCC,MAAAA,cAAc,CAACZ,aAAa,EAAAW,CAAAA,kBAAA,GAAE7B,KAAK,CAACC,UAAU,MAAA,IAAA,IAAA4B,kBAAA,KAAA,KAAA,CAAA,GAAAA,kBAAA,GAAI,IAAI,CAAC,CAAA;YAC3D,KAAC,CAAC,CAAA;gBAEF,OAAO;kBACHX,aAAa;kBACbI,qBAAqB;YACrBC,MAAAA,YAAAA;iBACH,CAAA;eACJ;cAEDQ,QAAQ,EAAA,miBAAA;YAeZ,CAAC,EAAC;;;;;;;;"}