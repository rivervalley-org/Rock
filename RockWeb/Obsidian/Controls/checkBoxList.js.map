{"version":3,"file":"checkBoxList.js","sources":["../../../Framework/Controls/checkBoxList.ts"],"sourcesContent":["ï»¿// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { Guid } from \"@Obsidian/Types\";\r\nimport { computed, defineComponent, PropType, ref, watch } from \"vue\";\r\nimport { updateRefValue } from \"@Obsidian/Utility/component\";\r\nimport { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\nimport RockFormField from \"./rockFormField\";\r\nimport { defaultControlCompareValue } from \"@Obsidian/Utility/stringUtils\";\r\n\r\nexport default defineComponent({\r\n    name: \"CheckBoxList\",\r\n\r\n    components: {\r\n        RockFormField\r\n    },\r\n\r\n    props: {\r\n        modelValue: {\r\n            type: Array as PropType<string[]>,\r\n            default: []\r\n        },\r\n\r\n        disabled: {\r\n            type: Boolean as PropType<boolean>,\r\n            required: false,\r\n            default: false\r\n        },\r\n\r\n        items: {\r\n            type: Array as PropType<Array<ListItemBag>>,\r\n            required: true\r\n        },\r\n\r\n        repeatColumns: {\r\n            type: Number as PropType<number>,\r\n            default: 0\r\n        },\r\n\r\n        horizontal: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        },\r\n\r\n        compareValue: {\r\n            type: Function as PropType<((value: string, itemValue: string) => boolean)>,\r\n            default: defaultControlCompareValue\r\n        }\r\n    },\r\n\r\n    emits: {\r\n        \"update:modelValue\": (_value: string[]) => true\r\n    },\r\n\r\n    setup(props, { emit }) {\r\n        const internalValue = ref([...props.modelValue]);\r\n\r\n        const valueForItem = (item: ListItemBag): string => item.value ?? \"\";\r\n        const textForItem = (item: ListItemBag): string => item.text ?? \"\";\r\n\r\n        const uniqueIdForItem = (uniqueId: Guid, item: ListItemBag): string => `${uniqueId}-${(item.value ?? \"\").replace(\" \", \"-\")}`;\r\n\r\n        const containerClasses = computed(() => {\r\n            const classes: string[] = [];\r\n\r\n            if (props.horizontal) {\r\n                classes.push(\"rockcheckboxlist-horizontal\");\r\n\r\n                if (props.repeatColumns > 0) {\r\n                    classes.push(`in-columns in-columns-${props.repeatColumns}`);\r\n                }\r\n            }\r\n            else {\r\n                classes.push(\"rockcheckboxlist-vertical input-group\");\r\n            }\r\n\r\n            return classes.join(\" \");\r\n        });\r\n\r\n        const syncInternalValue = (): void => {\r\n            let value = [...props.modelValue];\r\n\r\n            // Ensure they are all valid values and make sure they are the\r\n            // correct matching value from the item rather than what was\r\n            // originally provided.\r\n            value = props.items\r\n                .filter(o => value.some(v => props.compareValue(v, o.value ?? \"\")))\r\n                .map(o => o.value ?? \"\");\r\n\r\n            updateRefValue(internalValue, value);\r\n        };\r\n\r\n        watch([() => props.modelValue, () => props.items], () => {\r\n            syncInternalValue();\r\n        });\r\n\r\n        watch(internalValue, () => {\r\n            emit(\"update:modelValue\", internalValue.value);\r\n        });\r\n\r\n        syncInternalValue();\r\n\r\n        return {\r\n            containerClasses,\r\n            internalValue,\r\n            textForItem,\r\n            uniqueIdForItem,\r\n            valueForItem\r\n        };\r\n    },\r\n\r\n    template: `\r\n<RockFormField\r\n    :modelValue=\"internalValue\"\r\n    formGroupClasses=\"check-box-list\"\r\n    name=\"check-box-list\">\r\n    <template #default=\"{uniqueId}\">\r\n        <div class=\"control-wrapper\">\r\n            <slot name=\"prepend\" :isInputGroupSupported=\"false\" />\r\n            <div class=\"controls rockcheckboxlist\" :class=\"containerClasses\">\r\n                <template v-if=\"horizontal\">\r\n                    <label v-for=\"item in items\" class=\"checkbox-inline\" :for=\"uniqueIdForItem(uniqueId, item)\">\r\n                        <input :disabled=\"disabled\" :id=\"uniqueIdForItem(uniqueId, item)\" :name=\"uniqueId\" type=\"checkbox\" :value=\"valueForItem(item)\" v-model=\"internalValue\" />\r\n                        <span class=\"label-text\">{{textForItem(item)}}</span>\r\n                    </label>\r\n                </template>\r\n                <template v-else>\r\n                    <div v-for=\"item in items\" class=\"checkbox\">\r\n                        <label :for=\"uniqueIdForItem(uniqueId, item)\">\r\n                            <input :disabled=\"disabled\" :id=\"uniqueIdForItem(uniqueId, item)\" :name=\"uniqueId\" type=\"checkbox\" :value=\"valueForItem(item)\" v-model=\"internalValue\" />\r\n                            <span class=\"label-text\">{{textForItem(item)}}</span>\r\n                        </label>\r\n                    </div>\r\n                </template>\r\n            </div>\r\n            <slot name=\"append\" :isInputGroupSupported=\"false\" />\r\n        </div>\r\n    </template>\r\n</RockFormField>\r\n`\r\n});\r\n"],"names":["defineComponent","name","components","RockFormField","props","modelValue","type","Array","default","disabled","Boolean","required","items","repeatColumns","Number","horizontal","compareValue","Function","defaultControlCompareValue","emits","_value","setup","_ref","emit","internalValue","ref","valueForItem","item","_item$value","value","textForItem","_item$text","text","uniqueIdForItem","uniqueId","_item$value2","concat","replace","containerClasses","computed","classes","push","join","syncInternalValue","filter","o","some","v","_o$value","map","_o$value2","updateRefValue","watch","template"],"mappings":"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"}