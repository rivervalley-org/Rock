{"version":3,"file":"categoryPicker.js","sources":["../../../Framework/Controls/categoryPicker.ts"],"sourcesContent":["// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { Guid } from \"@Obsidian/Types\";\r\nimport { defineComponent, PropType, ref, watch } from \"vue\";\r\nimport { CategoryTreeItemProvider } from \"@Obsidian/Utility/treeItemProviders\";\r\nimport { updateRefValue } from \"@Obsidian/Utility/component\";\r\nimport { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\nimport TreeItemPicker from \"./treeItemPicker.obs\";\r\n\r\nexport default defineComponent({\r\n    name: \"CategoryPicker\",\r\n\r\n    components: {\r\n        TreeItemPicker\r\n    },\r\n\r\n    props: {\r\n        modelValue: {\r\n            type: Object as PropType<ListItemBag | ListItemBag[] | null>,\r\n            required: false\r\n        },\r\n\r\n        rootCategoryGuid: {\r\n            type: String as PropType<Guid>\r\n        },\r\n\r\n        entityTypeGuid: {\r\n            type: String as PropType<Guid>\r\n        },\r\n\r\n        entityTypeQualifierColumn: {\r\n            type: String as PropType<string>\r\n        },\r\n\r\n        entityTypeQualifierValue: {\r\n            type: String as PropType<string>\r\n        },\r\n\r\n        securityGrantToken: {\r\n            type: String as PropType<string | null>,\r\n            required: false\r\n        },\r\n\r\n        multiple: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    emits: {\r\n        \"update:modelValue\": (_value: ListItemBag | ListItemBag[] | null) => true\r\n    },\r\n\r\n    setup(props, { emit }) {\r\n        const internalValue = ref(props.modelValue ?? null);\r\n\r\n        // Configure the item provider with our settings.\r\n        const itemProvider = ref(new CategoryTreeItemProvider());\r\n        itemProvider.value.rootCategoryGuid = props.rootCategoryGuid;\r\n        itemProvider.value.entityTypeGuid = props.entityTypeGuid;\r\n        itemProvider.value.entityTypeQualifierColumn = props.entityTypeQualifierColumn;\r\n        itemProvider.value.entityTypeQualifierValue = props.entityTypeQualifierValue;\r\n        itemProvider.value.securityGrantToken = props.securityGrantToken;\r\n\r\n        // Keep security token up to date, but don't need refetch data\r\n        watch(() => props.securityGrantToken, () => {\r\n            itemProvider.value.securityGrantToken = props.securityGrantToken;\r\n        });\r\n\r\n        // When this changes, we need to refetch the data, so reset the whole itemProvider\r\n        watch(() => props.entityTypeGuid, () => {\r\n            const oldProvider = itemProvider.value;\r\n            const newProvider = new CategoryTreeItemProvider();\r\n\r\n            // copy old provider's properties\r\n            newProvider.rootCategoryGuid = oldProvider.rootCategoryGuid;\r\n            newProvider.entityTypeQualifierColumn = oldProvider.entityTypeQualifierColumn;\r\n            newProvider.entityTypeQualifierValue = oldProvider.entityTypeQualifierValue;\r\n            newProvider.securityGrantToken = oldProvider.securityGrantToken;\r\n            // Use new value\r\n            newProvider.entityTypeGuid = props.entityTypeGuid;\r\n\r\n            // Set the provider to the new one\r\n            itemProvider.value = newProvider;\r\n        });\r\n\r\n        watch(internalValue, () => {\r\n            emit(\"update:modelValue\", internalValue.value);\r\n        });\r\n\r\n        watch(() => props.modelValue, () => {\r\n            updateRefValue(internalValue, props.modelValue ?? null);\r\n        });\r\n\r\n        return {\r\n            internalValue,\r\n            itemProvider\r\n        };\r\n    },\r\n\r\n    template: `\r\n<TreeItemPicker v-model=\"internalValue\"\r\n    formGroupClasses=\"category-picker\"\r\n    iconCssClass=\"fa fa-folder-open\"\r\n    :provider=\"itemProvider\"\r\n    :multiple=\"multiple\"\r\n/>\r\n`\r\n});\r\n"],"names":["defineComponent","name","components","TreeItemPicker","props","modelValue","type","Object","required","rootCategoryGuid","String","entityTypeGuid","entityTypeQualifierColumn","entityTypeQualifierValue","securityGrantToken","multiple","Boolean","default","emits","_value","setup","_ref","_props$modelValue","emit","internalValue","ref","itemProvider","CategoryTreeItemProvider","value","watch","oldProvider","newProvider","_props$modelValue2","updateRefValue","template"],"mappings":"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"}