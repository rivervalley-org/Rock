{"version":3,"file":"reportPicker.js","sources":["../../../Framework/Controls/reportPicker.ts"],"sourcesContent":["// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { useSecurityGrantToken } from \"@Obsidian/Utility/block\";\r\nimport { updateRefValue } from \"@Obsidian/Utility/component\";\r\nimport { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\nimport { defineComponent, PropType, ref, watch } from \"vue\";\r\nimport { ReportTreeItemProvider } from \"@Obsidian/Utility/treeItemProviders\";\r\nimport TreeItemPicker from \"./treeItemPicker.obs\";\r\nimport { Guid } from \"@Obsidian/Types\";\r\n\r\nexport default defineComponent({\r\n    name: \"ReportPicker\",\r\n\r\n    components: {\r\n        TreeItemPicker\r\n    },\r\n\r\n    props: {\r\n        modelValue: {\r\n            type: Object as PropType<ListItemBag | ListItemBag[] | null>,\r\n            required: false\r\n        },\r\n\r\n        /** A list of category GUIDs to filter the results. */\r\n        categoryGuids: {\r\n            type: Array as PropType<Guid[]>,\r\n            default: []\r\n        },\r\n\r\n        /** Guid of an Entity Type to filter results by the reports that relate to this entity type. */\r\n        entityTypeGuid: {\r\n            type: String as PropType<Guid>,\r\n            default: null\r\n        }\r\n    },\r\n\r\n    emits: {\r\n        \"update:modelValue\": (_value: ListItemBag | ListItemBag[] | null) => true\r\n    },\r\n\r\n    setup(props, { emit }) {\r\n        // #region Values\r\n\r\n        const internalValue = ref(props.modelValue ?? null);\r\n        const securityGrantToken = useSecurityGrantToken();\r\n        const itemProvider = ref<ReportTreeItemProvider>();\r\n\r\n        // Configure the item provider with our settings.\r\n        function refreshItemProvider(): void {\r\n            const provider = new ReportTreeItemProvider();\r\n            provider.includeCategoryGuids = props.categoryGuids;\r\n            provider.entityTypeGuid = props.entityTypeGuid;\r\n            provider.securityGrantToken = securityGrantToken.value;\r\n\r\n            itemProvider.value = provider;\r\n        }\r\n\r\n        refreshItemProvider();\r\n\r\n        // #endregion\r\n\r\n        // #region Watchers\r\n\r\n        watch(() => [props.categoryGuids, props.entityTypeGuid], refreshItemProvider);\r\n\r\n        // Keep security token up to date, but don't need refetch data\r\n        watch(securityGrantToken, () => {\r\n            if (itemProvider.value) {\r\n                itemProvider.value.securityGrantToken = securityGrantToken.value;\r\n            }\r\n        });\r\n\r\n        watch(internalValue, () => {\r\n            emit(\"update:modelValue\", internalValue.value);\r\n        });\r\n\r\n        watch(() => props.modelValue, () => {\r\n            updateRefValue(internalValue, props.modelValue ?? null);\r\n        });\r\n\r\n        // #endregion\r\n\r\n        return {\r\n            internalValue,\r\n            itemProvider\r\n        };\r\n    },\r\n    template: `\r\n<TreeItemPicker v-model=\"internalValue\"\r\n    formGroupClasses=\"category-picker\"\r\n    iconCssClass=\"fa fa-list-alt\"\r\n    :provider=\"itemProvider\"\r\n    :multiple=\"multiple\"\r\n    disableFolderSelection\r\n/>\r\n`\r\n});\r\n"],"names":["defineComponent","name","components","TreeItemPicker","props","modelValue","type","Object","required","categoryGuids","Array","default","entityTypeGuid","String","emits","_value","setup","_ref","_props$modelValue","emit","internalValue","ref","securityGrantToken","useSecurityGrantToken","itemProvider","refreshItemProvider","provider","ReportTreeItemProvider","includeCategoryGuids","value","watch","_props$modelValue2","updateRefValue","template"],"mappings":";;;;;;;;;;;;;;;;;;;AAyBA,kDAAeA,eAAe,CAAC;YAC3BC,EAAAA,IAAI,EAAE,cAAc;YAEpBC,EAAAA,UAAU,EAAE;YACRC,IAAAA,cAAAA;eACH;YAEDC,EAAAA,KAAK,EAAE;YACHC,IAAAA,UAAU,EAAE;YACRC,MAAAA,IAAI,EAAEC,MAAsD;YAC5DC,MAAAA,QAAQ,EAAE,KAAA;iBACb;YAGDC,IAAAA,aAAa,EAAE;YACXH,MAAAA,IAAI,EAAEI,KAAyB;YAC/BC,MAAAA,OAAO,EAAE,EAAA;iBACZ;YAGDC,IAAAA,cAAc,EAAE;YACZN,MAAAA,IAAI,EAAEO,MAAwB;YAC9BF,MAAAA,OAAO,EAAE,IAAA;YACb,KAAA;eACH;YAEDG,EAAAA,KAAK,EAAE;gBACH,mBAAmB,EAAGC,MAA0C,IAAK,IAAA;eACxE;YAEDC,EAAAA,KAAKA,CAACZ,KAAK,EAAAa,IAAA,EAAY;YAAA,IAAA,IAAAC,iBAAA,CAAA;YAAA,IAAA,IAARC,IAAI,GAAAF,IAAA,CAAJE,IAAI,CAAA;YAGf,IAAA,IAAMC,aAAa,GAAGC,GAAG,CAAA,CAAAH,iBAAA,GAACd,KAAK,CAACC,UAAU,cAAAa,iBAAA,KAAA,KAAA,CAAA,GAAAA,iBAAA,GAAI,IAAI,CAAC,CAAA;gBACnD,IAAMI,kBAAkB,GAAGC,qBAAqB,EAAE,CAAA;gBAClD,IAAMC,YAAY,GAAGH,GAAG,EAA0B,CAAA;gBAGlD,SAASI,mBAAmBA,GAAS;YACjC,MAAA,IAAMC,QAAQ,GAAG,IAAIC,sBAAsB,EAAE,CAAA;YAC7CD,MAAAA,QAAQ,CAACE,oBAAoB,GAAGxB,KAAK,CAACK,aAAa,CAAA;YACnDiB,MAAAA,QAAQ,CAACd,cAAc,GAAGR,KAAK,CAACQ,cAAc,CAAA;YAC9Cc,MAAAA,QAAQ,CAACJ,kBAAkB,GAAGA,kBAAkB,CAACO,KAAK,CAAA;kBAEtDL,YAAY,CAACK,KAAK,GAAGH,QAAQ,CAAA;YACjC,KAAA;YAEAD,IAAAA,mBAAmB,EAAE,CAAA;YAMrBK,IAAAA,KAAK,CAAC,MAAM,CAAC1B,KAAK,CAACK,aAAa,EAAEL,KAAK,CAACQ,cAAc,CAAC,EAAEa,mBAAmB,CAAC,CAAA;gBAG7EK,KAAK,CAACR,kBAAkB,EAAE,MAAM;kBAC5B,IAAIE,YAAY,CAACK,KAAK,EAAE;YACpBL,QAAAA,YAAY,CAACK,KAAK,CAACP,kBAAkB,GAAGA,kBAAkB,CAACO,KAAK,CAAA;YACpE,OAAA;YACJ,KAAC,CAAC,CAAA;gBAEFC,KAAK,CAACV,aAAa,EAAE,MAAM;YACvBD,MAAAA,IAAI,CAAC,mBAAmB,EAAEC,aAAa,CAACS,KAAK,CAAC,CAAA;YAClD,KAAC,CAAC,CAAA;YAEFC,IAAAA,KAAK,CAAC,MAAM1B,KAAK,CAACC,UAAU,EAAE,MAAM;YAAA,MAAA,IAAA0B,kBAAA,CAAA;YAChCC,MAAAA,cAAc,CAACZ,aAAa,EAAAW,CAAAA,kBAAA,GAAE3B,KAAK,CAACC,UAAU,MAAA,IAAA,IAAA0B,kBAAA,KAAA,KAAA,CAAA,GAAAA,kBAAA,GAAI,IAAI,CAAC,CAAA;YAC3D,KAAC,CAAC,CAAA;gBAIF,OAAO;kBACHX,aAAa;YACbI,MAAAA,YAAAA;iBACH,CAAA;eACJ;cACDS,QAAQ,EAAA,0NAAA;YASZ,CAAC,EAAC;;;;;;;;"}