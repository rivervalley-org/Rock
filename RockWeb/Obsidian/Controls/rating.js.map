{"version":3,"file":"rating.js","sources":["../../../Framework/Controls/rating.ts"],"sourcesContent":["ï»¿// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\nimport { computed, defineComponent, PropType, ref, watch } from \"vue\";\r\nimport RockFormField from \"./rockFormField\";\r\n\r\n/**\r\n * A component that provides a rating picker for the user to specify their\r\n * rating of something.\r\n */\r\nexport default defineComponent({\r\n    name: \"Rating\",\r\n\r\n    components: {\r\n        RockFormField\r\n    },\r\n\r\n    /** Defines the read-only properties that are provided by the parent component. */\r\n    props: {\r\n        /** The value provided to use from the parent component. */\r\n        modelValue: {\r\n            type: Number as PropType<number>,\r\n            default: 0\r\n        },\r\n\r\n        /** The maximum rating value allowed, this is the number of starts displayed. */\r\n        maxRating: {\r\n            type: Number as PropType<number>,\r\n            default: 5\r\n        }\r\n    },\r\n\r\n    setup(props, { emit }) {\r\n        /** The current value selected by the person. */\r\n        const internalValue = ref(props.modelValue);\r\n\r\n        /**\r\n         * The current value being hovered by the person or null if no\r\n         * hover operation is happening.\r\n         */\r\n        const hoverValue = ref(null as number | null);\r\n\r\n        /** True if the clear button should be visible. */\r\n        const showClear = computed((): boolean => internalValue.value > 0);\r\n\r\n        /** Watch for changes in the value we are supposed to be editing. */\r\n        watch(() => props.modelValue, () => internalValue.value = props.modelValue);\r\n\r\n        /** Watch for changes in our internal value and emit the new value. */\r\n        watch(internalValue, () => emit(\"update:modelValue\", internalValue.value));\r\n\r\n        /**\r\n         * Set the rating value from an action.\r\n         *\r\n         * @param value The new rating value.\r\n         */\r\n        const setRating = (value: number): void => {\r\n            internalValue.value = value;\r\n        };\r\n\r\n        /**\r\n         * Handles the clear selection event from the person.\r\n         * \r\n         * @param e The event that triggered this handler.\r\n         * \r\n         * @returns A value indicating if the event has been handled.\r\n         */\r\n        const onClear = (e: Event): boolean => {\r\n            e.preventDefault();\r\n\r\n            setRating(0);\r\n\r\n            return false;\r\n        };\r\n\r\n        /**\r\n         * Gets the CSS class to use for the given rating position.\r\n         * \r\n         * @param position The rating position being queried.\r\n         */\r\n        const classForRating = (position: number): string => {\r\n            const filledCount = Math.min(props.maxRating, hoverValue.value ?? internalValue.value);\r\n\r\n            return position <= filledCount ? \"fa fa-rating-selected\" : \"fa fa-rating-unselected\";\r\n        };\r\n\r\n        /**\r\n         * Sets the current rating position being hovered.\r\n         * \r\n         * @param position The position being hovered.\r\n         */\r\n        const setHover = (position: number): void => {\r\n            hoverValue.value = position;\r\n        };\r\n\r\n        /**\r\n         * Clears any hover rating position value.\r\n         */\r\n        const clearHover = (): void => {\r\n            hoverValue.value = null;\r\n        };\r\n\r\n        return {\r\n            classForRating,\r\n            clearHover,\r\n            hoverValue,\r\n            internalValue,\r\n            onClear,\r\n            setHover,\r\n            setRating,\r\n            showClear\r\n        };\r\n    },\r\n\r\n    template: `\r\n<RockFormField\r\n    :modelValue=\"internalValue\"\r\n    formGroupClasses=\"rock-rating\"\r\n    name=\"rock-rating\">\r\n    <template #default=\"{uniqueId, field}\">\r\n        <div class=\"control-wrapper\">\r\n            <div class=\"rating-input\">\r\n                <i v-for=\"i in maxRating\" :key=\"i\" :class=\"classForRating(i)\" @click=\"setRating(i)\" @mouseover=\"setHover(i)\" @mouseleave=\"clearHover()\"></i>\r\n                <a v-if=\"showClear\" class=\"clear-rating\" href=\"#\" v-on:click=\"onClear\" @mouseover=\"setHover(0)\" @mouseleave=\"clearHover()\">\r\n                    <span class=\"fa fa-remove\"></span>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </template>\r\n</RockFormField>\r\n`\r\n});\r\n"],"names":["defineComponent","name","components","RockFormField","props","modelValue","type","Number","default","maxRating","setup","_ref","emit","internalValue","ref","hoverValue","showClear","computed","value","watch","setRating","onClear","e","preventDefault","classForRating","position","_hoverValue$value","filledCount","Math","min","setHover","clearHover","template"],"mappings":";;;;;;;;;;;;;;AAuBA,4CAAeA,eAAe,CAAC;YAC3BC,EAAAA,IAAI,EAAE,QAAQ;YAEdC,EAAAA,UAAU,EAAE;YACRC,IAAAA,aAAAA;eACH;YAGDC,EAAAA,KAAK,EAAE;YAEHC,IAAAA,UAAU,EAAE;YACRC,MAAAA,IAAI,EAAEC,MAA0B;YAChCC,MAAAA,OAAO,EAAE,CAAA;iBACZ;YAGDC,IAAAA,SAAS,EAAE;YACPH,MAAAA,IAAI,EAAEC,MAA0B;YAChCC,MAAAA,OAAO,EAAE,CAAA;YACb,KAAA;eACH;YAEDE,EAAAA,KAAKA,CAACN,KAAK,EAAAO,IAAA,EAAY;YAAA,IAAA,IAARC,IAAI,GAAAD,IAAA,CAAJC,IAAI,CAAA;YAEf,IAAA,IAAMC,aAAa,GAAGC,GAAG,CAACV,KAAK,CAACC,UAAU,CAAC,CAAA;YAM3C,IAAA,IAAMU,UAAU,GAAGD,GAAG,CAAC,IAAI,CAAkB,CAAA;gBAG7C,IAAME,SAAS,GAAGC,QAAQ,CAAC,MAAeJ,aAAa,CAACK,KAAK,GAAG,CAAC,CAAC,CAAA;YAGlEC,IAAAA,KAAK,CAAC,MAAMf,KAAK,CAACC,UAAU,EAAE,MAAMQ,aAAa,CAACK,KAAK,GAAGd,KAAK,CAACC,UAAU,CAAC,CAAA;YAG3Ec,IAAAA,KAAK,CAACN,aAAa,EAAE,MAAMD,IAAI,CAAC,mBAAmB,EAAEC,aAAa,CAACK,KAAK,CAAC,CAAC,CAAA;gBAO1E,IAAME,SAAS,GAAIF,KAAa,IAAW;kBACvCL,aAAa,CAACK,KAAK,GAAGA,KAAK,CAAA;iBAC9B,CAAA;gBASD,IAAMG,OAAO,GAAIC,CAAQ,IAAc;kBACnCA,CAAC,CAACC,cAAc,EAAE,CAAA;kBAElBH,SAAS,CAAC,CAAC,CAAC,CAAA;YAEZ,MAAA,OAAO,KAAK,CAAA;iBACf,CAAA;gBAOD,IAAMI,cAAc,GAAIC,QAAgB,IAAa;YAAA,MAAA,IAAAC,iBAAA,CAAA;kBACjD,IAAMC,WAAW,GAAGC,IAAI,CAACC,GAAG,CAACzB,KAAK,CAACK,SAAS,EAAAiB,CAAAA,iBAAA,GAAEX,UAAU,CAACG,KAAK,MAAA,IAAA,IAAAQ,iBAAA,KAAA,KAAA,CAAA,GAAAA,iBAAA,GAAIb,aAAa,CAACK,KAAK,CAAC,CAAA;YAEtF,MAAA,OAAOO,QAAQ,IAAIE,WAAW,GAAG,uBAAuB,GAAG,yBAAyB,CAAA;iBACvF,CAAA;gBAOD,IAAMG,QAAQ,GAAIL,QAAgB,IAAW;kBACzCV,UAAU,CAACG,KAAK,GAAGO,QAAQ,CAAA;iBAC9B,CAAA;gBAKD,IAAMM,UAAU,GAAGA,MAAY;kBAC3BhB,UAAU,CAACG,KAAK,GAAG,IAAI,CAAA;iBAC1B,CAAA;gBAED,OAAO;kBACHM,cAAc;kBACdO,UAAU;kBACVhB,UAAU;kBACVF,aAAa;kBACbQ,OAAO;kBACPS,QAAQ;kBACRV,SAAS;YACTJ,MAAAA,SAAAA;iBACH,CAAA;eACJ;cAEDgB,QAAQ,EAAA,otBAAA;YAiBZ,CAAC,EAAC;;;;;;;;"}