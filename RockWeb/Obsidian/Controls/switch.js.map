{"version":3,"file":"switch.js","sources":["../../../Framework/Controls/switch.ts"],"sourcesContent":["// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\nimport { defineComponent, PropType } from \"vue\";\r\nimport { useVModelPassthrough } from \"@Obsidian/Utility/component\";\r\nimport InlineSwitch from \"./inlineSwitch\";\r\nimport RockFormField from \"./rockFormField\";\r\n\r\nexport default defineComponent({\r\n    name: \"Switch\",\r\n\r\n    components: {\r\n        InlineSwitch,\r\n        RockFormField\r\n    },\r\n\r\n    props: {\r\n        modelValue: {\r\n            type: Boolean as PropType<boolean>,\r\n            required: true\r\n        },\r\n\r\n        text: {\r\n            type: String as PropType<string>,\r\n            default: \"\"\r\n        }\r\n    },\r\n\r\n    emits: [\r\n        \"update:modelValue\"\r\n    ],\r\n\r\n    setup(props, { emit }) {\r\n        const internalValue = useVModelPassthrough(props, \"modelValue\", emit);\r\n\r\n        return {\r\n            internalValue\r\n        };\r\n    },\r\n\r\n    template: `\r\n<RockFormField\r\n    :modelValue=\"internalValue\"\r\n    formGroupClasses=\"rock-switch\"\r\n    name=\"switch\">\r\n    <template #default=\"{uniqueId, field}\">\r\n        <div class=\"control-wrapper\">\r\n            <InlineSwitch v-model=\"internalValue\" :label=\"text\" :uniqueId=\"uniqueId\" v-bind=\"field\" />\r\n        </div>\r\n    </template>\r\n</RockFormField>\r\n`\r\n});\r\n"],"names":["defineComponent","name","components","InlineSwitch","RockFormField","props","modelValue","type","Boolean","required","text","String","default","emits","setup","_ref","emit","internalValue","useVModelPassthrough","template"],"mappings":";;;;;;;;;;;;;;;AAqBA,6CAAeA,eAAe,CAAC;YAC3BC,EAAAA,IAAI,EAAE,QAAQ;YAEdC,EAAAA,UAAU,EAAE;gBACRC,YAAY;YACZC,IAAAA,aAAAA;eACH;YAEDC,EAAAA,KAAK,EAAE;YACHC,IAAAA,UAAU,EAAE;YACRC,MAAAA,IAAI,EAAEC,OAA4B;YAClCC,MAAAA,QAAQ,EAAE,IAAA;iBACb;YAEDC,IAAAA,IAAI,EAAE;YACFH,MAAAA,IAAI,EAAEI,MAA0B;YAChCC,MAAAA,OAAO,EAAE,EAAA;YACb,KAAA;eACH;cAEDC,KAAK,EAAE,CACH,mBAAmB,CACtB;YAEDC,EAAAA,KAAKA,CAACT,KAAK,EAAAU,IAAA,EAAY;YAAA,IAAA,IAARC,IAAI,GAAAD,IAAA,CAAJC,IAAI,CAAA;gBACf,IAAMC,aAAa,GAAGC,oBAAoB,CAACb,KAAK,EAAE,YAAY,EAAEW,IAAI,CAAC,CAAA;gBAErE,OAAO;YACHC,MAAAA,aAAAA;iBACH,CAAA;eACJ;cAEDE,QAAQ,EAAA,8WAAA;YAYZ,CAAC,EAAC;;;;;;;;"}