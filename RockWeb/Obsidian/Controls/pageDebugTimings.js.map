{"version":3,"file":"pageDebugTimings.js","sources":["../../../Framework/Controls/pageDebugTimings.ts"],"sourcesContent":["ï»¿// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\nimport { asFormattedString } from \"@Obsidian/Utility/numberUtils\";\r\nimport { defineComponent, PropType } from \"vue\";\r\nimport { useStore } from \"@Obsidian/PageState\";\r\nimport { DebugTiming } from \"@Obsidian/ViewModels/Utility/debugTiming\";\r\n\r\nconst store = useStore();\r\n\r\nconst pageDebugTimingRow = defineComponent({\r\n    name: \"PageDebugTimingRow\",\r\n    props: {\r\n        viewModel: {\r\n            type: Object as PropType<DebugTiming>,\r\n            required: true\r\n        },\r\n        startTimeMs: {\r\n            type: Number as PropType<number>,\r\n            required: true\r\n        },\r\n        totalMs: {\r\n            type: Number as PropType<number>,\r\n            required: true\r\n        }\r\n    },\r\n    methods: {\r\n        numberAsFormattedString: asFormattedString\r\n    },\r\n    computed: {\r\n        indentStyle(): string {\r\n            if (!this.viewModel.indentLevel) {\r\n                return \"\";\r\n            }\r\n\r\n            const pixels = this.viewModel.indentLevel * 24;\r\n            return `padding-left: ${pixels}px`;\r\n        },\r\n        waterfallTitle(): string {\r\n            const timestampString = this.numberAsFormattedString(this.viewModel.timestampMs, 2);\r\n            const durationString = this.numberAsFormattedString(this.viewModel.durationMs, 2);\r\n            return `Started at ${timestampString} ms / Duration ${durationString} ms`;\r\n        },\r\n        getPercentFromMs(): (ms: number) => number {\r\n            return (ms: number): number => {\r\n                if (!this.totalMs) {\r\n                    return 0;\r\n                }\r\n\r\n                const msFromStart = ms - this.startTimeMs;\r\n                return (msFromStart / this.totalMs) * 100;\r\n            };\r\n        },\r\n        waterfallStyle(): string {\r\n            const leftPercent = this.getPercentFromMs(this.viewModel.timestampMs);\r\n            const widthPercent = this.getPercentFromMs(this.viewModel.durationMs);\r\n            return `left: ${leftPercent}%; width: ${widthPercent}%;`;\r\n        }\r\n    },\r\n    template: `\r\n<tr>\r\n    <td class=\"debug-timestamp\">{{numberAsFormattedString(viewModel.timestampMs, 2)}} ms</td>\r\n    <td :style=\"indentStyle\">\r\n        <strong v-if=\"viewModel.isTitleBold\">\r\n            {{viewModel.title}}\r\n        </strong>\r\n        <template v-else>\r\n            {{viewModel.title}}\r\n        </template>\r\n        <small v-if=\"viewModel.subTitle\" style=\"color:#A4A4A4; padding-left: 3px;\">\r\n            {{viewModel.subTitle}}\r\n        </small>\r\n    </td>\r\n    <td class=\"debug-timestamp\">{{numberAsFormattedString(viewModel.durationMs, 2)}} ms</td>\r\n    <td class=\"debug-waterfall\">\r\n        <span class=\"debug-chart-bar\" :title=\"waterfallTitle\" :style=\"waterfallStyle\"></span>\r\n    </td>\r\n</tr>`\r\n});\r\n\r\nexport default defineComponent({\r\n    name: \"PageDebugTimings\",\r\n    components: {\r\n        PageDebugTimingRow: pageDebugTimingRow\r\n    },\r\n    props: {\r\n        serverViewModels: {\r\n            type: Array as PropType<DebugTiming[]>,\r\n            required: true\r\n        }\r\n    },\r\n    computed: {\r\n        serverStartTimeMs(): number {\r\n            if (!this.serverViewModels.length) {\r\n                return 0;\r\n            }\r\n\r\n            return this.serverViewModels[0].timestampMs;\r\n        },\r\n        serverEndTimeMs(): number {\r\n            if (!this.serverViewModels.length) {\r\n                return 0;\r\n            }\r\n\r\n            const lastIndex = this.serverViewModels.length - 1;\r\n            const lastViewModel = this.serverViewModels[lastIndex];\r\n            return lastViewModel.timestampMs + lastViewModel.durationMs;\r\n        },\r\n        firstClientRelativeStartTimeMs(): number {\r\n            if (!this.relativeClientViewModels.length) {\r\n                return this.serverEndTimeMs;\r\n            }\r\n\r\n            const viewModel = this.relativeClientViewModels[0];\r\n            return viewModel.timestampMs;\r\n        },\r\n        clientRelativeEndTimeMs(): number {\r\n            if (!this.relativeClientViewModels.length) {\r\n                return this.serverEndTimeMs;\r\n            }\r\n\r\n            const lastIndex = this.relativeClientViewModels.length - 1;\r\n            const lastViewModel = this.relativeClientViewModels[lastIndex];\r\n            return lastViewModel.timestampMs + lastViewModel.durationMs;\r\n        },\r\n        totalMs(): number {\r\n            return this.clientRelativeEndTimeMs - this.serverStartTimeMs;\r\n        },\r\n        clientViewModels(): DebugTiming[] {\r\n            return store.state.debugTimings;\r\n        },\r\n        relativeClientViewModels(): DebugTiming[] {\r\n            // Add the server end time so they appear after the server\r\n            return this.clientViewModels.map(vm => ({\r\n                ...vm,\r\n                timestampMs: this.serverEndTimeMs + vm.timestampMs\r\n            } as DebugTiming));\r\n        },\r\n        clientHeader(): DebugTiming {\r\n            return {\r\n                durationMs: this.firstClientRelativeStartTimeMs - this.serverEndTimeMs,\r\n                indentLevel: 0,\r\n                isTitleBold: true,\r\n                title: \"Client Mount Blocks\",\r\n                timestampMs: this.serverEndTimeMs,\r\n                subTitle: \"\"\r\n            };\r\n        }\r\n    },\r\n    template: `\r\n<span>\r\n    <table class=\"table table-bordered table-striped debug-timings\" style=\"width:100%; margin-bottom: 48px;\">\r\n        <thead>\r\n            <tr>\r\n                <th class=\"debug-timestamp\">Timestamp</th>\r\n                <th>Event</th>\r\n                <th class=\"debug-timestamp\">Duration</th>\r\n                <th class=\"debug-waterfall\">Waterfall</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <PageDebugTimingRow v-for=\"(vm, i) in serverViewModels\" :key=\"\\`s\\${i}-\\${vm.timestampMs}\\`\" :viewModel=\"vm\" :startTimeMs=\"serverStartTimeMs\" :totalMs=\"totalMs\" />\r\n            <PageDebugTimingRow :viewModel=\"clientHeader\" :startTimeMs=\"serverStartTimeMs\" :totalMs=\"totalMs\" />\r\n            <PageDebugTimingRow v-for=\"(vm, i) in relativeClientViewModels\" :key=\"\\`c\\${i}-\\${vm.timestampMs}\\`\" :viewModel=\"vm\" :startTimeMs=\"serverStartTimeMs\" :totalMs=\"totalMs\" />\r\n        </tbody>\r\n    </table>\r\n</span>`\r\n});\r\n"],"names":["store","useStore","pageDebugTimingRow","defineComponent","name","props","viewModel","type","Object","required","startTimeMs","Number","totalMs","methods","numberAsFormattedString","asFormattedString","computed","indentStyle","indentLevel","pixels","concat","waterfallTitle","timestampString","timestampMs","durationString","durationMs","getPercentFromMs","ms","msFromStart","waterfallStyle","leftPercent","widthPercent","template","components","PageDebugTimingRow","serverViewModels","Array","serverStartTimeMs","length","serverEndTimeMs","lastIndex","lastViewModel","firstClientRelativeStartTimeMs","relativeClientViewModels","clientRelativeEndTimeMs","clientViewModels","state","debugTimings","map","vm","_objectSpread","clientHeader","isTitleBold","title","subTitle"],"mappings":"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"}