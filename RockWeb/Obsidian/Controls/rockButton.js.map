{"version":3,"file":"rockButton.js","sources":["../../../Framework/Controls/rockButton.ts"],"sourcesContent":["ï»¿// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\nimport { computed, defineComponent, PropType, ref } from \"vue\";\r\nimport { isPromise } from \"@Obsidian/Utility/promiseUtils\";\r\nimport { LiteralUnion } from \"@Obsidian/Types/Utility/support\";\r\nimport { BtnType } from \"@Obsidian/Enums/Controls/btnType\";\r\nimport { BtnSize } from \"@Obsidian/Enums/Controls/btnSize\";\r\n\r\nexport default defineComponent({\r\n    name: \"RockButton\",\r\n\r\n    props: {\r\n        isLoading: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        },\r\n        loadingText: {\r\n            type: String as PropType<string>,\r\n            default: \"Loading...\"\r\n        },\r\n        type: {\r\n            type: String as PropType<string>,\r\n            default: \"button\"\r\n        },\r\n        disabled: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        },\r\n        btnType: {\r\n            type: String as PropType<LiteralUnion<BtnType>>,\r\n            default: BtnType.Default\r\n        },\r\n        btnSize: {\r\n            type: String as PropType<BtnSize>,\r\n            default: BtnSize.Default\r\n        },\r\n        autoLoading: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        },\r\n\r\n        /**\r\n         * Automatically disables the button when it is in a loading state or\r\n         * the click handler is processing. This can prevent duplicate clicks.\r\n         */\r\n        autoDisable: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        },\r\n\r\n        onClick: {\r\n            type: Function as PropType<((event: MouseEvent) => void | PromiseLike<void>)>,\r\n            required: false\r\n        },\r\n\r\n        /** Change button proportions to make it a square. Used for buttons with only an icon. */\r\n        isSquare: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    emits: [\r\n    ],\r\n\r\n    setup(props) {\r\n        const isProcessing = ref(false);\r\n\r\n        const isButtonDisabled = computed((): boolean => {\r\n            return props.disabled || (props.autoDisable && isProcessing.value) || props.isLoading;\r\n        });\r\n\r\n        const isButtonLoading = computed((): boolean => {\r\n            return props.isLoading || (props.autoLoading && isProcessing.value);\r\n        });\r\n\r\n        const typeClass = computed((): string => {\r\n            return `btn-${props.btnType}`;\r\n        });\r\n\r\n        const sizeClass = computed((): string => {\r\n            if (!props.btnSize) {\r\n                return \"\";\r\n            }\r\n\r\n            return `btn-${props.btnSize}`;\r\n        });\r\n\r\n        const cssClass = computed((): string => {\r\n            return `btn ${typeClass.value} ${sizeClass.value} ${props.isSquare ? \"btn-square\" : \"\"}`;\r\n        });\r\n\r\n        const onButtonClick = async (event: MouseEvent): Promise<void> => {\r\n            if (isButtonDisabled.value || isButtonLoading.value) {\r\n                return;\r\n            }\r\n\r\n            isProcessing.value = true;\r\n\r\n            try {\r\n                const clickHandler = props.onClick;\r\n\r\n                if (clickHandler) {\r\n                    const result = clickHandler(event);\r\n\r\n                    if (isPromise(result)) {\r\n                        await result;\r\n                    }\r\n                }\r\n            }\r\n            finally {\r\n                isProcessing.value = false;\r\n            }\r\n        };\r\n\r\n        return {\r\n            cssClass,\r\n            isButtonDisabled,\r\n            isButtonLoading,\r\n            onButtonClick\r\n        };\r\n    },\r\n\r\n    template: `\r\n<button :class=\"cssClass\" :disabled=\"isButtonDisabled\" @click=\"onButtonClick\" :type=\"type\">\r\n    <template v-if=\"isButtonLoading\">\r\n        {{loadingText}}\r\n    </template>\r\n    <slot v-else />\r\n</button>`\r\n});\r\n"],"names":["defineComponent","name","props","isLoading","type","Boolean","default","loadingText","String","disabled","btnType","BtnType","Default","btnSize","BtnSize","autoLoading","autoDisable","onClick","Function","required","isSquare","emits","setup","isProcessing","ref","isButtonDisabled","computed","value","isButtonLoading","typeClass","concat","sizeClass","cssClass","onButtonClick","_ref","_asyncToGenerator","event","clickHandler","result","isPromise","_x","apply","arguments","template"],"mappings":"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"}