{"version":3,"file":"codeEditor.js","sources":["../../../Framework/Controls/codeEditor.ts"],"sourcesContent":["// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { computed, defineComponent, nextTick, onMounted, PropType, ref, watch } from \"vue\";\r\nimport RockFormField from \"@Obsidian/Controls/rockFormField\";\r\nimport { loadJavaScriptAsync } from \"@Obsidian/Utility/page\";\r\nimport { newGuid } from \"@Obsidian/Utility/guid\";\r\nimport { isFullscreen, enterFullscreen, exitFullscreen } from \"@Obsidian/Utility/fullscreen\";\r\nimport { updateRefValue } from \"@Obsidian/Utility/component\";\r\nimport { LiteralUnion } from \"@Obsidian/Types/Utility/support\";\r\n\r\n\r\ndeclare global {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any,no-var\r\n    var ace: any | undefined;\r\n}\r\n\r\n// The valid theme types for intellisense.\r\ntype ThemeTypes = \"rock\"\r\n    | \"chrome\" | \"crimson_editor\" | \"dawn\" | \"dreamweaver\"\r\n    | \"eclipse\" | \"solarized_light\" | \"textmate\" | \"tomorrow\"\r\n    | \"xcode\" | \"github\" | \"ambiance\" | \"chaos\"\r\n    | \"clouds_midnight\" | \"cobalt\" | \"idle_fingers\" | \"kr_theme\"\r\n    | \"merbivore\" | \"merbivore_soft\" | \"mono_industrial\" | \"monokai\"\r\n    | \"pastel_on_dark\" | \"solarized_dark\" | \"terminal\" | \"tomorrow_night\"\r\n    | \"tomorrow_night_blue\" | \"tomorrow_night_bright\" | \"tomorrow_night_eighties\"\r\n    | \"twilight\" | \"vibrant_ink\";\r\n\r\n// The valid mode types for intellisense.\r\ntype ModeTypes = \"text\" | \"css\" | \"html\" | \"lava\"\r\n    | \"javascript\" | \"less\" | \"powershell\" | \"sql\"\r\n    | \"typescript\" | \"csharp\" | \"markdown\" | \"xml\";\r\n\r\n// Start loading the signature pad script so that it is available for us\r\n// to use later when the control becomes visible.\r\nconst aceScriptPromise = loadJavaScriptAsync(\"/Scripts/ace/ace.js\", () => !!window.ace);\r\n\r\n/**\r\n * Gets the name of the theme to use with the ACE editor. This handles any\r\n * name mapping and capitalization issues.\r\n *\r\n * @param theme The name of the theme being requested.\r\n *\r\n * @returns The name of the actual theme to use with the ACE editor.\r\n */\r\nfunction getAceTheme(theme?: string): string {\r\n    if (!theme || theme.toLowerCase() === \"rock\") {\r\n        return \"github\";\r\n    }\r\n\r\n    return theme.toLowerCase();\r\n}\r\n\r\n/**\r\n * Gets the name of the syntax mode to use with the ACE editor. This handles any\r\n * name mapping and capitalization issues.\r\n *\r\n * @param mode The name of the mode being requested.\r\n *\r\n * @returns The name of the actual mode to use with the ACE editor.\r\n */\r\nfunction getAceMode(mode?: string): string {\r\n    if (!mode) {\r\n        return \"text\";\r\n    }\r\n\r\n    return mode.toLowerCase();\r\n}\r\n\r\nexport default defineComponent({\r\n    name: \"CodeEditor\",\r\n\r\n    components: {\r\n        RockFormField\r\n    },\r\n\r\n    props: {\r\n        /** The text value of the code editor. */\r\n        modelValue: {\r\n            type: String as PropType<string>,\r\n            default: \"\"\r\n        },\r\n\r\n        /** The name of the theme to use when styling the editor. */\r\n        theme: {\r\n            type: String as PropType<LiteralUnion<ThemeTypes>>,\r\n            default: \"rock\"\r\n        },\r\n\r\n        /** The name of the syntax mode that represents the expected language. */\r\n        mode: {\r\n            type: String as PropType<LiteralUnion<ModeTypes>>,\r\n            default: \"text\"\r\n        },\r\n\r\n        /** If set then line wrapping will be disabled. */\r\n        noLineWrap: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        },\r\n\r\n        /** The height of the editor in pixels. */\r\n        editorHeight: {\r\n            type: Number as PropType<number>,\r\n            required: false\r\n        },\r\n\r\n        /** A list of merge fields to make available. Not currently used! */\r\n        mergeFields: {\r\n            type: Array as PropType<string[]>,\r\n            required: false\r\n        },\r\n\r\n        /** If set then the the editor will be disabled and read-only. */\r\n        disabled: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    emits: {\r\n        \"update:modelValue\": (_value: string) => true\r\n    },\r\n\r\n    setup(props, { emit }) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        let editor: any | unknown;\r\n        const internalValue = ref(props.modelValue);\r\n        const uniqueId = newGuid();\r\n\r\n        // #region Computed Values\r\n\r\n        const codeEditorClass = computed((): string => {\r\n            return \"code-editor-container\";\r\n        });\r\n\r\n        const codeEditorId = computed((): string => {\r\n            return `codeeditor-div-${uniqueId}`;\r\n        });\r\n\r\n        const codeEditorStyle = computed((): Record<string, string> => {\r\n            return {\r\n                position: \"relative\",\r\n                height: `${editorHeight.value}px`\r\n            };\r\n        });\r\n\r\n        const hasMergeFields = computed((): boolean => {\r\n            return !!props.mergeFields && props.mergeFields.length > 0;\r\n        });\r\n\r\n        const editorHeight = computed((): number => {\r\n            let height = props.editorHeight ?? 200;\r\n\r\n            if (hasMergeFields.value) {\r\n                height -= 40;\r\n            }\r\n\r\n            return height;\r\n        });\r\n\r\n        // #endregion\r\n\r\n        // Watch for changes in the ACE configuration.\r\n        watch(() => [props.theme, props.mode, props.noLineWrap, props.disabled], () => {\r\n            if (editor) {\r\n                editor.setTheme(`ace/theme/${getAceTheme(props.theme)}`);\r\n                editor.getSession().setMode(`ace/mode/${getAceMode(props.mode)}`);\r\n                editor.getSession().setUseWrapMode(!props.noLineWrap);\r\n                editor.setReadOnly(props.disabled);\r\n            }\r\n        });\r\n\r\n        watch(() => props.modelValue, () => {\r\n            updateRefValue(internalValue, props.modelValue);\r\n        });\r\n\r\n        watch(internalValue, () => {\r\n            emit(\"update:modelValue\", internalValue.value);\r\n        });\r\n\r\n        onMounted(async (): Promise<void> => {\r\n            await aceScriptPromise;\r\n            editor = ace.edit(codeEditorId.value);\r\n            editor.setTheme(`ace/theme/${getAceTheme(props.theme)}`);\r\n            editor.getSession().setMode(`ace/mode/${getAceMode(props.mode)}`);\r\n            editor.getSession().setUseWrapMode(!props.noLineWrap);\r\n            editor.setShowPrintMargin(false);\r\n            editor.setReadOnly(props.disabled);\r\n\r\n            // Disable warning about block scrolling.\r\n            editor.$blockScrolling = Infinity;\r\n\r\n            // Add custom command to toggle fullscreen mode.\r\n            editor.commands.addCommand({\r\n                name: \"Toggle Fullscreen\",\r\n                bindKey: \"F11\",\r\n                exec: async () => {\r\n                    if (isFullscreen()) {\r\n                        exitFullscreen();\r\n                    }\r\n                    else {\r\n                        enterFullscreen(editor.container, () => editor.resize());\r\n                    }\r\n\r\n                    editor.resize();\r\n                }\r\n            });\r\n\r\n            // Whenever the content of the editor changes, update our value.\r\n            editor.getSession().on(\"change\", () => {\r\n                updateRefValue(internalValue, editor.getValue());\r\n            });\r\n\r\n            // Fix issue when code editor is inside a modal.\r\n            nextTick(() => {\r\n                editor.resize();\r\n            });\r\n        });\r\n\r\n        return {\r\n            codeEditorClass,\r\n            codeEditorId,\r\n            codeEditorStyle,\r\n            editorHeight,\r\n            internalValue,\r\n            hasMergeFields\r\n        };\r\n    },\r\n\r\n    template: `\r\n<RockFormField\r\n    :modelValue=\"internalValue\"\r\n    formGroupClasses=\"rock-code-editor\"\r\n    name=\"codeeditor\">\r\n    <template #default=\"{uniqueId, field}\">\r\n        <div class=\"control-wrapper\">\r\n            <div v-if=\"hasMergeFields\" class=\"codeeditor-header margin-b-md clearfix\">\r\n            </div>\r\n\r\n            <div :class=\"codeEditorClass\"\r\n                :style=\"codeEditorStyle\">\r\n                <pre v-once\r\n                    :id=\"codeEditorId\"\r\n                    class=\"position-absolute inset-0 m-0 ace_editor\">{{ internalValue }}</pre>\r\n            </div>\r\n        </div>\r\n    </template>\r\n</RockFormField>\r\n`\r\n});\r\n"],"names":["aceScriptPromise","loadJavaScriptAsync","window","ace","getAceTheme","theme","toLowerCase","getAceMode","mode","defineComponent","name","components","RockFormField","props","modelValue","type","String","default","noLineWrap","Boolean","editorHeight","Number","required","mergeFields","Array","disabled","emits","_value","setup","_ref","emit","editor","internalValue","ref","uniqueId","newGuid","codeEditorClass","computed","codeEditorId","concat","codeEditorStyle","position","height","value","hasMergeFields","length","_props$editorHeight","watch","setTheme","getSession","setMode","setUseWrapMode","setReadOnly","updateRefValue","onMounted","_asyncToGenerator","edit","setShowPrintMargin","$blockScrolling","Infinity","commands","addCommand","bindKey","exec","_exec","isFullscreen","exitFullscreen","enterFullscreen","container","resize","apply","arguments","on","getValue","nextTick","template"],"mappings":"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"}