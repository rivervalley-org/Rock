{"version":3,"file":"mergeTemplatePicker.js","sources":["../../../Framework/Controls/mergeTemplatePicker.ts"],"sourcesContent":["// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { useSecurityGrantToken } from \"@Obsidian/Utility/block\";\r\nimport { updateRefValue } from \"@Obsidian/Utility/component\";\r\nimport { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\nimport { defineComponent, PropType, ref, watch } from \"vue\";\r\nimport { MergeTemplateTreeItemProvider } from \"@Obsidian/Utility/treeItemProviders\";\r\nimport { MergeTemplateOwnership } from \"@Obsidian/Enums/Controls/mergeTemplateOwnership\";\r\nimport TreeItemPicker from \"./treeItemPicker.obs\";\r\n\r\nexport default defineComponent({\r\n    name: \"MergeTemplatePicker\",\r\n\r\n    components: {\r\n        TreeItemPicker\r\n    },\r\n\r\n    props: {\r\n        modelValue: {\r\n            type: Object as PropType<ListItemBag | ListItemBag[] | null>,\r\n            required: false\r\n        },\r\n\r\n        mergeTemplateOwnership: {\r\n            type: Number as PropType<MergeTemplateOwnership>,\r\n            default: MergeTemplateOwnership.Global\r\n        },\r\n    },\r\n\r\n    emits: {\r\n        \"update:modelValue\": (_value: ListItemBag | ListItemBag[] | null) => true\r\n    },\r\n\r\n    setup(props, { emit }) {\r\n        // #region Values\r\n\r\n        const internalValue = ref(props.modelValue ?? null);\r\n        const securityGrantToken = useSecurityGrantToken();\r\n        const itemProvider = ref<MergeTemplateTreeItemProvider>();\r\n\r\n        // Configure the item provider with our settings.\r\n        function refreshItemProvider(): void {\r\n            const provider = new MergeTemplateTreeItemProvider();\r\n            provider.mergeTemplateOwnership = props.mergeTemplateOwnership;\r\n            provider.securityGrantToken = securityGrantToken.value;\r\n\r\n            itemProvider.value = provider;\r\n        }\r\n\r\n        refreshItemProvider();\r\n\r\n        // #endregion\r\n\r\n        // #region Watchers\r\n\r\n        watch(() => [props.mergeTemplateOwnership], refreshItemProvider);\r\n\r\n        // Keep security token up to date, but don't need refetch data\r\n        watch(securityGrantToken, () => {\r\n            if (itemProvider.value) {\r\n                itemProvider.value.securityGrantToken = securityGrantToken.value;\r\n            }\r\n        });\r\n\r\n        watch(internalValue, () => {\r\n            emit(\"update:modelValue\", internalValue.value);\r\n        });\r\n\r\n        watch(() => props.modelValue, () => {\r\n            updateRefValue(internalValue, props.modelValue ?? null);\r\n        });\r\n\r\n        // #endregion\r\n\r\n        return {\r\n            internalValue,\r\n            itemProvider\r\n        };\r\n    },\r\n    template: `\r\n<TreeItemPicker v-model=\"internalValue\"\r\n    formGroupClasses=\"category-picker\"\r\n    iconCssClass=\"fa fa-files-o\"\r\n    :provider=\"itemProvider\"\r\n    :multiple=\"multiple\"\r\n    disableFolderSelection\r\n/>\r\n`\r\n});\r\n"],"names":["defineComponent","name","components","TreeItemPicker","props","modelValue","type","Object","required","mergeTemplateOwnership","Number","default","MergeTemplateOwnership","Global","emits","_value","setup","_ref","_props$modelValue","emit","internalValue","ref","securityGrantToken","useSecurityGrantToken","itemProvider","refreshItemProvider","provider","MergeTemplateTreeItemProvider","value","watch","_props$modelValue2","updateRefValue","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAyBA,yDAAeA,eAAe,CAAC;YAC3BC,EAAAA,IAAI,EAAE,qBAAqB;YAE3BC,EAAAA,UAAU,EAAE;YACRC,IAAAA,cAAAA;eACH;YAEDC,EAAAA,KAAK,EAAE;YACHC,IAAAA,UAAU,EAAE;YACRC,MAAAA,IAAI,EAAEC,MAAsD;YAC5DC,MAAAA,QAAQ,EAAE,KAAA;iBACb;YAEDC,IAAAA,sBAAsB,EAAE;YACpBH,MAAAA,IAAI,EAAEI,MAA0C;kBAChDC,OAAO,EAAEC,sBAAsB,CAACC,MAAAA;YACpC,KAAA;eACH;YAEDC,EAAAA,KAAK,EAAE;gBACH,mBAAmB,EAAGC,MAA0C,IAAK,IAAA;eACxE;YAEDC,EAAAA,KAAKA,CAACZ,KAAK,EAAAa,IAAA,EAAY;YAAA,IAAA,IAAAC,iBAAA,CAAA;YAAA,IAAA,IAARC,IAAI,GAAAF,IAAA,CAAJE,IAAI,CAAA;YAGf,IAAA,IAAMC,aAAa,GAAGC,GAAG,CAAA,CAAAH,iBAAA,GAACd,KAAK,CAACC,UAAU,cAAAa,iBAAA,KAAA,KAAA,CAAA,GAAAA,iBAAA,GAAI,IAAI,CAAC,CAAA;gBACnD,IAAMI,kBAAkB,GAAGC,qBAAqB,EAAE,CAAA;gBAClD,IAAMC,YAAY,GAAGH,GAAG,EAAiC,CAAA;gBAGzD,SAASI,mBAAmBA,GAAS;YACjC,MAAA,IAAMC,QAAQ,GAAG,IAAIC,6BAA6B,EAAE,CAAA;YACpDD,MAAAA,QAAQ,CAACjB,sBAAsB,GAAGL,KAAK,CAACK,sBAAsB,CAAA;YAC9DiB,MAAAA,QAAQ,CAACJ,kBAAkB,GAAGA,kBAAkB,CAACM,KAAK,CAAA;kBAEtDJ,YAAY,CAACI,KAAK,GAAGF,QAAQ,CAAA;YACjC,KAAA;YAEAD,IAAAA,mBAAmB,EAAE,CAAA;gBAMrBI,KAAK,CAAC,MAAM,CAACzB,KAAK,CAACK,sBAAsB,CAAC,EAAEgB,mBAAmB,CAAC,CAAA;gBAGhEI,KAAK,CAACP,kBAAkB,EAAE,MAAM;kBAC5B,IAAIE,YAAY,CAACI,KAAK,EAAE;YACpBJ,QAAAA,YAAY,CAACI,KAAK,CAACN,kBAAkB,GAAGA,kBAAkB,CAACM,KAAK,CAAA;YACpE,OAAA;YACJ,KAAC,CAAC,CAAA;gBAEFC,KAAK,CAACT,aAAa,EAAE,MAAM;YACvBD,MAAAA,IAAI,CAAC,mBAAmB,EAAEC,aAAa,CAACQ,KAAK,CAAC,CAAA;YAClD,KAAC,CAAC,CAAA;YAEFC,IAAAA,KAAK,CAAC,MAAMzB,KAAK,CAACC,UAAU,EAAE,MAAM;YAAA,MAAA,IAAAyB,kBAAA,CAAA;YAChCC,MAAAA,cAAc,CAACX,aAAa,EAAAU,CAAAA,kBAAA,GAAE1B,KAAK,CAACC,UAAU,MAAA,IAAA,IAAAyB,kBAAA,KAAA,KAAA,CAAA,GAAAA,kBAAA,GAAI,IAAI,CAAC,CAAA;YAC3D,KAAC,CAAC,CAAA;gBAIF,OAAO;kBACHV,aAAa;YACbI,MAAAA,YAAAA;iBACH,CAAA;eACJ;cACDQ,QAAQ,EAAA,yNAAA;YASZ,CAAC,EAAC;;;;;;;;"}