{"version":3,"file":"groupRolePicker.obs.js","sources":["../../../Framework/Controls/groupRolePicker.obs"],"sourcesContent":["<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <BaseAsyncPicker v-if=\"!groupTypeGuid\"\r\n                     v-model=\"internalTypeValue\"\r\n                     v-bind=\"standardProps\"\r\n                     :label=\"label\"\r\n                     :displayStyle=\"displayStyle\"\r\n                     :items=\"actualTypeItems\"\r\n                     showBlankItem\r\n                     :multiple=\"false\" />\r\n    <BaseAsyncPicker v-model=\"internalRoleValue\"\r\n                     v-bind=\"standardProps\"\r\n                     :label=\"roleLabel\"\r\n                     :displayStyle=\"displayStyle\"\r\n                     :items=\"actualRoleItems\"\r\n                     showBlankItem\r\n                     :multiple=\"false\" />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { standardAsyncPickerProps, updateRefValue, useStandardAsyncPickerProps } from \"@Obsidian/Utility/component\";\r\n    import { useHttp } from \"@Obsidian/Utility/http\";\r\n    import { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\n    import { PropType, computed, nextTick, ref, watch } from \"vue\";\r\n    import BaseAsyncPicker from \"./baseAsyncPicker\";\r\n    import { Guid } from \"@Obsidian/Types\";\r\n    import { GroupRolePickerGetGroupRolesOptionsBag } from \"@Obsidian/ViewModels/Rest/Controls/groupRolePickerGetGroupRolesOptionsBag\";\r\n    import { GroupRolePickerGetAllForGroupRoleOptionsBag } from \"@Obsidian/ViewModels/Rest/Controls/groupRolePickerGetAllForGroupRoleOptionsBag\";\r\n    import { GroupRolePickerGetAllForGroupRoleResultsBag } from \"@Obsidian/ViewModels/Rest/Controls/groupRolePickerGetAllForGroupRoleResultsBag\";\r\n\r\n    const props = defineProps({\r\n        modelValue: {\r\n            type: Object as PropType<ListItemBag | null>,\r\n            required: true\r\n        },\r\n\r\n        excludeGroupRoles: {\r\n            type: Array as PropType<Guid[]>\r\n        },\r\n\r\n        /** If you specify the group type, the group type picker will be hidden and we'll just show roles for this type */\r\n        groupTypeGuid: {\r\n            type: String as PropType<Guid>,\r\n            default: null\r\n        },\r\n\r\n        ...standardAsyncPickerProps\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"update:modelValue\", value: ListItemBag | ListItemBag[] | null): void\r\n    }>();\r\n\r\n    // #region Values\r\n\r\n    const standardProps = useStandardAsyncPickerProps(props);\r\n    const http = useHttp();\r\n\r\n    const internalTypeValue = ref<ListItemBag | null>(null);\r\n    const loadedTypeItems = ref<ListItemBag[] | null>(null);\r\n\r\n    const internalRoleValue = ref(props.modelValue);\r\n    const loadedRoleItems = ref<ListItemBag[] | null>(null);\r\n\r\n    // #endregion\r\n\r\n    // #region Computed\r\n\r\n    const groupTypeGuidValue = computed(() => {\r\n        return props.groupTypeGuid || internalTypeValue.value?.value || null;\r\n    });\r\n    const roleLabel = computed(() => {\r\n        // If group type is given, use the label prop\r\n        if (props.groupTypeGuid) {\r\n            return props.label;\r\n        }\r\n\r\n        // Otherwise we label it based off the selected group type if there is one\r\n        return internalTypeValue.value?.text ? internalTypeValue.value?.text + \" Role\" : \"Role\";\r\n    });\r\n\r\n    // #endregion\r\n\r\n    // #region Computed Values\r\n\r\n    /**\r\n     * The actual items to make available to the picker. This allows us to do any\r\n     * post-processing, such as adding additional items, and still be lazy loaded as well.\r\n     */\r\n    const actualTypeItems = computed((): ListItemBag[] | (() => Promise<ListItemBag[]>) => {\r\n        return loadedTypeItems.value || loadTypeOptions;\r\n    });\r\n\r\n    /**\r\n     * The actual items to make available to the picker. This allows us to do any\r\n     * post-processing, such as adding additional items, and still be lazy loaded as well.\r\n     */\r\n    const actualRoleItems = computed((): ListItemBag[] | (() => Promise<ListItemBag[]>) => {\r\n        return loadedRoleItems.value || loadRoleOptions;\r\n    });\r\n\r\n    // #endregion\r\n\r\n    // #region Functions\r\n\r\n    /**\r\n     * Loads the group type items from the server.\r\n     */\r\n    async function loadTypeOptions(): Promise<ListItemBag[]> {\r\n        const result = await http.post<ListItemBag[]>(\"/api/v2/Controls/GroupRolePickerGetGroupTypes\");\r\n\r\n        if (result.isSuccess && result.data) {\r\n            loadedTypeItems.value = result.data ?? null;\r\n\r\n            return loadedTypeItems.value ?? [];\r\n        }\r\n        else {\r\n            console.error(result.errorMessage ?? \"Unknown error while loading data.\");\r\n            loadedTypeItems.value = [];\r\n            return [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Loads the group role items from the server.\r\n     */\r\n    async function loadRoleOptions(): Promise<ListItemBag[]> {\r\n        if (!groupTypeGuidValue.value) {\r\n            return [];\r\n        }\r\n\r\n        const options: GroupRolePickerGetGroupRolesOptionsBag = {\r\n            groupTypeGuid: groupTypeGuidValue.value,\r\n            excludeGroupRoles: props.excludeGroupRoles\r\n        };\r\n\r\n        const result = await http.post<ListItemBag[]>(\"/api/v2/Controls/GroupRolePickerGetGroupRoles\", null, options);\r\n\r\n        if (result.isSuccess && result.data) {\r\n            loadedRoleItems.value = result.data ?? null;\r\n\r\n            return loadedRoleItems.value ?? [];\r\n        }\r\n        else {\r\n            console.error(result.errorMessage ?? \"Unknown error while loading data.\");\r\n            loadedRoleItems.value = [];\r\n            return [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets all the data needed to fill in the pickers when we're given a value to start\r\n     */\r\n    async function loadRoleOptionsFromValue(): Promise<void> {\r\n        const options: GroupRolePickerGetAllForGroupRoleOptionsBag = {\r\n            groupRoleGuid: props.modelValue?.value,\r\n            excludeGroupRoles: props.excludeGroupRoles\r\n        };\r\n\r\n        const result = await http.post<GroupRolePickerGetAllForGroupRoleResultsBag>(\"/api/v2/Controls/GroupRolePickerGetAllForGroupRole\", null, options);\r\n\r\n        if (result.isSuccess && result.data) {\r\n            loadedRoleItems.value = result.data.groupRoles ?? null;\r\n            internalTypeValue.value = result.data.selectedGroupType ?? null;\r\n\r\n            // Wait for watchers of the group type to fire so we don't undo the next line\r\n            await nextTick();\r\n\r\n            internalRoleValue.value = result.data.selectedGroupRole ?? null;\r\n        }\r\n        else {\r\n            console.error(result.errorMessage ?? \"Unknown error while loading data.\");\r\n            loadedRoleItems.value = [];\r\n        }\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Watchers\r\n\r\n    /** If the value is changed from the outside, fill in all the required data */\r\n    watch(() => props.modelValue, () => {\r\n        if (updateRefValue(internalRoleValue, props.modelValue)) {\r\n            loadRoleOptionsFromValue();\r\n        }\r\n    });\r\n\r\n    watch(internalRoleValue, () => emit(\"update:modelValue\", internalRoleValue.value));\r\n\r\n    /** Reload Roles if the type or excluded roles list change */\r\n    watch([groupTypeGuidValue, () => props.excludeGroupRoles], () => {\r\n        internalRoleValue.value = null;\r\n\r\n        loadedRoleItems.value = null;\r\n        loadRoleOptions();\r\n    });\r\n\r\n    // #endregion\r\n\r\n    // #region Initialization\r\n\r\n    if (props.modelValue) {\r\n        // Load the type and list of items based on the selected value\r\n        loadRoleOptionsFromValue();\r\n    }\r\n    else if (props.groupTypeGuid) {\r\n        loadRoleOptions();\r\n    }\r\n\r\n        // #endregion\r\n</script>\r\n"],"names":["standardProps","useStandardAsyncPickerProps","props","http","useHttp","internalTypeValue","ref","loadedTypeItems","internalRoleValue","modelValue","loadedRoleItems","groupTypeGuidValue","computed","_internalTypeValue$va","groupTypeGuid","value","roleLabel","_internalTypeValue$va2","_internalTypeValue$va3","label","text","actualTypeItems","loadTypeOptions","actualRoleItems","loadRoleOptions","_loadTypeOptions","apply","arguments","_asyncToGenerator","result","post","isSuccess","data","_result$data","_loadedTypeItems$valu","_result$errorMessage","console","error","errorMessage","_loadRoleOptions","options","excludeGroupRoles","_result$data2","_loadedRoleItems$valu","_result$errorMessage2","loadRoleOptionsFromValue","_loadRoleOptionsFromValue","_props$modelValue","groupRoleGuid","_result$data$groupRol","_result$data$selected","_result$data$selected2","groupRoles","selectedGroupType","nextTick","selectedGroupRole","_result$errorMessage3","watch","updateRefValue","emit"],"mappings":"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"}