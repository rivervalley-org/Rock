{"version":3,"file":"kpi.obs.js","sources":["../../../Framework/Controls/kpi.obs"],"sourcesContent":["<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <div ref=\"kpiElement\" :class=\"kpiClass\" :title=\"props.tooltip\">\r\n        <div v-if=\"iconCssClass\" class=\"kpi-icon\">\r\n            <img class=\"svg-placeholder\" src=\"data:image/svg+xml;utf8,&lt;svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1 1'&gt;&lt;/svg&gt;\" style=\"\">\r\n            <div class=\"kpi-content\">\r\n                <i :class=\"iconCssClass\"></i>\r\n            </div>\r\n        </div>\r\n        <div class=\"kpi-stat\">\r\n            <span class=\"kpi-value text-color\">{{ calculatedValue }}</span>\r\n            <span class=\"kpi-label\">{{ label }}</span>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n\r\n<script setup lang=\"ts\">\r\n    import { asFormattedString } from \"@Obsidian/Utility/numberUtils\";\r\n    import { tooltip } from \"@Obsidian/Utility/tooltip\";\r\n    import { computed, nextTick, PropType, ref, watch } from \"vue\";\r\n\r\n    const props = defineProps({\r\n        /**\r\n         * The value to display. If this is a number type then it will be\r\n         * formatted with group separators, such as \",\" in the US.\r\n         */\r\n        value: {\r\n            type: [String, Number] as PropType<string | number>,\r\n            required: false\r\n        },\r\n\r\n        /** The short text label that describes what the value represents. */\r\n        label: {\r\n            type: String as PropType<string>,\r\n            required: false\r\n        },\r\n\r\n        /** The tooltip to configure for the component that will be shown on hover. */\r\n        tooltip: {\r\n            type: String as PropType<string>,\r\n            required: false\r\n        },\r\n\r\n        /** The CSS class to use for the icon. */\r\n        iconCssClass: {\r\n            type: String as PropType<string>,\r\n            required: false\r\n        },\r\n\r\n        /** The base color to use for the text and border. */\r\n        color: {\r\n            type: String as PropType<\"blue\" | \"gray\" | \"green\" | \"indigo\" | \"orange\" | \"pink\" | \"purple\" | \"red\" | \"teal\" | \"yellow\">,\r\n            default: \"blue\"\r\n        },\r\n\r\n        /** The shade of the color to use for the text and border. */\r\n        colorShade: {\r\n            type: Number as PropType<100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900>,\r\n            default: 500\r\n        },\r\n\r\n        /** If true then a border will be drawn around the component. */\r\n        isCard: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        }\r\n    });\r\n\r\n    // #region Values\r\n\r\n    const kpiElement = ref<HTMLElement | null>(null);\r\n\r\n    // #endregion\r\n\r\n    // #region Computed Values\r\n\r\n    const kpiClass = computed((): string => {\r\n        const classes = [\"kpi\", \"has-icon-bg\"];\r\n\r\n        if (props.isCard) {\r\n            classes.push(\"kpi-card\");\r\n        }\r\n\r\n        classes.push(`text-${props.color}-${props.colorShade}`);\r\n\r\n        if (props.colorShade < 300) {\r\n            classes.push(`border-${props.color}-${props.colorShade}`);\r\n        }\r\n        else {\r\n            classes.push(`border-${props.color}-${props.colorShade - 200}`);\r\n        }\r\n\r\n        return classes.join(\" \");//text-blue-600 border-blue-400\r\n    });\r\n\r\n    const calculatedValue = computed((): string => {\r\n        if (typeof props.value === \"number\") {\r\n            return asFormattedString(props.value);\r\n        }\r\n        else if (typeof props.value === \"string\") {\r\n            return props.value;\r\n        }\r\n        else {\r\n            return \"\";\r\n        }\r\n    });\r\n\r\n    // #endregion\r\n\r\n    // #region Functions\r\n\r\n    // #endregion\r\n\r\n    // #region Event Handlers\r\n\r\n    // #endregion\r\n\r\n    watch([kpiElement], () => {\r\n        if (kpiElement.value) {\r\n            tooltip(kpiElement.value);\r\n        }\r\n    });\r\n\r\n    watch(() => props.tooltip, () => {\r\n        // Next tick because at this moment the element hasn't been updated yet.\r\n        nextTick(() => {\r\n            if (kpiElement.value) {\r\n                tooltip(kpiElement.value);\r\n            }\r\n        });\r\n    });\r\n</script>\r\n"],"names":["kpiElement","ref","kpiClass","computed","classes","props","isCard","push","concat","color","colorShade","join","calculatedValue","value","asFormattedString","watch","tooltip","nextTick"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA0EI,IAAA,IAAMA,UAAU,GAAGC,GAAG,CAAqB,IAAI,CAAC,CAAA;MAMhD,IAAA,IAAMC,QAAQ,GAAGC,QAAQ,CAAC,MAAc;MACpC,MAAA,IAAMC,OAAO,GAAG,CAAC,KAAK,EAAE,aAAa,CAAC,CAAA;YAEtC,IAAIC,KAAK,CAACC,MAAM,EAAE;MACdF,QAAAA,OAAO,CAACG,IAAI,CAAC,UAAU,CAAC,CAAA;MAC5B,OAAA;MAEAH,MAAAA,OAAO,CAACG,IAAI,CAAAC,OAAAA,CAAAA,MAAA,CAASH,KAAK,CAACI,KAAK,EAAA,GAAA,CAAA,CAAAD,MAAA,CAAIH,KAAK,CAACK,UAAU,CAAG,CAAA,CAAA;MAEvD,MAAA,IAAIL,KAAK,CAACK,UAAU,GAAG,GAAG,EAAE;MACxBN,QAAAA,OAAO,CAACG,IAAI,CAAAC,SAAAA,CAAAA,MAAA,CAAWH,KAAK,CAACI,KAAK,EAAA,GAAA,CAAA,CAAAD,MAAA,CAAIH,KAAK,CAACK,UAAU,CAAG,CAAA,CAAA;MAC7D,OAAC,MACI;MACDN,QAAAA,OAAO,CAACG,IAAI,CAAA,SAAA,CAAAC,MAAA,CAAWH,KAAK,CAACI,KAAK,EAAAD,GAAAA,CAAAA,CAAAA,MAAA,CAAIH,KAAK,CAACK,UAAU,GAAG,GAAG,CAAG,CAAA,CAAA;MACnE,OAAA;MAEA,MAAA,OAAON,OAAO,CAACO,IAAI,CAAC,GAAG,CAAC,CAAA;MAC5B,KAAC,CAAC,CAAA;MAEF,IAAA,IAAMC,eAAe,GAAGT,QAAQ,CAAC,MAAc;MAC3C,MAAA,IAAI,OAAOE,KAAK,CAACQ,KAAK,KAAK,QAAQ,EAAE;MACjC,QAAA,OAAOC,iBAAiB,CAACT,KAAK,CAACQ,KAAK,CAAC,CAAA;aACxC,MACI,IAAI,OAAOR,KAAK,CAACQ,KAAK,KAAK,QAAQ,EAAE;cACtC,OAAOR,KAAK,CAACQ,KAAK,CAAA;MACtB,OAAC,MACI;MACD,QAAA,OAAO,EAAE,CAAA;MACb,OAAA;MACJ,KAAC,CAAC,CAAA;MAYFE,IAAAA,KAAK,CAAC,CAACf,UAAU,CAAC,EAAE,MAAM;YACtB,IAAIA,UAAU,CAACa,KAAK,EAAE;MAClBG,QAAAA,OAAO,CAAChB,UAAU,CAACa,KAAK,CAAC,CAAA;MAC7B,OAAA;MACJ,KAAC,CAAC,CAAA;MAEFE,IAAAA,KAAK,CAAC,MAAMV,KAAK,CAACW,OAAO,EAAE,MAAM;MAE7BC,MAAAA,QAAQ,CAAC,MAAM;cACX,IAAIjB,UAAU,CAACa,KAAK,EAAE;MAClBG,UAAAA,OAAO,CAAChB,UAAU,CAACa,KAAK,CAAC,CAAA;MAC7B,SAAA;MACJ,OAAC,CAAC,CAAA;MACN,KAAC,CAAC,CAAA;;;;;;;;;;;;;;;;;;;;;;"}