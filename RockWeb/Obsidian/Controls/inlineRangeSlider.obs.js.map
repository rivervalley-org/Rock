{"version":3,"file":"inlineRangeSlider.obs.js","sources":["../../../Framework/Controls/inlineRangeSlider.obs"],"sourcesContent":["<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <div style=\"margin-left: calc(var(--slider-handle-height) / 2); margin-right: calc(var(--slider-handle-height) / 2);\">\r\n        <div v-if=\"showValueBar\" class=\"d-flex align-items-center position-relative justify-content-between mb-1\">\r\n            <span v-if=\"showMinValue\" class=\"text-muted\">{{ min }}</span>\r\n            <span></span>\r\n            <span v-if=\"showMaxValue\" class=\"text-muted\">{{ max }}</span>\r\n\r\n            <span class=\"position-absolute top-0\" :style=\"thumbStyle\">\r\n                <span class=\"d-block position-absolute\" style=\"background: var(--slider-progress-bg); border-radius: 3px; padding: 1px 5px; color: #fff; font-size: 14px; transform: translateX(-50%);\">\r\n                    {{ internalValue }}\r\n                </span>\r\n            </span>\r\n        </div>\r\n\r\n        <div ref=\"sliderElement\" class=\"d-flex\" style=\"height: var(--slider-handle-height); align-items: center; position: relative;\" @mousedown=\"onMouseDown\" @touchdown=\"onTouchDown\">\r\n            <span class=\"flex-grow-1\" :style=\"leftSliderStyle\" style=\"background-color: var(--slider-progress-bg); height: var(--slider-height); border-top-left-radius: calc(var(--slider-height) / 2); border-bottom-left-radius: calc(var(--slider-height) / 2);\"></span>\r\n            <span class=\"flex-grow-1\" :style=\"rightSliderStyle\" style=\"background-color: var(--slider-bg); height: var(--slider-height); border-top-right-radius: calc(var(--slider-height) / 2); border-bottom-right-radius: calc(var(--slider-height) / 2);\"></span>\r\n\r\n            <span :style=\"thumbStyle\" style=\"position: absolute; width: var(--slider-handle-height); height: var(--slider-handle-height); margin-left: calc(0px - calc(var(--slider-handle-height) / 2)); cursor: pointer; background: var(--slider-handle-bg); border: 1px solid var(--slider-handle-border-color); border-radius: var(--slider-handle-height);\" @mousedown=\"onMouseDown\" @mouseup=\"onMouseUp\"></span>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, ref, watch } from \"vue\";\r\n    import { useVModelPassthrough } from \"@Obsidian/Utility/component\";\r\n\r\n    const props = defineProps({\r\n        modelValue: {\r\n            type: Number,\r\n            default: 0\r\n        },\r\n\r\n        step: {\r\n            type: Number,\r\n            default: 1\r\n        },\r\n\r\n        min: {\r\n            type: Number,\r\n            default: 0\r\n        },\r\n\r\n        max: {\r\n            type: Number,\r\n            default: 100\r\n        },\r\n\r\n        showValueBar: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"update:modelValue\", v: number): void\r\n    }>();\r\n\r\n    /** Contains our current value reflected in the UI. */\r\n    const internalValue = useVModelPassthrough(props, \"modelValue\", emit);\r\n\r\n    /** The slider track HTML Element in the DOM. */\r\n    const sliderElement = ref<HTMLElement | null>(null);\r\n\r\n    /** The computed styles for the thumb knob. */\r\n    const thumbStyle = computed((): Record<string, string> => {\r\n        return {\r\n            left: `${percentValue.value * 100}%`\r\n        };\r\n    });\r\n\r\n    /** Ensure the max is at least as large as the min */\r\n    const max = computed((): number => {\r\n        return Math.max(props.min, props.max);\r\n    });\r\n\r\n    /** The percentage representation of the value, between 0 and 1. */\r\n    const percentValue = computed((): number => {\r\n        if (props.min < max.value) {\r\n            return (internalValue.value - props.min) / (max.value - props.min);\r\n        }\r\n\r\n        return 0;\r\n    });\r\n\r\n    /** The computed styles for the left slider track. */\r\n    const leftSliderStyle = computed((): Record<string, string> => {\r\n        const value = Math.round(percentValue.value * 10000);\r\n\r\n        return {\r\n            flexBasis: `${value / 100}%`\r\n        };\r\n    });\r\n\r\n    /** The computed styles for the right slider track. */\r\n    const rightSliderStyle = computed((): Record<string, string> => {\r\n        const value = Math.round(percentValue.value * 10000);\r\n\r\n        return {\r\n            flexBasis: `${100 - (value / 100)}%`\r\n        };\r\n    });\r\n\r\n    /** True if the minimum value should be shown in the value bar. */\r\n    const showMinValue = computed((): boolean => percentValue.value >= 0.1);\r\n\r\n    /** True if the maximum value should be shown in the value bar. */\r\n    const showMaxValue = computed((): boolean => percentValue.value <= 0.9);\r\n\r\n    /** When the value prop or the constraining props change, constrain the current value */\r\n    watch(() => [props.modelValue, props.max, props.min, props.step], constrainInternalValueAndUpdate);\r\n\r\n    /**\r\n     * Constrains the value to ensure it is valid for our configuration.\r\n     *\r\n     * @param value The value to be constrained.\r\n     *\r\n     * @returns The value after any constraints have been applied.\r\n     */\r\n    function constrainValue(value: number): number {\r\n        if (props.step != 0) {\r\n            value = Math.round(value / props.step) * props.step;\r\n\r\n            // If the step has a decimal in it, we need to round to the same number of decimal places\r\n            // in order to account for JS's bad decimal math\r\n            const decimalPlaces = (\"\" + props.step).split(\".\")[1]?.length ?? 0;\r\n            if (decimalPlaces > 0) {\r\n                value = Math.round(Math.pow(10, decimalPlaces) * value) / Math.pow(10, decimalPlaces);\r\n            }\r\n        }\r\n\r\n        if (value < props.min) {\r\n            value = props.min;\r\n        }\r\n        else if (value > max.value) {\r\n            value = max.value;\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * Constrains the internalValue property and if it needs to change then\r\n     * it is updated automatically.\r\n     */\r\n    function constrainInternalValueAndUpdate(): void {\r\n        const value = constrainValue(internalValue.value);\r\n\r\n        if (value !== internalValue.value) {\r\n            internalValue.value = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calculates the new value from the drag position in the DOM.\r\n     *\r\n     * @param clientX The position of the event in the DOM.\r\n     */\r\n    function calculateDragValue(clientX: number): void {\r\n        if (sliderElement.value) {\r\n            const rect = sliderElement.value.getBoundingClientRect();\r\n            const xPosition = clientX - rect.left;\r\n            const xConstrained = Math.min(Math.max(xPosition, 0), rect.width);\r\n            const percent = xConstrained / rect.width;\r\n            const valueRange = max.value - props.min;\r\n\r\n            const value = constrainValue((valueRange * percent) + props.min);\r\n\r\n            if (value !== internalValue.value) {\r\n                internalValue.value = value;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Event handler for when a mouse button is pressed down.\r\n     *\r\n     * @param ev The event that was triggered.\r\n     */\r\n    function onMouseDown(ev: MouseEvent): void {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n\r\n        if (ev.button === 0) {\r\n            calculateDragValue(ev.clientX);\r\n            window.addEventListener(\"mousemove\", onMouseMove);\r\n            window.addEventListener(\"mouseup\", onMouseUp);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Event handler for when a finger has touched the display.\r\n     *\r\n     * @param ev The event that was triggered.\r\n     */\r\n    function onTouchDown(ev: TouchEvent): void {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n\r\n        if (ev.touches.length === 1) {\r\n            calculateDragValue(ev.touches[0].clientX);\r\n            window.addEventListener(\"touchmove\", onTouchMove);\r\n            window.addEventListener(\"touchup\", onTouchUp);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Event handler for when the mouse has moved while we are tracking\r\n     * the position.\r\n     *\r\n     * @param ev The event that was triggered.\r\n     */\r\n    function onMouseMove(ev: MouseEvent): void {\r\n        calculateDragValue(ev.clientX);\r\n    }\r\n\r\n    /**\r\n     * Event handler for when as mouse button has been released while we\r\n     * are tracking the position.\r\n     */\r\n    function onMouseUp(): void {\r\n        window.removeEventListener(\"mousemove\", onMouseMove);\r\n        window.removeEventListener(\"mouseup\", onMouseUp);\r\n    }\r\n\r\n    /**\r\n     * Event handler for when a touch has moved while we are tracking the\r\n     * position.\r\n     *\r\n     * @param ev The event that was triggered.\r\n     */\r\n    function onTouchMove(ev: TouchEvent): void {\r\n        calculateDragValue(ev.touches[0].clientX);\r\n    }\r\n\r\n    /**\r\n     * Event handler for when a touch has been lifted off the display while\r\n     * we are tracking the position.\r\n     */\r\n    function onTouchUp(): void {\r\n        window.removeEventListener(\"touchmove\", onTouchMove);\r\n        window.removeEventListener(\"touchup\", onTouchUp);\r\n    }\r\n\r\n    // Force the internal value to be constrained and update if necessary.\r\n    constrainInternalValueAndUpdate();\r\n</script>\r\n"],"names":["internalValue","useVModelPassthrough","props","emit","sliderElement","ref","thumbStyle","computed","left","concat","percentValue","value","max","Math","min","leftSliderStyle","round","flexBasis","rightSliderStyle","showMinValue","showMaxValue","watch","modelValue","step","constrainInternalValueAndUpdate","constrainValue","_split$1$length","_split$","decimalPlaces","split","length","pow","calculateDragValue","clientX","rect","getBoundingClientRect","xPosition","xConstrained","width","percent","valueRange","onMouseDown","ev","preventDefault","stopPropagation","button","window","addEventListener","onMouseMove","onMouseUp","onTouchDown","touches","onTouchMove","onTouchUp","removeEventListener"],"mappings":"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"}