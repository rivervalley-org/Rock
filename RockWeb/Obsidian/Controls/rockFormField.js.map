{"version":3,"file":"rockFormField.js","sources":["../../../Framework/Controls/rockFormField.ts"],"sourcesContent":["ï»¿// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { standardRockFormFieldProps } from \"@Obsidian/Utility/component\";\r\nimport { useFormState } from \"@Obsidian/Utility/form\";\r\nimport { newGuid } from \"@Obsidian/Utility/guid\";\r\nimport { normalizeRules, validateValue } from \"@Obsidian/ValidationRules\";\r\nimport { computed, defineComponent, onBeforeUnmount, PropType, ref, watch } from \"vue\";\r\nimport RockLabel from \"./rockLabel\";\r\n\r\nexport default defineComponent({\r\n    name: \"RockFormField\",\r\n\r\n    inheritAttrs: false,\r\n\r\n    components: {\r\n        RockLabel\r\n    },\r\n\r\n    compilerOptions: {\r\n        whitespace: \"preserve\"\r\n    },\r\n\r\n    props: {\r\n        modelValue: {\r\n            required: true\r\n        },\r\n\r\n        name: {\r\n            type: String as PropType<string>,\r\n            required: true\r\n        },\r\n\r\n        ...standardRockFormFieldProps\r\n    },\r\n\r\n    setup(props) {\r\n        /** The reactive state of the form. */\r\n        const formState = useFormState();\r\n\r\n        /** The unique identifier used to identify this form field. */\r\n        const uniqueId = `rock-${props.name}-${newGuid()}`;\r\n\r\n        /** The internal value being tracked for the field. */\r\n        const internalValue = ref<unknown>(\"\");\r\n\r\n        /** The internal rules we will be used for calculations. */\r\n        const internalRules = computed(() => normalizeRules(props.rules));\r\n\r\n        /** Determines if this field is marked as required. */\r\n        const isRequired = computed((): boolean => internalRules.value.includes(\"required\"));\r\n\r\n        /** Holds the current error message for this form field. */\r\n        const currentError = ref(\"\");\r\n\r\n        /** Any error classes to be applied to the field depending on the current state. */\r\n        const errorClasses = computed((): string[] => {\r\n            if (!formState || formState.submitCount < 1) {\r\n                return [];\r\n            }\r\n\r\n            return currentError.value !== \"\" ? [\"has-error\"] : [];\r\n        });\r\n\r\n        /** The text label to display to the user which identifies this field. */\r\n        const fieldLabel = computed((): string => {\r\n            return props.validationTitle || props.label;\r\n        });\r\n\r\n        // Watch for changes to the modelValue and update our internalValue.\r\n        watch(() => [props.modelValue, props.rules], () => {\r\n            internalValue.value = props.modelValue;\r\n\r\n            const errors = validateValue(internalValue.value, props.rules);\r\n\r\n            if (errors.length > 0) {\r\n                currentError.value = errors[0];\r\n                formState?.setError(uniqueId, fieldLabel.value, currentError.value);\r\n            }\r\n            else {\r\n                currentError.value = \"\";\r\n                formState?.setError(uniqueId, fieldLabel.value, \"\");\r\n            }\r\n        }, {\r\n            immediate: true\r\n        });\r\n\r\n        // If we are removed from the DOM completely, clear the error before we go.\r\n        onBeforeUnmount(() => {\r\n            currentError.value = \"\";\r\n            formState?.setError(uniqueId, fieldLabel.value, \"\");\r\n        });\r\n\r\n        return {\r\n            errorClasses,\r\n            fieldLabel,\r\n            formState,\r\n            isRequired,\r\n            uniqueId,\r\n        };\r\n    },\r\n\r\n    template: `\r\n<slot name=\"pre\" />\r\n<div v-if=\"label || help\" class=\"form-group\" :class=\"[classAttr, formGroupClasses, isRequired && !isRequiredIndicatorHidden ? 'required' : '', errorClasses]\">\r\n    <RockLabel :for=\"uniqueId\" :help=\"help\">\r\n        {{label}} <slot name=\"besideLabel\" />\r\n    </RockLabel>\r\n    <slot v-bind=\"{field: $attrs, uniqueId, errors, fieldLabel}\" />\r\n</div>\r\n<slot v-else v-bind=\"{field: $attrs, uniqueId, errors, fieldLabel}\" />\r\n<slot name=\"post\" />\r\n`\r\n});\r\n"],"names":["defineComponent","name","inheritAttrs","components","RockLabel","compilerOptions","whitespace","props","_objectSpread","modelValue","required","type","String","standardRockFormFieldProps","setup","formState","useFormState","uniqueId","concat","newGuid","internalValue","ref","internalRules","computed","normalizeRules","rules","isRequired","value","includes","currentError","errorClasses","submitCount","fieldLabel","validationTitle","label","watch","errors","validateValue","length","setError","immediate","onBeforeUnmount","template"],"mappings":"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"}