{"version":3,"file":"intervalPicker.obs.js","sources":["../../../Framework/Controls/intervalPicker.obs"],"sourcesContent":["<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <RockFormField v-bind=\"standardFieldProps\" name=\"maxAge\" :modelValue=\"internalValue\">\r\n        <div class=\"form-group range-slider\">\r\n            <RangeSlider v-model=\"value\" :max=\"maxValue\" showValueBar :step=\"1\" />\r\n        </div>\r\n        <div class=\"text-right margin-b-md\">\r\n            <ButtonGroup v-model=\"unit\" :items=\"options\" :btnSize=\"BtnSize.ExtraSmall\" :unselectedBtnType=\"unselectedBtnType\" :selectedBtnType=\"selectedBtnType\" />\r\n        </div>\r\n    </RockFormField>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { PropType, computed, watch } from \"vue\";\r\n    import RockFormField from \"@Obsidian/Controls/rockFormField\";\r\n    import RangeSlider from \"@Obsidian/Controls/rangeSlider.obs\";\r\n    import ButtonGroup from \"@Obsidian/Controls/buttonGroup.obs\";\r\n    import { toNumber } from \"@Obsidian/Utility/numberUtils\";\r\n    import { TimeInterval } from \"@Obsidian/ViewModels/Utility/timeInterval\";\r\n    import { TimeIntervalUnit } from \"@Obsidian/Enums/Core/timeIntervalUnit\";\r\n    import { BtnType } from \"@Obsidian/Enums/Controls/btnType\";\r\n    import { BtnSize } from \"@Obsidian/Enums/Controls/btnSize\";\r\n    import { standardRockFormFieldProps, useStandardRockFormFieldProps } from \"@Obsidian/Utility/component\";\r\n    import { LiteralUnion } from \"@Obsidian/Types/Utility/support\";\r\n\r\n    const props = defineProps({\r\n        modelValue: {\r\n            type: Object as PropType<TimeInterval | null>,\r\n            required: true\r\n        },\r\n\r\n        unselectedBtnType: {\r\n            type: String as PropType<LiteralUnion<BtnType>>,\r\n            default: BtnType.Default\r\n        },\r\n\r\n        selectedBtnType: {\r\n            type: String as PropType<LiteralUnion<BtnType>>,\r\n            default: BtnType.Primary\r\n        },\r\n\r\n        ...standardRockFormFieldProps\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"update:modelValue\", _value: TimeInterval): void\r\n    }>();\r\n\r\n    function defaultValue(): TimeInterval {\r\n        return { unit: TimeIntervalUnit.Minutes, value: 1 };\r\n    }\r\n\r\n    const internalValue = computed<TimeInterval>({\r\n        get() {\r\n            return props.modelValue ?? defaultValue();\r\n        },\r\n        set(newValue) {\r\n            emit(\"update:modelValue\", newValue);\r\n        }\r\n    });\r\n\r\n    if (props.modelValue == null) {\r\n        internalValue.value = defaultValue();\r\n    }\r\n\r\n    const value = computed<NonNullable<TimeInterval[\"value\"]>>({\r\n        get() {\r\n            return internalValue.value.value ?? 1;\r\n        },\r\n        set(newValue) {\r\n            internalValue.value = {\r\n                unit: internalValue.value.unit,\r\n                value: newValue ?? 1\r\n            };\r\n        }\r\n    });\r\n\r\n    const unit = computed<`${TimeInterval[\"unit\"]}`>({\r\n        get() {\r\n            return `${internalValue.value.unit ?? TimeIntervalUnit.Minutes}`;\r\n        },\r\n        set(newValue) {\r\n            internalValue.value = {\r\n                unit: toNumber(newValue) as TimeIntervalUnit,\r\n                value: internalValue.value.value\r\n            };\r\n        }\r\n    });\r\n\r\n    const options = [\r\n        { text: \"Mins\", value: TimeIntervalUnit.Minutes.toString() },\r\n        { text: \"Hours\", value: TimeIntervalUnit.Hours.toString() },\r\n        { text: \"Days\", value: TimeIntervalUnit.Days.toString() },\r\n    ];\r\n\r\n    const maxValue = computed(() => {\r\n        if (unit.value == TimeIntervalUnit.Minutes.toString()) {\r\n            return 59;\r\n        }\r\n        if (unit.value == TimeIntervalUnit.Hours.toString()) {\r\n            return 23;\r\n        }\r\n\r\n        return 31;\r\n    });\r\n\r\n    watch(maxValue, () => {\r\n        if (value.value > maxValue.value) {\r\n            value.value = maxValue.value;\r\n        }\r\n    });\r\n\r\n    const standardFieldProps = useStandardRockFormFieldProps(props);\r\n</script>\r\n"],"names":["defaultValue","unit","TimeIntervalUnit","Minutes","value","internalValue","computed","get","_props$modelValue","props","modelValue","set","newValue","emit","_internalValue$value$","_internalValue$value$2","concat","toNumber","options","text","toString","Hours","Days","maxValue","watch","standardFieldProps","useStandardRockFormFieldProps"],"mappings":"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"}