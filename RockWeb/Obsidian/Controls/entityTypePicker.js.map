{"version":3,"file":"entityTypePicker.js","sources":["../../../Framework/Controls/entityTypePicker.ts"],"sourcesContent":["// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\nimport { standardAsyncPickerProps, useStandardAsyncPickerProps, useVModelPassthrough } from \"@Obsidian/Utility/component\";\r\nimport { emptyGuid } from \"@Obsidian/Utility/guid\";\r\nimport { useHttp } from \"@Obsidian/Utility/http\";\r\nimport { EntityTypePickerGetEntityTypesOptionsBag } from \"@Obsidian/ViewModels/Rest/Controls/entityTypePickerGetEntityTypesOptionsBag\";\r\nimport { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\nimport { computed, defineComponent, PropType, ref } from \"vue\";\r\nimport BaseAsyncPicker from \"./baseAsyncPicker\";\r\n\r\nexport default defineComponent({\r\n    name: \"EntityTypePicker\",\r\n\r\n    components: {\r\n        BaseAsyncPicker\r\n    },\r\n\r\n    props: {\r\n        modelValue: {\r\n            type: Object as PropType<ListItemBag | ListItemBag[] | null>,\r\n            required: false\r\n        },\r\n\r\n        includeGlobalOption: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        },\r\n\r\n        ...standardAsyncPickerProps\r\n    },\r\n\r\n    emits: {\r\n        \"update:modelValue\": (_value: ListItemBag | ListItemBag[] | null) => true\r\n    },\r\n\r\n    setup(props, { emit }) {\r\n        // #region Values\r\n\r\n        const internalValue = useVModelPassthrough(props, \"modelValue\", emit);\r\n        const standardProps = useStandardAsyncPickerProps(props);\r\n        const http = useHttp();\r\n        const loadedItems = ref<ListItemBag[] | null>(null);\r\n\r\n        // #endregion\r\n\r\n        // #region Computed Values\r\n\r\n        /**\r\n         * The actual items to make available to the picker. This allows us to do any\r\n         * post-processing, such as adding additional items, and still be lazy loaded as well.\r\n         */\r\n        const actualItems = computed((): ListItemBag[] | (() => Promise<ListItemBag[]>) => {\r\n            return loadedItems.value ? postProcessItems(loadedItems.value) : loadOptions;\r\n        });\r\n\r\n        // #endregion\r\n\r\n        // #region Functions\r\n\r\n        /**\r\n         * Perform additional processing on the items based on our property\r\n         * settings.\r\n         *\r\n         * @param items The items to be processed.\r\n         *\r\n         * @returns A new array of items that have been processed.\r\n         */\r\n        const postProcessItems = (items: ListItemBag[]): ListItemBag[] => {\r\n            const processedItems = [...items];\r\n\r\n            if (props.includeGlobalOption) {\r\n                processedItems.splice(0, 0, {\r\n                    value: emptyGuid,\r\n                    text: \"None (Global Attributes)\"\r\n                });\r\n            }\r\n\r\n            return processedItems;\r\n        };\r\n\r\n        /**\r\n         * Loads the items from the server.\r\n         */\r\n        const loadOptions = async (): Promise<ListItemBag[]> => {\r\n            const options: Partial<EntityTypePickerGetEntityTypesOptionsBag> = {\r\n            };\r\n            const result = await http.post<ListItemBag[]>(\"/api/v2/Controls/EntityTypePickerGetEntityTypes\", undefined, options);\r\n\r\n            if (result.isSuccess && result.data) {\r\n                loadedItems.value = result.data;\r\n                return postProcessItems(result.data);\r\n            }\r\n            else {\r\n                console.error(result.errorMessage ?? \"Unknown error while loading data.\");\r\n                loadedItems.value = [];\r\n                return [];\r\n            }\r\n        };\r\n\r\n        // #endregion\r\n\r\n        return {\r\n            actualItems,\r\n            internalValue,\r\n            standardProps\r\n        };\r\n    },\r\n\r\n    template: `\r\n<BaseAsyncPicker v-model=\"internalValue\"\r\n    v-bind=\"standardProps\"\r\n    grouped\r\n    :items=\"actualItems\" />\r\n`\r\n});\r\n"],"names":["defineComponent","name","components","BaseAsyncPicker","props","_objectSpread","modelValue","type","Object","required","includeGlobalOption","Boolean","default","standardAsyncPickerProps","emits","_value","setup","_ref","emit","internalValue","useVModelPassthrough","standardProps","useStandardAsyncPickerProps","http","useHttp","loadedItems","ref","actualItems","computed","value","postProcessItems","loadOptions","items","processedItems","splice","emptyGuid","text","_ref2","_asyncToGenerator","options","result","post","undefined","isSuccess","data","_result$errorMessage","console","error","errorMessage","apply","arguments","template"],"mappings":"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"}