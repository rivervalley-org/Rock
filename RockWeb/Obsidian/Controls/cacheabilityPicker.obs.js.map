{"version":3,"file":"cacheabilityPicker.obs.js","sources":["../../../Framework/Controls/cacheabilityPicker.obs"],"sourcesContent":["<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <RadioButtonList v-model=\"cacheType\" :items=\"cacheTypeOptions\" horizontal label=\"Cacheability Type\" help=\"This determines how the item will be treated in cache.<br /><br>Public - This item can be cached on the browser or any other shared network cache like a CDN.<br /><br>Private - This item can only be cached in the browser.<br /><br>No-Cache - The item will be checked on every load, but if it is deemed to not have changed since the last load it will use a local copy.<br /><br>No-Store - This item will never be stored by the local browser.This is used for sensitive files like check images.\" />\r\n\r\n    <div class=\"row\" v-if=\"shouldAskForMaxAge || shouldAskForSharedMaxAge\">\r\n        <TimeIntervalPicker v-if=\"shouldAskForMaxAge\" formGroupClasses=\"col-md-6\" v-model=\"maxAge\" label=\"Max Age\" help=\"The maximum amount of time that the item will be cached.\" />\r\n        <TimeIntervalPicker v-if=\"shouldAskForSharedMaxAge\" formGroupClasses=\"col-md-6\" v-model=\"sharedMaxAge\" label=\"Max Age\" help=\"The maximum amount of time the item will be cached in a shared cache (e.g. CDN). If not provided then the Max Age is typically used.\" />\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { PropType, computed } from \"vue\";\r\n    import RadioButtonList from \"@Obsidian/Controls/radioButtonList\";\r\n    import TimeIntervalPicker from \"./timeIntervalPicker.obs\";\r\n    import { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\n    import { toNumber } from \"@Obsidian/Utility/numberUtils\";\r\n    import { RockCacheabilityType } from \"@Obsidian/Enums/Controls/rockCacheabilityType\";\r\n    import { RockCacheability } from \"@Obsidian/ViewModels/Controls/rockCacheability\";\r\n    import { TimeInterval } from \"@Obsidian/ViewModels/Utility/timeInterval\";\r\n    import { TimeIntervalUnit } from \"@Obsidian/Enums/Core/timeIntervalUnit\";\r\n\r\n    const props = defineProps({\r\n        modelValue: {\r\n            type: Object as PropType<RockCacheability | null>,\r\n            required: true\r\n        }\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"update:modelValue\", _value: RockCacheability | null): void\r\n    }>();\r\n\r\n    function defaultValue(): RockCacheability {\r\n        return {\r\n            rockCacheabilityType: 0,\r\n            maxAge: { unit: TimeIntervalUnit.Minutes, value: null },\r\n            sharedMaxAge: { unit: TimeIntervalUnit.Minutes, value: null }\r\n        };\r\n    }\r\n\r\n    const internalValue = computed<RockCacheability>({\r\n        get() {\r\n            // Don't ever use null here because we want to ensure (sub)properties exist\r\n            return props.modelValue ?? defaultValue();\r\n        },\r\n        set(newValue) {\r\n            emit(\"update:modelValue\", newValue);\r\n        }\r\n    });\r\n\r\n    const cacheTypeOptions: ListItemBag[] = [\r\n        { text: \"Public\", value: RockCacheabilityType.Public.toString() },\r\n        { text: \"Private\", value: RockCacheabilityType.Private.toString() },\r\n        { text: \"No-Cache\", value: RockCacheabilityType.NoCache.toString() },\r\n        { text: \"No-Store\", value: RockCacheabilityType.NoStore.toString() },\r\n    ];\r\n\r\n    const cacheType = computed<string>({\r\n        get() {\r\n            return internalValue.value.rockCacheabilityType.toString();\r\n        },\r\n        set(newValue) {\r\n            internalValue.value = {\r\n                rockCacheabilityType: toNumber(newValue),\r\n                maxAge: internalValue.value.maxAge,\r\n                sharedMaxAge: internalValue.value.sharedMaxAge\r\n            };\r\n        }\r\n    });\r\n\r\n    const maxAge = computed<TimeInterval>({\r\n        get() {\r\n            return internalValue.value.maxAge;\r\n        },\r\n        set(newValue) {\r\n            internalValue.value = {\r\n                rockCacheabilityType: internalValue.value.rockCacheabilityType,\r\n                maxAge: newValue,\r\n                sharedMaxAge: internalValue.value.sharedMaxAge\r\n            };\r\n        }\r\n    });\r\n\r\n    const sharedMaxAge = computed<TimeInterval>({\r\n        get() {\r\n            return internalValue.value.sharedMaxAge;\r\n        },\r\n        set(newValue) {\r\n            internalValue.value = {\r\n                rockCacheabilityType: internalValue.value.rockCacheabilityType,\r\n                maxAge: internalValue.value.maxAge,\r\n                sharedMaxAge: newValue\r\n            };\r\n        }\r\n    });\r\n\r\n    const shouldAskForMaxAge = computed<boolean>(() => {\r\n        const cacheType = internalValue.value.rockCacheabilityType;\r\n        return cacheType == RockCacheabilityType.Public || cacheType == RockCacheabilityType.Private;\r\n    });\r\n\r\n    const shouldAskForSharedMaxAge = computed<boolean>(() => internalValue.value.rockCacheabilityType == RockCacheabilityType.Public);\r\n</script>\r\n"],"names":["defaultValue","rockCacheabilityType","maxAge","unit","TimeIntervalUnit","Minutes","value","sharedMaxAge","internalValue","computed","get","_props$modelValue","props","modelValue","set","newValue","emit","cacheTypeOptions","text","RockCacheabilityType","Public","toString","Private","NoCache","NoStore","cacheType","toNumber","shouldAskForMaxAge","shouldAskForSharedMaxAge"],"mappings":"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"}