{"version":3,"file":"workflowActionTypePicker.obs.js","sources":["../../../Framework/Controls/workflowActionTypePicker.obs"],"sourcesContent":["<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <TreeItemPicker v-model=\"internalValue\"\r\n                    formGroupClasses=\"workflow-action-type-picker\"\r\n                    iconCssClass=\"fa fa-folder\"\r\n                    :provider=\"itemProvider\"\r\n                    disableFolderSelection />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { useSecurityGrantToken } from \"@Obsidian/Utility/block\";\r\n    import { updateRefValue } from \"@Obsidian/Utility/component\";\r\n    import { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\n    import { PropType, ref, watch } from \"vue\";\r\n    import { WorkflowActionTypeTreeItemProvider } from \"@Obsidian/Utility/treeItemProviders\";\r\n    import TreeItemPicker from \"./treeItemPicker.obs\";\r\n\r\n    const props = defineProps({\r\n        modelValue: {\r\n            type: Object as PropType<ListItemBag | ListItemBag[] | null>,\r\n            required: false\r\n        },\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"update:modelValue\", _value: ListItemBag | ListItemBag[] | null): void\r\n    }>();\r\n\r\n    // #region Values\r\n\r\n    const internalValue = ref(props.modelValue ?? null);\r\n    const includeInactive = ref(false);\r\n    const securityGrantToken = useSecurityGrantToken();\r\n    const itemProvider = ref<WorkflowActionTypeTreeItemProvider>();\r\n\r\n    // Configure the item provider with our settings.\r\n    function refreshItemProvider(): void {\r\n        const provider = new WorkflowActionTypeTreeItemProvider();\r\n        provider.includeInactive = includeInactive.value;\r\n        provider.securityGrantToken = securityGrantToken.value;\r\n\r\n        itemProvider.value = provider;\r\n    }\r\n\r\n    refreshItemProvider();\r\n\r\n    // #endregion\r\n\r\n    // #region Watchers\r\n\r\n    watch(includeInactive, refreshItemProvider);\r\n\r\n    // Keep security token up to date, but don't need refetch data\r\n    watch(securityGrantToken, () => {\r\n        if (itemProvider.value) {\r\n            itemProvider.value.securityGrantToken = securityGrantToken.value;\r\n        }\r\n    });\r\n\r\n    watch(internalValue, () => {\r\n        emit(\"update:modelValue\", internalValue.value);\r\n    });\r\n\r\n    watch(() => props.modelValue, () => {\r\n        updateRefValue(internalValue, props.modelValue ?? null);\r\n    });\r\n\r\n    // #endregion\r\n</script>"],"names":["internalValue","ref","_props$modelValue","props","modelValue","includeInactive","securityGrantToken","useSecurityGrantToken","itemProvider","refreshItemProvider","provider","WorkflowActionTypeTreeItemProvider","value","watch","emit","_props$modelValue2","updateRefValue"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA8BI,IAAA,IAAMA,aAAa,GAAGC,GAAG,CAAA,CAAAC,iBAAA,GAACC,KAAK,CAACC,UAAU,cAAAF,iBAAA,KAAA,KAAA,CAAA,GAAAA,iBAAA,GAAI,IAAI,CAAC,CAAA;MACnD,IAAA,IAAMG,eAAe,GAAGJ,GAAG,CAAC,KAAK,CAAC,CAAA;UAClC,IAAMK,kBAAkB,GAAGC,qBAAqB,EAAE,CAAA;UAClD,IAAMC,YAAY,GAAGP,GAAG,EAAsC,CAAA;UAG9D,SAASQ,mBAAmBA,GAAS;MACjC,MAAA,IAAMC,QAAQ,GAAG,IAAIC,kCAAkC,EAAE,CAAA;MACzDD,MAAAA,QAAQ,CAACL,eAAe,GAAGA,eAAe,CAACO,KAAK,CAAA;MAChDF,MAAAA,QAAQ,CAACJ,kBAAkB,GAAGA,kBAAkB,CAACM,KAAK,CAAA;YAEtDJ,YAAY,CAACI,KAAK,GAAGF,QAAQ,CAAA;MACjC,KAAA;MAEAD,IAAAA,mBAAmB,EAAE,CAAA;MAMrBI,IAAAA,KAAK,CAACR,eAAe,EAAEI,mBAAmB,CAAC,CAAA;UAG3CI,KAAK,CAACP,kBAAkB,EAAE,MAAM;YAC5B,IAAIE,YAAY,CAACI,KAAK,EAAE;MACpBJ,QAAAA,YAAY,CAACI,KAAK,CAACN,kBAAkB,GAAGA,kBAAkB,CAACM,KAAK,CAAA;MACpE,OAAA;MACJ,KAAC,CAAC,CAAA;UAEFC,KAAK,CAACb,aAAa,EAAE,MAAM;MACvBc,MAAAA,IAAI,CAAC,mBAAmB,EAAEd,aAAa,CAACY,KAAK,CAAC,CAAA;MAClD,KAAC,CAAC,CAAA;MAEFC,IAAAA,KAAK,CAAC,MAAMV,KAAK,CAACC,UAAU,EAAE,MAAM;MAAA,MAAA,IAAAW,kBAAA,CAAA;MAChCC,MAAAA,cAAc,CAAChB,aAAa,EAAAe,CAAAA,kBAAA,GAAEZ,KAAK,CAACC,UAAU,MAAA,IAAA,IAAAW,kBAAA,KAAA,KAAA,CAAA,GAAAA,kBAAA,GAAI,IAAI,CAAC,CAAA;MAC3D,KAAC,CAAC,CAAA;;;;;;;;;;;;;;;;;;;;;;"}