{"version":3,"file":"mergeFieldPicker.obs.js","sources":["../../../Framework/Controls/mergeFieldPicker.obs"],"sourcesContent":["<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <TreeItemPicker\r\n                    v-bind=\"standardFieldProps\"\r\n                    v-model=\"internalValue\"\r\n                    formGroupClasses=\"location-item-picker\"\r\n                    iconCssClass=\"fa fa-file\"\r\n                    :provider=\"itemProvider\"\r\n                    :multiple=\"multiple\"\r\n                    :autoExpand=\"true\">\r\n    </TreeItemPicker>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { PropType, ref, watch } from \"vue\";\r\n    import { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\n    import { standardRockFormFieldProps, useStandardRockFormFieldProps, useVModelPassthroughWithPropUpdateCheck } from \"@Obsidian/Utility/component\";\r\n    import { MergeFieldTreeItemProvider } from \"@Obsidian/Utility/treeItemProviders\";\r\n    import TreeItemPicker from \"./treeItemPicker.obs\";\r\n    import { emptyGuid } from \"@Obsidian/Utility/guid\";\r\n    import { useSecurityGrantToken } from \"@Obsidian/Utility/block\";\r\n\r\n    const props = defineProps({\r\n        modelValue: {\r\n            type: Object as PropType<ListItemBag | ListItemBag[] | null>,\r\n            required: false\r\n        },\r\n\r\n        additionalFields: {\r\n            type: String,\r\n            required: true\r\n        },\r\n\r\n        /**\r\n         * Whether to allow multi-select or single-select\r\n         */\r\n        multiple: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        },\r\n\r\n        ...standardRockFormFieldProps\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"update:modelValue\", value: ListItemBag | ListItemBag[] | null): void\r\n    }>();\r\n\r\n    const standardFieldProps = useStandardRockFormFieldProps(props);\r\n    const [internalValue, watchModelProp] = useVModelPassthroughWithPropUpdateCheck(props, \"modelValue\", emit);\r\n    const securityGrantToken = useSecurityGrantToken();\r\n\r\n    // Configure the item provider with our settings.\r\n    const itemProvider = ref(newItemProvider());\r\n\r\n    function newItemProvider(): MergeFieldTreeItemProvider {\r\n        const prov = new MergeFieldTreeItemProvider();\r\n        prov.securityGrantToken = securityGrantToken.value;\r\n        prov.additionalFields = props.additionalFields;\r\n\r\n        if (internalValue.value) {\r\n            if (Array.isArray(internalValue.value)) {\r\n                prov.selectedIds = internalValue.value.map(p => p?.value ?? emptyGuid);\r\n            }\r\n            else {\r\n                prov.selectedIds = [internalValue.value.value ?? emptyGuid];\r\n            }\r\n        }\r\n\r\n        return prov;\r\n    }\r\n\r\n    watch(() => props.additionalFields, (): void => {\r\n        itemProvider.value = newItemProvider();\r\n    });\r\n\r\n    watchModelProp((): void => {\r\n        itemProvider.value = newItemProvider();\r\n    });\r\n</script>"],"names":["standardFieldProps","useStandardRockFormFieldProps","props","_useVModelPassthrough","useVModelPassthroughWithPropUpdateCheck","emit","_useVModelPassthrough2","_slicedToArray","internalValue","watchModelProp","securityGrantToken","useSecurityGrantToken","itemProvider","ref","newItemProvider","prov","MergeFieldTreeItemProvider","value","additionalFields","Array","isArray","selectedIds","map","p","_p$value","emptyGuid","_internalValue$value$","watch"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAgDI,IAAA,IAAMA,kBAAkB,GAAGC,6BAA6B,CAACC,KAAK,CAAC,CAAA;UAC/D,IAAAC,qBAAA,GAAwCC,uCAAuC,CAACF,KAAK,EAAE,YAAY,EAAEG,IAAI,CAAC;YAAAC,sBAAA,GAAAC,cAAA,CAAAJ,qBAAA,EAAA,CAAA,CAAA;MAAnGK,MAAAA,aAAa,GAAAF,sBAAA,CAAA,CAAA,CAAA;MAAEG,MAAAA,cAAc,GAAAH,sBAAA,CAAA,CAAA,CAAA,CAAA;UACpC,IAAMI,kBAAkB,GAAGC,qBAAqB,EAAE,CAAA;MAGlD,IAAA,IAAMC,YAAY,GAAGC,GAAG,CAACC,eAAe,EAAE,CAAC,CAAA;UAE3C,SAASA,eAAeA,GAA+B;MACnD,MAAA,IAAMC,IAAI,GAAG,IAAIC,0BAA0B,EAAE,CAAA;MAC7CD,MAAAA,IAAI,CAACL,kBAAkB,GAAGA,kBAAkB,CAACO,KAAK,CAAA;MAClDF,MAAAA,IAAI,CAACG,gBAAgB,GAAGhB,KAAK,CAACgB,gBAAgB,CAAA;YAE9C,IAAIV,aAAa,CAACS,KAAK,EAAE;cACrB,IAAIE,KAAK,CAACC,OAAO,CAACZ,aAAa,CAACS,KAAK,CAAC,EAAE;gBACpCF,IAAI,CAACM,WAAW,GAAGb,aAAa,CAACS,KAAK,CAACK,GAAG,CAACC,CAAC,IAAA;MAAA,YAAA,IAAAC,QAAA,CAAA;MAAA,YAAA,OAAA,CAAAA,QAAA,GAAID,CAAC,KAAA,IAAA,IAADA,CAAC,KAADA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,CAAC,CAAEN,KAAK,MAAAO,IAAAA,IAAAA,QAAA,KAAAA,KAAAA,CAAAA,GAAAA,QAAA,GAAIC,SAAS,CAAA;iBAAC,CAAA,CAAA;MAC1E,SAAC,MACI;MAAA,UAAA,IAAAC,qBAAA,CAAA;MACDX,UAAAA,IAAI,CAACM,WAAW,GAAG,CAAAK,CAAAA,qBAAA,GAAClB,aAAa,CAACS,KAAK,CAACA,KAAK,MAAAS,IAAAA,IAAAA,qBAAA,cAAAA,qBAAA,GAAID,SAAS,CAAC,CAAA;MAC/D,SAAA;MACJ,OAAA;MAEA,MAAA,OAAOV,IAAI,CAAA;MACf,KAAA;MAEAY,IAAAA,KAAK,CAAC,MAAMzB,KAAK,CAACgB,gBAAgB,EAAE,MAAY;MAC5CN,MAAAA,YAAY,CAACK,KAAK,GAAGH,eAAe,EAAE,CAAA;MAC1C,KAAC,CAAC,CAAA;MAEFL,IAAAA,cAAc,CAAC,MAAY;MACvBG,MAAAA,YAAY,CAACK,KAAK,GAAGH,eAAe,EAAE,CAAA;MAC1C,KAAC,CAAC,CAAA;;;;;;;;;;;;;;;;;;;;;;;"}