{"version":3,"file":"fieldFilterEditor.js","sources":["../../../Framework/Controls/fieldFilterEditor.ts"],"sourcesContent":["// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { defineComponent, PropType, ref, TransitionGroup, watch } from \"vue\";\r\nimport DropDownList from \"./dropDownList\";\r\nimport { FilterExpressionType } from \"@Obsidian/Core/Reporting/filterExpressionType\";\r\nimport { areEqual, newGuid } from \"@Obsidian/Utility/guid\";\r\nimport { updateRefValue } from \"@Obsidian/Utility/component\";\r\nimport { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\nimport { FieldFilterGroupBag } from \"@Obsidian/ViewModels/Reporting/fieldFilterGroupBag\";\r\nimport { FieldFilterRuleBag } from \"@Obsidian/ViewModels/Reporting/fieldFilterRuleBag\";\r\nimport { FieldFilterSourceBag } from \"@Obsidian/ViewModels/Reporting/fieldFilterSourceBag\";\r\nimport { FieldFilterRuleRow } from \"./fieldFilterRuleRow\";\r\n\r\ntype ShowHide = \"Show\" | \"Hide\";\r\ntype AllAny = \"All\" | \"Any\";\r\n\r\n// Maps for converting between `FilterExpressionType` and `ShowHide`/`AllAny`\r\nconst filterExpressionTypeMap: Record<ShowHide, Record<AllAny, FilterExpressionType>> = {\r\n    Show: {\r\n        All: FilterExpressionType.GroupAll,\r\n        Any: FilterExpressionType.GroupAny\r\n    },\r\n    Hide: {\r\n        All: FilterExpressionType.GroupAllFalse,\r\n        Any: FilterExpressionType.GroupAnyFalse\r\n    }\r\n};\r\n\r\nconst filterExpressionToShowHideMap: ShowHide[] = [\"Show\", \"Show\", \"Hide\", \"Hide\"]; // Use FilterExpressionType - 1 as index\r\nconst filterExpressionToAllAnyMap: AllAny[] = [\"All\", \"Any\", \"All\", \"Any\"]; // Use FilterExpressionType - 1 as index\r\n\r\nconst showHideOptions: ListItemBag[] = [\r\n    { text: \"Show\", value: \"Show\" },\r\n    { text: \"Hide\", value: \"Hide\" }\r\n];\r\n\r\nconst allAnyOptions: ListItemBag[] = [\r\n    { text: \"All\", value: \"All\" },\r\n    { text: \"Any\", value: \"Any\" }\r\n];\r\n\r\nexport default defineComponent({\r\n    name: \"FieldVisibilityRulesEditor\",\r\n\r\n    components: {\r\n        TransitionGroup,\r\n        DropDownList,\r\n        FieldFilterRuleRow\r\n    },\r\n\r\n    props: {\r\n        modelValue: {\r\n            type: Object as PropType<FieldFilterGroupBag>,\r\n            required: true\r\n        },\r\n        sources: {\r\n            type: Array as PropType<FieldFilterSourceBag[]>,\r\n            required: true\r\n        },\r\n        title: {\r\n            type: String as PropType<string>,\r\n            default: \"\"\r\n        },\r\n        allowNestedGroups: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    emits: [\"update:modelValue\"],\r\n\r\n    setup(props, { emit }) {\r\n        const showHide = ref(filterExpressionToShowHideMap[props.modelValue.expressionType - 1]);\r\n        const allAny = ref(filterExpressionToAllAnyMap[props.modelValue.expressionType - 1]);\r\n        const rules = ref(props.modelValue.rules ?? []);\r\n\r\n        // We currently don't support nested groups, so fire a warning if anyone tries to use them\r\n        watch(() => props.allowNestedGroups, () => {\r\n            if (props.allowNestedGroups === true) {\r\n                console.warn(\"Nested Filter Groups are not supported yet. Please set `allowNestedGroups` to `false`.\");\r\n            }\r\n        });\r\n\r\n        /**\r\n         * Event handler for when the add rule button is clicked. Insert a new\r\n         * rule with default values into the list of rules.\r\n         */\r\n        function onAddRuleClick(): void {\r\n            rules.value = [\r\n                ...rules.value,\r\n                {\r\n                    guid: newGuid(),\r\n                    comparisonType: 0,\r\n                    value: \"\",\r\n                    sourceType: 0,\r\n                    attributeGuid: props.sources[0].attribute?.attributeGuid\r\n                }\r\n            ];\r\n        }\r\n\r\n        /**\r\n         * Event handler for when a single rule has been updated. Replace the\r\n         * rule in our array with the new rule.\r\n         *\r\n         * @param rule The new rule information.\r\n         */\r\n        const onUpdateRule = (rule: FieldFilterRuleBag): void => {\r\n            const newRules = [...rules.value];\r\n            const ruleIndex = newRules.findIndex(r => areEqual(r.guid, rule.guid));\r\n\r\n            if (ruleIndex !== -1) {\r\n                newRules.splice(ruleIndex, 1, rule);\r\n\r\n                rules.value = newRules;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Event handler for when a rule has requested that it be removed from\r\n         * the list of rules.\r\n         *\r\n         * @param rule The rule to be removed.\r\n         */\r\n        function onRemoveRule(rule: FieldFilterRuleBag): void {\r\n            rules.value = (rules.value || []).filter((val: FieldFilterRuleBag) => !areEqual(val.guid, rule.guid));\r\n        }\r\n\r\n        // Watch for changes to the model value and update our internal values.\r\n        watch(() => props.modelValue, () => {\r\n            showHide.value = filterExpressionToShowHideMap[props.modelValue.expressionType - 1];\r\n            allAny.value = filterExpressionToAllAnyMap[props.modelValue.expressionType - 1];\r\n            updateRefValue(rules, props.modelValue.rules ?? []);\r\n        });\r\n\r\n        // Watch for changes to our internal values and update the model value.\r\n        watch([showHide, allAny, rules], () => {\r\n            const newValue: FieldFilterGroupBag = {\r\n                ...props.modelValue,\r\n                expressionType: filterExpressionTypeMap[showHide.value][allAny.value],\r\n                rules: rules.value\r\n            };\r\n\r\n            emit(\"update:modelValue\", newValue);\r\n        });\r\n\r\n        return {\r\n            allAny,\r\n            allAnyOptions,\r\n            onAddRuleClick,\r\n            onRemoveRule,\r\n            onUpdateRule,\r\n            rules,\r\n            showHide,\r\n            showHideOptions\r\n        };\r\n    },\r\n\r\n    template: `\r\n<div class=\"filtervisibilityrules-container\">\r\n    <div class=\"filtervisibilityrules-rulesheader\">\r\n        <div class=\"filtervisibilityrules-type form-inline form-inline-all\">\r\n            <DropDownList v-model=\"showHide\" :items=\"showHideOptions\" :show-blank-item=\"false\" formControlClasses=\"input-width-sm margin-r-sm\" />\r\n            <div class=\"form-control-static margin-r-sm\">\r\n                <span class=\"filtervisibilityrules-fieldname\">{{ title }}</span><span class=\"filtervisibilityrules-if\"> if</span>\r\n            </div>\r\n            <DropDownList v-model=\"allAny\" :items=\"allAnyOptions\" :show-blank-item=\"false\" formControlClasses=\"input-width-sm margin-r-sm\" />\r\n            <span class=\"form-control-static\">of the following match:</span>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"filtervisibilityrules-ruleslist \">\r\n        <FieldFilterRuleRow v-for=\"rule in rules\" :key=\"rule.guid\" :modelValue=\"rule\" :sources=\"sources\" @update:modelValue=\"onUpdateRule\" @removeRule=\"onRemoveRule\" />\r\n    </div>\r\n\r\n    <div class=\"filter-actions\">\r\n        <button class=\"btn btn-xs btn-action add-action\" @click.prevent=\"onAddRuleClick\"><i class=\"fa fa-filter\"></i> Add Criteria</button>\r\n    </div>\r\n</div>\r\n`\r\n});\r\n"],"names":["filterExpressionTypeMap","Show","All","FilterExpressionType","GroupAll","Any","GroupAny","Hide","GroupAllFalse","GroupAnyFalse","filterExpressionToShowHideMap","filterExpressionToAllAnyMap","showHideOptions","text","value","allAnyOptions","defineComponent","name","components","TransitionGroup","DropDownList","FieldFilterRuleRow","props","modelValue","type","Object","required","sources","Array","title","String","default","allowNestedGroups","Boolean","emits","setup","_ref","_props$modelValue$rul","emit","showHide","ref","expressionType","allAny","rules","watch","console","warn","onAddRuleClick","_props$sources$0$attr","guid","newGuid","comparisonType","sourceType","attributeGuid","attribute","onUpdateRule","rule","newRules","ruleIndex","findIndex","r","areEqual","splice","onRemoveRule","filter","val","_props$modelValue$rul2","updateRefValue","newValue","_objectSpread","template"],"mappings":"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"}