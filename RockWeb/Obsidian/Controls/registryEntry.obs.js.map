{"version":3,"file":"registryEntry.obs.js","sources":["../../../Framework/Controls/registryEntry.obs"],"sourcesContent":["<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <RockFormField\r\n                   :modelValue=\"internalValue\"\r\n                   v-bind=\"fieldProps\"\r\n                   :formGroupClasses=\"'registry-entry ' + formGroupClasses\"\r\n                   :rules=\"fieldRules\"\r\n                   name=\"textbox\">\r\n        <template #default=\"{ uniqueId, field }\">\r\n            <div class=\"control-wrapper\">\r\n                <slot name=\"prepend\" :isInputGroupSupported=\"false\" />\r\n                <div class=\"form-control-group row form-row\">\r\n                    <div class=\"col-sm-4\">\r\n                        <input v-model=\"volume\" :id=\"uniqueId\" type=\"text\" class=\"form-control\" v-bind=\"field\" placeholder=\"Volume\" inputmode=\"numeric\" pattern=\"[0-9]*\" />\r\n                    </div>\r\n                    <div class=\"col-sm-4\">\r\n                        <input v-model=\"page\" :id=\"uniqueId + '-page'\" type=\"text\" class=\"form-control\" v-bind=\"field\" placeholder=\"Page\" inputmode=\"numeric\" pattern=\"[0-9]*\" />\r\n                    </div>\r\n                    <div class=\"col-sm-4\">\r\n                        <input v-model=\"line\" :id=\"uniqueId + '-line'\" type=\"text\" class=\"form-control\" v-bind=\"field\" placeholder=\"Line\" inputmode=\"numeric\" pattern=\"[0-9]*\" />\r\n                    </div>\r\n                </div>\r\n                <slot name=\"append\" :isInputGroupSupported=\"false\" />\r\n            </div>\r\n        </template>\r\n    </RockFormField>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, ref, watch } from \"vue\";\r\n    import { toNumberOrNull, toNumber } from \"@Obsidian/Utility/numberUtils\";\r\n    import { standardRockFormFieldProps, updateRefValue, useStandardRockFormFieldProps } from \"@Obsidian/Utility/component\";\r\n    import RockFormField from \"./rockFormField\";\r\n    import { normalizeRules, ValidationResult } from \"@Obsidian/ValidationRules\";\r\n\r\n    const props = defineProps({\r\n        /**\r\n         * String value containing 3 numbers separated by commas, e.g. \"1,2,3\", representing the volume,\r\n         * page, and line number of the registry entry\r\n         **/\r\n        modelValue: {\r\n            type: String,\r\n            required: true\r\n        },\r\n\r\n        ...standardRockFormFieldProps\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"update:modelValue\", val: string | null): void\r\n    }>();\r\n\r\n    // #region Values\r\n    const fieldProps = useStandardRockFormFieldProps(props);\r\n\r\n    const volume = ref(\"\");\r\n    const page = ref(\"\");\r\n    const line = ref(\"\");\r\n\r\n    watch(volume, () => console.log(\"volume changed\", volume.value));\r\n    watch(page, () => console.log(\"page changed\", page.value));\r\n    watch(line, () => console.log(\"line changed\", line.value));\r\n\r\n    // #endregion\r\n\r\n    // #region Computed Values\r\n\r\n    const internalValue = computed({\r\n        get() {\r\n            console.log(\"get internal\", internalValue);\r\n            return volume.value + \",\" + page.value + \",\" + line.value;\r\n        },\r\n        set(value: string) {\r\n            console.log(\"set internal\", value);\r\n            const parts = value.split(\",\");\r\n            volume.value = toNumberOrNull(parts[0])?.toString() ?? \"\";\r\n            page.value = toNumberOrNull(parts[1])?.toString() ?? \"\";\r\n            line.value = toNumberOrNull(parts[2])?.toString() ?? \"\";\r\n        }\r\n    });\r\n\r\n    /** Convert the `required` rule to more accurately validate if this control is filled out */\r\n    const fieldRules = computed(() => {\r\n        let rules = normalizeRules(props.rules);\r\n        rules = rules.map(rule => {\r\n            if (rule == \"required\") {\r\n                return validateRequired;\r\n            }\r\n\r\n            return rule;\r\n        });\r\n\r\n        rules.push(validateNumeric, validateAllFieldsFilled);\r\n\r\n        return rules;\r\n    });\r\n\r\n    // #endregion\r\n\r\n    // #region Watchers\r\n\r\n    watch(() => props.modelValue, () => {\r\n        console.log(\"prop changed\", props.modelValue);\r\n        updateRefValue(internalValue, props.modelValue);\r\n    });\r\n\r\n    watch(internalValue, () => {\r\n        console.log(\"internalvalue changes\", internalValue.value);\r\n        emit(\"update:modelValue\", internalValue.value);\r\n    });\r\n\r\n    // #endregion\r\n\r\n    // #region Functions\r\n\r\n    /** If the field is required, make sure all 3 inputs are filled */\r\n    function validateRequired(): ValidationResult {\r\n        return !!volume.value.trim() && !!page.value.trim() && !!line.value.trim() || \"is required.\";\r\n    }\r\n\r\n    /** If any part of the field is filled out, it all needs to be filled out to be valid */\r\n    function validateAllFieldsFilled(): ValidationResult {\r\n        // Either none of them should be filled out, or all of them should be\r\n        if ((volume.value.trim() || page.value.trim() || line.value.trim())\r\n            && !(volume.value.trim() && page.value.trim() && line.value.trim())) {\r\n            return \"is invalid. Please fill out Volume, Page, and Line.\";\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Validate if all the filled inputs are numbers. This is really only necessary for older browsers\r\n     * that can't use the `pattern` attribute on inputs.\r\n     */\r\n    function validateNumeric(): ValidationResult {\r\n        const errs: string[] = [];\r\n\r\n        // Each field should either be empty, or a number\r\n        console.log(\"validate volume numberic\", !!volume.value.trim(), !toNumberOrNull(volume.value.trim()));\r\n        if (volume.value.trim() && toNumber(volume.value.trim()) == 0) {\r\n            errs.push(\"Volume\");\r\n        }\r\n\r\n        console.log(\"validate page numberic\", !!page.value.trim(), !toNumberOrNull(page.value.trim()));\r\n        if (page.value.trim() && toNumber(page.value.trim()) == 0) {\r\n            errs.push(\"Page\");\r\n        }\r\n\r\n        console.log(\"validate line numberic\", !!line.value.trim(), !toNumberOrNull(line.value.trim()));\r\n        if (line.value.trim() && toNumber(line.value.trim()) == 0) {\r\n            errs.push(\"Line\");\r\n        }\r\n\r\n        if (errs.length == 0) {\r\n            return true;\r\n        }\r\n\r\n        return \"is invalid. \" + errs.join(\" and \") + \" should be \" + (errs.length == 1 ? \"a number\" : \"numbers\") + \" greater than zero.\";\r\n    }\r\n\r\n    // #endregion\r\n\r\n</script>\r\n"],"names":["fieldProps","useStandardRockFormFieldProps","props","volume","ref","page","line","watch","console","log","value","internalValue","computed","get","set","_toNumberOrNull$toStr","_toNumberOrNull","_toNumberOrNull$toStr2","_toNumberOrNull2","_toNumberOrNull$toStr3","_toNumberOrNull3","parts","split","toNumberOrNull","toString","fieldRules","rules","normalizeRules","map","rule","validateRequired","push","validateNumeric","validateAllFieldsFilled","modelValue","updateRefValue","emit","trim","errs","toNumber","length","join"],"mappings":"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"}