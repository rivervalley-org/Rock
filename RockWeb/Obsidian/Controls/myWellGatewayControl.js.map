{"version":3,"file":"myWellGatewayControl.js","sources":["../../../Framework/Controls/myWellGatewayControl.ts"],"sourcesContent":["ï»¿// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\nimport { defineComponent, PropType } from \"vue\";\r\nimport LoadingIndicator from \"./loadingIndicator\";\r\n// import { ValidationField } from \"./gatewayControl\";\r\nimport { sleep } from \"@Obsidian/Utility/promiseUtils\";\r\n\r\n/*\r\n * 10/10/2022 - DSH\r\n *\r\n * This payment control does not currently work and is not supported.\r\n * It will likely be removed in the future.\r\n */\r\n\r\ntype Settings = {\r\n    publicApiKey: string;\r\n    gatewayUrl: string;\r\n};\r\n\r\ntype Tokenizer = {\r\n    create: () => void;\r\n    submit: () => void;\r\n};\r\n\r\ninterface IResponse {\r\n    status: \"success\" | \"error\" | \"validation\";\r\n}\r\n\r\ninterface ISuccessResponse extends IResponse {\r\n    token: string;\r\n}\r\n\r\ninterface IErrorResponse extends IResponse {\r\n    message: string;\r\n}\r\n\r\ninterface IValidationResponse extends IResponse {\r\n    invalid: string[];\r\n}\r\n\r\nexport default defineComponent({\r\n    name: \"MyWellGatewayControl\",\r\n    components: {\r\n        LoadingIndicator\r\n    },\r\n    props: {\r\n        settings: {\r\n            type: Object as PropType<Settings>,\r\n            required: true\r\n        },\r\n        submit: {\r\n            type: Boolean as PropType<boolean>,\r\n            required: true\r\n        }\r\n    },\r\n    data () {\r\n        return {\r\n            tokenizer: null as Tokenizer | null,\r\n            loading: true\r\n        };\r\n    },\r\n    methods: {\r\n        async mountControl() {\r\n            /* eslint-disable @typescript-eslint/no-explicit-any */\r\n            const globalVarName = \"Tokenizer\";\r\n\r\n            if (!window[ <any>globalVarName ]) {\r\n                const script = document.createElement(\"script\");\r\n                script.type = \"text/javascript\";\r\n                script.src = \"https://sandbox.gotnpgateway.com/tokenizer/tokenizer.js\"; // TODO - this should come from the gateway\r\n                document.getElementsByTagName(\"head\")[ 0 ].appendChild(script);\r\n\r\n                while (!window[ <any>globalVarName ]) {\r\n                    await sleep(20);\r\n                }\r\n            }\r\n\r\n            const settings = this.getTokenizerSettings();\r\n            this.tokenizer = new (<any>window[ <any>globalVarName ])(settings) as Tokenizer;\r\n            this.tokenizer.create();\r\n            /* eslint-enable @typescript-eslint/no-explicit-any */\r\n        },\r\n        handleResponse (response: IResponse | null | undefined) {\r\n            this.loading = false;\r\n\r\n            if (!response?.status || response.status === \"error\") {\r\n                const errorResponse = (response as IErrorResponse | null) || null;\r\n                this.$emit(\"error\", errorResponse?.message || \"There was an unexpected problem communicating with the gateway.\");\r\n                console.error(\"MyWell response was errored:\", JSON.stringify(response));\r\n                return;\r\n            }\r\n\r\n            if (response.status === \"validation\") {\r\n                const validationResponse = (response as IValidationResponse | null) || null;\r\n\r\n                if (!validationResponse?.invalid?.length) {\r\n                    this.$emit(\"error\", \"There was a validation issue, but the invalid field was not specified.\");\r\n                    console.error(\"MyWell response was errored:\", JSON.stringify(response));\r\n                    return;\r\n                }\r\n\r\n                // const validationFields: ValidationField[] = [];\r\n\r\n                // for (const myWellField of validationResponse.invalid) {\r\n                //     switch (myWellField) {\r\n                //         case \"cc\":\r\n                //             validationFields.push(ValidationField.CardNumber);\r\n                //             break;\r\n                //         case \"exp\":\r\n                //             validationFields.push(ValidationField.Expiry);\r\n                //             break;\r\n                //         default:\r\n                //             console.error(\"Unknown MyWell validation field\", myWellField);\r\n                //             break;\r\n                //     }\r\n                // }\r\n\r\n                // if (!validationFields.length) {\r\n                //     this.$emit(\"error\", \"There was a validation issue, but the invalid field could not be inferred.\");\r\n                //     console.error(\"MyWell response contained unexpected values:\", JSON.stringify(response));\r\n                //     return;\r\n                // }\r\n\r\n                // this.$emit(\"validationRaw\", validationFields);\r\n                return;\r\n            }\r\n\r\n            if (response.status === \"success\") {\r\n                const successResponse = (response as ISuccessResponse | null) || null;\r\n\r\n                if (!successResponse?.token) {\r\n                    this.$emit(\"error\", \"There was an unexpected problem communicating with the gateway.\");\r\n                    console.error(\"MyWell response does not have the expected token:\", JSON.stringify(response));\r\n                    return;\r\n                }\r\n\r\n                this.$emit(\"successRaw\", successResponse.token);\r\n                return;\r\n            }\r\n\r\n            this.$emit(\"error\", \"There was an unexpected problem communicating with the gateway.\");\r\n            console.error(\"MyWell response has invalid status:\", JSON.stringify(response));\r\n        },\r\n\r\n        /** Generates the tokenizer settings */\r\n        getTokenizerSettings (): unknown {\r\n            return {\r\n                onLoad: () => {\r\n this.loading = false;\r\n},\r\n                apikey: this.publicApiKey,\r\n                url: this.gatewayUrl,\r\n                container: this.$refs[ \"container\" ],\r\n                submission: (resp: IResponse) => {\r\n                    this.handleResponse(resp);\r\n                },\r\n                settings: {\r\n                    payment: {\r\n                        types: [ \"card\" ],\r\n                        ach: {\r\n                            \"sec_code\": \"web\"\r\n                        }\r\n                    },\r\n                    styles: {\r\n                        body: {\r\n                            color: \"rgb(51, 51, 51)\"\r\n                        },\r\n                        \"#app\": {\r\n                            padding: \"5px 15px\"\r\n                        },\r\n                        \"input,select\": {\r\n                            \"color\": \"rgb(85, 85, 85)\",\r\n                            \"border-radius\": \"4px\",\r\n                            \"background-color\": \"rgb(255, 255, 255)\",\r\n                            \"border\": \"1px solid rgb(204, 204, 204)\",\r\n                            \"box-shadow\": \"rgba(0, 0, 0, 0.075) 0px 1px 1px 0px inset\",\r\n                            \"padding\": \"6px 12px\",\r\n                            \"font-size\": \"14px\",\r\n                            \"height\": \"34px\",\r\n                            \"font-family\": \"OpenSans, 'Helvetica Neue', Helvetica, Arial, sans-serif\"\r\n                        },\r\n                        \"input:focus,select:focus\": {\r\n                            \"border\": \"1px solid #66afe9\",\r\n                            \"box-shadow\": \"0 0 0 3px rgba(102,175,233,0.6)\"\r\n                        },\r\n                        \"select\": {\r\n                            \"padding\": \"6px 4px\"\r\n                        },\r\n                        \".fieldsetrow\": {\r\n                            \"margin-left\": \"-2.5px\",\r\n                            \"margin-right\": \"-2.5px\"\r\n                        },\r\n                        \".card > .fieldset\": {\r\n                            \"padding\": \"0 !important\",\r\n                            \"margin\": \"0 2.5px 5px !important\"\r\n                        },\r\n                        \"input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button\": {\r\n                            \"-webkit-appearance\": \"none\",\r\n                            \"margin\": \"0\"\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    },\r\n    computed: {\r\n        publicApiKey (): string {\r\n            return this.settings.publicApiKey;\r\n        },\r\n        gatewayUrl (): string {\r\n            return this.settings.gatewayUrl;\r\n        }\r\n    },\r\n    watch: {\r\n        submit () {\r\n            if (this.submit && this.tokenizer) {\r\n                this.loading = true;\r\n                this.tokenizer.submit();\r\n            }\r\n        }\r\n    },\r\n    async mounted () {\r\n        await this.mountControl();\r\n    },\r\n    template: `\r\n<div>\r\n    <div ref=\"container\" style=\"min-height: 49px;\"></div>\r\n    <div v-if=\"loading\" class=\"text-center\">\r\n        <LoadingIndicator />\r\n    </div>\r\n</div>`\r\n});\r\n"],"names":["defineComponent","name","components","LoadingIndicator","props","settings","type","Object","required","submit","Boolean","data","tokenizer","loading","methods","mountControl","_this","_asyncToGenerator","globalVarName","window","script","document","createElement","src","getElementsByTagName","appendChild","sleep","getTokenizerSettings","create","handleResponse","response","status","errorResponse","$emit","message","console","error","JSON","stringify","_validationResponse$i","validationResponse","invalid","length","successResponse","token","onLoad","apikey","publicApiKey","url","gatewayUrl","container","$refs","submission","resp","payment","types","ach","styles","body","color","padding","computed","watch","mounted","_this2","template"],"mappings":"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"}