{"version":3,"file":"timePicker.js","sources":["../../../Framework/Controls/timePicker.ts"],"sourcesContent":["ï»¿// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n\r\nimport { defineComponent, PropType } from \"vue\";\r\nimport { normalizeRules, rulesPropType, ValidationRule } from \"@Obsidian/ValidationRules\";\r\nimport BasicTimePicker, { BasicTimePickerValue as TimePickerValue } from \"./basicTimePicker\";\r\nimport RockFormField from \"./rockFormField\";\r\n\r\nexport { BasicTimePickerValue as TimePickerValue } from \"./basicTimePicker\";\r\n\r\nexport default defineComponent({\r\n    name: \"TimePicker\",\r\n    components: {\r\n        RockFormField,\r\n        BasicTimePicker\r\n    },\r\n    props: {\r\n        rules: rulesPropType,\r\n        modelValue: {\r\n            type: Object as PropType<TimePickerValue>,\r\n            default: {}\r\n        }\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            internalValue: {} as TimePickerValue\r\n        };\r\n    },\r\n\r\n    methods: {\r\n    },\r\n\r\n    computed: {\r\n        computedRules(): ValidationRule[] {\r\n            const rules = normalizeRules(this.rules);\r\n\r\n            return rules;\r\n        }\r\n    },\r\n\r\n    watch: {\r\n        modelValue: {\r\n            immediate: true,\r\n            handler() {\r\n                this.internalValue = this.modelValue;\r\n            }\r\n        },\r\n\r\n        internalValue(): void {\r\n            this.$emit(\"update:modelValue\", this.internalValue);\r\n        }\r\n    },\r\n\r\n    template: `\r\n<RockFormField\r\n    :modelValue=\"internalValue\"\r\n    formGroupClasses=\"timepicker-input\"\r\n    name=\"time-picker\"\r\n    :rules=\"computedRules\">\r\n    <template #default=\"{uniqueId, field}\">\r\n        <div class=\"control-wrapper\">\r\n            <div class=\"timepicker-input\">\r\n                <BasicTimePicker v-model=\"internalValue\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</RockFormField>`\r\n});\r\n"],"names":["defineComponent","name","components","RockFormField","BasicTimePicker","props","rules","rulesPropType","modelValue","type","Object","default","data","internalValue","methods","computed","computedRules","normalizeRules","watch","immediate","handler","$emit","template"],"mappings":";;;;;;;;;;;;;;;;;AAuBA,gDAAeA,eAAe,CAAC;YAC3BC,EAAAA,IAAI,EAAE,YAAY;YAClBC,EAAAA,UAAU,EAAE;gBACRC,aAAa;YACbC,IAAAA,eAAAA;eACH;YACDC,EAAAA,KAAK,EAAE;YACHC,IAAAA,KAAK,EAAEC,aAAa;YACpBC,IAAAA,UAAU,EAAE;YACRC,MAAAA,IAAI,EAAEC,MAAmC;YACzCC,MAAAA,OAAO,EAAE,EAAC;YACd,KAAA;eACH;YAEDC,EAAAA,IAAIA,GAAG;gBACH,OAAO;YACHC,MAAAA,aAAa,EAAE,EAAC;iBACnB,CAAA;eACJ;cAEDC,OAAO,EAAE,EACR;YAEDC,EAAAA,QAAQ,EAAE;YACNC,IAAAA,aAAaA,GAAqB;YAC9B,MAAA,IAAMV,KAAK,GAAGW,cAAc,CAAC,IAAI,CAACX,KAAK,CAAC,CAAA;YAExC,MAAA,OAAOA,KAAK,CAAA;YAChB,KAAA;eACH;YAEDY,EAAAA,KAAK,EAAE;YACHV,IAAAA,UAAU,EAAE;YACRW,MAAAA,SAAS,EAAE,IAAI;YACfC,MAAAA,OAAOA,GAAG;YACN,QAAA,IAAI,CAACP,aAAa,GAAG,IAAI,CAACL,UAAU,CAAA;YACxC,OAAA;iBACH;YAEDK,IAAAA,aAAaA,GAAS;kBAClB,IAAI,CAACQ,KAAK,CAAC,mBAAmB,EAAE,IAAI,CAACR,aAAa,CAAC,CAAA;YACvD,KAAA;eACH;cAEDS,QAAQ,EAAA,qaAAA;YAcZ,CAAC,EAAC;;;;;;;;"}