{"version":3,"file":"daysOfWeekFieldComponents.js","sources":["../../../Framework/FieldTypes/daysOfWeekFieldComponents.ts"],"sourcesContent":["// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\nimport { defineComponent, computed } from \"vue\";\r\nimport { getFieldEditorProps } from \"./utils\";\r\nimport DayOfWeekPicker from \"@Obsidian/Controls/dayOfWeekPicker.obs\";\r\n\r\nexport const EditComponent = defineComponent({\r\n    name: \"DaysOfWeekField.Edit\",\r\n    components: {\r\n        DayOfWeekPicker\r\n    },\r\n    props: getFieldEditorProps(),\r\n\r\n    emits: {\r\n        \"update:modelValue\": (_value: string) => true\r\n    },\r\n\r\n    setup(props, { emit }) {\r\n        const internalValue = computed<string[]>({\r\n            get() {\r\n                const value = props.modelValue ?? \"\";\r\n                return value !== \"\" ? value.split(\",\") : [];\r\n            },\r\n            set(newVal) {\r\n                emit(\"update:modelValue\", newVal.sort().join(\",\"));\r\n            }\r\n        });\r\n\r\n        return { internalValue };\r\n    },\r\n    template: `\r\n<DayOfWeekPicker v-model=\"internalValue\" multiple />\r\n`\r\n});\r\n\r\nexport const ConfigurationComponent = defineComponent({\r\n    name: \"DaysOfWeekField.Configuration\",\r\n\r\n    template: ``\r\n});\r\n"],"names":["EditComponent","defineComponent","name","components","DayOfWeekPicker","props","getFieldEditorProps","emits","_value","setup","_ref","emit","internalValue","computed","get","_props$modelValue","value","modelValue","split","set","newVal","sort","join","template","ConfigurationComponent"],"mappings":";;;;;;;;;;;;;;AAoBaA,gBAAAA,aAAa,4BAAGC,eAAe,CAAC;YACzCC,EAAAA,IAAI,EAAE,sBAAsB;YAC5BC,EAAAA,UAAU,EAAE;YACRC,IAAAA,eAAAA;eACH;cACDC,KAAK,EAAEC,mBAAmB,EAAE;YAE5BC,EAAAA,KAAK,EAAE;gBACH,mBAAmB,EAAGC,MAAc,IAAK,IAAA;eAC5C;YAEDC,EAAAA,KAAKA,CAACJ,KAAK,EAAAK,IAAA,EAAY;YAAA,IAAA,IAARC,IAAI,GAAAD,IAAA,CAAJC,IAAI,CAAA;gBACf,IAAMC,aAAa,GAAGC,QAAQ,CAAW;YACrCC,MAAAA,GAAGA,GAAG;YAAA,QAAA,IAAAC,iBAAA,CAAA;YACF,QAAA,IAAMC,KAAK,GAAA,CAAAD,iBAAA,GAAGV,KAAK,CAACY,UAAU,MAAA,IAAA,IAAAF,iBAAA,KAAA,KAAA,CAAA,GAAAA,iBAAA,GAAI,EAAE,CAAA;oBACpC,OAAOC,KAAK,KAAK,EAAE,GAAGA,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,CAAA;mBAC9C;kBACDC,GAAGA,CAACC,MAAM,EAAE;YACRT,QAAAA,IAAI,CAAC,mBAAmB,EAAES,MAAM,CAACC,IAAI,EAAE,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;YACtD,OAAA;YACJ,KAAC,CAAC,CAAA;gBAEF,OAAO;YAAEV,MAAAA,aAAAA;iBAAe,CAAA;eAC3B;cACDW,QAAQ,EAAA,4DAAA;YAGZ,CAAC,GAAC;AAEWC,gBAAAA,sBAAsB,qCAAGvB,eAAe,CAAC;YAClDC,EAAAA,IAAI,EAAE,+BAA+B;cAErCqB,QAAQ,EAAA,EAAA;YACZ,CAAC;;;;;;;;"}