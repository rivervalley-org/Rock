{"version":3,"file":"keyValueListFieldComponents.js","sources":["../../../Framework/FieldTypes/keyValueListField.partial.ts","../../../Framework/FieldTypes/keyValueListFieldComponents.ts"],"sourcesContent":["// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\nimport { Component } from \"vue\";\r\nimport { defineAsyncComponent } from \"@Obsidian/Utility/component\";\r\nimport { List } from \"@Obsidian/Utility/linq\";\r\nimport { FieldTypeBase } from \"./fieldType\";\r\n\r\nexport const enum ConfigurationValueKey {\r\n    Values = \"values\",\r\n    KeyPrompt = \"keyprompt\",\r\n    ValuePrompt = \"valueprompt\",\r\n    DisplayValueFirst = \"displayvaluefirst\",\r\n    AllowHtml = \"allowhtml\",\r\n\r\n    // Only used during editing of the field type configuration.\r\n    CustomValues = \"customvalues\",\r\n    DefinedType = \"definedtype\"\r\n}\r\n\r\nexport const enum ConfigurationPropertyKey {\r\n    DefinedTypes = \"definedTypes\"\r\n}\r\n\r\nexport type ValueItem = {\r\n    value: string,\r\n    text: string\r\n};\r\n\r\nexport type ClientValue = {\r\n    key: string,\r\n    value: string\r\n};\r\n\r\n\r\n// The edit component can be quite large, so load it only as needed.\r\nconst editComponent = defineAsyncComponent(async () => {\r\n    return (await import(\"./keyValueListFieldComponents\")).EditComponent;\r\n});\r\n\r\n// Load the configuration component as needed.\r\nconst configurationComponent = defineAsyncComponent(async () => {\r\n    return (await import(\"./keyValueListFieldComponents\")).ConfigurationComponent;\r\n});\r\n\r\n/**\r\n * The field type handler for the Key Value List field.\r\n */\r\nexport class KeyValueListFieldType extends FieldTypeBase {\r\n    public override getTextValue(value: string, configurationValues: Record<string, string>): string {\r\n        try {\r\n            const clientValues = JSON.parse(value ?? \"[]\") as ClientValue[];\r\n            const configuredValues = new List(JSON.parse(configurationValues[ConfigurationValueKey.Values] ?? \"[]\") as ValueItem[]);\r\n            const values: string[] = [];\r\n\r\n            for (const clientValue of clientValues) {\r\n                const configuredValue = configuredValues.firstOrUndefined(v => v.value === clientValue.value);\r\n\r\n                if (configuredValue !== undefined) {\r\n                    values.push(`${clientValue.key}: ${configuredValue.text}`);\r\n                }\r\n                else {\r\n                    values.push(`${clientValue.key}: ${clientValue.value}`);\r\n                }\r\n            }\r\n\r\n            return values.join(\", \");\r\n        }\r\n        catch {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    public override getEditComponent(): Component {\r\n        return editComponent;\r\n    }\r\n\r\n    public override getConfigurationComponent(): Component {\r\n        return configurationComponent;\r\n    }\r\n\r\n    public override isFilterable(): boolean {\r\n        return false;\r\n    }\r\n}\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\nimport { computed, defineComponent, ref, watch } from \"vue\";\r\nimport CheckBox from \"@Obsidian/Controls/checkBox\";\r\nimport DropDownList from \"@Obsidian/Controls/dropDownList\";\r\nimport RockFormField from \"@Obsidian/Controls/rockFormField\";\r\nimport TextBox from \"@Obsidian/Controls/textBox\";\r\nimport { asBoolean, asBooleanOrNull, asTrueFalseOrNull } from \"@Obsidian/Utility/booleanUtils\";\r\nimport { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\nimport { ClientValue, ConfigurationPropertyKey, ConfigurationValueKey, ValueItem } from \"./keyValueListField.partial\";\r\nimport { getFieldConfigurationProps, getFieldEditorProps } from \"./utils\";\r\n\r\nfunction parseModelValue(modelValue: string | undefined): ClientValue[] {\r\n    try {\r\n        return JSON.parse(modelValue ?? \"[]\") as ClientValue[];\r\n    }\r\n    catch {\r\n        return [];\r\n    }\r\n}\r\n\r\nexport const EditComponent = defineComponent({\r\n    name: \"KeyValueListField.Edit\",\r\n\r\n    components: {\r\n        RockFormField,\r\n        DropDownList,\r\n        TextBox\r\n    },\r\n\r\n    props: getFieldEditorProps(),\r\n\r\n    setup(props, { emit }) {\r\n        const internalValues = ref(parseModelValue(props.modelValue));\r\n\r\n        const valueOptions = computed((): ValueItem[] => {\r\n            try {\r\n                return JSON.parse(props.configurationValues[ConfigurationValueKey.Values] ?? \"[]\") as ValueItem[];\r\n            }\r\n            catch {\r\n                return [];\r\n            }\r\n        });\r\n\r\n        /** The options to choose from in the drop down list */\r\n        const options = computed((): ListItemBag[] => {\r\n            const providedOptions: ListItemBag[] = valueOptions.value.map(v => {\r\n                return {\r\n                    text: v.text,\r\n                    value: v.value\r\n                };\r\n            });\r\n\r\n            return providedOptions;\r\n        });\r\n\r\n        const hasValues = computed((): boolean => valueOptions.value.length > 0);\r\n\r\n        const keyPlaceholder = computed((): string => {\r\n            return props.configurationValues[ConfigurationValueKey.KeyPrompt] ?? \"\";\r\n        });\r\n\r\n        const valuePlaceholder = computed((): string => {\r\n            return props.configurationValues[ConfigurationValueKey.ValuePrompt] ?? \"\";\r\n        });\r\n\r\n        const displayValueFirst = computed((): boolean => {\r\n            return asBoolean(props.configurationValues[ConfigurationValueKey.DisplayValueFirst] ?? \"\");\r\n        });\r\n\r\n        watch(() => props.modelValue, () => {\r\n            internalValues.value = parseModelValue(props.modelValue);\r\n        });\r\n\r\n        watch(() => internalValues.value, () => {\r\n            emit(\"update:modelValue\", JSON.stringify(internalValues.value));\r\n        }, {\r\n            deep: true\r\n        });\r\n\r\n        const onAddClick = (): void => {\r\n            let defaultValue = \"\";\r\n\r\n            if (hasValues.value) {\r\n                defaultValue = valueOptions.value[0].value;\r\n            }\r\n\r\n            internalValues.value.push({ key: \"\", value: defaultValue });\r\n        };\r\n\r\n        const onRemoveClick = (index: number): void => {\r\n            internalValues.value.splice(index, 1);\r\n        };\r\n\r\n        return {\r\n            internalValues,\r\n            hasValues,\r\n            displayValueFirst,\r\n            options,\r\n            keyPlaceholder,\r\n            valuePlaceholder,\r\n            onAddClick,\r\n            onRemoveClick\r\n        };\r\n    },\r\n\r\n    template: `\r\n<RockFormField\r\n    :modelValue=\"internalValues\"\r\n    formGroupClasses=\"key-value-list\"\r\n    name=\"key-value-list\">\r\n    <template #default=\"{uniqueId}\">\r\n        <div class=\"control-wrapper\">\r\n<span :id=\"uniqueId\" class=\"key-value-list\">\r\n    <span class=\"key-value-rows\">\r\n        <div v-for=\"(value, valueIndex) in internalValues\" class=\"controls controls-row form-control-group\">\r\n            <template v-if=\"!displayValueFirst\">\r\n                <input v-model=\"value.key\" class=\"key-value-key form-control input-width-md\" type=\"text\" :placeholder=\"keyPlaceholder\">\r\n\r\n                <select v-if=\"hasValues\" v-model=\"value.value\" class=\"form-control input-width-lg\">\r\n                    <option v-for=\"option in options\" :value=\"option.value\" :key=\"option.value\">{{ option.text }}</option>\r\n                </select>\r\n                <input v-else v-model=\"value.value\" class=\"key-value-value form-control input-width-md\" type=\"text\" :placeholder=\"valuePlaceholder\">\r\n            </template>\r\n            <template v-else>\r\n                <select v-if=\"hasValues\" v-model=\"value.value\" class=\"form-control input-width-lg\">\r\n                    <option v-for=\"option in options\" :value=\"option.value\" :key=\"option.value\">{{ option.text }}</option>\r\n                </select>\r\n                <input v-else v-model=\"value.value\" class=\"key-value-value form-control input-width-md\" type=\"text\" :placeholder=\"valuePlaceholder\">\r\n\r\n                <input v-model=\"value.key\" class=\"key-value-key form-control input-width-md\" type=\"text\" :placeholder=\"keyPlaceholder\">\r\n            </template>\r\n\r\n            <a href=\"#\" @click.prevent=\"onRemoveClick(valueIndex)\" class=\"btn btn-sm btn-danger\"><i class=\"fa fa-times\"></i></a>\r\n        </div>\r\n    </span>\r\n    <div class=\"control-actions\">\r\n        <a class=\"btn btn-action btn-square btn-xs\" href=\"#\" @click.prevent=\"onAddClick\"><i class=\"fa fa-plus-circle\"></i></a>\r\n    </div>\r\n</span>\r\n        </div>\r\n    </template>\r\n</RockFormField>\r\n`\r\n});\r\n\r\nexport const ConfigurationComponent = defineComponent({\r\n    name: \"KeyValueListField.Configuration\",\r\n\r\n    components: {\r\n        CheckBox,\r\n        DropDownList,\r\n        TextBox\r\n    },\r\n\r\n    props: getFieldConfigurationProps(),\r\n\r\n    emits: [\r\n        \"update:modelValue\",\r\n        \"updateConfiguration\",\r\n        \"updateConfigurationValue\"\r\n    ],\r\n\r\n    setup(props, { emit }) {\r\n        // Define the properties that will hold the current selections.\r\n        const customValues = ref(\"\");\r\n        const internalCustomValues = ref(\"\");\r\n        const keyPrompt = ref(\"\");\r\n        const labelPrompt = ref(\"\");\r\n        const definedType = ref(\"\");\r\n        const allowHtml = ref(false);\r\n        const displayValueFirst = ref(false);\r\n\r\n        const definedTypeOptions = computed((): ListItemBag[] => {\r\n            try {\r\n                return JSON.parse(props.configurationProperties[ConfigurationPropertyKey.DefinedTypes] ?? \"[]\") as ListItemBag[];\r\n            }\r\n            catch {\r\n                return [];\r\n            }\r\n        });\r\n\r\n        const onBlur = (): void => {\r\n            internalCustomValues.value = customValues.value;\r\n        };\r\n\r\n        /**\r\n         * Update the modelValue property if any value of the dictionary has\r\n         * actually changed. This helps prevent unwanted postbacks if the value\r\n         * didn't really change - which can happen if multiple values get updated\r\n         * at the same time.\r\n         *\r\n         * @returns true if a new modelValue was emitted to the parent component.\r\n         */\r\n        const maybeUpdateModelValue = (): boolean => {\r\n            const newValue: Record<string, string> = {};\r\n\r\n            // Construct the new value that will be emitted if it is different\r\n            // than the current value.\r\n            newValue[ConfigurationValueKey.KeyPrompt] = keyPrompt.value ?? \"\";\r\n            newValue[ConfigurationValueKey.ValuePrompt] = labelPrompt.value ?? \"\";\r\n            newValue[ConfigurationValueKey.DefinedType] = definedType.value ?? \"\";\r\n            newValue[ConfigurationValueKey.CustomValues] = internalCustomValues.value ?? \"\";\r\n            newValue[ConfigurationValueKey.AllowHtml] = asTrueFalseOrNull(allowHtml.value) ?? \"False\";\r\n            newValue[ConfigurationValueKey.DisplayValueFirst] = asTrueFalseOrNull(displayValueFirst.value) ?? \"False\";\r\n\r\n            // Compare the new value and the old value.\r\n            const anyValueChanged = newValue[ConfigurationValueKey.KeyPrompt] !== (props.modelValue[ConfigurationValueKey.KeyPrompt] ?? \"\")\r\n                || newValue[ConfigurationValueKey.ValuePrompt] !== (props.modelValue[ConfigurationValueKey.ValuePrompt] ?? \"\")\r\n                || newValue[ConfigurationValueKey.DefinedType] !== (props.modelValue[ConfigurationValueKey.DefinedType] ?? \"\")\r\n                || newValue[ConfigurationValueKey.CustomValues] !== (props.modelValue[ConfigurationValueKey.CustomValues] ?? \"\")\r\n                || newValue[ConfigurationValueKey.AllowHtml] !== (props.modelValue[ConfigurationValueKey.AllowHtml] ?? \"False\")\r\n                || newValue[ConfigurationValueKey.DisplayValueFirst] !== (props.modelValue[ConfigurationValueKey.DisplayValueFirst] ?? \"False\");\r\n\r\n            // If any value changed then emit the new model value.\r\n            if (anyValueChanged) {\r\n                emit(\"update:modelValue\", newValue);\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Emits the updateConfigurationValue if the value has actually changed.\r\n         * \r\n         * @param key The key that was possibly modified.\r\n         * @param value The new value.\r\n         */\r\n        const maybeUpdateConfiguration = (key: string, value: string): void => {\r\n            if (maybeUpdateModelValue()) {\r\n                emit(\"updateConfigurationValue\", key, value);\r\n            }\r\n        };\r\n\r\n        // Watch for changes coming in from the parent component and update our\r\n        // data to match the new information.\r\n        watch(() => [props.modelValue, props.configurationProperties], () => {\r\n            keyPrompt.value = props.modelValue[ConfigurationValueKey.KeyPrompt] ?? \"\";\r\n            labelPrompt.value = props.modelValue[ConfigurationValueKey.ValuePrompt] ?? \"\";\r\n            definedType.value = props.modelValue[ConfigurationValueKey.DefinedType] ?? \"\";\r\n            customValues.value = props.modelValue[ConfigurationValueKey.CustomValues] ?? \"\";\r\n            internalCustomValues.value = customValues.value;\r\n            allowHtml.value = asBooleanOrNull(props.modelValue[ConfigurationValueKey.AllowHtml]) ?? false;\r\n            displayValueFirst.value = asBooleanOrNull(props.modelValue[ConfigurationValueKey.DisplayValueFirst]) ?? false;\r\n        }, {\r\n            immediate: true\r\n        });\r\n\r\n        // Watch for changes in properties that require new configuration\r\n        // properties to be retrieved from the server.\r\n        watch([definedType, internalCustomValues], () => {\r\n            if (maybeUpdateModelValue()) {\r\n                emit(\"updateConfiguration\");\r\n            }\r\n        });\r\n\r\n        // Watch for changes in properties that only require a local UI update.\r\n        watch(keyPrompt, () => maybeUpdateConfiguration(ConfigurationValueKey.KeyPrompt, keyPrompt.value ?? \"\"));\r\n        watch(labelPrompt, () => maybeUpdateConfiguration(ConfigurationValueKey.ValuePrompt, labelPrompt.value ?? \"\"));\r\n        watch(allowHtml, () => maybeUpdateConfiguration(ConfigurationValueKey.AllowHtml, asTrueFalseOrNull(allowHtml.value) ?? \"False\"));\r\n        watch(displayValueFirst, () => maybeUpdateConfiguration(ConfigurationValueKey.DisplayValueFirst, asTrueFalseOrNull(displayValueFirst.value) ?? \"False\"));\r\n\r\n        return {\r\n            allowHtml,\r\n            definedType,\r\n            definedTypeOptions,\r\n            displayValueFirst,\r\n            keyPrompt,\r\n            labelPrompt,\r\n            onBlur,\r\n            customValues\r\n        };\r\n    },\r\n\r\n    template: `\r\n<div>\r\n    <TextBox v-model=\"keyPrompt\"\r\n        label=\"Key Prompt\"\r\n        help=\"The text to display as a prompt in the key textbox.\" />\r\n\r\n    <TextBox v-model=\"labelPrompt\"\r\n        label=\"Label Prompt\"\r\n        help=\"The text to display as a prompt in the label textbox.\" />\r\n\r\n    <DropDownList v-model=\"definedType\"\r\n        label=\"Defined Type\"\r\n        help=\"Optional Defined Type to select values from, otherwise values will be free-form text fields.\"\r\n        :items=\"definedTypeOptions\" />\r\n\r\n    <TextBox v-model=\"customValues\"\r\n        label=\"Custom Values\"\r\n        help=\"Optional list of options to use for the values.  Format is either 'value1,value2,value3,...', or 'value1^text1,value2^text2,value3^text3,...'.\"\r\n        textMode=\"multiline\"\r\n        @blur=\"onBlur\" />\r\n\r\n    <CheckBox v-model=\"allowHtml\"\r\n        label=\"Allow HTML\"\r\n        help=\"Allow HTML content in values.\" />\r\n\r\n    <CheckBox v-model=\"displayValueFirst\"\r\n        label=\"Display Value First\"\r\n        help=\"Reverses the display order of the key and the value.\" />\r\n</div>\r\n`\r\n});\r\n"],"names":["ConfigurationValueKey","ConfigurationPropertyKey","defineAsyncComponent","_asyncToGenerator","EditComponent","ConfigurationComponent","parseModelValue","modelValue","JSON","parse","_unused","defineComponent","name","components","RockFormField","DropDownList","TextBox","props","getFieldEditorProps","setup","_ref","emit","internalValues","ref","valueOptions","computed","_props$configurationV","configurationValues","Values","_unused2","options","providedOptions","value","map","v","text","hasValues","length","keyPlaceholder","_props$configurationV2","KeyPrompt","valuePlaceholder","_props$configurationV3","ValuePrompt","displayValueFirst","_props$configurationV4","asBoolean","DisplayValueFirst","watch","stringify","deep","onAddClick","defaultValue","push","key","onRemoveClick","index","splice","template","CheckBox","getFieldConfigurationProps","emits","_ref2","customValues","internalCustomValues","keyPrompt","labelPrompt","definedType","allowHtml","definedTypeOptions","_props$configurationP","configurationProperties","DefinedTypes","_unused3","onBlur","maybeUpdateModelValue","_keyPrompt$value","_labelPrompt$value","_definedType$value","_internalCustomValues","_asTrueFalseOrNull","_asTrueFalseOrNull2","_props$modelValue$Con","_props$modelValue$Con2","_props$modelValue$Con3","_props$modelValue$Con4","_props$modelValue$Con5","_props$modelValue$Con6","newValue","DefinedType","CustomValues","AllowHtml","asTrueFalseOrNull","anyValueChanged","maybeUpdateConfiguration","_props$modelValue$Con7","_props$modelValue$Con8","_props$modelValue$Con9","_props$modelValue$Con10","_asBooleanOrNull","_asBooleanOrNull2","asBooleanOrNull","immediate","_keyPrompt$value2","_labelPrompt$value2","_asTrueFalseOrNull3","_asTrueFalseOrNull4"],"mappings":"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"}