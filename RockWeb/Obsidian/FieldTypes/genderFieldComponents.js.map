{"version":3,"file":"genderFieldComponents.js","sources":["../../../Framework/FieldTypes/genderFieldComponents.ts"],"sourcesContent":["// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\nimport { defineComponent, ref, watch } from \"vue\";\r\nimport { getFieldEditorProps, getFieldConfigurationProps } from \"./utils\";\r\nimport DropDownList from \"@Obsidian/Controls/dropDownList\";\r\nimport CheckBox from \"@Obsidian/Controls/checkBox\";\r\nimport { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\nimport { asBoolean, asTrueFalseOrNull } from \"@Obsidian/Utility/booleanUtils\";\r\n\r\nconst enum ConfigurationValueKey {\r\n    HideUnknownGender = \"hideUnknownGender\"\r\n}\r\n\r\nexport const EditComponent = defineComponent({\r\n\r\n    name: \"GenderField.Edit\",\r\n\r\n    components: {\r\n        DropDownList\r\n    },\r\n\r\n    props: getFieldEditorProps(),\r\n\r\n    data() {\r\n        \r\n        return {\r\n            internalValue: \"\"\r\n        };\r\n    },\r\n\r\n    computed: {\r\n        dropDownListOptions(): ListItemBag[] {\r\n            const hideUnknownGenderConfig = this.configurationValues[ConfigurationValueKey.HideUnknownGender];\r\n            const hideUnknownGender = hideUnknownGenderConfig?.toLowerCase() === \"true\";\r\n\r\n            if (hideUnknownGender === false) {\r\n                return [\r\n                    { text: \"Unknown\", value: \"0\" },\r\n                    { text: \"Male\", value: \"1\" },\r\n                    { text: \"Female\", value: \"2\" }\r\n                ] as ListItemBag[];\r\n                }\r\n            else {\r\n                return [\r\n                    { text: \"Male\", value: \"1\" },\r\n                    { text: \"Female\", value: \"2\" }\r\n                ] as ListItemBag[];\r\n            }\r\n        }\r\n    },\r\n\r\n    watch: {\r\n        internalValue() {\r\n            this.$emit(\"update:modelValue\", this.internalValue);\r\n        },\r\n        modelValue: {\r\n            immediate: true,\r\n            handler() {\r\n                this.internalValue = this.modelValue || \"\";\r\n            }\r\n        }\r\n    },\r\n\r\n    template: `\r\n<DropDownList v-model=\"internalValue\" :items=\"dropDownListOptions\" formControlClasses=\"input-width-md\" />\r\n`\r\n});\r\n\r\nexport const ConfigurationComponent = defineComponent({\r\n    name: \"GenderField.Configuration\",\r\n\r\n    components: { CheckBox },\r\n\r\n    props: getFieldConfigurationProps(),\r\n\r\n    emits: [\r\n        \"update:modelValue\",\r\n        \"updateConfiguration\",\r\n        \"updateConfigurationValue\"\r\n    ],\r\n\r\n    setup(props, { emit }) {\r\n        const hideUnknownGender = ref(false);\r\n\r\n        /**\r\n         * Update the modelValue property if any value of the dictionary has\r\n         * actually changed. This helps prevent unwanted postbacks if the value\r\n         * didn't really change - which can happen if multiple values get updated\r\n         * at the same time.\r\n         *\r\n         * @returns true if a new modelValue was emitted to the parent component.\r\n         */\r\n        const maybeUpdateModelValue = (): boolean => {\r\n            const newValue: Record<string, string> = {};\r\n\r\n            // Construct the new value that will be emitted if it is different\r\n            // than the current value.\r\n            newValue[ConfigurationValueKey.HideUnknownGender] = asTrueFalseOrNull(hideUnknownGender.value) ?? \"False\";\r\n\r\n            // Compare the new value and the old value.\r\n            const anyValueChanged = newValue[ConfigurationValueKey.HideUnknownGender] !== (props.modelValue[ConfigurationValueKey.HideUnknownGender] ?? \"False\");\r\n\r\n            // If any value changed then emit the new model value.\r\n            if (anyValueChanged) {\r\n                emit(\"update:modelValue\", newValue);\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Emits the updateConfigurationValue if the value has actually changed.\r\n         * \r\n         * @param key The key that was possibly modified.\r\n         * @param value The new value.\r\n         */\r\n        const maybeUpdateConfiguration = (key: string, value: string): void => {\r\n            if (maybeUpdateModelValue()) {\r\n                emit(\"updateConfigurationValue\", key, value);\r\n            }\r\n        };\r\n\r\n        // Watch for changes coming in from the parent component and update our\r\n        // data to match the new information.\r\n        watch(() => [props.modelValue, props.configurationProperties], () => {\r\n            hideUnknownGender.value = asBoolean(props.modelValue[ConfigurationValueKey.HideUnknownGender]);\r\n        }, {\r\n            immediate: true\r\n        });\r\n\r\n        // Watch for changes in properties that require new configuration\r\n        // properties to be retrieved from the server.\r\n        // THIS IS JUST A PLACEHOLDER FOR COPYING TO NEW FIELDS THAT MIGHT NEED IT.\r\n        // THIS FIELD DOES NOT NEED THIS\r\n        watch([], () => {\r\n            if (maybeUpdateModelValue()) {\r\n                emit(\"updateConfiguration\");\r\n            }\r\n        });\r\n\r\n        // Watch for changes in properties that only require a local UI update.\r\n        watch(hideUnknownGender, () => maybeUpdateConfiguration(ConfigurationValueKey.HideUnknownGender, asTrueFalseOrNull(hideUnknownGender.value) ?? \"False\"));\r\n\r\n        return { hideUnknownGender };\r\n    },\r\n\r\n    template: `\r\n<div>\r\n    <CheckBox v-model=\"hideUnknownGender\" label=\"Hide Unknown Gender\" help=\"When set, the 'Unknown' Option will not appear in the list of genders.\" text=\"Yes\" />\r\n</div>\r\n`\r\n});\r\n"],"names":["ConfigurationValueKey","EditComponent","defineComponent","name","components","DropDownList","props","getFieldEditorProps","data","internalValue","computed","dropDownListOptions","hideUnknownGenderConfig","configurationValues","HideUnknownGender","hideUnknownGender","toLowerCase","text","value","watch","$emit","modelValue","immediate","handler","template","ConfigurationComponent","CheckBox","getFieldConfigurationProps","emits","setup","_ref","emit","ref","maybeUpdateModelValue","_asTrueFalseOrNull","_props$modelValue$Con","newValue","asTrueFalseOrNull","anyValueChanged","maybeUpdateConfiguration","key","configurationProperties","asBoolean","_asTrueFalseOrNull2"],"mappings":"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"}