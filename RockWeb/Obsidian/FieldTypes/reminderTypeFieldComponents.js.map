{"version":3,"file":"reminderTypeFieldComponents.js","sources":["../../../Framework/FieldTypes/reminderTypeField.partial.ts","../../../Framework/FieldTypes/reminderTypeFieldComponents.ts"],"sourcesContent":["ï»¿// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\nimport { Component } from \"vue\";\r\nimport { defineAsyncComponent } from \"@Obsidian/Utility/component\";\r\nimport { FieldTypeBase } from \"./fieldType\";\r\nimport { Guid } from \"@Obsidian/Types\";\r\n\r\nexport const enum ConfigurationValueKey {\r\n    Values = \"values\"\r\n}\r\n\r\nexport type ReminderTypeFieldItem = {\r\n    guid: Guid\r\n    name: string,\r\n    entityTypeName: string\r\n};\r\n\r\n\r\n// The edit component can be quite large, so load it only as needed.\r\nconst editComponent = defineAsyncComponent(async () => {\r\n    return (await import(\"./reminderTypeFieldComponents\")).EditComponent;\r\n});\r\n\r\n// The configuration component can be quite large, so load it only as needed.\r\nconst configurationComponent = defineAsyncComponent(async () => {\r\n    return (await import(\"./reminderTypeFieldComponents\")).ConfigurationComponent;\r\n});\r\n\r\n/**\r\n * The field type handler for the Reminder Type field.\r\n */\r\nexport class ReminderTypeFieldType extends FieldTypeBase {\r\n    public override getTextValue(value: string, configurationValues: Record<string, string>): string {\r\n        if (value === undefined || value === null || value === \"\") {\r\n            return \"\";\r\n        }\r\n\r\n        try {\r\n            const values = JSON.parse(configurationValues[ConfigurationValueKey.Values] ?? \"[]\") as ReminderTypeFieldItem[];\r\n            const selectedValues = values.filter(o => o.guid.toLowerCase() === value.toLowerCase());\r\n\r\n            return selectedValues[0].name;\r\n        }\r\n        catch {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    public override getEditComponent(): Component {\r\n        return editComponent;\r\n    }\r\n\r\n    public override getConfigurationComponent(): Component {\r\n        return configurationComponent;\r\n    }\r\n}\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\nimport { defineComponent, computed } from \"vue\";\r\nimport { getFieldEditorProps } from \"./utils\";\r\nimport DropDownList from \"@Obsidian/Controls/dropDownList\";\r\nimport { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\nimport { ConfigurationValueKey, ReminderTypeFieldItem } from \"./reminderTypeField.partial\";\r\nimport { useVModelPassthrough } from \"@Obsidian/Utility/component\";\r\n\r\nexport const EditComponent = defineComponent({\r\n    name: \"ReminderTypeField.Edit\",\r\n\r\n    components: {\r\n        DropDownList\r\n    },\r\n\r\n    props: getFieldEditorProps(),\r\n\r\n    emits: {\r\n        \"update:modelValue\": (_v: string) => true\r\n    },\r\n\r\n    setup(props, { emit }) {\r\n        const internalValue = useVModelPassthrough(props, \"modelValue\", emit);\r\n\r\n        /** The options to choose from in the drop down list */\r\n        const options = computed((): ListItemBag[] => {\r\n            try {\r\n                const items = JSON.parse(props.configurationValues[ConfigurationValueKey.Values] ?? \"[]\") as ReminderTypeFieldItem[];\r\n                return items.map(rt => ({ value: rt.guid, text: `${rt.name} (${rt.entityTypeName})` }));\r\n            }\r\n            catch {\r\n                return [];\r\n            }\r\n        });\r\n\r\n        return {\r\n            internalValue,\r\n            options\r\n        };\r\n    },\r\n\r\n    template: `<DropDownList v-model=\"internalValue\" :items=\"options\" />`\r\n});\r\n\r\nexport const ConfigurationComponent = defineComponent({\r\n    name: \"ReminderTypeField.Configuration\",\r\n\r\n    template: ``\r\n});\r\n"],"names":["ConfigurationValueKey","defineAsyncComponent","_asyncToGenerator","EditComponent","ConfigurationComponent","defineComponent","name","components","DropDownList","props","getFieldEditorProps","emits","_v","setup","_ref","emit","internalValue","useVModelPassthrough","options","computed","_props$configurationV","items","JSON","parse","configurationValues","Values","map","rt","value","guid","text","concat","entityTypeName","_unused","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAqBkBA,IAAAA,qBAAqB,aAArBA,qBAAqB,EAAA;QAArBA,qBAAqB,CAAA,QAAA,CAAA,GAAA,QAAA,CAAA;MAAA,EAAA,OAArBA,qBAAqB,CAAA;MAAA,CAAA,CAAA,EAAA,CAAA,CAAA;MAYjBC,oBAAoB,CAAAC,iBAAA,CAAC,aAAY;MACnD,EAAA,OAAO,OAAO,cAAO,+BAA+B,CAAC,EAAEC,aAAa,CAAA;MACxE,CAAC,CAAC,EAAA;MAG6BF,oBAAoB,CAAAC,iBAAA,CAAC,aAAY;MAC5D,EAAA,OAAO,OAAO,cAAO,+BAA+B,CAAC,EAAEE,sBAAsB,CAAA;MACjF,CAAC,CAAC;;ACjBWD,UAAAA,aAAa,4BAAGE,eAAe,CAAC;MACzCC,EAAAA,IAAI,EAAE,wBAAwB;MAE9BC,EAAAA,UAAU,EAAE;MACRC,IAAAA,YAAAA;SACH;QAEDC,KAAK,EAAEC,mBAAmB,EAAE;MAE5BC,EAAAA,KAAK,EAAE;UACH,mBAAmB,EAAGC,EAAU,IAAK,IAAA;SACxC;MAEDC,EAAAA,KAAKA,CAACJ,KAAK,EAAAK,IAAA,EAAY;MAAA,IAAA,IAARC,IAAI,GAAAD,IAAA,CAAJC,IAAI,CAAA;UACf,IAAMC,aAAa,GAAGC,oBAAoB,CAACR,KAAK,EAAE,YAAY,EAAEM,IAAI,CAAC,CAAA;MAGrE,IAAA,IAAMG,OAAO,GAAGC,QAAQ,CAAC,MAAqB;YAC1C,IAAI;MAAA,QAAA,IAAAC,qBAAA,CAAA;cACA,IAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAAAH,CAAAA,qBAAA,GAACX,KAAK,CAACe,mBAAmB,CAACxB,qBAAqB,CAACyB,MAAM,CAAC,MAAA,IAAA,IAAAL,qBAAA,KAAAA,KAAAA,CAAAA,GAAAA,qBAAA,GAAI,IAAI,CAA4B,CAAA;MACpH,QAAA,OAAOC,KAAK,CAACK,GAAG,CAACC,EAAE,KAAK;gBAAEC,KAAK,EAAED,EAAE,CAACE,IAAI;gBAAEC,IAAI,EAAA,EAAA,CAAAC,MAAA,CAAKJ,EAAE,CAACrB,IAAI,EAAA,IAAA,CAAA,CAAAyB,MAAA,CAAKJ,EAAE,CAACK,cAAc,EAAA,GAAA,CAAA;MAAI,SAAC,CAAC,CAAC,CAAA;aAC1F,CACD,OAAAC,OAAA,EAAM;MACF,QAAA,OAAO,EAAE,CAAA;MACb,OAAA;MACJ,KAAC,CAAC,CAAA;UAEF,OAAO;YACHjB,aAAa;MACbE,MAAAA,OAAAA;WACH,CAAA;SACJ;QAEDgB,QAAQ,EAAA,+DAAA;MACZ,CAAC,GAAC;AAEW9B,UAAAA,sBAAsB,qCAAGC,eAAe,CAAC;MAClDC,EAAAA,IAAI,EAAE,iCAAiC;QAEvC4B,QAAQ,EAAA,EAAA;MACZ,CAAC;;;;;;;;"}