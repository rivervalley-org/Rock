{"version":3,"file":"Communication.js","sources":["../../../Framework/Enums/Communication/communicationMessageFilter.ts","../../../Framework/Enums/Communication/communicationRecipientStatus.ts","../../../Framework/Enums/Communication/communicationStatus.ts","../../../Framework/Enums/Communication/notificationClassification.ts","../../../Framework/Enums/Communication/segmentCriteria.ts"],"sourcesContent":["//------------------------------------------------------------------------------\r\n// <auto-generated>\r\n//     This code was generated by the Rock.CodeGeneration project\r\n//     Changes to this file will be lost when the code is regenerated.\r\n// </auto-generated>\r\n//------------------------------------------------------------------------------\r\n// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\n/** The filter applied to the GetCommunicationConversation query */\r\nexport const CommunicationMessageFilter = {\r\n    /** When this option is selected, only messages that have actual replies (and with IsRead=false) are considered */\r\n    ShowUnreadReplies: 0,\r\n\r\n    /** When this option is selected, it would show messages that have any replies/responses (IsRead true or false) */\r\n    ShowAllReplies: 1,\r\n\r\n    /** When this option is selected, all messages are shown regardless of any replies/responses. */\r\n    ShowAllMessages: 2\r\n} as const;\r\n\r\n/** The filter applied to the GetCommunicationConversation query */\r\nexport const CommunicationMessageFilterDescription: Record<number, string> = {\r\n    0: \"Show Unread Replies\",\r\n\r\n    1: \"Show All Replies\",\r\n\r\n    2: \"Show All Messages\"\r\n};\r\n\r\n/** The filter applied to the GetCommunicationConversation query */\r\nexport type CommunicationMessageFilter = typeof CommunicationMessageFilter[keyof typeof CommunicationMessageFilter];\r\n","//------------------------------------------------------------------------------\r\n// <auto-generated>\r\n//     This code was generated by the Rock.CodeGeneration project\r\n//     Changes to this file will be lost when the code is regenerated.\r\n// </auto-generated>\r\n//------------------------------------------------------------------------------\r\n// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\n/** The status of communication being sent to recipient */\r\nexport const CommunicationRecipientStatus = {\r\n    /** Communication has not yet been sent to recipient */\r\n    Pending: 0,\r\n\r\n    /** Communication was successfully delivered to recipient's mail server */\r\n    Delivered: 1,\r\n\r\n    /** Communication failed to be sent to recipient */\r\n    Failed: 2,\r\n\r\n    /** Communication was cancelled prior to sending to the recipient */\r\n    Cancelled: 3,\r\n\r\n    /** Communication was sent and opened (viewed) by the recipient */\r\n    Opened: 4,\r\n\r\n    /** Temporary status used while sending ( to prevent transaction and job sending same record ) */\r\n    Sending: 5\r\n} as const;\r\n\r\n/** The status of communication being sent to recipient */\r\nexport const CommunicationRecipientStatusDescription: Record<number, string> = {\r\n    0: \"Pending\",\r\n\r\n    1: \"Delivered\",\r\n\r\n    2: \"Failed\",\r\n\r\n    3: \"Cancelled\",\r\n\r\n    4: \"Opened\",\r\n\r\n    5: \"Sending\"\r\n};\r\n\r\n/** The status of communication being sent to recipient */\r\nexport type CommunicationRecipientStatus = typeof CommunicationRecipientStatus[keyof typeof CommunicationRecipientStatus];\r\n","//------------------------------------------------------------------------------\r\n// <auto-generated>\r\n//     This code was generated by the Rock.CodeGeneration project\r\n//     Changes to this file will be lost when the code is regenerated.\r\n// </auto-generated>\r\n//------------------------------------------------------------------------------\r\n// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\n/** The status of a communication */\r\nexport const CommunicationStatus = {\r\n    /**\r\n     * Communication was created, but not yet edited by a user. (i.e. from data grid or report)\r\n     * Transient communications more than a few hours old may be deleted by clean-up job.\r\n     */\r\n    Transient: 0,\r\n\r\n    /** Communication is currently being drafted */\r\n    Draft: 1,\r\n\r\n    /** Communication has been submitted but not yet approved or denied */\r\n    PendingApproval: 2,\r\n\r\n    /** Communication has been approved for sending */\r\n    Approved: 3,\r\n\r\n    /** Communication has been denied */\r\n    Denied: 4\r\n} as const;\r\n\r\n/** The status of a communication */\r\nexport const CommunicationStatusDescription: Record<number, string> = {\r\n    0: \"Transient\",\r\n\r\n    1: \"Draft\",\r\n\r\n    2: \"Pending Approval\",\r\n\r\n    3: \"Approved\",\r\n\r\n    4: \"Denied\"\r\n};\r\n\r\n/** The status of a communication */\r\nexport type CommunicationStatus = typeof CommunicationStatus[keyof typeof CommunicationStatus];\r\n","//------------------------------------------------------------------------------\r\n// <auto-generated>\r\n//     This code was generated by the Rock.CodeGeneration project\r\n//     Changes to this file will be lost when the code is regenerated.\r\n// </auto-generated>\r\n//------------------------------------------------------------------------------\r\n// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\n/** The classification of the notification (borrowed from Bootstrap) */\r\nexport const NotificationClassification = {\r\n    /** The success */\r\n    Success: 0,\r\n\r\n    /** The information */\r\n    Info: 1,\r\n\r\n    /** The warning */\r\n    Warning: 2,\r\n\r\n    /** The danger */\r\n    Danger: 3\r\n} as const;\r\n\r\n/** The classification of the notification (borrowed from Bootstrap) */\r\nexport const NotificationClassificationDescription: Record<number, string> = {\r\n    0: \"Success\",\r\n\r\n    1: \"Info\",\r\n\r\n    2: \"Warning\",\r\n\r\n    3: \"Danger\"\r\n};\r\n\r\n/** The classification of the notification (borrowed from Bootstrap) */\r\nexport type NotificationClassification = typeof NotificationClassification[keyof typeof NotificationClassification];\r\n","//------------------------------------------------------------------------------\r\n// <auto-generated>\r\n//     This code was generated by the Rock.CodeGeneration project\r\n//     Changes to this file will be lost when the code is regenerated.\r\n// </auto-generated>\r\n//------------------------------------------------------------------------------\r\n// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\n/** Flag indicating if communication is for all selected segments or any segments */\r\nexport const SegmentCriteria = {\r\n    /** All */\r\n    All: 0,\r\n\r\n    /** Any */\r\n    Any: 1\r\n} as const;\r\n\r\n/** Flag indicating if communication is for all selected segments or any segments */\r\nexport const SegmentCriteriaDescription: Record<number, string> = {\r\n    0: \"All\",\r\n\r\n    1: \"Any\"\r\n};\r\n\r\n/** Flag indicating if communication is for all selected segments or any segments */\r\nexport type SegmentCriteria = typeof SegmentCriteria[keyof typeof SegmentCriteria];\r\n"],"names":["CommunicationMessageFilter","ShowUnreadReplies","ShowAllReplies","ShowAllMessages","CommunicationMessageFilterDescription","CommunicationRecipientStatus","Pending","Delivered","Failed","Cancelled","Opened","Sending","CommunicationRecipientStatusDescription","CommunicationStatus","Transient","Draft","PendingApproval","Approved","Denied","CommunicationStatusDescription","NotificationClassification","Success","Info","Warning","Danger","NotificationClassificationDescription","SegmentCriteria","All","Any","SegmentCriteriaDescription"],"mappings":";;;;;YAwBO,IAAMA,0BAA0B,GAAG;YAEtCC,EAAAA,iBAAiB,EAAE,CAAC;YAGpBC,EAAAA,cAAc,EAAE,CAAC;YAGjBC,EAAAA,eAAe,EAAE,CAAA;YACrB,CAAU,CAAA;YAGH,IAAMC,qCAA6D,GAAG;YACzE,EAAA,CAAC,EAAE,qBAAqB;YAExB,EAAA,CAAC,EAAE,kBAAkB;YAErB,EAAA,CAAC,EAAE,mBAAA;YACP,CAAC;;;;;;;;;YClBM,IAAMC,4BAA4B,GAAG;YAExCC,EAAAA,OAAO,EAAE,CAAC;YAGVC,EAAAA,SAAS,EAAE,CAAC;YAGZC,EAAAA,MAAM,EAAE,CAAC;YAGTC,EAAAA,SAAS,EAAE,CAAC;YAGZC,EAAAA,MAAM,EAAE,CAAC;YAGTC,EAAAA,OAAO,EAAE,CAAA;YACb,CAAU,CAAA;YAGH,IAAMC,uCAA+D,GAAG;YAC3E,EAAA,CAAC,EAAE,SAAS;YAEZ,EAAA,CAAC,EAAE,WAAW;YAEd,EAAA,CAAC,EAAE,QAAQ;YAEX,EAAA,CAAC,EAAE,WAAW;YAEd,EAAA,CAAC,EAAE,QAAQ;YAEX,EAAA,CAAC,EAAE,SAAA;YACP,CAAC;;;;;;;;;YCjCM,IAAMC,mBAAmB,GAAG;YAK/BC,EAAAA,SAAS,EAAE,CAAC;YAGZC,EAAAA,KAAK,EAAE,CAAC;YAGRC,EAAAA,eAAe,EAAE,CAAC;YAGlBC,EAAAA,QAAQ,EAAE,CAAC;YAGXC,EAAAA,MAAM,EAAE,CAAA;YACZ,CAAU,CAAA;YAGH,IAAMC,8BAAsD,GAAG;YAClE,EAAA,CAAC,EAAE,WAAW;YAEd,EAAA,CAAC,EAAE,OAAO;YAEV,EAAA,CAAC,EAAE,kBAAkB;YAErB,EAAA,CAAC,EAAE,UAAU;YAEb,EAAA,CAAC,EAAE,QAAA;YACP,CAAC;;;;;;;;;YC/BM,IAAMC,0BAA0B,GAAG;YAEtCC,EAAAA,OAAO,EAAE,CAAC;YAGVC,EAAAA,IAAI,EAAE,CAAC;YAGPC,EAAAA,OAAO,EAAE,CAAC;YAGVC,EAAAA,MAAM,EAAE,CAAA;YACZ,CAAU,CAAA;YAGH,IAAMC,qCAA6D,GAAG;YACzE,EAAA,CAAC,EAAE,SAAS;YAEZ,EAAA,CAAC,EAAE,MAAM;YAET,EAAA,CAAC,EAAE,SAAS;YAEZ,EAAA,CAAC,EAAE,QAAA;YACP,CAAC;;;;;;;;;YCvBM,IAAMC,eAAe,GAAG;YAE3BC,EAAAA,GAAG,EAAE,CAAC;YAGNC,EAAAA,GAAG,EAAE,CAAA;YACT,CAAU,CAAA;YAGH,IAAMC,0BAAkD,GAAG;YAC9D,EAAA,CAAC,EAAE,KAAK;YAER,EAAA,CAAC,EAAE,KAAA;YACP,CAAC;;;;;;;;;;;;;;;"}