{"version":3,"file":"Workflow.js","sources":["../../../Framework/Enums/Workflow/workflowActionFormPersonEntryOption.ts","../../../Framework/Enums/Workflow/workflowLoggingLevel.ts","../../../Framework/Enums/Workflow/workflowTriggerType.ts","../../../Framework/Enums/Workflow/workflowTriggerValueChangeType.ts"],"sourcesContent":["//------------------------------------------------------------------------------\r\n// <auto-generated>\r\n//     This code was generated by the Rock.CodeGeneration project\r\n//     Changes to this file will be lost when the code is regenerated.\r\n// </auto-generated>\r\n//------------------------------------------------------------------------------\r\n// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\n/** WorkflowActionFormPersonEntryOption Enum */\r\nexport const WorkflowActionFormPersonEntryOption = {\r\n    /** Don't show the control */\r\n    Hidden: 0,\r\n\r\n    /** Control is visible, but a value is not required */\r\n    Optional: 1,\r\n\r\n    /** Control is visible, and a value is required */\r\n    Required: 2\r\n} as const;\r\n\r\n/** WorkflowActionFormPersonEntryOption Enum */\r\nexport const WorkflowActionFormPersonEntryOptionDescription: Record<number, string> = {\r\n    0: \"Hide\",\r\n\r\n    1: \"Optional\",\r\n\r\n    2: \"Required\"\r\n};\r\n\r\n/** WorkflowActionFormPersonEntryOption Enum */\r\nexport type WorkflowActionFormPersonEntryOption = typeof WorkflowActionFormPersonEntryOption[keyof typeof WorkflowActionFormPersonEntryOption];\r\n","//------------------------------------------------------------------------------\r\n// <auto-generated>\r\n//     This code was generated by the Rock.CodeGeneration project\r\n//     Changes to this file will be lost when the code is regenerated.\r\n// </auto-generated>\r\n//------------------------------------------------------------------------------\r\n// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\n/** The level of details to log */\r\nexport const WorkflowLoggingLevel = {\r\n    /** Don't log any details */\r\n    None: 0,\r\n\r\n    /** Log workflow events */\r\n    Workflow: 1,\r\n\r\n    /** Log workflow and activity events */\r\n    Activity: 2,\r\n\r\n    /** Log workflow, activity, and action events */\r\n    Action: 3\r\n} as const;\r\n\r\n/** The level of details to log */\r\nexport const WorkflowLoggingLevelDescription: Record<number, string> = {\r\n    0: \"None\",\r\n\r\n    1: \"Workflow\",\r\n\r\n    2: \"Activity\",\r\n\r\n    3: \"Action\"\r\n};\r\n\r\n/** The level of details to log */\r\nexport type WorkflowLoggingLevel = typeof WorkflowLoggingLevel[keyof typeof WorkflowLoggingLevel];\r\n","//------------------------------------------------------------------------------\r\n// <auto-generated>\r\n//     This code was generated by the Rock.CodeGeneration project\r\n//     Changes to this file will be lost when the code is regenerated.\r\n// </auto-generated>\r\n//------------------------------------------------------------------------------\r\n// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\n/** Type of workflow trigger */\r\nexport const WorkflowTriggerType = {\r\n    /** Pre Save */\r\n    PreSave: 0,\r\n\r\n    /** Post Save */\r\n    PostSave: 1,\r\n\r\n    /** Pre Delete */\r\n    PreDelete: 2,\r\n\r\n    /** Post Delete */\r\n    PostDelete: 3,\r\n\r\n    /** Immediate Post Save */\r\n    ImmediatePostSave: 4,\r\n\r\n    /** Post Add */\r\n    PostAdd: 5\r\n} as const;\r\n\r\n/** Type of workflow trigger */\r\nexport const WorkflowTriggerTypeDescription: Record<number, string> = {\r\n    0: \"Pre Save\",\r\n\r\n    1: \"Post Save\",\r\n\r\n    2: \"Pre Delete\",\r\n\r\n    3: \"Post Delete\",\r\n\r\n    4: \"Immediate Post Save\",\r\n\r\n    5: \"Post Add\"\r\n};\r\n\r\n/** Type of workflow trigger */\r\nexport type WorkflowTriggerType = typeof WorkflowTriggerType[keyof typeof WorkflowTriggerType];\r\n","//------------------------------------------------------------------------------\r\n// <auto-generated>\r\n//     This code was generated by the Rock.CodeGeneration project\r\n//     Changes to this file will be lost when the code is regenerated.\r\n// </auto-generated>\r\n//------------------------------------------------------------------------------\r\n// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\n/** This is determined by the values for EntityTypeQualifierValue and EntityTypeQualifierValuePrevious */\r\nexport const WorkflowTriggerValueChangeType = {\r\n    /** EntityTypeQualifierValue and EntityTypeQualifierValuePrevious are different, so we are looking to see if the value Changed From/To */\r\n    ChangeFromTo: 0,\r\n\r\n    /** EntityTypeQualifierValue and EntityTypeQualifierValuePrevious are the same value, so the trigger is simply looking to see if the value is equal to the specified value */\r\n    ValueEqual: 1\r\n} as const;\r\n\r\n/** This is determined by the values for EntityTypeQualifierValue and EntityTypeQualifierValuePrevious */\r\nexport const WorkflowTriggerValueChangeTypeDescription: Record<number, string> = {\r\n    0: \"Change From To\",\r\n\r\n    1: \"Value Equal\"\r\n};\r\n\r\n/** This is determined by the values for EntityTypeQualifierValue and EntityTypeQualifierValuePrevious */\r\nexport type WorkflowTriggerValueChangeType = typeof WorkflowTriggerValueChangeType[keyof typeof WorkflowTriggerValueChangeType];\r\n"],"names":["WorkflowActionFormPersonEntryOption","Hidden","Optional","Required","WorkflowActionFormPersonEntryOptionDescription","WorkflowLoggingLevel","None","Workflow","Activity","Action","WorkflowLoggingLevelDescription","WorkflowTriggerType","PreSave","PostSave","PreDelete","PostDelete","ImmediatePostSave","PostAdd","WorkflowTriggerTypeDescription","WorkflowTriggerValueChangeType","ChangeFromTo","ValueEqual","WorkflowTriggerValueChangeTypeDescription"],"mappings":";;;;;YAwBO,IAAMA,mCAAmC,GAAG;YAE/CC,EAAAA,MAAM,EAAE,CAAC;YAGTC,EAAAA,QAAQ,EAAE,CAAC;YAGXC,EAAAA,QAAQ,EAAE,CAAA;YACd,CAAU,CAAA;YAGH,IAAMC,8CAAsE,GAAG;YAClF,EAAA,CAAC,EAAE,MAAM;YAET,EAAA,CAAC,EAAE,UAAU;YAEb,EAAA,CAAC,EAAE,UAAA;YACP,CAAC;;;;;;;;;YClBM,IAAMC,oBAAoB,GAAG;YAEhCC,EAAAA,IAAI,EAAE,CAAC;YAGPC,EAAAA,QAAQ,EAAE,CAAC;YAGXC,EAAAA,QAAQ,EAAE,CAAC;YAGXC,EAAAA,MAAM,EAAE,CAAA;YACZ,CAAU,CAAA;YAGH,IAAMC,+BAAuD,GAAG;YACnE,EAAA,CAAC,EAAE,MAAM;YAET,EAAA,CAAC,EAAE,UAAU;YAEb,EAAA,CAAC,EAAE,UAAU;YAEb,EAAA,CAAC,EAAE,QAAA;YACP,CAAC;;;;;;;;;YCvBM,IAAMC,mBAAmB,GAAG;YAE/BC,EAAAA,OAAO,EAAE,CAAC;YAGVC,EAAAA,QAAQ,EAAE,CAAC;YAGXC,EAAAA,SAAS,EAAE,CAAC;YAGZC,EAAAA,UAAU,EAAE,CAAC;YAGbC,EAAAA,iBAAiB,EAAE,CAAC;YAGpBC,EAAAA,OAAO,EAAE,CAAA;YACb,CAAU,CAAA;YAGH,IAAMC,8BAAsD,GAAG;YAClE,EAAA,CAAC,EAAE,UAAU;YAEb,EAAA,CAAC,EAAE,WAAW;YAEd,EAAA,CAAC,EAAE,YAAY;YAEf,EAAA,CAAC,EAAE,aAAa;YAEhB,EAAA,CAAC,EAAE,qBAAqB;YAExB,EAAA,CAAC,EAAE,UAAA;YACP,CAAC;;;;;;;;;YCjCM,IAAMC,8BAA8B,GAAG;YAE1CC,EAAAA,YAAY,EAAE,CAAC;YAGfC,EAAAA,UAAU,EAAE,CAAA;YAChB,CAAU,CAAA;YAGH,IAAMC,yCAAiE,GAAG;YAC7E,EAAA,CAAC,EAAE,gBAAgB;YAEnB,EAAA,CAAC,EAAE,aAAA;YACP,CAAC;;;;;;;;;;;;;;;"}