{"version":3,"file":"personDetail.js","sources":["../../src/Example/personDetail.ts"],"sourcesContent":["ï»¿// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { Guid } from \"@Obsidian/Types\";\r\nimport bus from \"@Obsidian/Utility/bus\";\r\nimport Block from \"@Obsidian/Templates/block\";\r\nimport RockButton from \"@Obsidian/Controls/rockButton\";\r\nimport TextBox from \"@Obsidian/Controls/textBox\";\r\nimport { defineComponent } from \"vue\";\r\nimport { useStore } from \"@Obsidian/PageState\";\r\nimport EmailBox from \"@Obsidian/Controls/emailBox\";\r\nimport RockValidation from \"@Obsidian/Controls/rockValidation\";\r\nimport RockForm from \"@Obsidian/Controls/rockForm\";\r\nimport Loading from \"@Obsidian/Controls/loading\";\r\nimport PrimaryBlock from \"@Obsidian/Controls/primaryBlock\";\r\nimport { useInvokeBlockAction } from \"@Obsidian/Utility/block\";\r\nimport DatePicker from \"@Obsidian/Controls/datePicker.obs\";\r\nimport AddressControl from \"@Obsidian/Controls/addressControl.obs\";\r\nimport { getDefaultAddressControlModel } from \"@Obsidian/Utility/address\";\r\nimport { toNumber } from \"@Obsidian/Utility/numberUtils\";\r\nimport { DateTimeFormat, RockDateTime } from \"@Obsidian/Utility/rockDateTime\";\r\nimport { PersonBag } from \"@Obsidian/ViewModels/Entities/personBag\";\r\n\r\nconst store = useStore();\r\n\r\nexport default defineComponent({\r\n    name: \"Example.PersonDetail\",\r\n\r\n    components: {\r\n        Block,\r\n        RockButton,\r\n        TextBox,\r\n        EmailBox,\r\n        RockValidation,\r\n        RockForm,\r\n        Loading,\r\n        PrimaryBlock,\r\n        DatePicker,\r\n        AddressControl\r\n    },\r\n\r\n    setup() {\r\n        return {\r\n            invokeBlockAction: useInvokeBlockAction()\r\n        };\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            person: null as PersonBag | null,\r\n            personForEditing: null as PersonBag | null,\r\n            isEditMode: false,\r\n            messageToPublish: \"\",\r\n            receivedMessage: \"\",\r\n            isLoading: false,\r\n            birthdate: null as string | null,\r\n            address: getDefaultAddressControlModel()\r\n        };\r\n    },\r\n\r\n    methods: {\r\n        setIsEditMode(isEditMode: boolean): void {\r\n            this.isEditMode = isEditMode;\r\n        },\r\n\r\n        doEdit(): void {\r\n            this.personForEditing = this.person ? { ...this.person } : null;\r\n            this.birthdate = this.birthdateOrNull?.toASPString(\"yyyy-MM-dd\") ?? null;\r\n            this.setIsEditMode(true);\r\n        },\r\n\r\n        doCancel(): void {\r\n            this.setIsEditMode(false);\r\n        },\r\n\r\n        async doSave(): Promise<void> {\r\n            if (this.personForEditing) {\r\n                const match = /^(\\d+)-(\\d+)-(\\d+)/.exec(this.birthdate ?? \"\");\r\n                let birthDay: number | null = null;\r\n                let birthMonth: number | null = null;\r\n                let birthYear: number | null = null;\r\n\r\n                if (match !== null) {\r\n                    birthYear = toNumber(match[1]);\r\n                    birthMonth = toNumber(match[2]);\r\n                    birthDay = toNumber(match[3]);\r\n                }\r\n\r\n                this.person = {\r\n                    ...this.personForEditing,\r\n                    birthDay: birthDay,\r\n                    birthMonth: birthMonth,\r\n                    birthYear: birthYear\r\n                };\r\n                this.isLoading = true;\r\n\r\n                await this.invokeBlockAction(\"EditPerson\", {\r\n                    personArgs: this.person\r\n                });\r\n\r\n                this.isLoading = false;\r\n            }\r\n\r\n            this.setIsEditMode(false);\r\n        },\r\n\r\n        doPublish(): void {\r\n            bus.publish(\"PersonDetail:Message\", this.messageToPublish);\r\n            this.messageToPublish = \"\";\r\n        },\r\n\r\n        receiveMessage(message: string): void {\r\n            this.receivedMessage = message;\r\n        }\r\n    },\r\n\r\n    computed: {\r\n        birthdateOrNull(): RockDateTime | null {\r\n            if (!this.person?.birthDay || !this.person.birthMonth || !this.person.birthYear) {\r\n                return null;\r\n            }\r\n\r\n            return RockDateTime.fromParts(this.person.birthYear, this.person.birthMonth, this.person.birthDay);\r\n        },\r\n\r\n        birthdateFormatted(): string {\r\n            if (!this.birthdateOrNull) {\r\n                return \"Not Completed\";\r\n            }\r\n\r\n            return this.birthdateOrNull.toLocaleString(DateTimeFormat.DateTimeShort);\r\n        },\r\n\r\n        blockTitle(): string {\r\n            return this.person ?\r\n                `Edit Yourself: ${this.person.nickName || this.person.firstName} ${this.person.lastName}` :\r\n                \"Edit Yourself\";\r\n        },\r\n\r\n        currentPerson(): PersonBag | null {\r\n            return store.state.currentPerson;\r\n        },\r\n\r\n        currentPersonKey(): Guid | null {\r\n            return this.currentPerson?.idKey ?? null;\r\n        }\r\n    },\r\n    watch: {\r\n        currentPersonKey: {\r\n            immediate: true,\r\n            async handler(): Promise<void> {\r\n                if (!this.currentPersonKey) {\r\n                    // Set the person empty to match the guid\r\n                    this.person = null;\r\n                    return;\r\n                }\r\n\r\n                if (this.person && this.person.idKey === this.currentPersonKey) {\r\n                    // Already loaded\r\n                    return;\r\n                }\r\n\r\n                // Sync the person with the guid\r\n                this.isLoading = true;\r\n                this.person = (await this.invokeBlockAction<PersonBag>(\"GetPersonViewModel\")).data;\r\n                this.isLoading = false;\r\n            }\r\n        }\r\n    },\r\n\r\n    created(): void {\r\n        bus.subscribe<string>(\"PersonSecondary:Message\", this.receiveMessage);\r\n    },\r\n\r\n    template: `\r\n<PrimaryBlock :hideSecondaryBlocks=\"isEditMode\">\r\n    <Block :title=\"blockTitle\">\r\n        <template #default>\r\n            <Loading :isLoading=\"isLoading\">\r\n                <p v-if=\"!person\">\r\n                    There is no person loaded.\r\n                </p>\r\n                <RockForm v-else-if=\"isEditMode\" @submit=\"doSave\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <TextBox label=\"First Name\" v-model=\"personForEditing.firstName\" rules=\"required\" />\r\n                            <TextBox label=\"Nick Name\" v-model=\"personForEditing.nickName\" />\r\n                            <TextBox label=\"Last Name\" v-model=\"personForEditing.lastName\" rules=\"required\" />\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <EmailBox label=\"Email\" v-model=\"personForEditing.email\" />\r\n                            <DatePicker label=\"Birthdate\" v-model=\"birthdate\" rules=\"required\" />\r\n                        </div>\r\n                        <div class=\"col-sm-12\">\r\n                            <AddressControl v-model=\"address\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"actions\">\r\n                        <RockButton btnType=\"primary\" type=\"submit\">Save</RockButton>\r\n                        <RockButton btnType=\"link\" @click=\"doCancel\">Cancel</RockButton>\r\n                    </div>\r\n                </RockForm>\r\n                <template v-else>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-6\">\r\n                            <dl>\r\n                                <dt>First Name</dt>\r\n                                <dd>{{person.firstName}}</dd>\r\n                                <dt>Last Name</dt>\r\n                                <dd>{{person.lastName}}</dd>\r\n                                <dt>Email</dt>\r\n                                <dd>{{person.email}}</dd>\r\n                                <dt>Birthdate</dt>\r\n                                <dd>{{birthdateFormatted}}</dd>\r\n                            </dl>\r\n                        </div>\r\n                        <div class=\"col-sm-6\">\r\n                            <div class=\"well\">\r\n                                <TextBox label=\"Message\" v-model=\"messageToPublish\" />\r\n                                <RockButton btnType=\"primary\" btnSize=\"sm\" @click=\"doPublish\">Publish</RockButton>\r\n                            </div>\r\n                            <p>\r\n                                <strong>Secondary block says:</strong>\r\n                                {{receivedMessage}}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"actions\">\r\n                        <RockButton btnType=\"primary\" @click=\"doEdit\">Edit</RockButton>\r\n                    </div>\r\n                </template>\r\n            </Loading>\r\n        </template>\r\n    </Block>\r\n</PrimaryBlock>`\r\n});\r\n"],"names":["store","useStore","defineComponent","name","components","Block","RockButton","TextBox","EmailBox","RockValidation","RockForm","Loading","PrimaryBlock","DatePicker","AddressControl","setup","invokeBlockAction","useInvokeBlockAction","data","person","personForEditing","isEditMode","messageToPublish","receivedMessage","isLoading","birthdate","address","getDefaultAddressControlModel","methods","setIsEditMode","doEdit","_this$birthdateOrNull","_this$birthdateOrNull2","_objectSpread","birthdateOrNull","toASPString","doCancel","doSave","_this","_asyncToGenerator","_this$birthdate","match","exec","birthDay","birthMonth","birthYear","toNumber","personArgs","doPublish","bus","publish","receiveMessage","message","computed","_this$person","RockDateTime","fromParts","birthdateFormatted","toLocaleString","DateTimeFormat","DateTimeShort","blockTitle","concat","nickName","firstName","lastName","currentPerson","state","currentPersonKey","_this$currentPerson$i","_this$currentPerson","idKey","watch","immediate","handler","_this2","created","subscribe","template"],"mappings":"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"}