{"version":3,"file":"controlGallery.js","sources":["../../src/Example/controlGallery.ts"],"sourcesContent":["ï»¿// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\n/**\r\n * The following controls are not included for various reasons (e.g. only used internally or are not finalized)\r\n *\r\n * - attributeEditor\r\n * - blockActionSourceGrid\r\n * - categorizedValuePickerDropDownLevel\r\n * - componentFromUrl\r\n * - fieldFilterContainer\r\n * - fieldFilterRuleRow\r\n * - gatewayControl\r\n * - geoPickerMap\r\n * - grid\r\n * - gridColumn\r\n * - gridProfileLInkColumn\r\n * - gridRow\r\n * - gridSelectColumn\r\n * - myWellGatewayControl\r\n * - nmiGatewayControl\r\n * - pageDebugTimings\r\n * - primaryBlock\r\n * - rockAttributeFilter\r\n * - rockField\r\n * - rockForm\r\n * - rockFormField\r\n * - rockSuspense\r\n * - saveFinancialAccountForm\r\n * - secondaryBlock\r\n * - testGatewayControl\r\n * - timeIntervalPicker\r\n */\r\n\r\nimport { Component, computed, defineComponent, getCurrentInstance, isRef, onMounted, onUnmounted, PropType, Ref, ref, watch } from \"vue\";\r\nimport * as ObjectUtils from \"@Obsidian/Utility/objectUtils\";\r\nimport { BtnType } from \"@Obsidian/Enums/Controls/btnType\";\r\nimport { BtnSize } from \"@Obsidian/Enums/Controls/btnSize\";\r\nimport HighlightJs from \"@Obsidian/Libs/highlightJs\";\r\nimport FieldFilterEditor from \"@Obsidian/Controls/fieldFilterEditor\";\r\nimport AttributeValuesContainer from \"@Obsidian/Controls/attributeValuesContainer\";\r\nimport TextBox from \"@Obsidian/Controls/textBox\";\r\nimport EmailBox from \"@Obsidian/Controls/emailBox\";\r\nimport CodeEditor from \"@Obsidian/Controls/codeEditor\";\r\nimport CurrencyBox from \"@Obsidian/Controls/currencyBox\";\r\nimport DatePicker from \"@Obsidian/Controls/datePicker.obs\";\r\nimport DateRangePicker from \"@Obsidian/Controls/dateRangePicker\";\r\nimport DateTimePicker from \"@Obsidian/Controls/dateTimePicker\";\r\nimport ListBox from \"@Obsidian/Controls/listBox\";\r\nimport BirthdayPicker from \"@Obsidian/Controls/birthdayPicker\";\r\nimport NumberUpDown from \"@Obsidian/Controls/numberUpDown\";\r\nimport AddressControl from \"@Obsidian/Controls/addressControl.obs\";\r\nimport InlineSwitch from \"@Obsidian/Controls/inlineSwitch\";\r\nimport Switch from \"@Obsidian/Controls/switch\";\r\nimport Toggle from \"@Obsidian/Controls/toggle\";\r\nimport ItemsWithPreAndPostHtml, { ItemWithPreAndPostHtml } from \"@Obsidian/Controls/itemsWithPreAndPostHtml\";\r\nimport StaticFormControl from \"@Obsidian/Controls/staticFormControl\";\r\nimport ProgressTracker, { ProgressTrackerItem } from \"@Obsidian/Controls/progressTracker\";\r\nimport RockForm from \"@Obsidian/Controls/rockForm\";\r\nimport RockButton from \"@Obsidian/Controls/rockButton\";\r\nimport RadioButtonList from \"@Obsidian/Controls/radioButtonList\";\r\nimport DropDownList from \"@Obsidian/Controls/dropDownList\";\r\nimport Dialog from \"@Obsidian/Controls/dialog\";\r\nimport InlineCheckBox from \"@Obsidian/Controls/inlineCheckBox\";\r\nimport CheckBox from \"@Obsidian/Controls/checkBox\";\r\nimport PhoneNumberBox from \"@Obsidian/Controls/phoneNumberBox.obs\";\r\nimport HelpBlock from \"@Obsidian/Controls/helpBlock\";\r\nimport DatePartsPicker, { DatePartsPickerValue } from \"@Obsidian/Controls/datePartsPicker\";\r\nimport ColorPicker from \"@Obsidian/Controls/colorPicker\";\r\nimport NumberBox from \"@Obsidian/Controls/numberBox\";\r\nimport NumberRangeBox from \"@Obsidian/Controls/numberRangeBox\";\r\nimport GenderDropDownList from \"@Obsidian/Controls/genderDropDownList\";\r\nimport SocialSecurityNumberBox from \"@Obsidian/Controls/socialSecurityNumberBox\";\r\nimport TimePicker from \"@Obsidian/Controls/timePicker\";\r\nimport UrlLinkBox from \"@Obsidian/Controls/urlLinkBox\";\r\nimport CheckBoxList from \"@Obsidian/Controls/checkBoxList\";\r\nimport Rating from \"@Obsidian/Controls/rating\";\r\nimport Fullscreen from \"@Obsidian/Controls/fullscreen\";\r\nimport Panel from \"@Obsidian/Controls/panel\";\r\nimport PersonPicker from \"@Obsidian/Controls/personPicker\";\r\nimport FileUploader from \"@Obsidian/Controls/fileUploader\";\r\nimport ImageUploader from \"@Obsidian/Controls/imageUploader\";\r\nimport EntityTypePicker from \"@Obsidian/Controls/entityTypePicker\";\r\nimport AchievementTypePicker from \"@Obsidian/Controls/achievementTypePicker\";\r\nimport AssessmentTypePicker from \"@Obsidian/Controls/assessmentTypePicker\";\r\nimport AssetStorageProviderPicker from \"@Obsidian/Controls/assetStorageProviderPicker\";\r\nimport BinaryFileTypePicker from \"@Obsidian/Controls/binaryFileTypePicker\";\r\nimport BinaryFilePicker from \"@Obsidian/Controls/binaryFilePicker\";\r\nimport SlidingDateRangePicker from \"@Obsidian/Controls/slidingDateRangePicker.obs\";\r\nimport DefinedValuePicker from \"@Obsidian/Controls/definedValuePicker.obs\";\r\nimport CategoryPicker from \"@Obsidian/Controls/categoryPicker\";\r\nimport LocationItemPicker from \"@Obsidian/Controls/locationItemPicker\";\r\nimport ConnectionRequestPicker from \"@Obsidian/Controls/connectionRequestPicker\";\r\nimport CopyButton from \"@Obsidian/Controls/copyButton\";\r\nimport EntityTagList from \"@Obsidian/Controls/entityTagList\";\r\nimport Following from \"@Obsidian/Controls/following\";\r\nimport AuditDetail from \"@Obsidian/Controls/auditDetail\";\r\nimport CampusPicker from \"@Obsidian/Controls/campusPicker.obs\";\r\nimport DetailBlock from \"@Obsidian/Templates/detailBlock\";\r\nimport { toNumber } from \"@Obsidian/Utility/numberUtils\";\r\nimport { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\nimport { PublicAttributeBag } from \"@Obsidian/ViewModels/Utility/publicAttributeBag\";\r\nimport { newGuid } from \"@Obsidian/Utility/guid\";\r\nimport { FieldFilterGroupBag } from \"@Obsidian/ViewModels/Reporting/fieldFilterGroupBag\";\r\nimport { AssessmentType } from \"@Obsidian/SystemGuids/assessmentType\";\r\nimport { BinaryFiletype } from \"@Obsidian/SystemGuids/binaryFiletype\";\r\nimport { DefinedType } from \"@Obsidian/SystemGuids/definedType\";\r\nimport { EntityType } from \"@Obsidian/SystemGuids/entityType\";\r\nimport { FieldType } from \"@Obsidian/SystemGuids/fieldType\";\r\nimport { SlidingDateRange, rangeTypeOptions } from \"@Obsidian/Utility/slidingDateRange\";\r\nimport { PanelAction } from \"@Obsidian/Types/Controls/panelAction\";\r\nimport { sleep } from \"@Obsidian/Utility/promiseUtils\";\r\nimport { upperCaseFirstCharacter } from \"@Obsidian/Utility/stringUtils\";\r\nimport TransitionVerticalCollapse from \"@Obsidian/Controls/transitionVerticalCollapse\";\r\nimport SectionContainer from \"@Obsidian/Controls/sectionContainer\";\r\nimport SectionHeader from \"@Obsidian/Controls/sectionHeader\";\r\nimport { FieldFilterSourceBag } from \"@Obsidian/ViewModels/Reporting/fieldFilterSourceBag\";\r\nimport { PickerDisplayStyle } from \"@Obsidian/Enums/Controls/pickerDisplayStyle\";\r\nimport { useStore } from \"@Obsidian/PageState\";\r\nimport BadgeComponentPicker from \"@Obsidian/Controls/badgeComponentPicker\";\r\nimport ComponentPicker from \"@Obsidian/Controls/componentPicker\";\r\nimport Modal from \"@Obsidian/Controls/modal\";\r\nimport EventItemPicker from \"@Obsidian/Controls/eventItemPicker\";\r\nimport DataViewPicker from \"@Obsidian/Controls/dataViewPicker\";\r\nimport WorkflowTypePicker from \"@Obsidian/Controls/workflowTypePicker\";\r\nimport FinancialGatewayPicker from \"@Obsidian/Controls/financialGatewayPicker\";\r\nimport FinancialStatementTemplatePicker from \"@Obsidian/Controls/financialStatementTemplatePicker\";\r\nimport FieldTypePicker from \"@Obsidian/Controls/fieldTypePicker\";\r\nimport GradePicker from \"@Obsidian/Controls/gradePicker\";\r\nimport ScheduleBuilder from \"@Obsidian/Controls/scheduleBuilder.obs\";\r\nimport GroupMemberPicker from \"@Obsidian/Controls/groupMemberPicker\";\r\nimport InteractionChannelPicker from \"@Obsidian/Controls/interactionChannelPicker\";\r\nimport InteractionComponentPicker from \"@Obsidian/Controls/interactionComponentPicker\";\r\nimport LavaCommandPicker from \"@Obsidian/Controls/lavaCommandPicker\";\r\nimport RemoteAuthsPicker from \"@Obsidian/Controls/remoteAuthsPicker\";\r\nimport StepProgramPicker from \"@Obsidian/Controls/stepProgramPicker\";\r\nimport StepStatusPicker from \"@Obsidian/Controls/stepStatusPicker\";\r\nimport StepTypePicker from \"@Obsidian/Controls/stepTypePicker\";\r\nimport StreakTypePicker from \"@Obsidian/Controls/streakTypePicker\";\r\nimport NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\nimport { AlertType } from \"@Obsidian/Enums/Controls/alertType\";\r\nimport BadgeList from \"@Obsidian/Controls/badgeList\";\r\nimport BadgePicker from \"@Obsidian/Controls/badgePicker\";\r\nimport BasicTimePicker from \"@Obsidian/Controls/basicTimePicker\";\r\nimport CountdownTimer from \"@Obsidian/Controls/countdownTimer\";\r\nimport ElectronicSignature from \"@Obsidian/Controls/electronicSignature\";\r\nimport FieldTypeEditor from \"@Obsidian/Controls/fieldTypeEditor\";\r\nimport InlineRangeSlider from \"@Obsidian/Controls/inlineRangeSlider.obs\";\r\nimport RangeSlider from \"@Obsidian/Controls/rangeSlider.obs\";\r\nimport JavaScriptAnchor from \"@Obsidian/Controls/javaScriptAnchor\";\r\nimport KeyValueList from \"@Obsidian/Controls/keyValueList\";\r\nimport Loading from \"@Obsidian/Controls/loading\";\r\nimport LoadingIndicator from \"@Obsidian/Controls/loadingIndicator\";\r\nimport NumberUpDownGroup, { NumberUpDownGroupOption } from \"@Obsidian/Controls/numberUpDownGroup\";\r\nimport PanelWidget from \"@Obsidian/Controls/panelWidget\";\r\nimport ProgressBar from \"@Obsidian/Controls/progressBar\";\r\nimport RockLabel from \"@Obsidian/Controls/rockLabel\";\r\nimport RockValidation from \"@Obsidian/Controls/rockValidation\";\r\nimport TabbedContent from \"@Obsidian/Controls/tabbedContent\";\r\nimport ValueDetailList from \"@Obsidian/Controls/valueDetailList\";\r\nimport PagePicker from \"@Obsidian/Controls/pagePicker.obs\";\r\nimport GroupPicker from \"@Obsidian/Controls/groupPicker\";\r\nimport MergeTemplatePicker from \"@Obsidian/Controls/mergeTemplatePicker\";\r\nimport { MergeTemplateOwnership } from \"@Obsidian/Enums/Controls/mergeTemplateOwnership\";\r\nimport MetricCategoryPicker from \"@Obsidian/Controls/metricCategoryPicker\";\r\nimport MetricItemPicker from \"@Obsidian/Controls/metricItemPicker\";\r\nimport RegistrationTemplatePicker from \"@Obsidian/Controls/registrationTemplatePicker\";\r\nimport ReportPicker from \"@Obsidian/Controls/reportPicker\";\r\nimport SchedulePicker from \"@Obsidian/Controls/schedulePicker\";\r\nimport WorkflowActionTypePicker from \"@Obsidian/Controls/workflowActionTypePicker.obs\";\r\nimport DayOfWeekPicker from \"@Obsidian/Controls/dayOfWeekPicker.obs\";\r\nimport MonthDayPicker from \"@Obsidian/Controls/monthDayPicker.obs\";\r\nimport MonthYearPicker from \"@Obsidian/Controls/monthYearPicker.obs\";\r\nimport { RockCacheability } from \"@Obsidian/ViewModels/Controls/rockCacheability\";\r\nimport CacheabilityPicker from \"@Obsidian/Controls/cacheabilityPicker.obs\";\r\nimport ButtonGroup from \"@Obsidian/Controls/buttonGroup.obs\";\r\nimport IntervalPicker from \"@Obsidian/Controls/intervalPicker.obs\";\r\nimport GeoPicker from \"@Obsidian/Controls/geoPicker.obs\";\r\nimport ContentDropDownPicker from \"@Obsidian/Controls/contentDropDownPicker.obs\";\r\nimport WordCloud from \"@Obsidian/Controls/wordCloud.obs\";\r\nimport EventCalendarPicker from \"@Obsidian/Controls/eventCalendarPicker.obs\";\r\nimport GroupTypePicker from \"@Obsidian/Controls/groupTypePicker.obs\";\r\nimport LocationAddressPicker from \"@Obsidian/Controls/locationAddressPicker.obs\";\r\nimport LocationPicker from \"@Obsidian/Controls/locationPicker.obs\";\r\nimport LocationList from \"@Obsidian/Controls/locationList.obs\";\r\nimport EthnicityPicker from \"@Obsidian/Controls/ethnicityPicker.obs\";\r\nimport RacePicker from \"@Obsidian/Controls/racePicker.obs\";\r\nimport MediaElementPicker from \"@Obsidian/Controls/mediaElementPicker.obs\";\r\nimport MergeFieldPicker from \"@Obsidian/Controls/mergeFieldPicker.obs\";\r\nimport CategorizedValuePicker from \"@Obsidian/Controls/categorizedValuePicker.obs\";\r\nimport ReminderTypePicker from \"@Obsidian/Controls/reminderTypePicker.obs\";\r\nimport GroupRolePicker from \"@Obsidian/Controls/groupRolePicker.obs\";\r\nimport ModalAlert from \"@Obsidian/Controls/modalAlert.obs\";\r\nimport { ModalAlertType } from \"@Obsidian/Enums/Controls/modalAlertType\";\r\nimport ContentChannelItemPicker from \"@Obsidian/Controls/contentChannelItemPicker.obs\";\r\nimport PersonLink from \"@Obsidian/Controls/personLink.obs\";\r\nimport PopOver from \"@Obsidian/Controls/popOver.obs\";\r\nimport RockLiteral from \"@Obsidian/Controls/rockLiteral.obs\";\r\nimport RegistryEntry from \"@Obsidian/Controls/registryEntry.obs\";\r\nimport GroupTypeGroupPicker from \"@Obsidian/Controls/groupTypeGroupPicker.obs\";\r\n\r\n// #region Gallery Support\r\n\r\nconst displayStyleItems: ListItemBag[] = [\r\n    {\r\n        value: PickerDisplayStyle.Auto,\r\n        text: \"Auto\"\r\n    },\r\n    {\r\n        value: PickerDisplayStyle.List,\r\n        text: \"List\"\r\n    },\r\n    {\r\n        value: PickerDisplayStyle.Condensed,\r\n        text: \"Condensed\"\r\n    }\r\n];\r\n\r\n/**\r\n * Takes a gallery component's name and converts it to a name that is useful for the header and\r\n * sidebar by adding spaces and stripping out the \"Gallery\" suffix\r\n *\r\n * @param name Name of the control\r\n * @returns A string of code that can be used to import the given control file\r\n */\r\nfunction convertComponentName(name: string | undefined | null): string {\r\n    if (!name) {\r\n        return \"Unknown Component\";\r\n    }\r\n\r\n    return name.replace(/[A-Z]/g, \" $&\").replace(/Gallery$/, \"\").trim();\r\n}\r\n\r\n/**\r\n * Takes an element name and a collection of attribute keys and values and\r\n * constructs the example code. This can be used inside a computed call to\r\n * have the example code dynamically match the selected settings.\r\n *\r\n * @param elementName The name of the element to use in the example code.\r\n * @param attributes The attribute names and values to append to the element name.\r\n *\r\n * @returns A string of valid HTML content for how to use the component.\r\n */\r\nfunction buildExampleCode(elementName: string, attributes: Record<string, Ref<unknown> | unknown>): string {\r\n    const attrs: string[] = [];\r\n\r\n    for (const attr in attributes) {\r\n        let value = attributes[attr];\r\n        console.log(\"attributes\", attr, value);\r\n\r\n        if (isRef(value)) {\r\n            value = value.value;\r\n        }\r\n\r\n        if (typeof value === \"string\") {\r\n            attrs.push(`${attr}=\"${value}\"`);\r\n        }\r\n        else if (typeof value === \"number\") {\r\n            attrs.push(`:${attr}=\"${value}\"`);\r\n        }\r\n        else if (typeof value === \"boolean\") {\r\n            attrs.push(`:${attr}=\"${value ? \"true\" : \"false\"}\"`);\r\n        }\r\n        else if (value === undefined || value === null) {\r\n            /* Do nothing */\r\n        }\r\n    }\r\n\r\n    console.log(attrs);\r\n\r\n    return `<${elementName} ${attrs.join(\" \")} />`;\r\n}\r\n\r\n/**\r\n * A wrapper component that describes the template used for each of the controls\r\n * within this control gallery\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nexport const GalleryAndResult = defineComponent({\r\n    name: \"GalleryAndResult\",\r\n    inheritAttrs: false,\r\n    components: {\r\n        Switch,\r\n        SectionHeader,\r\n        TransitionVerticalCollapse,\r\n        CopyButton\r\n    },\r\n    props: {\r\n        // The value passed into/controlled by the component, if any\r\n        value: {\r\n            required: false\r\n        },\r\n        // If true, the provided value is a map of multiple values\r\n        hasMultipleValues: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        },\r\n        // Show another copy of the component so you can see that the value is reflected across them\r\n        enableReflection: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        },\r\n        // Code snippet showing how to import the component\r\n        importCode: {\r\n            type: String as PropType<string>\r\n        },\r\n        // Code snippet of the component being used\r\n        exampleCode: {\r\n            type: String as PropType<string>\r\n        },\r\n        // Describe what this component is/does\r\n        description: {\r\n            type: String as PropType<string>,\r\n            default: \"\"\r\n        },\r\n        /** Display the value raw and unformatted inside the PRE element. */\r\n        displayAsRaw: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    setup(props) {\r\n        // Calculate a header based on the name of the component, adding spaces and stripping out the \"Gallery\" suffix\r\n        const componentName = convertComponentName(getCurrentInstance()?.parent?.type?.name);\r\n\r\n        const formattedValue = computed(() => {\r\n            if (props.displayAsRaw) {\r\n                return props.value;\r\n            }\r\n            else if (!props.hasMultipleValues) {\r\n                return JSON.stringify(props.value, null, 4);\r\n            }\r\n            else {\r\n                // Convert each property's value to a JSON string.\r\n                return ObjectUtils.fromEntries(\r\n                    Object.entries(props.value as Record<string, unknown>).map(([key, val]) => {\r\n                        return [\r\n                            key,\r\n                            JSON.stringify(val, null, 4)\r\n                        ];\r\n                    })\r\n                );\r\n            }\r\n        });\r\n\r\n        const styledImportCode = computed((): string | undefined => {\r\n            if (!props.importCode) {\r\n                return undefined;\r\n            }\r\n\r\n            return HighlightJs.highlight(props.importCode, {\r\n                language: \"typescript\"\r\n            })?.value;\r\n        });\r\n\r\n        const styledExampleCode = computed((): string | undefined => {\r\n            if (!props.exampleCode) {\r\n                return undefined;\r\n            }\r\n\r\n            return HighlightJs.highlight(props.exampleCode, {\r\n                language: \"html\"\r\n            })?.value;\r\n        });\r\n\r\n        const showReflection = ref(false);\r\n\r\n        return {\r\n            componentName,\r\n            formattedValue,\r\n            showReflection,\r\n            styledExampleCode,\r\n            styledImportCode,\r\n        };\r\n    },\r\n\r\n    template: `\r\n<v-style>\r\n.galleryContent-mainRow > div.well {\r\n    overflow-x: auto;\r\n}\r\n\r\n.galleryContent-reflectionToggle {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n}\r\n\r\n.galleryContent-valueBox {\r\n    max-height: 300px;\r\n    overflow: auto;\r\n}\r\n\r\n.galleryContent-codeSampleWrapper {\r\n    position: relative;\r\n}\r\n\r\n.galleryContent-codeSample {\r\n    padding-right: 3rem;\r\n    overflow-x: auto;\r\n}\r\n\r\n.galleryContent-codeCopyButton {\r\n    position: absolute;\r\n    top: 1.4rem;\r\n    transform: translateY(-50%);\r\n    right: .5rem;\r\n    z-index: 1;\r\n}\r\n\r\n.galleryContent-codeCopyButton::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: -0.3rem;\r\n    right: -0.5rem;\r\n    bottom: -0.3rem;\r\n    left: -0.5rem;\r\n    background: linear-gradient(to left, #f5f5f4, #f5f5f4 80%, #f5f5f500);\r\n    z-index: -1;\r\n}\r\n</v-style>\r\n\r\n<SectionHeader :title=\"componentName\" :description=\"description\" />\r\n<div class=\"galleryContent-mainRow mb-5 row\">\r\n    <div v-if=\"$slots.default\" :class=\"value === void 0 ? 'col-sm-12' : 'col-sm-6'\">\r\n        <h4 class=\"mt-0\">Test Control</h4>\r\n        <slot name=\"default\" />\r\n\r\n        <div v-if=\"enableReflection\" class=\"mt-3\">\r\n            <div class=\"mb-3 galleryContent-reflectionToggle\">\r\n                <Switch v-model=\"showReflection\" text=\"Show Reflection\" />\r\n            </div>\r\n            <TransitionVerticalCollapse>\r\n                <div v-if=\"showReflection\">\r\n                    <h4 class=\"mt-0\">Control Reflection</h4>\r\n                    <slot name=\"default\" />\r\n                </div>\r\n            </TransitionVerticalCollapse>\r\n        </div>\r\n    </div>\r\n    <div v-if=\"value !== void 0\" class=\"col-sm-6\">\r\n        <div class=\"well\">\r\n            <h4>Current Value<template v-if=\"hasMultipleValues\">s</template></h4>\r\n            <template v-if=\"hasMultipleValues\" v-for=\"value, key in formattedValue\">\r\n                <h5><code>{{ key }}</code></h5>\r\n                <pre class=\"m-0 p-0 border-0 galleryContent-valueBox\">{{ value }}</pre>\r\n            </template>\r\n            <pre v-else class=\"m-0 p-0 border-0 galleryContent-valueBox\">{{ formattedValue }}</pre>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div v-if=\"$slots.settings\" class=\"mb-5\">\r\n    <h4 class=\"mt-0\">Settings</h4>\r\n    <slot name=\"settings\" />\r\n</div>\r\n<div v-if=\"importCode || exampleCode || $slots.usage\" class=\"mb-5\">\r\n    <h4 class=\"mt-0 mb-3\">Usage Notes</h4>\r\n    <slot name=\"usage\">\r\n        <h5 v-if=\"importCode\" class=\"mt-3 mb-2\">Import</h5>\r\n        <slot name=\"importNotes\" />\r\n        <div v-if=\"importCode\" class=\"galleryContent-codeSampleWrapper\">\r\n            <pre class=\"galleryContent-codeSample\"><code v-html=\"styledImportCode\"></code></pre>\r\n            <CopyButton :value=\"importCode\" class=\"galleryContent-codeCopyButton\" btnSize=\"sm\" btnType=\"link\" />\r\n        </div>\r\n        <h5 v-if=\"exampleCode\" class=\"mt-3 mb-2\">Template Syntax</h5>\r\n        <slot name=\"syntaxNotes\" />\r\n        <div v-if=\"exampleCode\" class=\"galleryContent-codeSampleWrapper\">\r\n            <pre class=\"galleryContent-codeSample\"><code v-html=\"styledExampleCode\"></code></pre>\r\n            <CopyButton :value=\"exampleCode\" class=\"galleryContent-codeCopyButton\" btnSize=\"sm\" btnType=\"link\" />\r\n        </div>\r\n    </slot>\r\n</div>\r\n\r\n<div v-if=\"$slots.header\">\r\n    <p class=\"text-semibold font-italic\">The <code>header</code> slot is no longer supported.</p>\r\n</div>\r\n\r\n<div v-if=\"$attrs.splitWidth !== void 0\">\r\n    <p class=\"text-semibold font-italic\">The <code>splitWidth</code> prop is no longer supported.</p>\r\n</div>\r\n\r\n<div v-if=\"$slots.gallery\">\r\n    <p class=\"text-semibold font-italic\">The <code>gallery</code> slot is deprecated. Please update to the newest Control Gallery template.</p>\r\n    <slot name=\"gallery\" />\r\n</div>\r\n<div v-if=\"$slots.result\">\r\n    <p class=\"text-semibold font-italic\">The <code>result</code> slot is deprecated. Please update to the newest Control Gallery template.</p>\r\n    <slot name=\"result\" />\r\n</div>\r\n`\r\n});\r\n\r\n/**\r\n * Generate a string of an import statement that imports the control will the given file name.\r\n * The control's name will be based off the filename\r\n *\r\n * @param fileName Name of the control's file\r\n * @returns A string of code that can be used to import the given control file\r\n */\r\nexport function getControlImportPath(fileName: string): string {\r\n    return `import ${upperCaseFirstCharacter(fileName)} from \"@Obsidian/Controls/${fileName}\";`;\r\n}\r\n\r\n/**\r\n * Generate a string of an import statement that imports the SFC control will the given file name.\r\n * The control's name will be based off the filename\r\n *\r\n * @param fileName Name of the control's file\r\n * @returns A string of code that can be used to import the given control file\r\n */\r\nexport function getSfcControlImportPath(fileName: string): string {\r\n    return `import ${upperCaseFirstCharacter(fileName)} from \"@Obsidian/Controls/${fileName}.obs\";`;\r\n}\r\n\r\n/**\r\n * Generate a string of an import statement that imports the template will the given file name.\r\n * The template's name will be based off the filename\r\n *\r\n * @param fileName Name of the control's file\r\n * @returns A string of code that can be used to import the given control file\r\n */\r\nexport function getTemplateImportPath(fileName: string): string {\r\n    return `import ${upperCaseFirstCharacter(fileName)} from \"@Obsidian/Templates/${fileName}\";`;\r\n}\r\n\r\n// #endregion\r\n\r\n// #region Control Gallery\r\n\r\n/** Demonstrates an attribute values container. */\r\nconst attributeValuesContainerGallery = defineComponent({\r\n    name: \"AttributeValuesContainerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        AttributeValuesContainer,\r\n        CheckBox,\r\n        NumberBox,\r\n        TextBox\r\n    },\r\n    setup() {\r\n        const isEditMode = ref(false);\r\n        const showAbbreviatedName = ref(false);\r\n        const showEmptyValues = ref(true);\r\n        const displayAsTabs = ref(false);\r\n        const showCategoryLabel = ref(true);\r\n        const numberOfColumns = ref(2);\r\n        const entityName = ref(\"Foo Entity\");\r\n\r\n        const categories = [{\r\n            guid: newGuid(),\r\n            name: \"Cat A\",\r\n            order: 1\r\n        },\r\n        {\r\n            guid: newGuid(),\r\n            name: \"Cat B\",\r\n            order: 2\r\n        },\r\n        {\r\n            guid: newGuid(),\r\n            name: \"Cat C\",\r\n            order: 3\r\n        }];\r\n\r\n        const attributes = ref<Record<string, PublicAttributeBag>>({\r\n            text: {\r\n                attributeGuid: newGuid(),\r\n                categories: [categories[0]],\r\n                description: \"A text attribute.\",\r\n                fieldTypeGuid: FieldType.Text,\r\n                isRequired: false,\r\n                key: \"text\",\r\n                name: \"Text Attribute\",\r\n                order: 2,\r\n                configurationValues: {}\r\n            },\r\n            color: {\r\n                attributeGuid: newGuid(),\r\n                categories: [categories[0], categories[2]],\r\n                description: \"Favorite color? Or just a good one?\",\r\n                fieldTypeGuid: FieldType.Color,\r\n                isRequired: false,\r\n                key: \"color\",\r\n                name: \"Random Color\",\r\n                order: 4,\r\n                configurationValues: {}\r\n            },\r\n            bool: {\r\n                attributeGuid: newGuid(),\r\n                categories: [categories[2]],\r\n                description: \"Are you foo?\",\r\n                fieldTypeGuid: FieldType.Boolean,\r\n                isRequired: false,\r\n                key: \"bool\",\r\n                name: \"Boolean Attribute\",\r\n                order: 3,\r\n                configurationValues: {}\r\n            },\r\n            textagain: {\r\n                attributeGuid: newGuid(),\r\n                categories: [categories[1]],\r\n                description: \"Another text attribute.\",\r\n                fieldTypeGuid: FieldType.Text,\r\n                isRequired: false,\r\n                key: \"textAgain\",\r\n                name: \"Some Text\",\r\n                order: 5,\r\n                configurationValues: {}\r\n            },\r\n            single: {\r\n                attributeGuid: newGuid(),\r\n                categories: [],\r\n                description: \"A single select attribute.\",\r\n                fieldTypeGuid: FieldType.SingleSelect,\r\n                isRequired: false,\r\n                key: \"single\",\r\n                name: \"Single Select\",\r\n                order: 1,\r\n                configurationValues: {\r\n                    values: JSON.stringify([{ value: \"1\", text: \"One\" }, { value: \"2\", text: \"Two\" }, { value: \"3\", text: \"Three\" }])\r\n                }\r\n            }\r\n        });\r\n\r\n        const attributeValues = ref<Record<string, string>>({\r\n            \"text\": \"Default text value\",\r\n            \"color\": \"#336699\",\r\n            \"bool\": \"N\",\r\n            \"textAgain\": \"\",\r\n            single: \"1\"\r\n        });\r\n\r\n        return {\r\n            attributes,\r\n            attributeValues,\r\n            isEditMode,\r\n            showAbbreviatedName,\r\n            showEmptyValues,\r\n            displayAsTabs,\r\n            showCategoryLabel,\r\n            numberOfColumns,\r\n            entityName,\r\n            importCode: getControlImportPath(\"attributeValuesContainer\"),\r\n            exampleCode: `<AttributeValuesContainer v-model=\"attributeValues\" :attributes=\"attributes\" :isEditMode=\"false\" :showAbbreviatedName=\"false\" :showEmptyValues=\"true\" :displayAsTabs=\"false\" :showCategoryLabel=\"true\" :numberOfColumns=\"1\" :entityTypeName=\"entityName\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"{ attributes, modelValue: attributeValues }\"\r\n    hasMultipleValues\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\" >\r\n\r\n    <AttributeValuesContainer\r\n        v-model=\"attributeValues\"\r\n        :attributes=\"attributes\"\r\n        :isEditMode=\"isEditMode\"\r\n        :showAbbreviatedName=\"showAbbreviatedName\"\r\n        :showEmptyValues=\"showEmptyValues\"\r\n        :displayAsTabs=\"displayAsTabs\"\r\n        :showCategoryLabel=\"showCategoryLabel\"\r\n        :numberOfColumns=\"numberOfColumns\"\r\n        :entityTypeName=\"entityName\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <CheckBox formGroupClasses=\"col-sm-6\" v-model=\"isEditMode\" label=\"Edit Mode\" text=\"Enable\" help=\"Default: false\" />\r\n            <CheckBox formGroupClasses=\"col-sm-6\" v-model=\"showAbbreviatedName\" label=\"Abbreviated Name\" text=\"Show\" help=\"Default: false\" />\r\n        </div>\r\n        <div class=\"row\">\r\n            <CheckBox formGroupClasses=\"col-sm-6\" v-model=\"showEmptyValues\" label=\"Empty Values\" text=\"Show\" help=\"Default: true; Only applies if not in edit mode\" />\r\n            <CheckBox formGroupClasses=\"col-sm-6\" v-model=\"displayAsTabs\" label=\"Category Tabs\" text=\"Show\" help=\"Default: false; If any attributes are in a category, display each category as a tab. Not applicable while editing.\" />\r\n        </div>\r\n        <CheckBox v-model=\"showCategoryLabel\" label=\"Category Labels\" text=\"Show\" help=\"Default: false; Only applies when not displaying tabs.\" />\r\n        <div class=\"row\">\r\n            <NumberBox formGroupClasses=\"col-sm-6\" v-model=\"numberOfColumns\" label=\"Number of Columns\" help=\"Default: 1; Only applies when not displaying tabs.\" />\r\n            <TextBox formGroupClasses=\"col-sm-6\" v-model=\"entityName\" label=\"Entity Type\" help=\"Default: ''; Appears in the heading when category labels are showing.\" />\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a field visibility rules editor. */\r\nconst fieldFilterEditorGallery = defineComponent({\r\n    name: \"FieldFilterEditorGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        FieldFilterEditor,\r\n        CheckBox,\r\n        TextBox\r\n    },\r\n    setup() {\r\n\r\n        const sources: FieldFilterSourceBag[] = [\r\n            {\r\n                guid: \"2a50d342-3a0b-4da3-83c1-25839c75615c\",\r\n                type: 0,\r\n                attribute: {\r\n                    attributeGuid: \"4eb1eb34-988b-4212-8c93-844fae61b43c\",\r\n                    fieldTypeGuid: \"9C204CD0-1233-41C5-818A-C5DA439445AA\",\r\n                    name: \"Text Field\",\r\n                    description: \"\",\r\n                    order: 0,\r\n                    isRequired: false,\r\n                    configurationValues: {\r\n                        maxcharacters: \"10\"\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                guid: \"6dbb47c4-5816-4110-8a52-92880d4d05c0\",\r\n                type: 0,\r\n                attribute: {\r\n                    attributeGuid: \"c41817d8-be26-460c-9f89-a7059ae6a9b0\",\r\n                    fieldTypeGuid: \"A75DFC58-7A1B-4799-BF31-451B2BBE38FF\",\r\n                    name: \"Integer Field\",\r\n                    description: \"\",\r\n                    order: 0,\r\n                    isRequired: false,\r\n                    configurationValues: {}\r\n                }\r\n            },\r\n            {\r\n                guid: \"6dbb47c4-5816-4110-8a52-92880d4d05c1\",\r\n                type: 0,\r\n                attribute: {\r\n                    attributeGuid: \"c41817d8-be26-460c-9f89-a7059ae6a9b1\",\r\n                    fieldTypeGuid: \"D747E6AE-C383-4E22-8846-71518E3DD06F\",\r\n                    name: \"Color\",\r\n                    description: \"\",\r\n                    order: 0,\r\n                    isRequired: false,\r\n                    configurationValues: {\r\n                        selectiontype: \"Color Picker\"\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                guid: \"6dbb47c4-5816-4110-8a52-92880d4d05c2\",\r\n                type: 0,\r\n                attribute: {\r\n                    attributeGuid: \"c41817d8-be26-460c-9f89-a7059ae6a9b2\",\r\n                    fieldTypeGuid: \"3EE69CBC-35CE-4496-88CC-8327A447603F\",\r\n                    name: \"Currency\",\r\n                    description: \"\",\r\n                    order: 0,\r\n                    isRequired: false,\r\n                    configurationValues: {}\r\n                }\r\n            },\r\n            {\r\n                guid: \"6dbb47c4-5816-4110-8a52-92880d4d05c3\",\r\n                type: 0,\r\n                attribute: {\r\n                    attributeGuid: \"c41817d8-be26-460c-9f89-a7059ae6a9b3\",\r\n                    fieldTypeGuid: \"9C7D431C-875C-4792-9E76-93F3A32BB850\",\r\n                    name: \"Date Range\",\r\n                    description: \"\",\r\n                    order: 0,\r\n                    isRequired: false,\r\n                    configurationValues: {}\r\n                }\r\n            },\r\n            {\r\n                guid: \"6dbb47c4-5816-4110-8a52-92880d4d05c4\",\r\n                type: 0,\r\n                attribute: {\r\n                    attributeGuid: \"c41817d8-be26-460c-9f89-a7059ae6a9b4\",\r\n                    fieldTypeGuid: \"7EDFA2DE-FDD3-4AC1-B356-1F5BFC231DAE\",\r\n                    name: \"Day of Week\",\r\n                    description: \"\",\r\n                    order: 0,\r\n                    isRequired: false,\r\n                    configurationValues: {}\r\n                }\r\n            },\r\n            {\r\n                guid: \"6dbb47c4-5816-4110-8a52-92880d4d05c5\",\r\n                type: 0,\r\n                attribute: {\r\n                    attributeGuid: \"c41817d8-be26-460c-9f89-a7059ae6a9b5\",\r\n                    fieldTypeGuid: \"3D045CAE-EA72-4A04-B7BE-7FD1D6214217\",\r\n                    name: \"Email\",\r\n                    description: \"\",\r\n                    order: 0,\r\n                    isRequired: false,\r\n                    configurationValues: {}\r\n                }\r\n            },\r\n            {\r\n                guid: \"6dbb47c4-5816-4110-8a52-92880d4d05c6\",\r\n                type: 0,\r\n                attribute: {\r\n                    attributeGuid: \"c41817d8-be26-460c-9f89-a7059ae6a9b6\",\r\n                    fieldTypeGuid: \"2E28779B-4C76-4142-AE8D-49EA31DDB503\",\r\n                    name: \"Gender\",\r\n                    description: \"\",\r\n                    order: 0,\r\n                    isRequired: false,\r\n                    configurationValues: {\r\n                        hideUnknownGender: \"True\"\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                guid: \"6dbb47c4-5816-4110-8a52-92880d4d05c7\",\r\n                type: 0,\r\n                attribute: {\r\n                    attributeGuid: \"c41817d8-be26-460c-9f89-a7059ae6a9b7\",\r\n                    fieldTypeGuid: \"C28C7BF3-A552-4D77-9408-DEDCF760CED0\",\r\n                    name: \"Memo\",\r\n                    description: \"\",\r\n                    order: 0,\r\n                    isRequired: false,\r\n                    configurationValues: {\r\n                        numberofrows: \"4\",\r\n                        allowhtml: \"True\",\r\n                        maxcharacters: \"5\",\r\n                        showcountdown: \"True\"\r\n                    }\r\n                }\r\n            }\r\n        ];\r\n\r\n        const prefilled = (): FieldFilterGroupBag => ({\r\n            guid: newGuid(),\r\n            expressionType: 4,\r\n            rules: [\r\n                {\r\n                    guid: \"a81c3ef9-72a9-476b-8b88-b52f513d92e6\",\r\n                    comparisonType: 128,\r\n                    sourceType: 0,\r\n                    attributeGuid: \"c41817d8-be26-460c-9f89-a7059ae6a9b0\",\r\n                    value: \"50\"\r\n                },\r\n                {\r\n                    guid: \"74d34117-4cc6-4cea-92c5-8297aa693ba5\",\r\n                    comparisonType: 2,\r\n                    sourceType: 0,\r\n                    attributeGuid: \"c41817d8-be26-460c-9f89-a7059ae6a9b1\",\r\n                    value: \"BlanchedAlmond\"\r\n                },\r\n                {\r\n                    guid: \"0fa2b6ea-bc86-4fae-b0da-02e48fed8d96\",\r\n                    comparisonType: 8,\r\n                    sourceType: 0,\r\n                    attributeGuid: \"c41817d8-be26-460c-9f89-a7059ae6a9b5\",\r\n                    value: \"@gmail.com\"\r\n                },\r\n                {\r\n                    guid: \"434107e6-6c0c-4698-90ef-d615b1c2de4b\",\r\n                    comparisonType: 2,\r\n                    sourceType: 0,\r\n                    attributeGuid: \"c41817d8-be26-460c-9f89-a7059ae6a9b6\",\r\n                    value: \"2\"\r\n                },\r\n                {\r\n                    guid: \"706179b9-7518-4a74-8e0f-8a48016aec04\",\r\n                    comparisonType: 16,\r\n                    sourceType: 0,\r\n                    attributeGuid: \"4eb1eb34-988b-4212-8c93-844fae61b43c\",\r\n                    value: \"text\"\r\n                },\r\n                {\r\n                    guid: \"4564eac2-15d9-48d9-b618-563523285af0\",\r\n                    comparisonType: 512,\r\n                    sourceType: 0,\r\n                    attributeGuid: \"c41817d8-be26-460c-9f89-a7059ae6a9b2\",\r\n                    value: \"999\"\r\n                },\r\n                {\r\n                    guid: \"e6c56d4c-7f63-44f9-8f07-1ea0860b605d\",\r\n                    comparisonType: 1,\r\n                    sourceType: 0,\r\n                    attributeGuid: \"c41817d8-be26-460c-9f89-a7059ae6a9b3\",\r\n                    value: \"2022-02-01,2022-02-28\"\r\n                },\r\n                {\r\n                    guid: \"0c27507f-9fb7-4f37-8026-70933bbf1398\",\r\n                    comparisonType: 0,\r\n                    sourceType: 0,\r\n                    attributeGuid: \"c41817d8-be26-460c-9f89-a7059ae6a9b4\",\r\n                    value: \"3\"\r\n                },\r\n                {\r\n                    guid: \"4f68fa2c-0942-4084-bb4d-3c045cef4551\",\r\n                    comparisonType: 8,\r\n                    sourceType: 0,\r\n                    attributeGuid: \"c41817d8-be26-460c-9f89-a7059ae6a9b7\",\r\n                    value: \"more text than I want to deal with....\"\r\n                }\r\n            ]\r\n        });\r\n\r\n        const clean = (): FieldFilterGroupBag => ({\r\n            guid: newGuid(),\r\n            expressionType: 1,\r\n            rules: []\r\n        });\r\n\r\n        const usePrefilled = ref(false);\r\n        const value = ref(clean());\r\n\r\n        watch(usePrefilled, () => {\r\n            value.value = usePrefilled.value ? prefilled() : clean();\r\n        });\r\n\r\n        const title = ref(\"TEST PROPERTY\");\r\n\r\n        return {\r\n            sources,\r\n            value,\r\n            title,\r\n            usePrefilled,\r\n            importCode: getControlImportPath(\"fieldFilterEditor\"),\r\n            exampleCode: `<FieldFilterEditor :sources=\"sources\" v-model=\"value\" :title=\"title\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"{ 'output:modelValue':value, 'input:sources':sources }\"\r\n    hasMultipleValues\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\" >\r\n    <FieldFilterEditor :sources=\"sources\" v-model=\"value\" :title=\"title\" />\r\n\r\n    <template #settings>\r\n        <TextBox v-model=\"title\" label=\"Attribute Name\" />\r\n        <CheckBox v-model=\"usePrefilled\" text=\"Use prefilled data\" />\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a phone number box */\r\nconst phoneNumberBoxGallery = defineComponent({\r\n    name: \"PhoneNumberBoxGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        PhoneNumberBox,\r\n        RockForm,\r\n        RockButton\r\n    },\r\n    setup() {\r\n        return {\r\n            phoneNumber: ref(null),\r\n            submit: ref(false),\r\n            importCode: getSfcControlImportPath(\"phoneNumberBox\"),\r\n            exampleCode: `<PhoneNumberBox label=\"Phone Number\" v-model=\"phoneNumber\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"phoneNumber\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <RockForm v-model:submit=\"submit\">\r\n        <PhoneNumberBox label=\"Phone Number\" v-model=\"phoneNumber\" />\r\n        <RockButton @click=\"submit=true\">Validate</RockButton>\r\n    </RockForm>\r\n\r\n    <template #settings>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a help block */\r\nconst helpBlockGallery = defineComponent({\r\n    name: \"HelpBlockGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        HelpBlock,\r\n        TextBox\r\n    },\r\n    setup() {\r\n        return {\r\n            text: ref(\"This is some helpful text that explains something.\"),\r\n            importCode: getControlImportPath(\"helpBlock\"),\r\n            exampleCode: `<HelpBlock text=\"text\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\" >\r\n    <HelpBlock :text=\"text\" />\r\n    Hover over the symbol to the left to view HelpBlock in action\r\n\r\n    <template #settings>\r\n        <TextBox label=\"Text\" v-model=\"text\" help=\"The text for the help tooltip to display\" rules=\"required\" />\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a drop down list */\r\nconst dropDownListGallery = defineComponent({\r\n    name: \"DropDownListGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        DropDownList\r\n    },\r\n    setup() {\r\n        const options: ListItemBag[] = [\r\n            { text: \"A Text\", value: \"a\", category: \"First\" },\r\n            { text: \"B Text\", value: \"b\", category: \"First\" },\r\n            { text: \"C Text\", value: \"c\", category: \"Second\" },\r\n            { text: \"D Text\", value: \"d\", category: \"Second\" }\r\n        ];\r\n\r\n        // This function can be used to demonstrate lazy loading of items.\r\n        const loadOptionsAsync = async (): Promise<ListItemBag[]> => {\r\n            await sleep(5000);\r\n\r\n            return options;\r\n        };\r\n\r\n        return {\r\n            enhanceForLongLists: ref(false),\r\n            loadOptionsAsync,\r\n            showBlankItem: ref(true),\r\n            grouped: ref(false),\r\n            multiple: ref(false),\r\n            value: ref(null),\r\n            options: options,\r\n            importCode: getControlImportPath(\"dropDownList\"),\r\n            exampleCode: `<DropDownList label=\"Select\" v-model=\"value\" :items=\"options\" :showBlankItem=\"true\" :enhanceForLongLists=\"false\" :grouped=\"false\" :multiple=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"{'output:modelValue': value, 'input:items': options}\"\r\n    hasMultipleValues\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <DropDownList label=\"Select\" v-model=\"value\" :items=\"[]\" :showBlankItem=\"showBlankItem\" :enhanceForLongLists=\"enhanceForLongLists\" :grouped=\"grouped\" :multiple=\"multiple\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <CheckBox formGroupClasses=\"col-sm-4\" label=\"Show Blank Item\" v-model=\"showBlankItem\" />\r\n            <CheckBox formGroupClasses=\"col-sm-4\" label=\"Enhance For Long Lists\" v-model=\"enhanceForLongLists\" />\r\n            <CheckBox formGroupClasses=\"col-sm-4\" label=\"Grouped\" v-model=\"grouped\" />\r\n            <CheckBox formGroupClasses=\"col-sm-4\" label=\"Multiple\" v-model=\"multiple\" />\r\n        </div>\r\n\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a radio button list */\r\nconst radioButtonListGallery = defineComponent({\r\n    name: \"RadioButtonListGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        RadioButtonList,\r\n        Toggle,\r\n        NumberUpDown\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref(\"a\"),\r\n            isHorizontal: ref(false),\r\n            repeatColumns: ref(0),\r\n            options: [\r\n                { text: \"A Text\", value: \"a\" },\r\n                { text: \"B Text\", value: \"b\" },\r\n                { text: \"C Text\", value: \"c\" },\r\n                { text: \"D Text\", value: \"d\" },\r\n                { text: \"E Text\", value: \"e\" },\r\n                { text: \"F Text\", value: \"f\" },\r\n                { text: \"G Text\", value: \"g\" }\r\n            ] as ListItemBag[],\r\n            importCode: getControlImportPath(\"radioButtonList\"),\r\n            exampleCode: `<RadioButtonList label=\"Radio List\" v-model=\"value\" :items=\"options\" :horizontal=\"false\" :repeatColumns=\"0\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"{'output:modelValue': value, 'input:items': options}\"\r\n    hasMultipleValues\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <RadioButtonList label=\"Radio List\" v-model=\"value\" :items=\"options\" :horizontal=\"isHorizontal\" :repeatColumns=\"repeatColumns\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <NumberUpDown formGroupClasses=\"col-sm-6\" label=\"Horizontal Columns\" v-model=\"repeatColumns\" :min=\"0\" />\r\n            <Toggle formGroupClasses=\"col-sm-6\" label=\"Horizontal\" v-model=\"isHorizontal\" />\r\n        </div>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a checkbox */\r\nconst checkBoxGallery = defineComponent({\r\n    name: \"CheckBoxGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        TextBox\r\n    },\r\n    setup() {\r\n        return {\r\n            isChecked: ref(false),\r\n            importCode: getControlImportPath(\"checkBox\"),\r\n            exampleCode: `<CheckBox label=\"Check Box\" text=\"Enable\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"isChecked\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <CheckBox label=\"Check Box\" text=\"Enable\" v-model=\"isChecked\" />\r\n\r\n    <template #settings>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates an inline checkbox */\r\nconst inlineCheckBoxGallery = defineComponent({\r\n    name: \"InlineCheckBoxGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        InlineCheckBox\r\n    },\r\n    data() {\r\n        return {\r\n            isChecked: false,\r\n            inline: true,\r\n            importCode: getControlImportPath(\"checkBox\"),\r\n            exampleCode: `<CheckBox label=\"Check Box\" text=\"Enable\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"isChecked\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    description=\"Check Box with label that is displayed beside it instead of above it\"\r\n    enableReflection >\r\n    <InlineCheckBox label=\"Inline Label\" v-model=\"isChecked\" />\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a modal / dialog / pop-up */\r\nconst dialogGallery = defineComponent({\r\n    name: \"DialogGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        RockButton,\r\n        Dialog,\r\n        CheckBox\r\n    },\r\n    setup() {\r\n        return {\r\n            isDialogVisible: ref(false),\r\n            isDismissible: ref(true),\r\n            importCode: getControlImportPath(\"dialog\"),\r\n            exampleCode: `<Dialog v-model=\"isDialogVisible\" :dismissible=\"true\">\r\n    <template #header>\r\n        <h4>Dialog Header</h4>\r\n    </template>\r\n    <template #default>\r\n        <p>Dialog Main Content</p>\r\n    </template>\r\n    <template #footer>\r\n        <p>Dialog Footer (usually for buttons)</p>\r\n    </template>\r\n</Dialog>`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"isDialogVisible\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\" >\r\n    <RockButton @click=\"isDialogVisible = true\">Show</RockButton>\r\n\r\n    <Dialog v-model=\"isDialogVisible\" :dismissible=\"isDismissible\">\r\n        <template #header>\r\n            <h4>Romans 11:33-36</h4>\r\n        </template>\r\n        <template #default>\r\n            <p>\r\n                Oh, the depth of the riches<br />\r\n                and the wisdom and the knowledge of God!<br />\r\n                How unsearchable his judgments<br />\r\n                and untraceable his ways!<br />\r\n                For who has known the mind of the Lord?<br />\r\n                Or who has been his counselor?<br />\r\n                And who has ever given to God,<br />\r\n                that he should be repaid?<br />\r\n                For from him and through him<br />\r\n                and to him are all things.<br />\r\n                To him be the glory forever. Amen.\r\n            </p>\r\n        </template>\r\n        <template #footer>\r\n            <RockButton @click=\"isDialogVisible = false\" btnType=\"primary\">OK</RockButton>\r\n            <RockButton @click=\"isDialogVisible = false\" btnType=\"default\">Cancel</RockButton>\r\n        </template>\r\n    </Dialog>\r\n\r\n    <template #settings>\r\n        <CheckBox label=\"Dismissible\" text=\"Show the close button\" v-model=\"isDismissible\" />\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates check box list */\r\nconst checkBoxListGallery = defineComponent({\r\n    name: \"CheckBoxListGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBoxList,\r\n        NumberUpDown,\r\n        Toggle\r\n    },\r\n    setup() {\r\n        return {\r\n            items: ref([\"green\"]),\r\n            options: [\r\n                { value: \"red\", text: \"Red\" },\r\n                { value: \"green\", text: \"Green\" },\r\n                { value: \"blue\", text: \"Blue\" }\r\n            ] as ListItemBag[],\r\n            isHorizontal: ref(false),\r\n            repeatColumns: ref(0),\r\n            importCode: getControlImportPath(\"checkBoxList\"),\r\n            exampleCode: `<CheckBoxList label=\"CheckBoxList\" v-model=\"value\" :items=\"options\" :horizontal=\"false\" :repeatColumns=\"0\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"{'output:modelValue': items, 'input:items': options}\"\r\n    hasMultipleValues\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <CheckBoxList label=\"CheckBoxList\" v-model=\"items\" :items=\"options\" :horizontal=\"isHorizontal\" :repeatColumns=\"repeatColumns\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <NumberUpDown formGroupClasses=\"col-sm-6\" label=\"Horizontal Columns\" v-model=\"repeatColumns\" :min=\"0\" />\r\n            <Toggle formGroupClasses=\"col-sm-6\" label=\"Horizontal\" v-model=\"isHorizontal\" />\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a list box */\r\nconst listBoxGallery = defineComponent({\r\n    name: \"ListBoxGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        ListBox,\r\n        InlineCheckBox\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref([\"a\"]),\r\n            options: [\r\n                { text: \"A Text\", value: \"a\" },\r\n                { text: \"B Text\", value: \"b\" },\r\n                { text: \"C Text\", value: \"c\" },\r\n                { text: \"D Text\", value: \"d\" }\r\n            ] as ListItemBag[],\r\n            enhanced: ref(false),\r\n            importCode: getControlImportPath(\"listBox\"),\r\n            exampleCode: `<ListBox label=\"Select\" v-model=\"value\" :items=\"options\" :enhanceForLongLists=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"{'output:modelValue': value, 'input:items': options}\"\r\n    hasMultipleValues\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <ListBox label=\"Select\" v-model=\"value\" :items=\"options\" :enhanceForLongLists=\"enhanced\" />\r\n\r\n    <template #settings>\r\n        <InlineCheckBox v-model=\"enhanced\" label=\"Use Enhanced Functionality\" />\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates date pickers */\r\nconst datePickerGallery = defineComponent({\r\n    name: \"DatePickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        DatePicker,\r\n        InlineCheckBox\r\n    },\r\n    setup() {\r\n        return {\r\n            date: ref<string | null>(null),\r\n            displayCurrentOption: ref(false),\r\n            isCurrentDateOffset: ref(false),\r\n            disableForceParse: ref(false),\r\n            disableShowOnFocus: ref(false),\r\n            disableHighlightToday: ref(false),\r\n            disallowFutureDateSelection: ref(false),\r\n            disallowPastDateSelection: ref(false),\r\n            isDisabled: ref(false),\r\n            startView: ref(0),\r\n            viewOptions: [{ value: 0, text: \"Month\" }, { value: 1, text: \"Year\" }, { value: 2, text: \"Decade\" }],\r\n            importCode: getControlImportPath(\"datePicker\"),\r\n            exampleCode: `<DatePicker label=\"Date\" v-model=\"date\"\r\n    :displayCurrentOption=\"false\"\r\n    :isCurrentDateOffset=\"false\"\r\n    :disableForceParse=\"false\"\r\n    :disableShowOnFocus=\"false\"\r\n    :disableHighlightToday=\"false\"\r\n    :disallowFutureDateSelection=\"false\"\r\n    :disallowPastDateSelection=\"false\"\r\n    :startView=\"startView\"\r\n/>`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"date\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <DatePicker label=\"Date\" v-model=\"date\" :displayCurrentOption=\"displayCurrentOption\" :isCurrentDateOffset=\"isCurrentDateOffset\" :disabled=\"isDisabled\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-4\">\r\n                <InlineCheckBox v-model=\"displayCurrentOption\" label=\"Display Current Option\" />\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n                <InlineCheckBox v-model=\"isCurrentDateOffset\" label=\"Is Current Date Offset\" />\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n                <InlineCheckBox v-model=\"isDisabled\" label=\"Disable\" />\r\n            </div>\r\n        </div>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates date range pickers */\r\nconst dateRangePickerGallery = defineComponent({\r\n    name: \"DateRangePickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        DateRangePicker\r\n    },\r\n    setup() {\r\n        return {\r\n            date: ref({}),\r\n            disallowPastDateSelection: ref(false),\r\n            importCode: getControlImportPath(\"dateRangePicker\"),\r\n            exampleCode: `<DateRangePicker label=\"Date Range\" v-model=\"date\"\r\n    :disallowPastDateSelection=\"false\"\r\n/>`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"date\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <DateRangePicker label=\"Date Range\" v-model=\"date\" />\r\n\r\n    <template #settings>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates date time pickers */\r\nconst dateTimePickerGallery = defineComponent({\r\n    name: \"DateTimePickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        DateTimePicker,\r\n        InlineCheckBox\r\n    },\r\n    setup() {\r\n        return {\r\n            date: ref<string | null>(null),\r\n            displayCurrentOption: ref(false),\r\n            isCurrentDateOffset: ref(false),\r\n            importCode: getControlImportPath(\"dateTimePicker\"),\r\n            exampleCode: `<DateTimePicker label=\"Date and Time\" v-model=\"date\" :displayCurrentOption=\"false\" :isCurrentDateOffset=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"date\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <DateTimePicker label=\"Date and Time\" v-model=\"date\" :displayCurrentOption=\"displayCurrentOption\" :isCurrentDateOffset=\"isCurrentDateOffset\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-4\">\r\n                <InlineCheckBox v-model=\"displayCurrentOption\" label=\"Display Current Option\" />\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n                <InlineCheckBox v-model=\"isCurrentDateOffset\" label=\"Is Current Date Offset\" />\r\n            </div>\r\n        </div>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates date part pickers */\r\nconst datePartsPickerGallery = defineComponent({\r\n    name: \"DatePartsPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        Toggle,\r\n        DatePartsPicker\r\n    },\r\n    setup() {\r\n        return {\r\n            showYear: ref(true),\r\n            datePartsModel: ref<DatePartsPickerValue>({\r\n                month: 1,\r\n                day: 1,\r\n                year: 2020\r\n            }),\r\n            importCode: getControlImportPath(\"datePartsPicker\"),\r\n            exampleCode: `<DatePartsPicker label=\"Date\" v-model=\"date\" :requireYear=\"true\" :showYear=\"true\" :allowFutureDates=\"true\" :futureYearCount=\"50\" :startYear=\"1900\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"datePartsModel\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <DatePartsPicker label=\"Date\" v-model=\"datePartsModel\" :showYear=\"showYear\" />\r\n\r\n    <template #settings>\r\n        <Toggle label=\"Show Year\" v-model=\"showYear\" />\r\n        <p class=\"mt-4 mb-4\">The <a href=\"#BirthdayPickerGallery\">Birthday Picker</a> simply wraps this control and sets <code>allowFutureDates</code> and <code>requireYear</code> to <code>false</code>.</p>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a textbox */\r\nconst textBoxGallery = defineComponent({\r\n    name: \"TextBoxGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        TextBox\r\n    },\r\n    data() {\r\n        return {\r\n            text: \"Some two-way bound text\",\r\n            importCode: getControlImportPath(\"textBox\"),\r\n            exampleCode: `<TextBox label=\"Text 1\" v-model=\"text\" :maxLength=\"50\" showCountDown />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"text\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\" >\r\n    <TextBox label=\"Text 1\" v-model=\"text\" :maxLength=\"50\" showCountDown />\r\n    <TextBox label=\"Text 2\" v-model=\"text\" />\r\n    <TextBox label=\"Memo\" v-model=\"text\" textMode=\"MultiLine\" :rows=\"10\" :maxLength=\"100\" showCountDown />\r\n\r\n    <template #settings>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a color picker */\r\nconst colorPickerGallery = defineComponent({\r\n    name: \"ColorPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        ColorPicker\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref(\"#ee7725\"),\r\n            importCode: getControlImportPath(\"colorPicker\"),\r\n            exampleCode: `<ColorPicker label=\"Color\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <ColorPicker label=\"Color\" v-model=\"value\" />\r\n\r\n    <template #settings>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a number box */\r\nconst numberBoxGallery = defineComponent({\r\n    name: \"NumberBoxGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        RockForm,\r\n        RockButton,\r\n        TextBox,\r\n        NumberBox\r\n    },\r\n    setup() {\r\n        const minimumValue = ref(\"0\");\r\n        const maximumValue = ref(\"1\");\r\n        const value = ref(42);\r\n\r\n        const numericMinimumValue = computed((): number => toNumber(minimumValue.value));\r\n        const numericMaximumValue = computed((): number => toNumber(maximumValue.value));\r\n\r\n        return {\r\n            minimumValue,\r\n            maximumValue,\r\n            numericMinimumValue,\r\n            numericMaximumValue,\r\n            value,\r\n            importCode: getControlImportPath(\"numberBox\"),\r\n            exampleCode: `<NumberBox label=\"Number\" v-model=\"value\" :minimumValue=\"minimumValue\" :maximumValue=\"maximumValue\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <RockForm>\r\n        <NumberBox label=\"Number\" v-model=\"value\" :minimumValue=\"numericMinimumValue\" :maximumValue=\"numericMaximumValue\" />\r\n        <RockButton btnType=\"primary\" type=\"submit\">Test Validation</RockButton>\r\n    </RockForm>\r\n\r\n    <template #settings>\r\n        <TextBox label=\"Minimum Value\" v-model=\"minimumValue\" />\r\n        <TextBox label=\"Maximum Value\" v-model=\"maximumValue\" />\r\n\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a number box */\r\nconst numberRangeBoxGallery = defineComponent({\r\n    name: \"NumberRangeBoxGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        NumberRangeBox\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref({ lower: 0, upper: 100 }),\r\n            importCode: getControlImportPath(\"numberRangeBox\"),\r\n            exampleCode: `<NumberRangeBox label=\"Number Range\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <NumberRangeBox label=\"Number Range\" v-model=\"value\" />\r\n\r\n    <template #settings>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a gender picker */\r\nconst genderDropDownListGallery = defineComponent({\r\n    name: \"GenderDropDownListGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        GenderDropDownList\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref(\"1\"),\r\n            importCode: getControlImportPath(\"genderDropDownList\"),\r\n            exampleCode: `<GenderDropDownList label=\"Your Gender\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <GenderDropDownList label=\"Your Gender\" v-model=\"value\" />\r\n\r\n    <template #settings>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code> and <code>Drop Down List</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a social security number box */\r\nconst socialSecurityNumberBoxGallery = defineComponent({\r\n    name: \"SocialSecurityNumberBoxGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        SocialSecurityNumberBox\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref(\"123456789\"),\r\n            importCode: getControlImportPath(\"socialSecurityNumberBox\"),\r\n            exampleCode: `<SocialSecurityNumberBox label=\"SSN\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <SocialSecurityNumberBox label=\"SSN\" v-model=\"value\" />\r\n\r\n    <template #settings>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code> and <code>Drop Down List</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a time picker */\r\nconst timePickerGallery = defineComponent({\r\n    name: \"TimePickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        TimePicker\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref({ hour: 14, minute: 15 }),\r\n            importCode: getControlImportPath(\"timePicker\"),\r\n            exampleCode: `<TimePicker label=\"Time\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <TimePicker label=\"Time\" v-model=\"value\" />\r\n\r\n    <template #settings>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code> and <code>Drop Down List</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a rating picker */\r\nconst ratingGallery = defineComponent({\r\n    name: \"RatingGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        NumberBox,\r\n        Rating\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref(3),\r\n            maximumValue: ref(5),\r\n            importCode: getControlImportPath(\"rating\"),\r\n            exampleCode: `<Rating label=\"Rating\" v-model=\"value\" :maxRating=\"5\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <Rating label=\"How Would You Rate God?\" v-model=\"value\" :maxRating=\"maximumValue || 5\" />\r\n\r\n    <template #settings>\r\n        <NumberBox label=\"Maximum Rating\" v-model=\"maximumValue\" />\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a switch */\r\nconst switchGallery = defineComponent({\r\n    name: \"SwitchGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        Switch\r\n    },\r\n    setup() {\r\n        return {\r\n            isChecked: ref(false),\r\n            importCode: getControlImportPath(\"switch\"),\r\n            exampleCode: `<Switch text=\"Switch\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"isChecked\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <Switch text=\"Switch\" v-model=\"isChecked\" />\r\n\r\n    <template #settings>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates an inline switch */\r\nconst inlineSwitchGallery = defineComponent({\r\n    name: \"InlineSwitchGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        InlineSwitch\r\n    },\r\n    setup() {\r\n        return {\r\n            isBold: ref(false),\r\n            isChecked: ref(false),\r\n            importCode: getControlImportPath(\"inlineSwitch\"),\r\n            exampleCode: `<InlineSwitch label=\"Inline Switch\" v-model=\"value\" :isBold=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"isChecked\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <InlineSwitch label=\"Inline Switch\" v-model=\"isChecked\" :isBold=\"isBold\" />\r\n\r\n    <template #settings>\r\n        <CheckBox label=\"Is Bold\" v-model=\"isBold\" />\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a currency box */\r\nconst currencyBoxGallery = defineComponent({\r\n    name: \"CurrencyBoxGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CurrencyBox\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref(1.23),\r\n            importCode: getControlImportPath(\"currencyBox\"),\r\n            exampleCode: `<CurrencyBox label=\"Currency\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <CurrencyBox label=\"Currency\" v-model=\"value\" />\r\n\r\n    <template #settings>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code> and <code>Number Box</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates an email box */\r\nconst emailBoxGallery = defineComponent({\r\n    name: \"EmailBoxGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        EmailBox\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref(\"ted@rocksolidchurchdemo.com\"),\r\n            importCode: getControlImportPath(\"emailBox\"),\r\n            exampleCode: `<EmailBox label=\"Email\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <EmailBox label=\"Email\" v-model=\"value\" />\r\n\r\n    <template #settings>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a number up down control */\r\nconst numberUpDownGallery = defineComponent({\r\n    name: \"NumberUpDownGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        NumberUpDown\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref(1),\r\n            importCode: getControlImportPath(\"numberUpDown\"),\r\n            exampleCode: `<NumberUpDown label=\"Number\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <NumberUpDown label=\"Number\" v-model=\"value\" />\r\n\r\n    <template #settings>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a static form control */\r\nconst staticFormControlGallery = defineComponent({\r\n    name: \"StaticFormControlGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        StaticFormControl\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref(\"This is a static value\"),\r\n            importCode: getControlImportPath(\"staticFormControl\"),\r\n            exampleCode: `<StaticFormControl label=\"Static Value\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\" >\r\n    <StaticFormControl label=\"Static Value\" v-model=\"value\" />\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates an address control */\r\nconst addressControlGallery = defineComponent({\r\n    name: \"AddressControlGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        AddressControl\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref({}),\r\n            importCode: getSfcControlImportPath(\"addressControl\"),\r\n            exampleCode: `<AddressControl label=\"Address\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <AddressControl label=\"Address\" v-model=\"value\" />\r\n\r\n    <template #settings>\r\n        <p>All props match that of a <code>Rock Form Field</code></p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a toggle button */\r\nconst toggleGallery = defineComponent({\r\n    name: \"ToggleGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        TextBox,\r\n        DropDownList,\r\n        Toggle\r\n    },\r\n    setup() {\r\n        return {\r\n            trueText: ref(\"On\"),\r\n            falseText: ref(\"Off\"),\r\n            btnSize: ref(\"sm\"),\r\n            sizeOptions: [\r\n                { value: \"lg\", text: \"Large\" },\r\n                { value: \"md\", text: \"Medium\" },\r\n                { value: \"sm\", text: \"Small\" },\r\n                { value: \"xs\", text: \"Extra Small\" },\r\n            ],\r\n            value: ref(false),\r\n            importCode: getControlImportPath(\"toggle\"),\r\n            exampleCode: `<Toggle label=\"Toggle\" v-model=\"value\" trueText=\"On\" falseText=\"Off\" :btnSize=\"btnSize\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <Toggle label=\"Toggle\" v-model=\"value\" :trueText=\"trueText\" :falseText=\"falseText\" :btnSize=\"btnSize\" />\r\n\r\n    <template #settings>\r\n        <TextBox label=\"True Text\" v-model=\"trueText\" />\r\n        <TextBox label=\"False Text\" v-model=\"falseText\" />\r\n        <DropDownList label=\"Button Size\" v-model=\"btnSize\" :items=\"sizeOptions\" />\r\n\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a progress tracker */\r\nconst progressTrackerGallery = defineComponent({\r\n    name: \"ProgressTrackerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        NumberUpDown,\r\n        ProgressTracker\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref(0),\r\n            items: [\r\n                { key: \"S\", title: \"Start\", subtitle: \"The beginning\" },\r\n                { key: \"1\", title: \"Step 1\", subtitle: \"The first step\" },\r\n                { key: \"2\", title: \"Step 2\", subtitle: \"The second step\" },\r\n                { key: \"3\", title: \"Step 3\", subtitle: \"The third step\" },\r\n                { key: \"4\", title: \"Step 4\", subtitle: \"The fourth step\" },\r\n                { key: \"5\", title: \"Step 5\", subtitle: \"The fifth step\" },\r\n                { key: \"6\", title: \"Step 6\", subtitle: \"The sixth step\" },\r\n                { key: \"7\", title: \"Step 7\", subtitle: \"The seventh step\" },\r\n                { key: \"8\", title: \"Step 8\", subtitle: \"The eighth step\" },\r\n                { key: \"F\", title: \"Finish\", subtitle: \"The finish\" }\r\n            ] as ProgressTrackerItem[],\r\n            importCode: getControlImportPath(\"progressTracker\"),\r\n            exampleCode: `<ProgressTracker :items=\"items\" :currentIndex=\"0\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\" >\r\n    <ProgressTracker :items=\"items\" :currentIndex=\"value\" />\r\n\r\n    <template #settings>\r\n        <NumberUpDown label=\"Index\" v-model=\"value\" :min=\"0\" :max=\"10\" />\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates an items with pre and post html control */\r\nconst itemsWithPreAndPostHtmlGallery = defineComponent({\r\n    name: \"ItemsWithPreAndPostHtmlGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        TextBox,\r\n        ItemsWithPreAndPostHtml\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref<ItemWithPreAndPostHtml[]>([\r\n                { preHtml: '<div class=\"row\"><div class=\"col-sm-6\">', postHtml: \"</div>\", slotName: \"item1\" },\r\n                { preHtml: '<div class=\"col-sm-6\">', postHtml: \"</div></div>\", slotName: \"item2\" }\r\n            ]),\r\n            importCode: getControlImportPath(\"itemsWithPreAndPostHtml\"),\r\n            exampleCode: `<ItemsWithPreAndPostHtml :items=\"value\">\r\n    <template #item1>\r\n        <div>This is item 1</div>\r\n    </template>\r\n    <template #item2>\r\n        <div>This is item 2</div>\r\n    </template>\r\n</ItemsWithPreAndPostHtml>`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\" >\r\n    <ItemsWithPreAndPostHtml :items=\"value\">\r\n        <template #item1>\r\n            <div class=\"padding-all-sm text-center bg-primary\">This is item 1</div>\r\n        </template>\r\n        <template #item2>\r\n            <div class=\"padding-all-sm text-center bg-primary\">This is item 2</div>\r\n        </template>\r\n    </ItemsWithPreAndPostHtml>\r\n\r\n    <template #settings>\r\n        <TextBox label=\"Item 1 - Pre Html\" v-model=\"value[0].preHtml\" />\r\n        <TextBox label=\"Item 1 - Post Html\" v-model=\"value[0].postHtml\" />\r\n        <TextBox label=\"Item 2 - Pre Html\" v-model=\"value[1].preHtml\" />\r\n        <TextBox label=\"Item 2 - Post Html\" v-model=\"value[1].postHtml\" />\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a URL link box */\r\nconst urlLinkBoxGallery = defineComponent({\r\n    name: \"UrlLinkBoxGallery\",\r\n    components: {\r\n        UrlLinkBox,\r\n        GalleryAndResult\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref(\"/home/\"),\r\n            importCode: getControlImportPath(\"urlLinkBox\"),\r\n            exampleCode: `<UrlLinkBox label=\"URL\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <UrlLinkBox label=\"URL\" v-model=\"value\" />\r\n\r\n    <template #settings>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n\r\n/** Demonstrates the fullscreen component. */\r\nconst fullscreenGallery = defineComponent({\r\n    name: \"FullscreenGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        InlineSwitch,\r\n        CheckBox,\r\n        Fullscreen\r\n    },\r\n    setup() {\r\n        return {\r\n            pageOnly: ref(true),\r\n            value: ref(false),\r\n            importCode: getControlImportPath(\"fullscreen\"),\r\n            exampleCode: `<Fullscreen v-model=\"value\" :isPageOnly=\"true\">\r\n    <p>Content to make full screen</p>\r\n</Fullscreen>`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\" >\r\n    <Fullscreen v-model=\"value\" :isPageOnly=\"pageOnly\">\r\n        <div class=\"bg-info padding-all-md\" style=\"width:100%; height: 100%; min-height: 300px; display: grid; place-content: center;\">\r\n            <InlineSwitch v-model=\"value\" label=\"Fullscreen\" :isBold=\"true\" />\r\n        </div>\r\n    </Fullscreen>\r\n\r\n    <template #settings>\r\n        <CheckBox v-model=\"pageOnly\" label=\"Is Page Only\" help=\"If true, fills content window. If false, hides the browser chrome and fills entire screen.\" />\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates the panel component. */\r\nconst panelGallery = defineComponent({\r\n    name: \"PanelGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        CheckBoxList,\r\n        Panel,\r\n        RockButton\r\n    },\r\n\r\n    setup() {\r\n        const simulateValues = ref<string[]>([]);\r\n\r\n        const headerSecondaryActions = computed((): PanelAction[] => {\r\n            if (!simulateValues.value.includes(\"headerSecondaryActions\")) {\r\n                return [];\r\n            }\r\n\r\n            return [\r\n                {\r\n                    iconCssClass: \"fa fa-user\",\r\n                    title: \"Action 1\",\r\n                    type: \"default\",\r\n                    handler: () => alert(\"Action 1 selected.\")\r\n                },\r\n                {\r\n                    iconCssClass: \"fa fa-group\",\r\n                    title: \"Action 2\",\r\n                    type: \"default\",\r\n                    handler: () => alert(\"Action 2 selected.\")\r\n                }\r\n            ];\r\n        });\r\n\r\n        return {\r\n            colors: Array.apply(0, Array(256)).map((_: unknown, index: number) => `rgb(${index}, ${index}, ${index})`),\r\n            collapsibleValue: ref(true),\r\n            drawerValue: ref(false),\r\n            hasFullscreen: ref(false),\r\n            hasZoom: ref(false),\r\n            headerSecondaryActions,\r\n            simulateValues,\r\n            simulateOptions: [\r\n                {\r\n                    value: \"drawer\",\r\n                    text: \"Drawer\"\r\n                },\r\n                {\r\n                    value: \"headerActions\",\r\n                    text: \"Header Actions\"\r\n                },\r\n                {\r\n                    value: \"headerSecondaryActions\",\r\n                    text: \"Header Secondary Actions\"\r\n                },\r\n                {\r\n                    value: \"subheaderLeft\",\r\n                    text: \"Subheader Left\",\r\n                },\r\n                {\r\n                    value: \"subheaderRight\",\r\n                    text: \"Subheader Right\"\r\n                },\r\n                {\r\n                    value: \"footerActions\",\r\n                    text: \"Footer Actions\"\r\n                },\r\n                {\r\n                    value: \"footerSecondaryActions\",\r\n                    text: \"Footer Secondary Actions\"\r\n                },\r\n                {\r\n                    value: \"helpContent\",\r\n                    text: \"Help Content\"\r\n                },\r\n                {\r\n                    value: \"largeBody\",\r\n                    text: \"Large Body\"\r\n                }\r\n            ],\r\n            simulateDrawer: computed((): boolean => simulateValues.value.includes(\"drawer\")),\r\n            simulateHeaderActions: computed((): boolean => simulateValues.value.includes(\"headerActions\")),\r\n            simulateSubheaderLeft: computed((): boolean => simulateValues.value.includes(\"subheaderLeft\")),\r\n            simulateSubheaderRight: computed((): boolean => simulateValues.value.includes(\"subheaderRight\")),\r\n            simulateFooterActions: computed((): boolean => simulateValues.value.includes(\"footerActions\")),\r\n            simulateFooterSecondaryActions: computed((): boolean => simulateValues.value.includes(\"footerSecondaryActions\")),\r\n            simulateLargeBody: computed((): boolean => simulateValues.value.includes(\"largeBody\")),\r\n            simulateHelp: computed((): boolean => simulateValues.value.includes(\"helpContent\")),\r\n            isFullscreenPageOnly: ref(true),\r\n            value: ref(true),\r\n            importCode: getControlImportPath(\"panel\"),\r\n            exampleCode: `<Panel v-model=\"isExanded\" v-model:isDrawerOpen=\"false\" title=\"Panel Title\" :hasCollapse=\"true\" :hasFullscreen=\"false\" :isFullscreenPageOnly=\"true\" :headerSecondaryActions=\"false\">\r\n    <template #helpContent>Help Content</template>\r\n    <template #drawer>Drawer Content</template>\r\n    <template #headerActions>Header Actions</template>\r\n    <template #subheaderLeft>Sub Header Left</template>\r\n    <template #subheaderRight>Sub Header Right</template>\r\n    <template #footerActions>Footer Actions</template>\r\n    <template #footerSecondaryActions>Footer Secondary Actions</template>\r\n\r\n    Main Panel Content\r\n</Panel>`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\" >\r\n    <Panel v-model=\"value\" v-model:isDrawerOpen=\"drawerValue\" :hasCollapse=\"collapsibleValue\" :hasZoom=\"hasZoom\" :hasFullscreen=\"hasFullscreen\" :isFullscreenPageOnly=\"isFullscreenPageOnly\" title=\"Panel Title\" :headerSecondaryActions=\"headerSecondaryActions\">\r\n        <template v-if=\"simulateHelp\" #helpContent>\r\n            This is some help text.\r\n        </template>\r\n\r\n        <template v-if=\"simulateDrawer\" #drawer>\r\n            <div style=\"text-align: center;\">Drawer Content</div>\r\n        </template>\r\n\r\n        <template v-if=\"simulateHeaderActions\" #headerActions>\r\n            <span class=\"action\">\r\n                <i class=\"fa fa-star-o\"></i>\r\n            </span>\r\n\r\n            <span class=\"action\">\r\n                <i class=\"fa fa-user\"></i>\r\n            </span>\r\n        </template>\r\n\r\n        <template v-if=\"simulateSubheaderLeft\" #subheaderLeft>\r\n            <span class=\"label label-warning\">Warning</span>&nbsp;\r\n            <span class=\"label label-default\">Default</span>\r\n        </template>\r\n\r\n        <template v-if=\"simulateSubheaderRight\" #subheaderRight>\r\n            <span class=\"label label-info\">Info</span>&nbsp;\r\n            <span class=\"label label-default\">Default</span>\r\n        </template>\r\n\r\n        <template v-if=\"simulateFooterActions\" #footerActions>\r\n            <RockButton btnType=\"primary\">Action 1</RockButton>\r\n            <RockButton btnType=\"primary\">Action 2</RockButton>\r\n        </template>\r\n\r\n        <template v-if=\"simulateFooterSecondaryActions\" #footerSecondaryActions>\r\n            <RockButton btnType=\"default\"><i class=\"fa fa-lock\"></i></RockButton>\r\n            <RockButton btnType=\"default\"><i class=\"fa fa-unlock\"></i></RockButton>\r\n        </template>\r\n\r\n\r\n        <h4>Romans 11:33-36</h4>\r\n        <p>\r\n            Oh, the depth of the riches<br />\r\n            and the wisdom and the knowledge of God!<br />\r\n            How unsearchable his judgments<br />\r\n            and untraceable his ways!<br />\r\n            For who has known the mind of the Lord?<br />\r\n            Or who has been his counselor?<br />\r\n            And who has ever given to God,<br />\r\n            that he should be repaid?<br />\r\n            For from him and through him<br />\r\n            and to him are all things.<br />\r\n            To him be the glory forever. Amen.\r\n        </p>\r\n    </Panel>\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <CheckBox formGroupClasses=\"col-sm-3\" v-model=\"collapsibleValue\" label=\"Collapsible\" />\r\n            <CheckBox formGroupClasses=\"col-sm-3\" v-model=\"value\" label=\"Panel Open\" />\r\n            <CheckBox formGroupClasses=\"col-sm-3\" v-model=\"hasFullscreen\" label=\"Has Fullscreen\" />\r\n            <CheckBox formGroupClasses=\"col-sm-3\" v-model=\"isFullscreenPageOnly\" label=\"Page Only Fullscreen\" />\r\n            <CheckBox formGroupClasses=\"col-sm-3\" v-model=\"hasZoom\" label=\"Has Zoom\" />\r\n        </div>\r\n        <CheckBoxList v-model=\"simulateValues\" label=\"Simulate\" :items=\"simulateOptions\" />\r\n\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a person picker */\r\nconst personPickerGallery = defineComponent({\r\n    name: \"PersonPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        PersonPicker\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref(null),\r\n            importCode: getControlImportPath(\"personPicker\"),\r\n            exampleCode: `<PersonPicker v-model=\"value\" label=\"Person\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value ?? null\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <PersonPicker v-model=\"value\" label=\"Person\" />\r\n    <template #settings>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates the file uploader component. */\r\nconst fileUploaderGallery = defineComponent({\r\n    name: \"FileUploaderGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        FileUploader,\r\n        TextBox\r\n    },\r\n    setup() {\r\n        return {\r\n            binaryFileTypeGuid: ref(BinaryFiletype.Default),\r\n            showDeleteButton: ref(true),\r\n            uploadAsTemporary: ref(true),\r\n            uploadButtonText: ref(\"Upload\"),\r\n            value: ref(null),\r\n            importCode: getControlImportPath(\"fileUploader\"),\r\n            exampleCode: `<FileUploader v-model=\"value\" label=\"File Uploader\" :uploadAsTemporary=\"true\" :binaryFileTypeGuid=\"BinaryFiletype.Default\" uploadButtonText=\"Upload\" :showDeleteButton=\"true\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <FileUploader v-model=\"value\"\r\n        label=\"File Uploader\"\r\n        :uploadAsTemporary=\"uploadAsTemporary\"\r\n        :binaryFileTypeGuid=\"binaryFileTypeGuid\"\r\n        :uploadButtonText=\"uploadButtonText\"\r\n        :showDeleteButton=\"showDeleteButton\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <CheckBox formGroupClasses=\"col-sm-4\" v-model=\"uploadAsTemporary\" label=\"Upload As Temporary\" />\r\n            <TextBox formGroupClasses=\"col-sm-8\" v-model=\"binaryFileTypeGuid\" label=\"Binary File Type Guid\" />\r\n        </div>\r\n        <div class=\"row\">\r\n            <CheckBox formGroupClasses=\"col-sm-4\" v-model=\"showDeleteButton\" label=\"Show Delete Button\" />\r\n            <TextBox formGroupClasses=\"col-sm-8\" v-model=\"uploadButtonText\" label=\"Upload Button Text\" />\r\n        </div>\r\n\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates the image uploader component. */\r\nconst imageUploaderGallery = defineComponent({\r\n    name: \"ImageUploaderGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        ImageUploader,\r\n        TextBox\r\n    },\r\n    setup() {\r\n        return {\r\n            binaryFileTypeGuid: ref(BinaryFiletype.Default),\r\n            showDeleteButton: ref(true),\r\n            uploadAsTemporary: ref(true),\r\n            uploadButtonText: ref(\"Upload\"),\r\n            value: ref(null),\r\n            importCode: getControlImportPath(\"imageUploader\"),\r\n            exampleCode: `<ImageUploader v-model=\"value\" label=\"Image Uploader\" :uploadAsTemporary=\"true\" :binaryFileTypeGuid=\"BinaryFiletype.Default\" uploadButtonText=\"Upload\" :showDeleteButton=\"true\" />`\r\n        };\r\n    },\r\n    template: `\r\n    <GalleryAndResult\r\n        :value=\"value\"\r\n        :importCode=\"importCode\"\r\n        :exampleCode=\"exampleCode\"\r\n        enableReflection >\r\n        <ImageUploader v-model=\"value\"\r\n            label=\"Image Uploader\"\r\n            :uploadAsTemporary=\"uploadAsTemporary\"\r\n            :binaryFileTypeGuid=\"binaryFileTypeGuid\"\r\n            :uploadButtonText=\"uploadButtonText\"\r\n            :showDeleteButton=\"showDeleteButton\" />\r\n\r\n        <template #settings>\r\n            <div class=\"row\">\r\n                <CheckBox formGroupClasses=\"col-sm-4\" v-model=\"uploadAsTemporary\" label=\"Upload As Temporary\" />\r\n                <TextBox formGroupClasses=\"col-sm-8\" v-model=\"binaryFileTypeGuid\" label=\"Binary File Type Guid\" />\r\n            </div>\r\n            <div class=\"row\">\r\n                <CheckBox formGroupClasses=\"col-sm-4\" v-model=\"showDeleteButton\" label=\"Show Delete Button\" />\r\n                <TextBox formGroupClasses=\"col-sm-8\" v-model=\"uploadButtonText\" label=\"Upload Button Text\" />\r\n            </div>\r\n\r\n            <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n        </template>\r\n    </GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a sliding date range picker */\r\nconst slidingDateRangePickerGallery = defineComponent({\r\n    name: \"SlidingDateRangePickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        SlidingDateRangePicker,\r\n        DropDownList\r\n    },\r\n    setup() {\r\n        const value = ref<SlidingDateRange | null>(null);\r\n\r\n        return {\r\n            value,\r\n            rangeTypeOptions: rangeTypeOptions,\r\n            rangeTypes: ref(null),\r\n            previewLocation: ref(\"Right\"),\r\n            previewLocationOptions: [\r\n                {\r\n                    text: \"Right (Default)\",\r\n                    value: \"Right\"\r\n                },\r\n                {\r\n                    text: \"Top\",\r\n                    value: \"Top\"\r\n                },\r\n                {\r\n                    text: \"None\",\r\n                    value: \"None\"\r\n                },\r\n            ],\r\n            importCode: getSfcControlImportPath(\"slidingDateRangePicker\") +\r\n                \"\\n// If Customizing Date Range Types\" +\r\n                \"\\nimport { RangeType } from \\\"@Obsidian/Utility/slidingDateRange\\\";\",\r\n            exampleCode: `<SlidingDateRangePicker v-model=\"value\" label=\"Sliding Date Range\" :enabledSlidingDateRangeUnits=\"[RangeType.Current, RangeType.Previous, RangeType.Next]\" previewLocation=\"Right\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <SlidingDateRangePicker\r\n        v-model=\"value\"\r\n        label=\"Sliding Date Range\"\r\n        :enabledSlidingDateRangeUnits=\"rangeTypes\"\r\n        :previewLocation=\"previewLocation\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <DropDownList v-model=\"rangeTypes\" :items=\"rangeTypeOptions\" multiple showBlankItem label=\"Available Range Types\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <DropDownList v-model=\"previewLocation\" :items=\"previewLocationOptions\" showBlankItem label=\"Date Preview Location\" />\r\n            </div>\r\n        </div>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates defined value picker */\r\nconst definedValuePickerGallery = defineComponent({\r\n    name: \"DefinedValuePickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        DefinedValuePicker,\r\n        TextBox\r\n    },\r\n    setup() {\r\n\r\n        function onsubmit(): void {\r\n            alert(\"control gallery form submitted\");\r\n        }\r\n\r\n        const multiple = ref(false);\r\n        const enhanceForLongLists = ref(false);\r\n        const displayStyle = computed(() => (multiple.value && !enhanceForLongLists.value) ? PickerDisplayStyle.List : PickerDisplayStyle.Auto);\r\n\r\n        return {\r\n            onsubmit,\r\n            allowAdd: ref(false),\r\n            definedTypeGuid: ref(DefinedType.PersonConnectionStatus),\r\n            enhanceForLongLists,\r\n            multiple,\r\n            displayStyle,\r\n            value: ref(null),\r\n            importCode: getControlImportPath(\"definedValuePicker\"),\r\n            exampleCode: `<DefinedValuePicker label=\"Defined Value\" v-model=\"value\" :definedTypeGuid=\"definedTypeGuid\" :multiple=\"false\" :enhanceForLongLists=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <DefinedValuePicker label=\"Defined Value\" v-model=\"value\" :definedTypeGuid=\"definedTypeGuid\" :multiple=\"multiple\" :enhanceForLongLists=\"enhanceForLongLists\" :allowAdd=\"allowAdd\" :displayStyle=\"displayStyle\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <TextBox formGroupClasses=\"col-md-4\" label=\"Defined Type\" v-model=\"definedTypeGuid\" />\r\n            <CheckBox formGroupClasses=\"col-md-2\" label=\"Multiple\" v-model=\"multiple\" />\r\n            <CheckBox formGroupClasses=\"col-md-3\" label=\"Enhance For Long Lists\" v-model=\"enhanceForLongLists\" />\r\n            <CheckBox formGroupClasses=\"col-md-3\" label=\"Allow Adding Values\" v-model=\"allowAdd\" />\r\n        </div>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates entity type picker */\r\nconst entityTypePickerGallery = defineComponent({\r\n    name: \"EntityTypePickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        DropDownList,\r\n        EntityTypePicker,\r\n        NumberUpDown\r\n    },\r\n    setup() {\r\n        return {\r\n            columnCount: ref(0),\r\n            displayStyle: ref(PickerDisplayStyle.Auto),\r\n            displayStyleItems,\r\n            enhanceForLongLists: ref(false),\r\n            includeGlobalOption: ref(false),\r\n            multiple: ref(false),\r\n            showBlankItem: ref(false),\r\n            value: ref({ value: EntityType.Person, text: \"Default Person\" }),\r\n            importCode: getControlImportPath(\"entityTypePicker\"),\r\n            exampleCode: `<EntityTypePicker label=\"Entity Type\" v-model=\"value\" :multiple=\"false\" :includeGlobalOption=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <EntityTypePicker label=\"Entity Type\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :columnCount=\"columnCount\"\r\n        :includeGlobalOption=\"includeGlobalOption\"\r\n        :enhanceForLongLists=\"enhanceForLongLists\"\r\n        :displayStyle=\"displayStyle\"\r\n        :showBlankItem=\"showBlankItem\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-3\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-3\">\r\n                <CheckBox label=\"Include Global Option\" v-model=\"includeGlobalOption\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-3\">\r\n                <CheckBox label=\"Enhance For Long Lists\" v-model=\"enhanceForLongLists\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-3\">\r\n                <CheckBox label=\"Show Blank Item\" v-model=\"showBlankItem\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-3\">\r\n                <DropDownList label=\"Display Style\" :showBlankItem=\"false\" v-model=\"displayStyle\" :items=\"displayStyleItems\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-3\">\r\n                <NumberUpDown label=\"Column Count\" v-model=\"columnCount\" :min=\"0\" />\r\n            </div>\r\n        </div>\r\n\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Button</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates Achievement type picker */\r\nconst achievementTypePickerGallery = defineComponent({\r\n    name: \"AchievementTypePickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        DropDownList,\r\n        AchievementTypePicker,\r\n        NumberUpDown\r\n    },\r\n    setup() {\r\n        return {\r\n            columnCount: ref(0),\r\n            displayStyle: ref(PickerDisplayStyle.Auto),\r\n            displayStyleItems,\r\n            enhanceForLongLists: ref(false),\r\n            multiple: ref(false),\r\n            showBlankItem: ref(false),\r\n            value: ref({}),\r\n            importCode: getControlImportPath(\"achievementTypePicker\"),\r\n            exampleCode: `<AchievementTypePicker label=\"Achievement Type\" v-model=\"value\" :multiple=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <AchievementTypePicker label=\"Achievement Type\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :columnCount=\"columnCount\"\r\n        :enhanceForLongLists=\"enhanceForLongLists\"\r\n        :displayStyle=\"displayStyle\"\r\n        :showBlankItem=\"showBlankItem\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-3\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-3\">\r\n                <CheckBox label=\"Enhance For Long Lists\" v-model=\"enhanceForLongLists\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-3\">\r\n                <CheckBox label=\"Show Blank Item\" v-model=\"showBlankItem\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-3\">\r\n                <DropDownList label=\"Display Style\" :showBlankItem=\"false\" v-model=\"displayStyle\" :items=\"displayStyleItems\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-3\">\r\n                <NumberUpDown label=\"Column Count\" v-model=\"columnCount\" :min=\"0\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates Badge Component picker */\r\nconst badgeComponentPickerGallery = defineComponent({\r\n    name: \"BadgeComponentPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        DropDownList,\r\n        BadgeComponentPicker,\r\n        NumberUpDown,\r\n        EntityTypePicker\r\n    },\r\n    setup() {\r\n        return {\r\n            columnCount: ref(0),\r\n            displayStyle: ref(PickerDisplayStyle.Auto),\r\n            displayStyleItems,\r\n            entityTypeGuid: ref(null),\r\n            enhanceForLongLists: ref(false),\r\n            multiple: ref(false),\r\n            showBlankItem: ref(false),\r\n            value: ref({}),\r\n            importCode: getControlImportPath(\"badgeComponentPicker\"),\r\n            exampleCode: `<BadgeComponentPicker label=\"Badge Component\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <BadgeComponentPicker label=\"Badge Component\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :columnCount=\"columnCount\"\r\n        :enhanceForLongLists=\"enhanceForLongLists\"\r\n        :displayStyle=\"displayStyle\"\r\n        :showBlankItem=\"showBlankItem\"\r\n        :entityTypeGuid=\"entityTypeGuid?.value\" />\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Enhance For Long Lists\" v-model=\"enhanceForLongLists\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Show Blank Item\" v-model=\"showBlankItem\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <DropDownList label=\"Display Style\" :showBlankItem=\"false\" v-model=\"displayStyle\" :items=\"displayStyleItems\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <NumberUpDown label=\"Column Count\" v-model=\"columnCount\" :min=\"0\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <EntityTypePicker label=\"For Entity Type\" v-model=\"entityTypeGuid\" enhanceForLongLists showBlankItem />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates the SectionHeader component */\r\nconst sectionHeaderGallery = defineComponent({\r\n    name: \"SectionHeaderGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        SectionHeader,\r\n        CheckBox\r\n    },\r\n    setup() {\r\n        const showSeparator = ref(true);\r\n        const showDescription = ref(true);\r\n        const showActionBar = ref(true);\r\n        const showContent = ref(true);\r\n\r\n        const description = computed(() => {\r\n            return showDescription.value\r\n                ? \"You can use a Section Header to put a title and description above some content.\"\r\n                : \"\";\r\n        });\r\n\r\n        return {\r\n            showSeparator,\r\n            showDescription,\r\n            showActionBar,\r\n            showContent,\r\n            description,\r\n            importCode: getControlImportPath(\"sectionHeader\"),\r\n            exampleCode: `<SectionHeader title=\"This is a SectionHeader\" description=\"A Description\" :isSeparatorHidden=\"false\">\r\n    <template #actions>Action Buttons</template>\r\n</SectionHeader>`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\" >\r\n\r\n    <SectionHeader\r\n        title=\"This is a SectionHeader\"\r\n        :description=\"description\"\r\n        :isSeparatorHidden=\"!showSeparator\" >\r\n        <template v-if=\"showActionBar\" #actions>\r\n            <div>\r\n                <a class=\"btn btn-default btn-xs btn-square\"><i class=\"fa fa-lock\"></i></a>\r\n                <a class=\"btn btn-default btn-xs btn-square\"><i class=\"fa fa-pencil\"></i></a>\r\n                <a class=\"btn btn-danger btn-xs btn-square\"><i class=\"fa fa-trash-alt\"></i></a>\r\n            </div>\r\n        </template>\r\n    </SectionHeader>\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <CheckBox formGroupClasses=\"col-xs-4\" v-model=\"showSeparator\" label=\"Show Separator\" />\r\n            <CheckBox formGroupClasses=\"col-xs-4\" v-model=\"showDescription\" label=\"Show Description\" />\r\n            <CheckBox formGroupClasses=\"col-xs-4\" v-model=\"showActionBar\" label=\"Show Action Bar\" />\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates the SectionContainer component */\r\nconst sectionContainerGallery = defineComponent({\r\n    name: \"SectionContainerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        SectionContainer,\r\n        CheckBox\r\n    },\r\n    setup() {\r\n        const showDescription = ref(true);\r\n        const showActionBar = ref(true);\r\n        const showContentToggle = ref(false);\r\n        const showContent = ref(true);\r\n\r\n        const description = computed(() => {\r\n            return showDescription.value\r\n                ? \"The Section Container has a Section Header and a collapsible content section below it.\"\r\n                : \"\";\r\n        });\r\n\r\n        return {\r\n            showDescription,\r\n            showActionBar,\r\n            showContentToggle,\r\n            showContent,\r\n            description,\r\n            importCode: getControlImportPath(\"sectionContainer\"),\r\n            exampleCode: `<SectionContainer title=\"This is a Section Container\" description=\"A Description\" v-model=\"showContent\" toggleText=\"Show\">\r\n    <template #actions>Action Buttons</template>\r\n    Main Content\r\n</SectionContainer>`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\" >\r\n\r\n    <SectionContainer\r\n        title=\"This is a Section Container\"\r\n        :description=\"description\"\r\n        v-model=\"showContent\"\r\n        :toggleText=\"showContentToggle ? 'Show' : ''\" >\r\n        <template v-if=\"showActionBar\" #actions>\r\n            <div>\r\n                <a class=\"btn btn-default btn-xs btn-square\"><i class=\"fa fa-lock\"></i></a>\r\n                <a class=\"btn btn-default btn-xs btn-square\"><i class=\"fa fa-pencil\"></i></a>\r\n                <a class=\"btn btn-danger btn-xs btn-square\"><i class=\"fa fa-trash-alt\"></i></a>\r\n            </div>\r\n        </template>\r\n        Here's some content to put in here.\r\n    </SectionContainer>\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <CheckBox formGroupClasses=\"col-xs-4\" v-model=\"showDescription\" label=\"Show Description\" />\r\n            <CheckBox formGroupClasses=\"col-xs-4\" v-model=\"showActionBar\" label=\"Show Action Bar\" />\r\n            <CheckBox formGroupClasses=\"col-xs-4\" v-model=\"showContentToggle\" label=\"Show Content Toggle\" />\r\n        </div>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates category picker */\r\nconst categoryPickerGallery = defineComponent({\r\n    name: \"CategoryPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        CategoryPicker,\r\n        TextBox,\r\n        EntityTypePicker\r\n    },\r\n    setup() {\r\n        const entityType = ref<ListItemBag | null>(null);\r\n        const entityTypeGuid = computed(() => {\r\n            if (entityType?.value?.value) {\r\n                return entityType.value.value;\r\n            }\r\n\r\n            return null;\r\n        });\r\n\r\n        return {\r\n            entityType,\r\n            entityTypeGuid,\r\n            multiple: ref(false),\r\n            value: ref(null),\r\n            importCode: getControlImportPath(\"categoryPicker\"),\r\n            exampleCode: `<CategoryPicker label=\"Category Picker\" v-model=\"value\" :multiple=\"false\" :entityTypeGuid=\"entityTypeGuid\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <CategoryPicker label=\"Category Picker\" v-model=\"value\" :multiple=\"multiple\" :entityTypeGuid=\"entityTypeGuid\" />\r\n\r\n    <template #settings>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <EntityTypePicker label=\"For Entity Type\" v-model=\"entityType\" enhanceForLongLists showBlankItem />\r\n            </div>\r\n        </div>\r\n\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates location item picker */\r\nconst locationItemPickerGallery = defineComponent({\r\n    name: \"LocationItemPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        LocationItemPicker\r\n    },\r\n    setup() {\r\n        return {\r\n            multiple: ref(false),\r\n            value: ref(null),\r\n            importCode: getControlImportPath(\"locationItemPicker\"),\r\n            exampleCode: `<LocationItemPicker label=\"Location\" v-model=\"value\" :multiple=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <LocationItemPicker label=\"Location\" v-model=\"value\" :multiple=\"multiple\" />\r\n\r\n    <template #settings>\r\n        <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates connection request picker */\r\nconst connectionRequestPickerGallery = defineComponent({\r\n    name: \"ConnectionRequestPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        ConnectionRequestPicker\r\n    },\r\n    setup() {\r\n        return {\r\n            multiple: ref(false),\r\n            value: ref(null),\r\n            importCode: getControlImportPath(\"connectionRequestPicker\"),\r\n            exampleCode: `<ConnectionRequestPicker label=\"ConnectionRequest\" v-model=\"value\" :multiple=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <ConnectionRequestPicker label=\"ConnectionRequest\" v-model=\"value\" :multiple=\"multiple\" />\r\n\r\n    <template #settings>\r\n        <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates copy button */\r\nconst copyButtonGallery = defineComponent({\r\n    name: \"CopyButtonGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        TextBox,\r\n        DropDownList,\r\n        CopyButton,\r\n    },\r\n    setup() {\r\n        return {\r\n            tooltip: ref(\"Copy\"),\r\n            value: ref(\"To God Be The Glory\"),\r\n            buttonSize: ref(\"md\"),\r\n            sizeOptions: [\r\n                { value: \"lg\", text: \"Large\" },\r\n                { value: \"md\", text: \"Medium\" },\r\n                { value: \"sm\", text: \"Small\" },\r\n                { value: \"xs\", text: \"Extra Small\" },\r\n            ],\r\n            importCode: getControlImportPath(\"copyButton\"),\r\n            exampleCode: `<CopyButton :value=\"value\" tooltip=\"Copy\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\" >\r\n    <CopyButton :value=\"value\" :tooltip=\"tooltip\" :btnSize=\"buttonSize\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <TextBox formGroupClasses=\"col-sm-4\" v-model=\"value\" label=\"Value to Copy to Clipboard\" />\r\n            <TextBox formGroupClasses=\"col-sm-4\" v-model=\"tooltip\" label=\"Tooltip\" />\r\n            <DropDownList formGroupClasses=\"col-sm-4\" label=\"Button Size\" v-model=\"buttonSize\" :items=\"sizeOptions\" />\r\n        </div>\r\n\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Button</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates entity tag list */\r\nconst entityTagListGallery = defineComponent({\r\n    name: \"EntityTagListGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        EntityTagList\r\n    },\r\n    setup() {\r\n        const store = useStore();\r\n\r\n        return {\r\n            disabled: ref(false),\r\n            entityTypeGuid: EntityType.Person,\r\n            entityKey: store.state.currentPerson?.idKey ?? \"\",\r\n            importCode: getControlImportPath(\"entityTagList\"),\r\n            exampleCode: `<EntityTagList :entityTypeGuid=\"entityTypeGuid\" :entityKey=\"entityKey\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\">\r\n    <EntityTagList :entityTypeGuid=\"entityTypeGuid\" :entityKey=\"entityKey\" :disabled=\"disabled\" />\r\n\r\n    <template #settings>\r\n        <CheckBox label=\"Disabled\" v-model=\"disabled\" />\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates following control. */\r\nconst followingGallery = defineComponent({\r\n    name: \"FollowingGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        Following,\r\n        TextBox\r\n    },\r\n    setup() {\r\n        const store = useStore();\r\n\r\n        return {\r\n            disabled: ref(false),\r\n            entityTypeGuid: ref(EntityType.Person),\r\n            entityKey: ref(store.state.currentPerson?.idKey ?? \"\"),\r\n            importCode: getControlImportPath(\"following\"),\r\n            exampleCode: `<Following :entityTypeGuid=\"entityTypeGuid\" :entityKey=\"entityKey\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\">\r\n    <Following :entityTypeGuid=\"entityTypeGuid\" :entityKey=\"entityKey\" :disabled=\"disabled\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Disabled\" v-model=\"disabled\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <TextBox label=\"Entity Type Guid\" v-model=\"entityTypeGuid\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <TextBox label=\"Entity Key\" v-model=\"entityKey\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates assessment type picker */\r\nconst assessmentTypePickerGallery = defineComponent({\r\n    name: \"AssessmentTypePickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        DropDownList,\r\n        AssessmentTypePicker,\r\n        NumberUpDown\r\n    },\r\n    setup() {\r\n        return {\r\n            columnCount: ref(0),\r\n            displayStyle: ref(PickerDisplayStyle.Auto),\r\n            displayStyleItems,\r\n            enhanceForLongLists: ref(false),\r\n            isInactiveIncluded: ref(false),\r\n            multiple: ref(false),\r\n            showBlankItem: ref(false),\r\n            value: ref({ value: AssessmentType.Disc, text: \"DISC\" }),\r\n            importCode: getControlImportPath(\"assessmentTypePicker\"),\r\n            exampleCode: `<AssessmentTypePicker label=\"Assessment Type\" v-model=\"value\" :isInactiveIncluded=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <AssessmentTypePicker label=\"Assessment Type\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :columnCount=\"columnCount\"\r\n        :isInactiveIncluded=\"isInactiveIncluded\"\r\n        :enhanceForLongLists=\"enhanceForLongLists\"\r\n        :displayStyle=\"displayStyle\"\r\n        :showBlankItem=\"showBlankItem\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Enhance For Long Lists\" v-model=\"enhanceForLongLists\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Show Blank Item\" v-model=\"showBlankItem\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <DropDownList label=\"Display Style\" :showBlankItem=\"false\" v-model=\"displayStyle\" :items=\"displayStyleItems\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <NumberUpDown label=\"Column Count\" v-model=\"columnCount\" :min=\"0\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Include Inactive\" v-model=\"isInactiveIncluded\" help=\"When set, inactive assessments will be included in the list.\" />\r\n            </div>\r\n        </div>\r\n\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Button</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n\r\n/** Demonstrates Asset Storage Provider picker */\r\nconst assetStorageProviderPickerGallery = defineComponent({\r\n    name: \"AssetStorageProviderPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        DropDownList,\r\n        AssetStorageProviderPicker,\r\n        NumberUpDown\r\n    },\r\n    setup() {\r\n        return {\r\n            columnCount: ref(0),\r\n            displayStyle: ref(PickerDisplayStyle.Auto),\r\n            displayStyleItems,\r\n            enhanceForLongLists: ref(false),\r\n            multiple: ref(false),\r\n            showBlankItem: ref(false),\r\n            value: ref(null),\r\n            importCode: getControlImportPath(\"assetStorageProviderPicker\"),\r\n            exampleCode: `<AssetStorageProviderPicker label=\"Asset Storage Provider\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <AssetStorageProviderPicker label=\"Asset Storage Provider\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :columnCount=\"columnCount\"\r\n        :enhanceForLongLists=\"enhanceForLongLists\"\r\n        :displayStyle=\"displayStyle\"\r\n        :showBlankItem=\"showBlankItem\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Enhance For Long Lists\" v-model=\"enhanceForLongLists\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Show Blank Item\" v-model=\"showBlankItem\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <DropDownList label=\"Display Style\" :showBlankItem=\"false\" v-model=\"displayStyle\" :items=\"displayStyleItems\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <NumberUpDown label=\"Column Count\" v-model=\"columnCount\" :min=\"0\" />\r\n            </div>\r\n        </div>\r\n\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n\r\n/** Demonstrates Binary File type picker */\r\nconst binaryFileTypePickerGallery = defineComponent({\r\n    name: \"BinaryFileTypePickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        DropDownList,\r\n        BinaryFileTypePicker,\r\n        NumberUpDown\r\n    },\r\n    setup() {\r\n        return {\r\n            columnCount: ref(0),\r\n            displayStyle: ref(PickerDisplayStyle.Auto),\r\n            displayStyleItems,\r\n            enhanceForLongLists: ref(false),\r\n            multiple: ref(false),\r\n            showBlankItem: ref(false),\r\n            value: ref({}),\r\n            importCode: getControlImportPath(\"binaryFileTypePicker\"),\r\n            exampleCode: `<BinaryFileTypePicker label=\"Binary File Type\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <BinaryFileTypePicker label=\"Binary File Type\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :columnCount=\"columnCount\"\r\n        :enhanceForLongLists=\"enhanceForLongLists\"\r\n        :displayStyle=\"displayStyle\"\r\n        :showBlankItem=\"showBlankItem\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Enhance For Long Lists\" v-model=\"enhanceForLongLists\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Show Blank Item\" v-model=\"showBlankItem\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <DropDownList label=\"Display Style\" :showBlankItem=\"false\" v-model=\"displayStyle\" :items=\"displayStyleItems\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <NumberUpDown label=\"Column Count\" v-model=\"columnCount\" :min=\"0\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n\r\n/** Demonstrates Campus picker */\r\nconst campusPickerGallery = defineComponent({\r\n    name: \"CampusPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CampusPicker,\r\n        CheckBox,\r\n        DefinedValuePicker,\r\n        DropDownList,\r\n        NumberUpDown,\r\n        TextBox\r\n    },\r\n    setup() {\r\n        return {\r\n            columnCount: ref(0),\r\n            displayStyle: ref(PickerDisplayStyle.Auto),\r\n            displayStyleItems,\r\n            enhanceForLongLists: ref(false),\r\n            multiple: ref(false),\r\n            showBlankItem: ref(true),\r\n            value: ref({}),\r\n            forceVisible: ref(false),\r\n            includeInactive: ref(false),\r\n            campusStatusFilter: ref(null),\r\n            campusTypeFilter: ref(null),\r\n            campusStatusDefinedTypeGuid: DefinedType.CampusStatus,\r\n            campusTypeDefinedTypeGuid: DefinedType.CampusType,\r\n            importCode: getControlImportPath(\"campusPicker\"),\r\n            exampleCode: `<CampusPicker label=\"Campus\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <CampusPicker label=\"Campus\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :columnCount=\"columnCount\"\r\n        :enhanceForLongLists=\"enhanceForLongLists\"\r\n        :displayStyle=\"displayStyle\"\r\n        :showBlankItem=\"showBlankItem\"\r\n        :forceVisible=\"forceVisible\"\r\n        :includeInactive=\"includeInactive\"\r\n        :campusStatusFilter=\"campusStatusFilter?.value\"\r\n        :campusTypeFilter=\"campusTypeFilter?.value\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Enhance For Long Lists\" v-model=\"enhanceForLongLists\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Show Blank Item\" v-model=\"showBlankItem\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <DropDownList label=\"Display Style\" :showBlankItem=\"false\" v-model=\"displayStyle\" :items=\"displayStyleItems\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <NumberUpDown label=\"Column Count\" v-model=\"columnCount\" :min=\"0\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Force Visible\" v-model=\"forceVisible\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Include Inactive\" v-model=\"includeInactive\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <DefinedValuePicker label=\"Campus Type Filter\" v-model=\"campusTypeFilter\" :definedTypeGuid=\"campusTypeDefinedTypeGuid\" showBlankItem />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <DefinedValuePicker label=\"Campus Status Filter\" v-model=\"campusStatusFilter\" :definedTypeGuid=\"campusStatusDefinedTypeGuid\" showBlankItem />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n\r\n/** Demonstrates Schedule Builder */\r\nconst scheduleBuilderGallery = defineComponent({\r\n    name: \"ScheduleBuilderGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        ScheduleBuilder\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref(\"\"),\r\n            importCode: getControlImportPath(\"scheduleBuilder\"),\r\n            exampleCode: `<ScheduleBuilder label=\"Schedule Builder\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection\r\n    displayAsRaw>\r\n    <ScheduleBuilder label=\"Schedule Builder\"\r\n        v-model=\"value\" />\r\n\r\n    <template #settings>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n\r\n/** Demonstrates BinaryFile  picker */\r\nconst binaryFilePickerGallery = defineComponent({\r\n    name: \"BinaryFilePickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        DropDownList,\r\n        BinaryFilePicker,\r\n        BinaryFileTypePicker,\r\n        NumberUpDown\r\n    },\r\n    setup() {\r\n        return {\r\n            columnCount: ref(0),\r\n            displayStyle: ref(PickerDisplayStyle.Auto),\r\n            displayStyleItems,\r\n            enhanceForLongLists: ref(false),\r\n            multiple: ref(false),\r\n            showBlankItem: ref(false),\r\n            binaryFileType: ref({\r\n                \"value\": BinaryFiletype.Default\r\n            }),\r\n            value: ref({}),\r\n            importCode: getControlImportPath(\"binaryFilePicker\"),\r\n            exampleCode: `<BinaryFilePicker label=\"Binary File\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <BinaryFilePicker label=\"Binary File\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :columnCount=\"columnCount\"\r\n        :enhanceForLongLists=\"enhanceForLongLists\"\r\n        :displayStyle=\"displayStyle\"\r\n        :showBlankItem=\"showBlankItem\"\r\n        :binaryFileTypeGuid=\"binaryFileType.value\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Enhance For Long Lists\" v-model=\"enhanceForLongLists\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Show Blank Item\" v-model=\"showBlankItem\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <DropDownList label=\"Display Style\" :showBlankItem=\"false\" v-model=\"displayStyle\" :items=\"displayStyleItems\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <NumberUpDown label=\"Column Count\" v-model=\"columnCount\" :min=\"0\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <BinaryFileTypePicker label=\"Binary File Type\" v-model=\"binaryFileType\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates Event Item picker */\r\nconst eventItemPickerGallery = defineComponent({\r\n    name: \"EventItemPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        DropDownList,\r\n        EventItemPicker,\r\n        NumberUpDown\r\n    },\r\n    setup() {\r\n        return {\r\n            columnCount: ref(0),\r\n            displayStyle: ref(PickerDisplayStyle.Auto),\r\n            displayStyleItems,\r\n            enhanceForLongLists: ref(false),\r\n            multiple: ref(false),\r\n            showBlankItem: ref(false),\r\n            includeInactive: ref(false),\r\n            value: ref({}),\r\n            importCode: getControlImportPath(\"eventItemPicker\"),\r\n            exampleCode: `<EventItemPicker label=\"Event Item\" v-model=\"value\" :multiple=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <EventItemPicker label=\"Event Item\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :columnCount=\"columnCount\"\r\n        :enhanceForLongLists=\"enhanceForLongLists\"\r\n        :displayStyle=\"displayStyle\"\r\n        :showBlankItem=\"showBlankItem\"\r\n        :includeInactive=\"includeInactive\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Enhance For Long Lists\" v-model=\"enhanceForLongLists\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Show Blank Item\" v-model=\"showBlankItem\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <DropDownList label=\"Display Style\" :showBlankItem=\"false\" v-model=\"displayStyle\" :items=\"displayStyleItems\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <NumberUpDown label=\"Column Count\" v-model=\"columnCount\" :min=\"0\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Include Inactive Items\" v-model=\"includeInactive\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n\r\n/** Demonstrates data views picker */\r\nconst dataViewPickerGallery = defineComponent({\r\n    name: \"DataViewPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        DropDownList,\r\n        DataViewPicker,\r\n        NumberUpDown,\r\n        EntityTypePicker\r\n    },\r\n    setup() {\r\n        return {\r\n            entityTypeGuid: ref(null),\r\n            multiple: ref(false),\r\n            value: ref(null),\r\n            importCode: getControlImportPath(\"dataViewPicker\"),\r\n            exampleCode: `<DataViewPicker label=\"Data View\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <DataViewPicker label=\"Data Views\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :showBlankItem=\"showBlankItem\"\r\n        :entityTypeGuid=\"entityTypeGuid?.value\" />\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <EntityTypePicker label=\"For Entity Type\" v-model=\"entityTypeGuid\" enhanceForLongLists showBlankItem />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n\r\n/** Demonstrates workflow type picker */\r\nconst workflowTypePickerGallery = defineComponent({\r\n    name: \"WorkflowTypePickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        DropDownList,\r\n        WorkflowTypePicker,\r\n        NumberUpDown,\r\n        EntityTypePicker\r\n    },\r\n    setup() {\r\n        return {\r\n            includeInactiveItems: ref(false),\r\n            multiple: ref(false),\r\n            value: ref(null),\r\n            importCode: getControlImportPath(\"workflowTypePicker\"),\r\n            exampleCode: `<WorkflowTypePicker label=\"Data View\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <WorkflowTypePicker label=\"Data Views\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :showBlankItem=\"showBlankItem\"\r\n        :includeInactiveItems=\"includeInactiveItems\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Include Inactive Items\" v-model=\"includeInactiveItems\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates Financial Gateway picker */\r\nconst financialGatewayPickerGallery = defineComponent({\r\n    name: \"FinancialGatewayPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        DropDownList,\r\n        FinancialGatewayPicker,\r\n        NumberUpDown\r\n    },\r\n    setup() {\r\n        return {\r\n            columnCount: ref(0),\r\n            displayStyle: ref(PickerDisplayStyle.Auto),\r\n            displayStyleItems,\r\n            enhanceForLongLists: ref(false),\r\n            multiple: ref(false),\r\n            showBlankItem: ref(false),\r\n            includeInactive: ref(false),\r\n            showAllGatewayComponents: ref(false),\r\n            value: ref({}),\r\n            importCode: getControlImportPath(\"financialGatewayPicker\"),\r\n            exampleCode: `<FinancialGatewayPicker label=\"Financial Gateway\" v-model=\"value\" :multiple=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <FinancialGatewayPicker label=\"Financial Gateway\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :columnCount=\"columnCount\"\r\n        :enhanceForLongLists=\"enhanceForLongLists\"\r\n        :displayStyle=\"displayStyle\"\r\n        :showBlankItem=\"showBlankItem\"\r\n        :includeInactive=\"includeInactive\"\r\n        :showAllGatewayComponents=\"showAllGatewayComponents\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Enhance For Long Lists\" v-model=\"enhanceForLongLists\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Show Blank Item\" v-model=\"showBlankItem\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <DropDownList label=\"Display Style\" :showBlankItem=\"false\" v-model=\"displayStyle\" :items=\"displayStyleItems\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <NumberUpDown label=\"Column Count\" v-model=\"columnCount\" :min=\"0\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-2\">\r\n                <CheckBox label=\"Show Inactive Gateways\" v-model=\"includeInactive\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-2\">\r\n                <CheckBox label=\"Show All Gateway Components\" v-model=\"showAllGatewayComponents\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates Financial Statement Template picker */\r\nconst financialStatementTemplatePickerGallery = defineComponent({\r\n    name: \"FinancialStatementTemplatePickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        DropDownList,\r\n        FinancialStatementTemplatePicker,\r\n        NumberUpDown\r\n    },\r\n    setup() {\r\n        return {\r\n            columnCount: ref(0),\r\n            displayStyle: ref(PickerDisplayStyle.Auto),\r\n            displayStyleItems,\r\n            enhanceForLongLists: ref(false),\r\n            multiple: ref(false),\r\n            showBlankItem: ref(false),\r\n            value: ref({}),\r\n            importCode: getControlImportPath(\"financialStatementTemplatePicker\"),\r\n            exampleCode: `<FinancialStatementTemplatePicker label=\"Financial Statement Template\" v-model=\"value\" :multiple=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <FinancialStatementTemplatePicker label=\"Financial Statement Template\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :columnCount=\"columnCount\"\r\n        :enhanceForLongLists=\"enhanceForLongLists\"\r\n        :displayStyle=\"displayStyle\"\r\n        :showBlankItem=\"showBlankItem\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Enhance For Long Lists\" v-model=\"enhanceForLongLists\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Show Blank Item\" v-model=\"showBlankItem\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <DropDownList label=\"Display Style\" :showBlankItem=\"false\" v-model=\"displayStyle\" :items=\"displayStyleItems\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <NumberUpDown label=\"Column Count\" v-model=\"columnCount\" :min=\"0\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates Field Type picker */\r\nconst fieldTypePickerGallery = defineComponent({\r\n    name: \"FieldTypePickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        DropDownList,\r\n        FieldTypePicker,\r\n        NumberUpDown\r\n    },\r\n    setup() {\r\n        return {\r\n            columnCount: ref(0),\r\n            displayStyle: ref(PickerDisplayStyle.Auto),\r\n            displayStyleItems,\r\n            enhanceForLongLists: ref(false),\r\n            multiple: ref(false),\r\n            showBlankItem: ref(false),\r\n            value: ref({}),\r\n            importCode: getControlImportPath(\"fieldTypePicker\"),\r\n            exampleCode: `<FieldTypePicker label=\"Field Type\" v-model=\"value\" :multiple=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <FieldTypePicker label=\"Field Type\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :columnCount=\"columnCount\"\r\n        :enhanceForLongLists=\"enhanceForLongLists\"\r\n        :displayStyle=\"displayStyle\"\r\n        :showBlankItem=\"showBlankItem\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Enhance For Long Lists\" v-model=\"enhanceForLongLists\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Show Blank Item\" v-model=\"showBlankItem\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <DropDownList label=\"Display Style\" :showBlankItem=\"false\" v-model=\"displayStyle\" :items=\"displayStyleItems\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <NumberUpDown label=\"Column Count\" v-model=\"columnCount\" :min=\"0\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates audit detail. */\r\nconst auditDetailGallery = defineComponent({\r\n    name: \"AuditDetailGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        AuditDetail,\r\n        TextBox\r\n    },\r\n    setup() {\r\n        const store = useStore();\r\n\r\n        return {\r\n            entityTypeGuid: ref(EntityType.Person),\r\n            entityKey: ref(store.state.currentPerson?.idKey ?? \"\"),\r\n            importCode: getControlImportPath(\"auditDetail\"),\r\n            exampleCode: `<AuditDetail :entityTypeGuid=\"entityTypeGuid\" :entityKey=\"entityKey\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\">\r\n    <AuditDetail :entityTypeGuid=\"entityTypeGuid\" :entityKey=\"entityKey\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <TextBox label=\"Entity Type Guid\" v-model=\"entityTypeGuid\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <TextBox label=\"Entity Key\" v-model=\"entityKey\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates modal. */\r\nconst modalGallery = defineComponent({\r\n    name: \"ModalGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        Modal,\r\n        TextBox\r\n    },\r\n    setup() {\r\n        return {\r\n            isOpen: ref(false),\r\n            value: \"\",\r\n            importCode: getControlImportPath(\"modal\"),\r\n            exampleCode: `<Modal title=\"Modal Dialog Title\" saveText=\"Save\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\">\r\n    <CheckBox label=\"Is Open\" v-model=\"isOpen\" />\r\n\r\n    <Modal v-model=\"isOpen\" title=\"Modal Dialog Title\" saveText=\"Save\" @save=\"isOpen = false\">\r\n        <TextBox label=\"Required Value\" v-model=\"value\" rules=\"required\" />\r\n    </Modal>\r\n\r\n    <template #settings>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates  Component picker */\r\nconst componentPickerGallery = defineComponent({\r\n    name: \"ComponentPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        DropDownList,\r\n        ComponentPicker,\r\n        NumberUpDown,\r\n        TextBox\r\n    },\r\n    setup() {\r\n        return {\r\n            columnCount: ref(0),\r\n            displayStyle: ref(PickerDisplayStyle.Auto),\r\n            displayStyleItems,\r\n            containerType: ref(\"Rock.Badge.BadgeContainer\"),\r\n            enhanceForLongLists: ref(false),\r\n            multiple: ref(false),\r\n            showBlankItem: ref(false),\r\n            value: ref({}),\r\n            importCode: getControlImportPath(\"componentPicker\"),\r\n            exampleCode: `<ComponentPicker label=\"Component\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <ComponentPicker label=\"Component\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :columnCount=\"columnCount\"\r\n        :enhanceForLongLists=\"enhanceForLongLists\"\r\n        :displayStyle=\"displayStyle\"\r\n        :showBlankItem=\"showBlankItem\"\r\n        :containerType=\"containerType\" />\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Enhance For Long Lists\" v-model=\"enhanceForLongLists\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Show Blank Item\" v-model=\"showBlankItem\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-3\">\r\n                <DropDownList label=\"Display Style\" :showBlankItem=\"false\" v-model=\"displayStyle\" :items=\"displayStyleItems\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <NumberUpDown label=\"Column Count\" v-model=\"columnCount\" :min=\"0\" />\r\n            </div>\r\n            <div class=\"col-md-5\">\r\n                <TextBox label=\"Container Assembly Name\" v-model=\"containerType\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates Grade Picker */\r\nconst gradePickerGallery = defineComponent({\r\n    name: \"GradePickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        DropDownList,\r\n        GradePicker,\r\n        NumberUpDown,\r\n        TextBox\r\n    },\r\n    setup() {\r\n        return {\r\n            columnCount: ref(0),\r\n            displayStyle: ref(PickerDisplayStyle.Auto),\r\n            displayStyleItems,\r\n            useAbbreviation: ref(false),\r\n            useGuidAsValue: ref(false),\r\n            enhanceForLongLists: ref(false),\r\n            multiple: ref(false),\r\n            showBlankItem: ref(false),\r\n            value: ref({}),\r\n            importCode: getControlImportPath(\"gradePicker\"),\r\n            exampleCode: `<GradePicker label=\"Grade\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <GradePicker label=\"Grade\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :columnCount=\"columnCount\"\r\n        :enhanceForLongLists=\"enhanceForLongLists\"\r\n        :displayStyle=\"displayStyle\"\r\n        :showBlankItem=\"showBlankItem\"\r\n        :useAbbreviation=\"useAbbreviation\"\r\n        :useGuidAsValue=\"useGuidAsValue\" />\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Enhance For Long Lists\" v-model=\"enhanceForLongLists\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Show Blank Item\" v-model=\"showBlankItem\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-3\">\r\n                <DropDownList label=\"Display Style\" :showBlankItem=\"false\" v-model=\"displayStyle\" :items=\"displayStyleItems\" />\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <NumberUpDown label=\"Column Count\" v-model=\"columnCount\" :min=\"0\" />\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <CheckBox label=\"Use Abbreviations\" v-model=\"useAbbreviation\" />\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <CheckBox label=\"Use GUID Value\" v-model=\"useGuidAsValue\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates Group Member Picker */\r\nconst groupMemberPickerGallery = defineComponent({\r\n    name: \"GroupMemberPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        DropDownList,\r\n        GroupMemberPicker,\r\n        NumberUpDown,\r\n        TextBox,\r\n        NumberBox\r\n    },\r\n    setup() {\r\n        return {\r\n            columnCount: ref(0),\r\n            displayStyle: ref(PickerDisplayStyle.Auto),\r\n            displayStyleItems,\r\n            groupGuid: ref(\"62DC3753-01D5-48B5-B22D-D2825D92900B\"), // use a groupPicker eventually...\r\n            enhanceForLongLists: ref(false),\r\n            multiple: ref(false),\r\n            showBlankItem: ref(false),\r\n            value: ref({}),\r\n            importCode: getControlImportPath(\"groupMemberPicker\"),\r\n            exampleCode: `<GroupMemberPicker label=\"Group Member\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <GroupMemberPicker label=\"Group Member\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :columnCount=\"columnCount\"\r\n        :enhanceForLongLists=\"enhanceForLongLists\"\r\n        :displayStyle=\"displayStyle\"\r\n        :showBlankItem=\"showBlankItem\"\r\n        :groupGuid=\"groupGuid\" />\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Enhance For Long Lists\" v-model=\"enhanceForLongLists\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Show Blank Item\" v-model=\"showBlankItem\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <DropDownList label=\"Display Style\" :showBlankItem=\"false\" v-model=\"displayStyle\" :items=\"displayStyleItems\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <NumberUpDown label=\"Column Count\" v-model=\"columnCount\" :min=\"0\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <NumberBox label=\"Group ID\" v-model=\"groupGuid\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates Interaction Channel Picker */\r\nconst interactionChannelPickerGallery = defineComponent({\r\n    name: \"InteractionChannelPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        DropDownList,\r\n        InteractionChannelPicker,\r\n        NumberUpDown,\r\n        TextBox,\r\n        NumberBox\r\n    },\r\n    setup() {\r\n        return {\r\n            columnCount: ref(0),\r\n            displayStyle: ref(PickerDisplayStyle.Auto),\r\n            displayStyleItems,\r\n            enhanceForLongLists: ref(false),\r\n            multiple: ref(false),\r\n            showBlankItem: ref(false),\r\n            value: ref({}),\r\n            importCode: getControlImportPath(\"interactionChannelPicker\"),\r\n            exampleCode: `<InteractionChannelPicker label=\"Interaction Channel\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <InteractionChannelPicker label=\"Interaction Channel\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :columnCount=\"columnCount\"\r\n        :enhanceForLongLists=\"enhanceForLongLists\"\r\n        :displayStyle=\"displayStyle\"\r\n        :showBlankItem=\"showBlankItem\" />\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Enhance For Long Lists\" v-model=\"enhanceForLongLists\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Show Blank Item\" v-model=\"showBlankItem\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <DropDownList label=\"Display Style\" :showBlankItem=\"false\" v-model=\"displayStyle\" :items=\"displayStyleItems\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <NumberUpDown label=\"Column Count\" v-model=\"columnCount\" :min=\"0\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates Interaction Component Picker */\r\nconst interactionComponentPickerGallery = defineComponent({\r\n    name: \"InteractionComponentPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        DropDownList,\r\n        InteractionComponentPicker,\r\n        InteractionChannelPicker,\r\n        NumberUpDown,\r\n        TextBox,\r\n        NumberBox\r\n    },\r\n    setup() {\r\n        return {\r\n            columnCount: ref(0),\r\n            displayStyle: ref(PickerDisplayStyle.Auto),\r\n            displayStyleItems,\r\n            interactionChannelGuid: ref(null),\r\n            enhanceForLongLists: ref(false),\r\n            multiple: ref(false),\r\n            showBlankItem: ref(false),\r\n            value: ref({}),\r\n            importCode: getControlImportPath(\"interactionComponentPicker\"),\r\n            exampleCode: `<InteractionComponentPicker label=\"Interaction Component\" v-model=\"value\" :interactionChannelGuid=\"interactionChannelGuid\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <InteractionComponentPicker label=\"Interaction Component\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :columnCount=\"columnCount\"\r\n        :enhanceForLongLists=\"enhanceForLongLists\"\r\n        :displayStyle=\"displayStyle\"\r\n        :showBlankItem=\"showBlankItem\"\r\n        :interactionChannelGuid=\"interactionChannelGuid?.value\" />\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Enhance For Long Lists\" v-model=\"enhanceForLongLists\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Show Blank Item\" v-model=\"showBlankItem\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <DropDownList label=\"Display Style\" :showBlankItem=\"false\" v-model=\"displayStyle\" :items=\"displayStyleItems\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <NumberUpDown label=\"Column Count\" v-model=\"columnCount\" :min=\"0\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <InteractionChannelPicker label=\"Interaction Channel\" v-model=\"interactionChannelGuid\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates Lava Command Picker */\r\nconst lavaCommandPickerGallery = defineComponent({\r\n    name: \"LavaCommandPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        DropDownList,\r\n        LavaCommandPicker,\r\n        NumberUpDown,\r\n        TextBox,\r\n        NumberBox\r\n    },\r\n    setup() {\r\n        return {\r\n            columnCount: ref(0),\r\n            displayStyle: ref(PickerDisplayStyle.Auto),\r\n            displayStyleItems,\r\n            enhanceForLongLists: ref(false),\r\n            multiple: ref(false),\r\n            showBlankItem: ref(false),\r\n            value: ref({}),\r\n            importCode: getControlImportPath(\"lavaCommandPicker\"),\r\n            exampleCode: `<LavaCommandPicker label=\"Lava Command\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <LavaCommandPicker label=\"Lava Command\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :columnCount=\"columnCount\"\r\n        :enhanceForLongLists=\"enhanceForLongLists\"\r\n        :displayStyle=\"displayStyle\"\r\n        :showBlankItem=\"showBlankItem\" />\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Enhance For Long Lists\" v-model=\"enhanceForLongLists\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Show Blank Item\" v-model=\"showBlankItem\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <DropDownList label=\"Display Style\" :showBlankItem=\"false\" v-model=\"displayStyle\" :items=\"displayStyleItems\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <NumberUpDown label=\"Column Count\" v-model=\"columnCount\" :min=\"0\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates Remote Auths Picker */\r\nconst remoteAuthsPickerGallery = defineComponent({\r\n    name: \"RemoteAuthsPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        DropDownList,\r\n        RemoteAuthsPicker,\r\n        NumberUpDown,\r\n        TextBox,\r\n        NumberBox\r\n    },\r\n    setup() {\r\n        return {\r\n            columnCount: ref(0),\r\n            displayStyle: ref(PickerDisplayStyle.Auto),\r\n            displayStyleItems,\r\n            enhanceForLongLists: ref(false),\r\n            multiple: ref(false),\r\n            showBlankItem: ref(false),\r\n            value: ref({}),\r\n            importCode: getControlImportPath(\"remoteAuthsPicker\"),\r\n            exampleCode: `<RemoteAuthsPicker label=\"Remote Auths\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <RemoteAuthsPicker label=\"Remote Auths\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :columnCount=\"columnCount\"\r\n        :enhanceForLongLists=\"enhanceForLongLists\"\r\n        :displayStyle=\"displayStyle\"\r\n        :showBlankItem=\"showBlankItem\" />\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Enhance For Long Lists\" v-model=\"enhanceForLongLists\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Show Blank Item\" v-model=\"showBlankItem\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <DropDownList label=\"Display Style\" :showBlankItem=\"false\" v-model=\"displayStyle\" :items=\"displayStyleItems\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <NumberUpDown label=\"Column Count\" v-model=\"columnCount\" :min=\"0\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates Step Program Picker */\r\nconst stepProgramPickerGallery = defineComponent({\r\n    name: \"StepProgramPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        DropDownList,\r\n        StepProgramPicker,\r\n        NumberUpDown,\r\n        TextBox,\r\n        NumberBox\r\n    },\r\n    setup() {\r\n        return {\r\n            columnCount: ref(0),\r\n            displayStyle: ref(PickerDisplayStyle.Auto),\r\n            displayStyleItems,\r\n            enhanceForLongLists: ref(false),\r\n            multiple: ref(false),\r\n            showBlankItem: ref(false),\r\n            value: ref({}),\r\n            importCode: getControlImportPath(\"stepProgramPicker\"),\r\n            exampleCode: `<StepProgramPicker label=\"Step Program\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <StepProgramPicker label=\"Step Program\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :columnCount=\"columnCount\"\r\n        :enhanceForLongLists=\"enhanceForLongLists\"\r\n        :displayStyle=\"displayStyle\"\r\n        :showBlankItem=\"showBlankItem\" />\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Enhance For Long Lists\" v-model=\"enhanceForLongLists\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Show Blank Item\" v-model=\"showBlankItem\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <DropDownList label=\"Display Style\" :showBlankItem=\"false\" v-model=\"displayStyle\" :items=\"displayStyleItems\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <NumberUpDown label=\"Column Count\" v-model=\"columnCount\" :min=\"0\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates Step Status Picker */\r\nconst stepStatusPickerGallery = defineComponent({\r\n    name: \"StepStatusPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        DropDownList,\r\n        StepStatusPicker,\r\n        StepProgramPicker,\r\n        NumberUpDown,\r\n        TextBox,\r\n        NumberBox\r\n    },\r\n    setup() {\r\n        return {\r\n            columnCount: ref(0),\r\n            displayStyle: ref(PickerDisplayStyle.Auto),\r\n            displayStyleItems,\r\n            enhanceForLongLists: ref(false),\r\n            multiple: ref(false),\r\n            showBlankItem: ref(false),\r\n            stepProgramGuid: ref(null),\r\n            value: ref({}),\r\n            importCode: getControlImportPath(\"stepStatusPicker\"),\r\n            exampleCode: `<StepStatusPicker label=\"Step Status\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <StepStatusPicker label=\"Step Status\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :columnCount=\"columnCount\"\r\n        :enhanceForLongLists=\"enhanceForLongLists\"\r\n        :displayStyle=\"displayStyle\"\r\n        :showBlankItem=\"showBlankItem\"\r\n        :stepProgramGuid=\"stepProgramGuid?.value\" />\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Enhance For Long Lists\" v-model=\"enhanceForLongLists\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Show Blank Item\" v-model=\"showBlankItem\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <DropDownList label=\"Display Style\" :showBlankItem=\"false\" v-model=\"displayStyle\" :items=\"displayStyleItems\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <NumberUpDown label=\"Column Count\" v-model=\"columnCount\" :min=\"0\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <StepProgramPicker label=\"Step Program\" v-model=\"stepProgramGuid\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates Step Type Picker */\r\nconst stepTypePickerGallery = defineComponent({\r\n    name: \"StepTypePickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        DropDownList,\r\n        StepTypePicker,\r\n        StepProgramPicker,\r\n        NumberUpDown,\r\n        TextBox,\r\n        NumberBox\r\n    },\r\n    setup() {\r\n        return {\r\n            columnCount: ref(0),\r\n            displayStyle: ref(PickerDisplayStyle.Auto),\r\n            displayStyleItems,\r\n            enhanceForLongLists: ref(false),\r\n            multiple: ref(false),\r\n            showBlankItem: ref(false),\r\n            stepProgramGuid: ref(null),\r\n            value: ref({}),\r\n            importCode: getControlImportPath(\"stepTypePicker\"),\r\n            exampleCode: `<StepTypePicker label=\"Step Type\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <StepTypePicker label=\"Step Type\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :columnCount=\"columnCount\"\r\n        :enhanceForLongLists=\"enhanceForLongLists\"\r\n        :displayStyle=\"displayStyle\"\r\n        :showBlankItem=\"showBlankItem\"\r\n        :stepProgramGuid=\"stepProgramGuid?.value\" />\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Enhance For Long Lists\" v-model=\"enhanceForLongLists\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Show Blank Item\" v-model=\"showBlankItem\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <DropDownList label=\"Display Style\" :showBlankItem=\"false\" v-model=\"displayStyle\" :items=\"displayStyleItems\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <NumberUpDown label=\"Column Count\" v-model=\"columnCount\" :min=\"0\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <StepProgramPicker label=\"Step Program\" v-model=\"stepProgramGuid\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates Streak Type Picker */\r\nconst streakTypePickerGallery = defineComponent({\r\n    name: \"StreakTypePickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        DropDownList,\r\n        StreakTypePicker,\r\n        NumberUpDown,\r\n        TextBox,\r\n        NumberBox\r\n    },\r\n    setup() {\r\n        return {\r\n            columnCount: ref(0),\r\n            displayStyle: ref(PickerDisplayStyle.Auto),\r\n            displayStyleItems,\r\n            enhanceForLongLists: ref(false),\r\n            multiple: ref(false),\r\n            showBlankItem: ref(false),\r\n            value: ref({}),\r\n            importCode: getControlImportPath(\"streakTypePicker\"),\r\n            exampleCode: `<StreakTypePicker label=\"Streak Type\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <StreakTypePicker label=\"Streak Type\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :columnCount=\"columnCount\"\r\n        :enhanceForLongLists=\"enhanceForLongLists\"\r\n        :displayStyle=\"displayStyle\"\r\n        :showBlankItem=\"showBlankItem\" />\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Enhance For Long Lists\" v-model=\"enhanceForLongLists\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Show Blank Item\" v-model=\"showBlankItem\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <DropDownList label=\"Display Style\" :showBlankItem=\"false\" v-model=\"displayStyle\" :items=\"displayStyleItems\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <NumberUpDown label=\"Column Count\" v-model=\"columnCount\" :min=\"0\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates Badge Picker */\r\nconst badgePickerGallery = defineComponent({\r\n    name: \"BadgePickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        DropDownList,\r\n        BadgePicker,\r\n        NumberUpDown,\r\n        TextBox,\r\n        NumberBox\r\n    },\r\n    setup() {\r\n        return {\r\n            columnCount: ref(0),\r\n            displayStyle: ref(PickerDisplayStyle.Auto),\r\n            displayStyleItems,\r\n            enhanceForLongLists: ref(false),\r\n            multiple: ref(false),\r\n            showBlankItem: ref(false),\r\n            value: ref({}),\r\n            importCode: getControlImportPath(\"badgePicker\"),\r\n            exampleCode: `<BadgePicker label=\"Badge\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <BadgePicker label=\"Badge\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :columnCount=\"columnCount\"\r\n        :enhanceForLongLists=\"enhanceForLongLists\"\r\n        :displayStyle=\"displayStyle\"\r\n        :showBlankItem=\"showBlankItem\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Enhance For Long Lists\" v-model=\"enhanceForLongLists\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Show Blank Item\" v-model=\"showBlankItem\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <DropDownList label=\"Display Style\" :showBlankItem=\"false\" v-model=\"displayStyle\" :items=\"displayStyleItems\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <NumberUpDown label=\"Column Count\" v-model=\"columnCount\" :min=\"0\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates an notification box */\r\nconst notificationBoxGallery = defineComponent({\r\n    name: \"NotificationBoxGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        NotificationBox,\r\n        DropDownList,\r\n        CheckBox,\r\n        TextBox\r\n    },\r\n    setup() {\r\n        const options: ListItemBag[] = [\"default\", \"success\", \"info\", \"danger\", \"warning\", \"primary\", \"validation\"].map(key => ({ text: upperCaseFirstCharacter(key), value: key }));\r\n        return {\r\n            isDismissible: ref(false),\r\n            heading: ref(\"\"),\r\n            details: ref(\"Here's a place where you can place details that show up when you click \\\"Show Details\\\".\"),\r\n            onDismiss: () => alert('\"dismiss\" event fired. Parents are responsible for hiding the component.'),\r\n            options,\r\n            alertType: ref(AlertType.Default),\r\n            importCode: getSfcControlImportPath(\"notificationBox\"),\r\n            exampleCode: `<NotificationBox dismissable alertType=\"AlertType.Info\" @dismiss=\"onDismiss\" heading=\"Heading Text\">\r\n    This is an alert!\r\n    <template #details>\r\n        Here's a place where you can place details that show up when you click \"Show Details\".\r\n    </template>\r\n</NotificationBox>`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\" >\r\n\r\n    <NotificationBox :dismissible=\"isDismissible\" :alertType=\"alertType\" @dismiss=\"onDismiss\" :heading=\"heading\">\r\n        This is an alert!\r\n        <template #details v-if=\"details\">\r\n            {{details}}\r\n        </template>\r\n    </NotificationBox>\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-3\">\r\n                <DropDownList label=\"Alert Type\" v-model=\"alertType\" :items=\"options\" :showBlankItem=\"false\" />\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <TextBox v-model=\"heading\" label=\"Heading Text\" />\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <TextBox v-model=\"details\" label=\"Details Text\" />\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <CheckBox label=\"Dismissable\" v-model=\"isDismissible\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a badge list */\r\nconst badgeListGallery = defineComponent({\r\n    name: \"BadgeListGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        BadgeList,\r\n        EntityTypePicker,\r\n        TextBox,\r\n        CheckBox,\r\n        BadgePicker\r\n    },\r\n    setup() {\r\n        const entityType = ref({ text: \"Person\", value: EntityType.Person });\r\n        const entityTypeGuid = computed(() => entityType?.value);\r\n\r\n        const badgeTypes = ref<ListItemBag[]>([]);\r\n        const badgeTypeGuids = computed(() => badgeTypes.value.map(b => b.value));\r\n\r\n        const store = useStore();\r\n\r\n        return {\r\n            entityType,\r\n            entityTypeGuid,\r\n            badgeTypes,\r\n            badgeTypeGuids,\r\n            entityKey: ref(store.state.currentPerson?.idKey ?? \"\"),\r\n            importCode: getControlImportPath(\"badgeList\"),\r\n            exampleCode: `<BadgeList :entityTypeGuid=\"entityTypeGuid?.value\" :entityKey=\"entityKey\" :badgeTypeGuids=\"badgeTypeGuids\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\" >\r\n\r\n    <BadgeList :entityTypeGuid=\"entityTypeGuid?.value\" :entityKey=\"entityKey\" :badgeTypeGuids=\"badgeTypeGuids\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <EntityTypePicker formGroupClasses=\"col-md-4\" label=\"Entity Type\" v-model=\"entityType\" enhanceForLongLists />\r\n            <TextBox formGroupClasses=\"col-md-4\" label=\"Entity Key\" v-model=\"entityKey\" />\r\n            <BadgePicker formGroupClasses=\"col-md-4\" label=\"Badge Type\" v-model=\"badgeTypes\" showBlankItem multiple />\r\n        </div>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a basic time picker */\r\nconst basicTimePickerGallery = defineComponent({\r\n    name: \"BasicTimePickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        BasicTimePicker\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref({}),\r\n            importCode: getControlImportPath(\"basicTimePicker\"),\r\n            exampleCode: `<BasicTimePicker label=\"Time\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <BasicTimePicker label=\"Time\" v-model=\"value\" />\r\n\r\n    <template #settings>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code> and <code>Drop Down List</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates birthday picker */\r\nconst birthdayPickerGallery = defineComponent({\r\n    name: \"BirthdayPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        Toggle,\r\n        BirthdayPicker\r\n    },\r\n    setup() {\r\n        return {\r\n            showYear: ref(true),\r\n            datePartsModel: ref<Partial<DatePartsPickerValue>>({\r\n                month: 1,\r\n                day: 1,\r\n                year: 1970\r\n            }),\r\n            importCode: getControlImportPath(\"birthdayPicker\"),\r\n            exampleCode: `<BirthdayPicker label=\"Birthday\" v-model=\"date\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"datePartsModel\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection>\r\n\r\n    <BirthdayPicker label=\"Birthday\" v-model=\"datePartsModel\" :showYear=\"showYear\" />\r\n\r\n    <template #settings>\r\n        <Toggle label=\"Show Year\" v-model=\"showYear\" />\r\n        <p class=\"mt-4 mb-4\">This simply wraps the <a href=\"#DatePartsPickerGallery\">Date Parts Picker</a> and sets <code>allowFutureDates</code> and <code>requireYear</code> to <code>false</code>.</p>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates countdown timer */\r\nconst countdownTimerGallery = defineComponent({\r\n    name: \"CountdownTimerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CountdownTimer,\r\n        TextBox,\r\n        RockButton\r\n    },\r\n    setup() {\r\n        const seconds = ref(300);\r\n        const setToSeconds = ref(300);\r\n\r\n        return {\r\n            reset: () => seconds.value = setToSeconds.value,\r\n            setToSeconds,\r\n            seconds,\r\n            importCode: getControlImportPath(\"countdownTimer\"),\r\n            exampleCode: `<CountdownTimer v-model=\"seconds\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"seconds\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\">\r\n\r\n    Counting down:\r\n    <CountdownTimer v-model=\"seconds\" />\r\n\r\n    <template #settings>\r\n        <form class=\"form-inline\" @submit.prevent=\"reset\">\r\n            <TextBox label=\"Reset Timer to (seconds)\" v-model=\"setToSeconds\" />\r\n            <RockButton type=\"submit\">Set Timer</RockButton>\r\n        </form>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates electronic signature */\r\nconst electronicSignatureGallery = defineComponent({\r\n    name: \"ElectronicSignatureGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        ElectronicSignature,\r\n        Toggle,\r\n        TextBox\r\n    },\r\n    setup() {\r\n        return {\r\n            signature: ref(null),\r\n            isDrawn: ref(false),\r\n            term: ref(\"document\"),\r\n            importCode: getControlImportPath(\"electronicSignature\"),\r\n            exampleCode: `<ElectronicSignature v-model=\"signature\" :isDrawn=\"isDrawn\" documentTerm=\"document\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"signature\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\">\r\n\r\n    <ElectronicSignature v-model=\"signature\" :isDrawn=\"isDrawn\" :documentTerm=\"term\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <Toggle formGroupClasses=\"col-md-4\" label=\"Signature Type\" trueText=\"Drawn\" falseText=\"Typed\" v-model=\"isDrawn\" />\r\n            <TextBox formGroupClasses=\"col-md-4\" label=\"Document Type Term\" v-model=\"term\" />\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates field type editor */\r\nconst fieldTypeEditorGallery = defineComponent({\r\n    name: \"FieldTypeEditorGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        FieldTypeEditor,\r\n        CheckBox,\r\n        TextBox\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref({}),\r\n            readOnly: ref(false),\r\n            importCode: getControlImportPath(\"fieldTypeEditor\"),\r\n            exampleCode: `<FieldTypeEditor v-model=\"value\" :isFieldTypeReadOnly=\"readOnly\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <FieldTypeEditor v-model=\"value\" :isFieldTypeReadOnly=\"readOnly\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <CheckBox formGroupClasses=\"col-md-4\" label=\"Read Only Field Type\" v-model=\"readOnly\" />\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates inline range slider */\r\nconst inlineRangeSliderGallery = defineComponent({\r\n    name: \"InlineRangeSliderGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        InlineRangeSlider,\r\n        CheckBox,\r\n        NumberBox\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref(10),\r\n            step: ref(0),\r\n            min: ref(0),\r\n            max: ref(100),\r\n            showValue: ref(false),\r\n            importCode: getSfcControlImportPath(\"inlineRangeSlider\"),\r\n            exampleCode: `<InlineRangeSlider v-model=\"value\" :step=\"1\" :min=\"min\" :max=\"max\" :showValueBar=\"showValue\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <InlineRangeSlider v-model=\"value\" :step=\"step\" :min=\"min\" :max=\"max\" :showValueBar=\"showValue\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <CheckBox formGroupClasses=\"col-md-3\" label=\"Show Value\" v-model=\"showValue\" />\r\n            <NumberBox formGroupClasses=\"col-md-3\" label=\"Step Value\" v-model=\"step\" help=\"Leave blank or set to zero to have no step\" />\r\n            <NumberBox formGroupClasses=\"col-md-3\" label=\"Minimum Value\" v-model=\"min\" />\r\n            <NumberBox formGroupClasses=\"col-md-3\" label=\"Maximum Value\" v-model=\"max\" />\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates javascript anchor */\r\nconst javaScriptAnchorGallery = defineComponent({\r\n    name: \"JavascriptAnchorGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        JavaScriptAnchor,\r\n        CheckBox,\r\n        NumberBox\r\n    },\r\n    setup() {\r\n        return {\r\n            onClick: () => alert(\"Link Clicked\"),\r\n            importCode: getControlImportPath(\"javaScriptAnchor\"),\r\n            exampleCode: `<JavaScriptAnchor @click=\"onClick\">Link Text</JavaScriptAnchor>`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\" >\r\n\r\n    <JavaScriptAnchor @click=\"onClick\">This link can run code, but does not link to a page.</JavaScriptAnchor>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates javascript anchor */\r\nconst keyValueListGallery = defineComponent({\r\n    name: \"KeyValueListGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        KeyValueList,\r\n        CheckBox,\r\n        TextBox\r\n    },\r\n    setup() {\r\n        const limitValues = ref(false);\r\n        const displayValueFirst = ref(false);\r\n        const options: ListItemBag[] = [\r\n            {\r\n                text: \"Option 1\",\r\n                value: \"1\"\r\n            },\r\n            {\r\n                text: \"Option 2\",\r\n                value: \"2\"\r\n            },\r\n            {\r\n                text: \"Option 3\",\r\n                value: \"3\"\r\n            },\r\n        ];\r\n\r\n        const valueOptions = computed(() => limitValues.value ? options : null);\r\n\r\n        return {\r\n            limitValues,\r\n            displayValueFirst,\r\n            valueOptions,\r\n            value: ref(null),\r\n            keyPlaceholder: ref(\"Key\"),\r\n            valuePlaceholder: ref(\"Value\"),\r\n            importCode: getControlImportPath(\"keyValueList\"),\r\n            exampleCode: `<KeyValueList label=\"Keys and Values\" v-model=\"value\" :valueOptions=\"valueOptions\" :displayValueFirst=\"displayValueFirst\" :keyPlaceholder=\"keyPlaceholder\" :valuePlaceholder=\"valuePlaceholder\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"{ 'output:modelValue':value, 'input:valueOptions':valueOptions }\"\r\n    hasMultipleValues\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <KeyValueList label=\"Keys and Values\" v-model=\"value\" :valueOptions=\"valueOptions\" :displayValueFirst=\"displayValueFirst\" :keyPlaceholder=\"keyPlaceholder\" :valuePlaceholder=\"valuePlaceholder\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <CheckBox formGroupClasses=\"col-md-3\" label=\"Limit Possible Values\" v-model=\"limitValues\" />\r\n            <CheckBox formGroupClasses=\"col-md-3\" label=\"Show Value First\" v-model=\"displayValueFirst\" />\r\n            <TextBox formGroupClasses=\"col-md-3\" label=\"Placeholder for Key Field\" v-model=\"keyPlaceholder\" />\r\n            <TextBox formGroupClasses=\"col-md-3\" label=\"Placeholder for Value Field\" v-model=\"valuePlaceholder\" />\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates loading component */\r\nconst loadingGallery = defineComponent({\r\n    name: \"LoadingGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        Loading,\r\n        CheckBox\r\n    },\r\n    setup() {\r\n        return {\r\n            isLoading: ref(false),\r\n            importCode: getControlImportPath(\"loading\"),\r\n            exampleCode: `<Loading :isLoading=\"isLoading\">Content to show when not loading</Loading>`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\" >\r\n\r\n    <Loading :isLoading=\"isLoading\">Check the box below to start loading</Loading>\r\n\r\n    <template #settings>\r\n        <div class=\"row mb-3\">\r\n            <CheckBox formGroupClasses=\"col-md-3\" label=\"Is Loading\" v-model=\"isLoading\" />\r\n        </div>\r\n        <p>Internally, this uses the <a href=\"#LoadingIndicatorGallery\">LoadingIndicator</a> component.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates loading indicator component */\r\nconst loadingIndicatorGallery = defineComponent({\r\n    name: \"LoadingIndicatorGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        LoadingIndicator\r\n    },\r\n    setup() {\r\n        return {\r\n            importCode: getControlImportPath(\"loadingIndicator\"),\r\n            exampleCode: `<LoadingIndicator />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\" >\r\n\r\n    <LoadingIndicator />\r\n\r\n    <template #settings>\r\n        <p>It's best to use the <a href=\"#LoadingGallery\">Loading</a> component instead of using this one directly.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates number up down group */\r\nconst numberUpDownGroupGallery = defineComponent({\r\n    name: \"NumberUpDownGroupGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        NumberUpDownGroup,\r\n        CheckBox,\r\n        NumberBox\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref({ prop1: 30, prop2: 30, prop3: 30 }),\r\n            options: [\r\n                { key: \"prop1\", label: \"Prop 1\", min: 0, max: 50 },\r\n                { key: \"prop2\", label: \"Prop 2\", min: 10, max: 60 },\r\n                { key: \"prop3\", label: \"Prop 3\", min: 20, max: 70 }\r\n            ] as NumberUpDownGroupOption[],\r\n            importCode: getControlImportPath(\"numberUpDownGroup\"),\r\n            exampleCode: `<NumberUpDownGroup v-model=\"value\" :options=\"options\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"{ 'output:modelValue':value, 'input:options':options }\"\r\n    hasMultipleValues\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <NumberUpDownGroup v-model=\"value\" :options=\"options\" />\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates panel widget */\r\nconst panelWidgetGallery = defineComponent({\r\n    name: \"PanelWidgetGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        PanelWidget\r\n    },\r\n    setup() {\r\n        return {\r\n            importCode: getControlImportPath(\"panelWidget\"),\r\n            exampleCode: `<PanelWidget :isDefaultOpen=\"false\">\r\n    <template #header>Header</template>\r\n    Main Content...\r\n</PanelWidget>`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\" >\r\n\r\n    <PanelWidget :isDefaultOpen=\"false\">\r\n        <template #header>Panel Widget Header</template>\r\n        <h4>Romans 11:33-36</h4>\r\n        <p>\r\n            Oh, the depth of the riches<br />\r\n            and the wisdom and the knowledge of God!<br />\r\n            How unsearchable his judgments<br />\r\n            and untraceable his ways!<br />\r\n            For who has known the mind of the Lord?<br />\r\n            Or who has been his counselor?<br />\r\n            And who has ever given to God,<br />\r\n            that he should be repaid?<br />\r\n            For from him and through him<br />\r\n            and to him are all things.<br />\r\n            To him be the glory forever. Amen.\r\n        </p>\r\n    </PanelWidget>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates progress bar */\r\nconst progressBarGallery = defineComponent({\r\n    name: \"ProgressBarGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        ProgressBar,\r\n        RangeSlider\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref(10),\r\n            importCode: getControlImportPath(\"progressBar\"),\r\n            exampleCode: `<ProgressBar :percent=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <ProgressBar :percent=\"value\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <RangeSlider label=\"Percent Done\" v-model=\"value\" showValueBar :step=\"1\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates Rock Button */\r\nconst rockButtonGallery = defineComponent({\r\n    name: \"RockButtonGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        RockButton,\r\n        DropDownList,\r\n        CheckBox,\r\n        TextBox\r\n    },\r\n    setup() {\r\n        const sizeOptions: ListItemBag[] = [\r\n            { text: \"Default\", value: BtnSize.Default },\r\n            { text: \"ExtraSmall\", value: BtnSize.ExtraSmall },\r\n            { text: \"Small\", value: BtnSize.Small },\r\n            { text: \"Large\", value: BtnSize.Large }\r\n        ];\r\n\r\n        const typeOptions: ListItemBag[] = [\r\n            { text: \"Default\", value: BtnType.Default },\r\n            { text: \"Primary\", value: BtnType.Primary },\r\n            { text: \"Danger\", value: BtnType.Danger },\r\n            { text: \"Warning\", value: BtnType.Warning },\r\n            { text: \"Success\", value: BtnType.Success },\r\n            { text: \"Info\", value: BtnType.Info },\r\n            { text: \"Link\", value: BtnType.Link },\r\n        ];\r\n\r\n        return {\r\n            sizeOptions,\r\n            typeOptions,\r\n            btnSize: ref(BtnSize.Default),\r\n            btnType: ref(BtnType.Default),\r\n            onClick: () => new Promise((res) => setTimeout(() => {\r\n                res(true); alert(\"done\");\r\n            }, 3000)),\r\n            autoLoading: ref(false),\r\n            autoDisable: ref(false),\r\n            isLoading: ref(false),\r\n            isSquare: ref(false),\r\n            loadingText: ref(\"Loading...\"),\r\n            importCode: `import RockButton, { BtnType, BtnSize } from \"@Obsidian/Controls/rockButton\";`,\r\n            exampleCode: `<RockButton\r\n    :btnSize=\"BtnSize.Default\"\r\n    :btnType=\"BtnType.Default\"\r\n    @click=\"onClick\"\r\n    :isLoading=\"isLoading\"\r\n    :autoLoading=\"autoLoading\"\r\n    :autoDisable=\"autoDisable\"\r\n    :loadingText=\"loadingText\">\r\n    Button Text\r\n</RockButton>`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <RockButton :btnSize=\"btnSize\" :btnType=\"btnType\" @click=\"onClick\" :isLoading=\"isLoading\" :autoLoading=\"autoLoading\" :autoDisable=\"autoDisable\" :loadingText=\"loadingText\" :isSquare=\"isSquare\">\r\n        <i class=\"fa fa-cross\" v-if=\"isSquare\"></i>\r\n        <template v-else>Click Here to Fire Async Operation</template>\r\n    </RockButton>\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <DropDownList formGroupClasses=\"col-md-3\" label=\"Button Size\" v-model=\"btnSize\" :items=\"sizeOptions\" :showBlankItem=\"false\" />\r\n            <DropDownList formGroupClasses=\"col-md-3\" label=\"Button Type\" v-model=\"btnType\" :items=\"typeOptions\" :showBlankItem=\"false\" />\r\n            <CheckBox formGroupClasses=\"col-md-3\" label=\"Auto Loading Indicator\" v-model=\"autoLoading\" />\r\n            <CheckBox formGroupClasses=\"col-md-3\" label=\"Auto Disable\" v-model=\"autoDisable\" />\r\n        </div>\r\n        <div class=\"row\">\r\n            <CheckBox formGroupClasses=\"col-md-3\" label=\"Force Loading\" v-model=\"isLoading\" />\r\n            <CheckBox formGroupClasses=\"col-md-3\" label=\"Square\" v-model=\"isSquare\" />\r\n            <TextBox formGroupClasses=\"col-md-3\" label=\"Loading Text\" v-model=\"loadingText\" />\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a rock form */\r\nconst rockLabelGallery = defineComponent({\r\n    name: \"RockLabelGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        RockLabel\r\n    },\r\n    setup() {\r\n        return {\r\n            importCode: getControlImportPath(\"rockLabel\"),\r\n            exampleCode: `<RockLabel help=\"More Info\">A Label</RockLabel>`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\" >\r\n\r\n    <RockLabel help=\"This is the help message\">This is a Rock Label. Hover icon for help.</RockLabel>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a rock validation */\r\nconst rockValidationGallery = defineComponent({\r\n    name: \"RockValidationGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        RockValidation\r\n    },\r\n    setup() {\r\n        return {\r\n            errors: [\r\n                { name: \"Error Name\", text: \"Error text describing the validation error.\" },\r\n                { name: \"Not Good\", text: \"This is invalid because it is sinful.\" },\r\n                { name: \"Trust God\", text: \"Didn't trust God. Turn to Him.\" }\r\n            ],\r\n            importCode: getControlImportPath(\"rockValidation\"),\r\n            exampleCode: `<RockValidation :errors=\"[{ name:'Error Name', text:'Error Description' }]\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\" >\r\n\r\n    <RockValidation :errors=\"errors\" />\r\n\r\n    <template #settings>\r\n        <p>The <code>errors</code> parameter takes an array of <code>FormError</code> objects. <code>FormError</code> type is defined in <code>@Obsidian/Utility/form</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates range slider */\r\nconst rangeSliderGallery = defineComponent({\r\n    name: \"RangeSliderGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        RangeSlider,\r\n        CheckBox,\r\n        NumberBox\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref(10),\r\n            step: ref(1),\r\n            min: ref(0),\r\n            max: ref(100),\r\n            showValue: ref(false),\r\n            importCode: getSfcControlImportPath(\"slider\"),\r\n            exampleCode: `<RangeSlider label=\"Range Slider\" v-model=\"value\" :step=\"1\" :min=\"min\" :max=\"max\" :showValueBar=\"showValue\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <RangeSlider v-model=\"value\" label=\"Range Slider Value\" :step=\"step\" :min=\"min\" :max=\"max\" :showValueBar=\"showValue\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <CheckBox formGroupClasses=\"col-md-3\" label=\"Show Value\" v-model=\"showValue\" />\r\n            <NumberBox formGroupClasses=\"col-md-3\" label=\"Step Value\" v-model=\"step\" help=\"Set to zero to have no step\" />\r\n            <NumberBox formGroupClasses=\"col-md-3\" label=\"Minimum Value\" v-model=\"min\" />\r\n            <NumberBox formGroupClasses=\"col-md-3\" label=\"Maximum Value\" v-model=\"max\" />\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates tabbed content */\r\nconst tabbedContentGallery = defineComponent({\r\n    name: \"TabbedContentGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        TabbedContent,\r\n        CheckBox,\r\n        NumberBox\r\n    },\r\n    setup() {\r\n        return {\r\n            list: [\"Matthew\", \"Mark\", \"Luke\", \"John\"],\r\n            importCode: getControlImportPath(\"tabbedContent\"),\r\n            exampleCode: `<TabbedContent :tabList=\"arrayOfItems\">\r\n    <template #tab=\"{item}\">\r\n        {{ item }}\r\n    </template>\r\n    <template #tabpane=\"{item}\">\r\n        This is the content for {{item}}.\r\n    </template>\r\n</TabbedContent>`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\" >\r\n\r\n\r\n    <TabbedContent :tabList=\"list\">\r\n        <template #tab=\"{item}\">\r\n            {{ item }}\r\n        </template>\r\n        <template #tabpane=\"{item}\">\r\n            This is the content for {{item}}.\r\n        </template>\r\n    </TabbedContent>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates vertical collapse transition */\r\nconst transitionVerticalCollapseGallery = defineComponent({\r\n    name: \"TransitionVerticalCollapseGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        TransitionVerticalCollapse,\r\n        RockButton\r\n    },\r\n    setup() {\r\n        return {\r\n            showContent: ref(false),\r\n            importCode: getControlImportPath(\"transitionVerticalCollapse\"),\r\n            exampleCode: `<TransitionVerticalCollapse>\r\n    <div v-if=\"showContent\">Content to transition in</div>\r\n</TransitionVerticalCollapse>`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult :importCode=\"importCode\" :exampleCode=\"exampleCode\">\r\n    <RockButton btnType=\"primary\" class=\"mb-3\" @click=\"showContent = !showContent\">Show Content</RockButton>\r\n    <TransitionVerticalCollapse>\r\n        <div v-if=\"showContent\">God so loved the world...</div>\r\n    </TransitionVerticalCollapse>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a value detail list */\r\nconst valueDetailListGallery = defineComponent({\r\n    name: \"ValueDetailListGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        ValueDetailList\r\n    },\r\n    setup() {\r\n        return {\r\n            modelValue: [\r\n                { title: \"Title\", textValue: \"A text description of this item.\" },\r\n                { title: \"Something\", htmlValue: \"This description has <i>some</i> <code>HTML</code> mixed in.\" }\r\n            ],\r\n            importCode: getControlImportPath(\"valueDetailList\"),\r\n            exampleCode: `<ValueDetailList :modelValue=\"[{ name:'Error Name', text:'Error Description' }]\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\" >\r\n\r\n    <ValueDetailList :modelValue=\"modelValue\" />\r\n\r\n    <template #settings>\r\n        <p>The <code>modelValue</code> parameter takes an array of <code>ValueDetailListItem</code> objects. <code>ValueDetailListItem</code> type is defined in <code>@Obsidian/Types/Controls/valueDetailListItem</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates code editor. */\r\nconst codeEditorGallery = defineComponent({\r\n    name: \"CodeEditorGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CodeEditor,\r\n        DropDownList,\r\n        NumberBox\r\n    },\r\n    setup() {\r\n        const themeItems: ListItemBag[] = [\r\n            { value: \"rock\", text: \"rock\" },\r\n            { value: \"chrome\", text: \"chrome\" },\r\n            { value: \"crimson_editor\", text: \"crimson_editor\" },\r\n            { value: \"dawn\", text: \"dawn\" },\r\n            { value: \"dreamweaver\", text: \"dreamweaver\" },\r\n            { value: \"eclipse\", text: \"eclipse\" },\r\n            { value: \"solarized_light\", text: \"solarized_light\" },\r\n            { value: \"textmate\", text: \"textmate\" },\r\n            { value: \"tomorrow\", text: \"tomorrow\" },\r\n            { value: \"xcode\", text: \"xcode\" },\r\n            { value: \"github\", text: \"github\" },\r\n            { value: \"ambiance\", text: \"ambiance\" },\r\n            { value: \"chaos\", text: \"chaos\" },\r\n            { value: \"clouds_midnight\", text: \"clouds_midnight\" },\r\n            { value: \"cobalt\", text: \"cobalt\" },\r\n            { value: \"idle_fingers\", text: \"idle_fingers\" },\r\n            { value: \"kr_theme\", text: \"kr_theme\" },\r\n            { value: \"merbivore\", text: \"merbivore\" },\r\n            { value: \"merbivore_soft\", text: \"merbivore_soft\" },\r\n            { value: \"mono_industrial\", text: \"mono_industrial\" },\r\n            { value: \"monokai\", text: \"monokai\" },\r\n            { value: \"pastel_on_dark\", text: \"pastel_on_dark\" },\r\n            { value: \"solarized_dark\", text: \"solarized_dark\" },\r\n            { value: \"terminal\", text: \"terminal\" },\r\n            { value: \"tomorrow_night\", text: \"tomorrow_night\" },\r\n            { value: \"tomorrow_night_blue\", text: \"tomorrow_night_blue\" },\r\n            { value: \"tomorrow_night_bright\", text: \"tomorrow_night_bright\" },\r\n            { value: \"tomorrow_night_eighties\", text: \"tomorrow_night_eighties\" },\r\n            { value: \"twilight\", text: \"twilight\" },\r\n            { value: \"vibrant_ink\", text: \"vibrant_ink\" }\r\n        ].sort((a, b) => a.text.localeCompare(b.text));\r\n\r\n        const modeItems: ListItemBag[] = [\r\n            { value: \"text\", text: \"text\" },\r\n            { value: \"css\", text: \"css\" },\r\n            { value: \"html\", text: \"html\" },\r\n            { value: \"lava\", text: \"lava\" },\r\n            { value: \"javascript\", text: \"javascript\" },\r\n            { value: \"less\", text: \"less\" },\r\n            { value: \"powershell\", text: \"powershell\" },\r\n            { value: \"sql\", text: \"sql\" },\r\n            { value: \"typescript\", text: \"typescript\" },\r\n            { value: \"csharp\", text: \"csharp\" },\r\n            { value: \"markdown\", text: \"markdown\" },\r\n            { value: \"xml\", text: \"xml\" },\r\n        ].sort((a, b) => a.text.localeCompare(b.text));\r\n\r\n        const theme = ref(\"rock\");\r\n        const mode = ref(\"text\");\r\n        const editorHeight = ref(200);\r\n\r\n        const exampleCode = computed((): string => {\r\n            return buildExampleCode(\"CodeEditor\", {\r\n                theme,\r\n                mode,\r\n                editorHeight\r\n            });\r\n        });\r\n\r\n        return {\r\n            theme,\r\n            themeItems,\r\n            mode,\r\n            modeItems,\r\n            editorHeight,\r\n            importCode: getControlImportPath(\"codeEditor\"),\r\n            exampleCode\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\">\r\n    <CodeEditor :theme=\"theme\" :mode=\"mode\" :editorHeight=\"editorHeight\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <DropDownList label=\"Theme\" v-model=\"theme\" :items=\"themeItems\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <DropDownList label=\"Mode\" v-model=\"mode\" :items=\"modeItems\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <NumberBox label=\"Editor Height\" v-model=\"editorHeight\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n\r\n/** Demonstrates page picker */\r\nconst pagePickerGallery = defineComponent({\r\n    name: \"PagePickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        PagePicker\r\n    },\r\n    setup() {\r\n        return {\r\n            multiple: ref(false),\r\n            showSelectCurrentPage: ref(false),\r\n            promptForPageRoute: ref(false),\r\n            value: ref({\r\n                \"page\": {\r\n                    value: \"b07f30b3-95c4-40a5-9cf6-455399bef67a\",\r\n                    text: \"Universal Search\"\r\n                }\r\n            }),\r\n            importCode: getSfcControlImportPath(\"pagePicker\"),\r\n            exampleCode: `<PagePicker label=\"Page\" v-model=\"value\" :multiple=\"false\" promptForPageRoute showSelectCurrentPage />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <PagePicker label=\"Page\" v-model=\"value\" :multiple=\"multiple\" :promptForPageRoute=\"promptForPageRoute\" :showSelectCurrentPage=\"showSelectCurrentPage\" />\r\n\r\n    <template #settings>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Show 'Select Current Page' Button\" v-model=\"showSelectCurrentPage\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Prompt for Route\" v-model=\"promptForPageRoute\" help=\"Only works if not selecting multiple values\" />\r\n            </div>\r\n        </div>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates group picker */\r\nconst groupPickerGallery = defineComponent({\r\n    name: \"GroupPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        GroupPicker\r\n    },\r\n    setup() {\r\n        return {\r\n            multiple: ref(false),\r\n            limitToSchedulingEnabled: ref(false),\r\n            limitToRSVPEnabled: ref(false),\r\n            value: ref(null),\r\n            importCode: getControlImportPath(\"groupPicker\"),\r\n            exampleCode: `<GroupPicker label=\"Group\" v-model=\"value\" :multiple=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <GroupPicker label=\"Group\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :limitToSchedulingEnabled=\"limitToSchedulingEnabled\"\r\n        :limitToRSVPEnabled=\"limitToRSVPEnabled\" />\r\n\r\n    <template #settings>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-4\">\r\n            <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <CheckBox label=\"Limit to Scheduling Enabled\" v-model=\"limitToSchedulingEnabled\" />\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <CheckBox label=\"Limit to RSVP Enabled\" v-model=\"limitToRSVPEnabled\" />\r\n        </div>\r\n    </div>\r\n\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates merge template picker */\r\nconst mergeTemplatePickerGallery = defineComponent({\r\n    name: \"MergeTemplatePickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        DropDownList,\r\n        CheckBox,\r\n        MergeTemplatePicker\r\n    },\r\n    setup() {\r\n        const ownershipOptions = [\r\n            { text: \"Global\", value: MergeTemplateOwnership.Global },\r\n            { text: \"Personal\", value: MergeTemplateOwnership.Personal },\r\n            { text: \"Both\", value: MergeTemplateOwnership.PersonalAndGlobal },\r\n        ];\r\n\r\n        return {\r\n            ownershipOptions,\r\n            ownership: ref(MergeTemplateOwnership.Global),\r\n            multiple: ref(false),\r\n            value: ref(null),\r\n            importCode: getControlImportPath(\"mergeTemplatePicker\"),\r\n            exampleCode: `<MergeTemplatePicker label=\"Merge Template\" v-model=\"value\" :multiple=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <MergeTemplatePicker label=\"Merge Template\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :mergeTemplateOwnership=\"ownership\" />\r\n\r\n    <template #settings>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-4\">\r\n            <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <DropDownList label=\"Ownership\" v-model=\"ownership\" :items=\"ownershipOptions\" />\r\n        </div>\r\n    </div>\r\n\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates metric category picker */\r\nconst metricCategoryPickerGallery = defineComponent({\r\n    name: \"MetricCategoryPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        DropDownList,\r\n        CheckBox,\r\n        MetricCategoryPicker\r\n    },\r\n    setup() {\r\n        return {\r\n            multiple: ref(false),\r\n            value: ref(null),\r\n            importCode: getControlImportPath(\"metricCategoryPicker\"),\r\n            exampleCode: `<MetricCategoryPicker label=\"Metric Category\" v-model=\"value\" :multiple=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <MetricCategoryPicker label=\"Metric Category\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\" />\r\n\r\n    <template #settings>\r\n        <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates metric item picker */\r\nconst metricItemPickerGallery = defineComponent({\r\n    name: \"MetricItemPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        DropDownList,\r\n        CheckBox,\r\n        MetricItemPicker\r\n    },\r\n    setup() {\r\n        return {\r\n            multiple: ref(false),\r\n            value: ref(null),\r\n            importCode: getControlImportPath(\"metricItemPicker\"),\r\n            exampleCode: `<MetricItemPicker label=\"Metric Item\" v-model=\"value\" :multiple=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <MetricItemPicker label=\"Metric Item\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\" />\r\n\r\n    <template #settings>\r\n        <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates registration template picker */\r\nconst registrationTemplatePickerGallery = defineComponent({\r\n    name: \"RegistrationTemplatePickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        DropDownList,\r\n        CheckBox,\r\n        RegistrationTemplatePicker\r\n    },\r\n    setup() {\r\n        return {\r\n            multiple: ref(false),\r\n            value: ref(null),\r\n            importCode: getControlImportPath(\"registrationTemplatePicker\"),\r\n            exampleCode: `<RegistrationTemplatePicker label=\"Registration Template\" v-model=\"value\" :multiple=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <RegistrationTemplatePicker label=\"Registration Template\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :mergeTemplateOwnership=\"ownership\" />\r\n\r\n    <template #settings>\r\n\r\n        <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates report picker */\r\nconst reportPickerGallery = defineComponent({\r\n    name: \"ReportPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        DropDownList,\r\n        CheckBox,\r\n        ReportPicker\r\n    },\r\n    setup() {\r\n        return {\r\n            multiple: ref(false),\r\n            value: ref(null),\r\n            importCode: getControlImportPath(\"reportPicker\"),\r\n            exampleCode: `<ReportPicker label=\"Report\" v-model=\"value\" :multiple=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <ReportPicker label=\"Report\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\" />\r\n\r\n    <template #settings>\r\n\r\n        <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates schedule picker */\r\nconst schedulePickerGallery = defineComponent({\r\n    name: \"SchedulePickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        DropDownList,\r\n        CheckBox,\r\n        SchedulePicker\r\n    },\r\n    setup() {\r\n        return {\r\n            multiple: ref(false),\r\n            value: ref(null),\r\n            importCode: getControlImportPath(\"schedulePicker\"),\r\n            exampleCode: `<SchedulePicker label=\"Schedule\" v-model=\"value\" :multiple=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <SchedulePicker label=\"Schedule\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\" />\r\n\r\n    <template #settings>\r\n\r\n        <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates workflow action type picker */\r\nconst workflowActionTypePickerGallery = defineComponent({\r\n    name: \"WorkflowActionTypePickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        DropDownList,\r\n        CheckBox,\r\n        WorkflowActionTypePicker\r\n    },\r\n    setup() {\r\n        return {\r\n            multiple: ref(false),\r\n            value: ref(null),\r\n            importCode: getSfcControlImportPath(\"workflowActionTypePicker\"),\r\n            exampleCode: `<WorkflowActionTypePicker label=\"Workflow Action Type\" v-model=\"value\" :multiple=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <WorkflowActionTypePicker label=\"Workflow Action Type\"\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\" />\r\n\r\n    <template #settings>\r\n\r\n        <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a day of week picker */\r\nconst dayOfWeekPickerGallery = defineComponent({\r\n    name: \"DayOfWeekPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        NumberUpDown,\r\n        DayOfWeekPicker\r\n    },\r\n    setup() {\r\n        return {\r\n            showBlankItem: ref(false),\r\n            multiple: ref(false),\r\n            columns: ref(1),\r\n            value: ref(null),\r\n            importCode: getSfcControlImportPath(\"dayOfWeekPicker\"),\r\n            exampleCode: `<DayOfWeekPicker label=\"Day of the Week\" v-model=\"value\" :showBlankItem=\"false\" :multiple=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <DayOfWeekPicker label=\"Day of the Week\" v-model=\"value\" :showBlankItem=\"showBlankItem\" :multiple=\"multiple\" :repeatColumns=\"columns\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <CheckBox formGroupClasses=\"col-sm-4\" label=\"Show Blank Item\" v-model=\"showBlankItem\" />\r\n            <CheckBox formGroupClasses=\"col-sm-4\" label=\"Multiple\" v-model=\"multiple\" />\r\n            <NumberUpDown v-if=\"multiple\" formGroupClasses=\"col-sm-4\" label=\"Columns\" v-model=\"columns\" />\r\n        </div>\r\n\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a month/day picker */\r\nconst monthDayPickerGallery = defineComponent({\r\n    name: \"MonthDayPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        NumberUpDown,\r\n        MonthDayPicker\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref({ month: 0, day: 0 }),\r\n            importCode: getSfcControlImportPath(\"monthDayPicker\"),\r\n            exampleCode: `<MonthDayPicker label=\"Month and Day\" v-model=\"value\" :showBlankItem=\"false\" :multiple=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <MonthDayPicker label=\"Month and Day\" v-model=\"value\" :showBlankItem=\"showBlankItem\" :multiple=\"multiple\" :repeatColumns=\"columns\" />\r\n\r\n    <template #settings>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a month/year picker */\r\nconst monthYearPickerGallery = defineComponent({\r\n    name: \"MonthYearPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        NumberUpDown,\r\n        MonthYearPicker\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref({ month: 0, year: 0 }),\r\n            importCode: getSfcControlImportPath(\"monthYearPicker\"),\r\n            exampleCode: `<MonthYearPicker label=\"Month and Year\" v-model=\"value\" :showBlankItem=\"false\" :multiple=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <MonthYearPicker label=\"Month and Year\" v-model=\"value\" :showBlankItem=\"showBlankItem\" :multiple=\"multiple\" :repeatColumns=\"columns\" />\r\n\r\n    <template #settings>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a cacheability picker */\r\nconst cacheabilityPickerGallery = defineComponent({\r\n    name: \"CacheabilityPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        NumberUpDown,\r\n        CacheabilityPicker\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref<RockCacheability | null>(null),\r\n            importCode: getSfcControlImportPath(\"cacheabilityPicker\"),\r\n            exampleCode: `<CacheabilityPicker v-model=\"value\" :showBlankItem=\"false\" :multiple=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <CacheabilityPicker label=\"Cacheability\" v-model=\"value\" />\r\n\r\n    <template #settings>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates Button Group */\r\nconst buttonGroupGallery = defineComponent({\r\n    name: \"ButtonGroupGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        ButtonGroup,\r\n        DropDownList,\r\n        CheckBox,\r\n        TextBox\r\n    },\r\n    setup() {\r\n        const sizeOptions: ListItemBag[] = [\r\n            { text: \"Default\", value: BtnSize.Default },\r\n            { text: \"ExtraSmall\", value: BtnSize.ExtraSmall },\r\n            { text: \"Small\", value: BtnSize.Small },\r\n            { text: \"Large\", value: BtnSize.Large }\r\n        ];\r\n\r\n        const typeOptions: ListItemBag[] = [\r\n            { text: \"Default\", value: BtnType.Default },\r\n            { text: \"Primary\", value: BtnType.Primary },\r\n            { text: \"Danger\", value: BtnType.Danger },\r\n            { text: \"Warning\", value: BtnType.Warning },\r\n            { text: \"Success\", value: BtnType.Success },\r\n            { text: \"Info\", value: BtnType.Info },\r\n            { text: \"Link\", value: BtnType.Link },\r\n        ];\r\n\r\n        const buttonOptions: ListItemBag[] = [\r\n            { text: \"Mins\", value: \"1\" },\r\n            { text: \"Hours\", value: \"2\" },\r\n            { text: \"Days\", value: \"3\" },\r\n        ];\r\n\r\n        return {\r\n            sizeOptions,\r\n            typeOptions,\r\n            buttonOptions,\r\n            btnSize: ref(BtnSize.Default),\r\n            sbtnType: ref(BtnType.Primary),\r\n            ubtnType: ref(BtnType.Default),\r\n            value: ref(\"1\"),\r\n            importCode: getSfcControlImportPath(\"buttonGroup\"),\r\n            exampleCode: `<ButtonGroup :btnSize=\"BtnSize.Default\" :btnType=\"BtnType.Default\" :items=\"items\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <ButtonGroup v-model=\"value\" :btnSize=\"btnSize\" :selectedBtnType=\"sbtnType\" :unselectedBtnType=\"ubtnType\" :items=\"buttonOptions\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <DropDownList formGroupClasses=\"col-md-4\" label=\"Button Size\" v-model=\"btnSize\" :items=\"sizeOptions\" :showBlankItem=\"false\" />\r\n            <DropDownList formGroupClasses=\"col-md-4\" label=\"Selected Button Type\" v-model=\"sbtnType\" :items=\"typeOptions\" :showBlankItem=\"false\" />\r\n            <DropDownList formGroupClasses=\"col-md-4\" label=\"Unselected Button Type\" v-model=\"ubtnType\" :items=\"typeOptions\" :showBlankItem=\"false\" />\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates Interval Picker */\r\nconst intervalPickerGallery = defineComponent({\r\n    name: \"IntervalPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        IntervalPicker,\r\n        DropDownList,\r\n        CheckBox,\r\n        TextBox\r\n    },\r\n    setup() {\r\n        const typeOptions: ListItemBag[] = [\r\n            { text: \"Default\", value: BtnType.Default },\r\n            { text: \"Primary\", value: BtnType.Primary },\r\n            { text: \"Danger\", value: BtnType.Danger },\r\n            { text: \"Warning\", value: BtnType.Warning },\r\n            { text: \"Success\", value: BtnType.Success },\r\n            { text: \"Info\", value: BtnType.Info },\r\n            { text: \"Link\", value: BtnType.Link },\r\n        ];\r\n\r\n        return {\r\n            typeOptions,\r\n            sbtnType: ref(BtnType.Primary),\r\n            ubtnType: ref(BtnType.Default),\r\n            value: ref(null),\r\n            importCode: getSfcControlImportPath(\"intervalPicker\"),\r\n            exampleCode: `<IntervalPicker v-model=\"value\" label=\"Interval\" :selectedBtnType=\"sbtnType\" :unselectedBtnType=\"ubtnType\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <IntervalPicker v-model=\"value\" label=\"Interval\" :selectedBtnType=\"sbtnType\" :unselectedBtnType=\"ubtnType\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <DropDownList formGroupClasses=\"col-md-4\" label=\"Selected Button Type\" v-model=\"sbtnType\" :items=\"typeOptions\" :showBlankItem=\"false\" />\r\n            <DropDownList formGroupClasses=\"col-md-4\" label=\"Unselected Button Type\" v-model=\"ubtnType\" :items=\"typeOptions\" :showBlankItem=\"false\" />\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates Geo Picker */\r\nconst geoPickerGallery = defineComponent({\r\n    name: \"GeoPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        GeoPicker,\r\n        Toggle\r\n    },\r\n    setup() {\r\n        const toggleValue = ref(false);\r\n        const drawingMode = computed(() => toggleValue.value ? \"Point\" : \"Polygon\");\r\n\r\n        return {\r\n            value: ref(\"POLYGON((35.1945 31.813, 35.2345 31.813, 35.2345 31.783, 35.2745 31.783, 35.2745 31.753, 35.2345 31.753, 35.2345 31.693, 35.1945 31.693, 35.1945 31.753, 35.1545 31.753, 35.1545 31.783, 35.1945 31.783, 35.1945 31.813))\"),\r\n            toggleValue,\r\n            drawingMode,\r\n            importCode: getSfcControlImportPath(\"geoPicker\"),\r\n            exampleCode: `<GeoPicker :drawingMode=\"drawingMode\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <GeoPicker label=\"Geo Picker\" :drawingMode=\"drawingMode\" v-model=\"value\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <Toggle formGroupClasses=\"col-md-3\" v-model=\"toggleValue\" label=\"Drawing Mode\" trueText=\"Point\" falseText=\"Polygon\" help=\"This will not update while the picker is open. Re-open picker to see change. You may also need to clear the value\" />\r\n        </div>\r\n\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates Content Drop Down Picker */\r\nconst contentDropDownPickerGallery = defineComponent({\r\n    name: \"ContentDropDownPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        ContentDropDownPicker,\r\n        InlineCheckBox,\r\n        TextBox\r\n    },\r\n    setup() {\r\n        const value = ref<string>(\"\");\r\n        const innerLabel = computed<string>(() => value.value || \"No Value Selected\");\r\n        const showPopup = ref(false);\r\n        const isFullscreen = ref(false);\r\n\r\n        function onSelect(): void {\r\n            value.value = \"A Value\";\r\n        }\r\n        function onClear(): void {\r\n            value.value = \"\";\r\n        }\r\n\r\n        return {\r\n            value,\r\n            innerLabel,\r\n            onSelect,\r\n            onClear,\r\n            primaryButtonLabel: ref(\"<i class='fa fa-save'></i> Save\"),\r\n            secondaryButtonLabel: ref(\"Close\"),\r\n            showPopup,\r\n            isFullscreen,\r\n            showClearButton: ref(false),\r\n            importCode: getSfcControlImportPath(\"contentDropDownPicker\"),\r\n            exampleCode: `<ContentDropDownPicker\r\n    label=\"Your Custom Picker\"\r\n    @primaryButtonClicked=\"selectValue\"\r\n    @clearButtonClicked=\"clear\"S\r\n    :innerLabel=\"innerLabel\"\r\n    :showClear=\"!!value\"\r\n    iconCssClass=\"fa fa-cross\" >\r\n    You can place anything you want in here. Click the Save button to select a value or Cancel to close this box.\r\n</ContentDropDownPicker>`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\" >\r\n\r\n    <ContentDropDownPicker\r\n        label=\"Your Custom Picker\"\r\n        @primaryButtonClicked=\"onSelect\"\r\n        @clearButtonClicked=\"onClear\"\r\n        v-model:showPopup=\"showPopup\"\r\n        v-model:isFullscreen=\"isFullscreen\"\r\n        :innerLabel=\"innerLabel\"\r\n        :showClear=\"showClearButton\"\r\n        pickerContentBoxHeight=\"auto\"\r\n        disablePickerContentBoxScroll\r\n        iconCssClass=\"fa fa-cross\"\r\n        rules=\"required\"\r\n         >\r\n\r\n        <p>You can place anything you want in here. Click the Save button to select a value or Cancel to close this box.\r\n        The actions are completely customizable via event handlers (though they always close the popup), or you can\r\n        completely override them via the <code>mainPickerActions</code> slot. You can also add additional custom buttons\r\n        to the right via the <code>customPickerActions</code> slot.</p>\r\n\r\n        <p><strong>Note</strong>: you are in control of:</p>\r\n\r\n        <ul>\r\n            <li>Selecting a value when the primary button is clicked. This control does not touch actual values at all\r\n            except to pass them to <code>&lt;RockFormField&gt;</code> for validation.</li>\r\n            <li>Determining the text inside the select box via the <code>innerLabel</code> prop, since this control does\r\n            not look at the values or know how to format them</li>\r\n            <li>Determining when the clear button should show up via the <code>showClear</code> prop, once again because\r\n            this control doesn't mess with selected values.</li>\r\n        </ul>\r\n\r\n        <template #primaryButtonLabel><span v-html=\"primaryButtonLabel\"></span></template>\r\n\r\n        <template #secondaryButtonLabel><span v-html=\"secondaryButtonLabel\"></span></template>\r\n\r\n\r\n        <template #customPickerActions>\r\n            Custom Actions Here\r\n        </template>\r\n    </ContentDropDownPicker>\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <TextBox formGroupClasses=\"col-md-3\" label=\"Primary Button Label\" v-model=\"primaryButtonLabel\" />\r\n            <TextBox formGroupClasses=\"col-md-3\" label=\"Secondary Button Label\" v-model=\"secondaryButtonLabel\" />\r\n            <div class=\"col-md-3\"><InlineCheckBox label=\"Show Popup\" v-model=\"showPopup\" /></div>\r\n            <div class=\"col-md-3\"><InlineCheckBox label=\"Show Clear Button\" v-model=\"showClearButton\" /></div>\r\n        </div>\r\n\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n\r\n\r\n/** Demonstrates a wordcloud */\r\nconst wordCloudGallery = defineComponent({\r\n    name: \"WordCloudGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        NumberBox,\r\n        TextBox,\r\n        WordCloud\r\n    },\r\n    setup() {\r\n        const wordsText = ref(\"Hello, Hello, Hello, from, from, Chip\");\r\n        const colorsText = ref(\"#0193B9, #F2C852, #1DB82B, #2B515D, #ED3223\");\r\n\r\n        const words = computed((): string[] => {\r\n            return wordsText.value.split(\",\").map(v => v.trim()).filter(v => v.length > 0);\r\n        });\r\n\r\n        const colors = computed((): string[] => {\r\n            return colorsText.value.split(\",\").map(v => v.trim()).filter(v => v.length > 0);\r\n        });\r\n\r\n        return {\r\n            animationDuration: ref(350),\r\n            angleCount: ref(5),\r\n            autoClear: ref(false),\r\n            colors,\r\n            colorsText,\r\n            fontName: ref(\"Impact\"),\r\n            minimumAngle: ref(-90),\r\n            minimumFontSize: ref(10),\r\n            maximumAngle: ref(90),\r\n            maximumFontSize: ref(96),\r\n            wordPadding: ref(5),\r\n            words,\r\n            wordsText,\r\n            importCode: getControlImportPath(\"wordCloud\"),\r\n            exampleCode: `<WordCloud :words=\"['Hello', 'Hello', 'Goodbye']\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\">\r\n    <WordCloud width=\"100%\"\r\n        :words=\"words\"\r\n        :animationDuration=\"animationDuration\"\r\n        :angleCount=\"angleCount\"\r\n        :autoClear=\"autoClear\"\r\n        :colors=\"colors\"\r\n        :fontName=\"fontName\"\r\n        :minimumAngle=\"minimumAngle\"\r\n        :minimumFontSize=\"minimumFontSize\"\r\n        :maximumAngle=\"maximumAngle\"\r\n        :maximumFontSize=\"maximumFontSize\"\r\n        :wordPadding=\"wordPadding\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <TextBox v-model=\"wordsText\" label=\"Words\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <TextBox v-model=\"colorsText\" label=\"Colors\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <NumberBox v-model=\"wordPadding\" label=\"Word Padding\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <TextBox v-model=\"fontName\" label=\"Font Name\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <NumberBox v-model=\"minimumFontSize\" label=\"Minimum Font Size\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <NumberBox v-model=\"maximumFontSize\" label=\"Maximum Font Size\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <NumberBox v-model=\"angleCount\" label=\"Angle Count\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <NumberBox v-model=\"minimumAngle\" label=\"Minimum Angle\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <NumberBox v-model=\"maximumAngle\" label=\"Maximum Angle\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox v-model=\"autoClear\" label=\"Auto Clear\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-4\">\r\n                <NumberBox v-model=\"animationDuration\" label=\"Animation Duration\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates Event Calendar Picker */\r\nconst eventCalendarPickerGallery = defineComponent({\r\n    name: \"EventCalendarPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        EventCalendarPicker\r\n    },\r\n    setup() {\r\n\r\n        return {\r\n            value: ref(null),\r\n            importCode: getSfcControlImportPath(\"eventCalendarPicker\"),\r\n            exampleCode: `<EventCalendarPicker label=\"Event Calendar\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <EventCalendarPicker label=\"Event Calendar\" v-model=\"value\" />\r\n\r\n    <template #settings>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates Group Type Picker */\r\nconst groupTypePickerGallery = defineComponent({\r\n    name: \"GroupTypePickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        GroupTypePicker,\r\n        CheckBox\r\n    },\r\n    setup() {\r\n\r\n        return {\r\n            value: ref(null),\r\n            isSortedByName: ref(false),\r\n            multiple: ref(false),\r\n            importCode: getSfcControlImportPath(\"groupTypePicker\"),\r\n            exampleCode: `<GroupTypePicker label=\"Group Type\" v-model=\"value\" :groupTypes=\"[...groupTypeGuids]\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <GroupTypePicker label=\"Group Type\" v-model=\"value\" :isSortedByName=\"isSortedByName\" :multiple=\"multiple\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox v-model=\"isSortedByName\" label=\"Sort by Name\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox v-model=\"multiple\" label=\"Multiple\" />\r\n            </div>\r\n        </div>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates Location Address Picker */\r\nconst locationAddressPickerGallery = defineComponent({\r\n    name: \"LocationAddressPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        LocationAddressPicker,\r\n        DropDownList,\r\n        CheckBox,\r\n        TextBox,\r\n        Toggle\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref({}),\r\n            importCode: getSfcControlImportPath(\"locationAddressPicker\"),\r\n            exampleCode: `<LocationAddressPicker v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <LocationAddressPicker label=\"Location Address Picker\" v-model=\"value\" />\r\n\r\n    <template #settings>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n\r\n/** Demonstrates location picker */\r\nconst locationPickerGallery = defineComponent({\r\n    name: \"LocationPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        LocationPicker\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref(null),\r\n            importCode: getSfcControlImportPath(\"locationPicker\"),\r\n            exampleCode: `<LocationPicker label=\"Location\" v-model=\"value\" :multiple=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <LocationPicker label=\"Location\" v-model=\"value\" :multiple=\"multiple\" />\r\n\r\n    <template #settings>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n\r\n/** Demonstrates location list */\r\nconst locationListGallery = defineComponent({\r\n    name: \"LocationListGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        TextBox,\r\n        DefinedValuePicker,\r\n        LocationList\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref(null),\r\n            locationType: ref(\"\"),\r\n            parentLocation: ref(\"\"),\r\n            showCityState: ref(false),\r\n            multiple: ref(false),\r\n            allowAdd: ref(false),\r\n            showBlankItem: ref(false),\r\n            isAddressRequired: ref(false),\r\n            parentLocationGuid: ref(\"e0545b4d-4f97-43b0-971f-94b593ae2134\"),\r\n            importCode: getSfcControlImportPath(\"locationList\"),\r\n            exampleCode: `<LocationList label=\"Location\" v-model=\"value\" :multiple=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <LocationList label=\"Location\" v-model=\"value\" :multiple=\"multiple\" :locationTypeValueGuid=\"locationType?.value\" :allowAdd=\"allowAdd\" :showCityState=\"showCityState\" :showBlankItem=\"showBlankItem\" :isAddressRequired=\"isAddressRequired\" :parentLocationGuid=\"parentLocationGuid\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-3\">\r\n                <CheckBox v-model=\"showCityState\" label=\"Show City/State\" />\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <CheckBox v-model=\"multiple\" label=\"Multiple\" />\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <CheckBox v-model=\"allowAdd\" label=\"Allow Adding Values\" />\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <CheckBox v-model=\"showBlankItem\" label=\"Show Blank Item\" />\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <CheckBox v-model=\"isAddressRequired\" label=\"Require Address\" help=\"Only applies when adding a new location.\" />\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <TextBox v-model=\"parentLocationGuid\" label=\"Parent Location Guid\" />\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <DefinedValuePicker v-model=\"locationType\" label=\"Location Type\" definedTypeGuid=\"3285DCEF-FAA4-43B9-9338-983F4A384ABA\" showBlankItem />\r\n            </div>\r\n        </div>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n\r\n/** Demonstrates ethnicity picker */\r\nconst ethnicityPickerGallery = defineComponent({\r\n    name: \"EthnicityPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        DropDownList,\r\n        EthnicityPicker,\r\n        NumberUpDown\r\n    },\r\n    setup() {\r\n        return {\r\n            columnCount: ref(0),\r\n            displayStyle: ref(PickerDisplayStyle.Auto),\r\n            displayStyleItems,\r\n            enhanceForLongLists: ref(false),\r\n            multiple: ref(false),\r\n            showBlankItem: ref(false),\r\n            value: ref({}),\r\n            importCode: getControlImportPath(\"ethnicityPicker\"),\r\n            exampleCode: `<EthnicityPicker v-model=\"value\" :multiple=\"false\" :showBlankItem=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <EthnicityPicker\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :columnCount=\"columnCount\"\r\n        :enhanceForLongLists=\"enhanceForLongLists\"\r\n        :displayStyle=\"displayStyle\"\r\n        :showBlankItem=\"showBlankItem\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row mb-3\">\r\n            <div class=\"col-md-3\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-3\">\r\n                <CheckBox label=\"Enhance For Long Lists\" v-model=\"enhanceForLongLists\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-3\">\r\n                <CheckBox label=\"Show Blank Item\" v-model=\"showBlankItem\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-3\">\r\n                <DropDownList label=\"Display Style\" :showBlankItem=\"false\" v-model=\"displayStyle\" :items=\"displayStyleItems\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-3\">\r\n                <NumberUpDown label=\"Column Count\" v-model=\"columnCount\" :min=\"0\" />\r\n            </div>\r\n        </div>\r\n\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n\r\n/** Demonstrates race picker */\r\nconst racePickerGallery = defineComponent({\r\n    name: \"RacePickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        DropDownList,\r\n        RacePicker,\r\n        NumberUpDown\r\n    },\r\n    setup() {\r\n        return {\r\n            columnCount: ref(0),\r\n            displayStyle: ref(PickerDisplayStyle.Auto),\r\n            displayStyleItems,\r\n            enhanceForLongLists: ref(false),\r\n            multiple: ref(false),\r\n            showBlankItem: ref(false),\r\n            value: ref({}),\r\n            importCode: getControlImportPath(\"racePicker\"),\r\n            exampleCode: `<RacePicker v-model=\"value\" :multiple=\"false\" :showBlankItem=\"false\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <RacePicker\r\n        v-model=\"value\"\r\n        :multiple=\"multiple\"\r\n        :columnCount=\"columnCount\"\r\n        :enhanceForLongLists=\"enhanceForLongLists\"\r\n        :displayStyle=\"displayStyle\"\r\n        :showBlankItem=\"showBlankItem\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row mb-3\">\r\n            <div class=\"col-md-3\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-3\">\r\n                <CheckBox label=\"Enhance For Long Lists\" v-model=\"enhanceForLongLists\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-3\">\r\n                <CheckBox label=\"Show Blank Item\" v-model=\"showBlankItem\" />\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <DropDownList label=\"Display Style\" :showBlankItem=\"false\" v-model=\"displayStyle\" :items=\"displayStyleItems\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-3\">\r\n                <NumberUpDown label=\"Column Count\" v-model=\"columnCount\" :min=\"0\" />\r\n            </div>\r\n        </div>\r\n\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n\r\n/** Demonstrates media element picker */\r\nconst mediaElementPickerGallery = defineComponent({\r\n    name: \"MediaElementPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        TextBox,\r\n        DropDownList,\r\n        MediaElementPicker\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref(null),\r\n            account: ref(null),\r\n            folder: ref(null),\r\n            multiple: ref(false),\r\n            showBlankItem: ref(false),\r\n            hideRefresh: ref(false),\r\n            required: ref(false),\r\n            hideAccountPicker: ref(false),\r\n            hideFolderPicker: ref(false),\r\n            hideMediaPicker: ref(false),\r\n            importCode: getSfcControlImportPath(\"mediaElementPicker\"),\r\n            exampleCode: `<MediaElementPicker label=\"Media\" v-model=\"value\" :isRefreshDisallowed=\"false\" :hideAccountPicker=\"hideAccountPicker\" :hideFolderPicker=\"hideFolderPicker\" :hideMediaPicker=\"hideMediaPicker\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"{account, folder, modelValue: value}\"\r\n    hasMultipleValues\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <MediaElementPicker label=\"Media Element\"\r\n        v-model=\"value\"\r\n        v-model:account=\"account\"\r\n        v-model:folder=\"folder\"\r\n        :multiple=\"multiple\"\r\n        :showBlankItem=\"showBlankItem\"\r\n        :hideRefreshButtons=\"hideRefresh\"\r\n        :rules=\"required ? 'required' : ''\"\r\n        :hideAccountPicker=\"hideAccountPicker\"\r\n        :hideFolderPicker=\"hideFolderPicker\"\r\n        :hideMediaPicker=\"hideMediaPicker\"\r\n    />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-3\">\r\n                <CheckBox v-model=\"multiple\" label=\"Multiple\" />\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <CheckBox v-model=\"hideRefresh\" label=\"Hide Refresh Buttons\" />\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <CheckBox v-model=\"required\" label=\"Required\" />\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <CheckBox v-model=\"hideAccountPicker\" label=\"Hide Account Picker\" />\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <CheckBox v-model=\"hideFolderPicker\" label=\"Hide Folder Picker\" />\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <CheckBox v-model=\"hideMediaPicker\" label=\"Hide Media Picker\" />\r\n            </div>\r\n        </div>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n\r\n/** Demonstrates merge field picker */\r\nconst mergeFieldPickerGallery = defineComponent({\r\n    name: \"MergeFieldPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        MergeFieldPicker,\r\n        TextBox\r\n    },\r\n    setup() {\r\n        const value = ref([\r\n            {\r\n                \"value\": \"Rock.Model.Group|ArchivedByPersonAlias|Person|Aliases|AliasedDateTime\",\r\n                \"text\": \"Aliased Date Time\"\r\n            },\r\n            {\r\n                \"value\": \"Rock.Model.Person|ConnectionStatusValue|Category|CreatedByPersonAliasId\",\r\n                \"text\": \"Created By Person Alias Id\"\r\n            }\r\n        ]);\r\n\r\n        return {\r\n            multiple: ref(true),\r\n            value,\r\n            additionalFields: ref(\"GlobalAttribute,Rock.Model.Person,Rock.Model.Group\"),\r\n            importCode: getSfcControlImportPath(\"mergeFieldPicker\"),\r\n            exampleCode: `<MergeFieldPicker label=\"Merge Field\" v-model=\"value\" :multiple=\"false\" additionalFields=\"GlobalAttribute,Rock.Model.Person,Rock.Model.Group\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <MergeFieldPicker label=\"Merge Field\" v-model=\"value\" :multiple=\"multiple\" :additionalFields=\"additionalFields\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <TextBox label=\"Root Merge Fields\" v-model=\"additionalFields\" />\r\n            </div>\r\n        </div>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n\r\n/** Demonstrates categorized value picker */\r\nconst categorizedValuePickerGallery = defineComponent({\r\n    name: \"CategorizedValuePickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        CategorizedValuePicker,\r\n        TextBox\r\n    },\r\n    setup() {\r\n        return {\r\n            multiple: ref(true),\r\n            value: ref(null),\r\n            required: ref(false),\r\n            definedType: ref(DefinedType.PowerbiAccounts),\r\n            importCode: getSfcControlImportPath(\"categorizedValuePicker\"),\r\n            exampleCode: `<CategorizedValuePicker label=\"Categorized Defined Value\" v-model=\"value\" :definedTypeGuid=\"DefinedType.PowerbiAccounts\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n    <CategorizedValuePicker label=\"Categorized Defined Value\" v-model=\"value\" :definedTypeGuid=\"definedType\" :rules=\"required ? 'required' : ''\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Required\" v-model=\"required\" />\r\n            </div>\r\n        </div>\r\n        <p class=\"my-4\">\r\n            <strong>NOTE:</strong> This picker will be empty unless you specify a defined type that has\r\n            categorized values. By default, there aren't any, so you may need to configure a defined type to\r\n            have categories and add values to those categories in order to see what this control can do.\r\n        </p>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n\r\n/** Demonstrates reminder type picker */\r\nconst reminderTypePickerGallery = defineComponent({\r\n    name: \"ReminderTypePickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        ReminderTypePicker,\r\n        DropDownList,\r\n        EntityTypePicker,\r\n        TextBox,\r\n        NumberUpDown\r\n    },\r\n    setup() {\r\n        return {\r\n            columnCount: ref(0),\r\n            displayStyle: ref(PickerDisplayStyle.Auto),\r\n            displayStyleItems,\r\n            enhanceForLongLists: ref(false),\r\n            multiple: ref(false),\r\n            showBlankItem: ref(false),\r\n            value: ref(null),\r\n            required: ref(false),\r\n            entityTypeGuid: ref(null),\r\n            importCode: getSfcControlImportPath(\"reminderTypePicker\"),\r\n            exampleCode: `<ReminderTypePicker label=\"Reminder Type\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <ReminderTypePicker\r\n        label=\"Reminder Type\"\r\n        v-model=\"value\"\r\n        :entityTypeGuid=\"entityTypeGuid?.value\"\r\n        :multiple=\"multiple\"\r\n        :columnCount=\"columnCount\"\r\n        :enhanceForLongLists=\"enhanceForLongLists\"\r\n        :displayStyle=\"displayStyle\"\r\n        :showBlankItem=\"showBlankItem\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Multiple\" v-model=\"multiple\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Enhance For Long Lists\" v-model=\"enhanceForLongLists\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Show Blank Item\" v-model=\"showBlankItem\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <DropDownList label=\"Display Style\" :showBlankItem=\"false\" v-model=\"displayStyle\" :items=\"displayStyleItems\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <NumberUpDown label=\"Column Count\" v-model=\"columnCount\" :min=\"0\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <EntityTypePicker label=\"For Entity Type\" v-model=\"entityTypeGuid\" enhanceForLongLists showBlankItem />\r\n            </div>\r\n        </div>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates group role picker */\r\nconst groupRolePickerGallery = defineComponent({\r\n    name: \"GroupRolePickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        GroupRolePicker,\r\n        TextBox\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref(null),\r\n            required: ref(false),\r\n            importCode: getSfcControlImportPath(\"groupRolePicker\"),\r\n            exampleCode: `<GroupRolePicker label=\"Group Type and Role\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <GroupRolePicker label=\"Group Type and Role\" v-model=\"value\" :rules=\"required ? 'required' : ''\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Required\" v-model=\"required\" />\r\n            </div>\r\n        </div>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates modal alert */\r\nconst modalAlertGallery = defineComponent({\r\n    name: \"ModalAlertGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        RockButton,\r\n        ModalAlert,\r\n        TextBox,\r\n        DropDownList\r\n    },\r\n    setup() {\r\n        const types = [\r\n            {\r\n                text: ModalAlertType.Alert,\r\n                value: ModalAlertType.Alert\r\n            },\r\n            {\r\n                text: ModalAlertType.Information,\r\n                value: ModalAlertType.Information\r\n            },\r\n            {\r\n                text: ModalAlertType.Warning,\r\n                value: ModalAlertType.Warning\r\n            },\r\n            {\r\n                text: ModalAlertType.None,\r\n                value: ModalAlertType.None\r\n            }\r\n        ];\r\n\r\n        return {\r\n            types,\r\n            type: ref(\"Alert\"),\r\n            isShowing: ref(false),\r\n            message: ref(\"Message I want to alert you to.\"),\r\n            importCode: getSfcControlImportPath(\"modalAlert\"),\r\n            exampleCode: `<ModalAlert v-model=\"isShowing\" type=\"ModalAlertType.Alert\">Message I want to alert you to.</ModalAlert>`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\" >\r\n\r\n    <ModalAlert v-model=\"isShowing\" :type=\"type\">{{message}}</ModalAlert>\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <RockButton @click=\"isShowing = true\">Show</RockButton>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <TextBox label=\"Message\" v-model=\"message\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <DropDownList label=\"Alert Type\" v-model=\"type\" :items=\"types\" />\r\n            </div>\r\n        </div>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates content channel item picker */\r\nconst contentChannelItemPickerGallery = defineComponent({\r\n    name: \"ContentChannelItemPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        ContentChannelItemPicker,\r\n        TextBox\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref({\r\n                \"value\": \"d6d4a292-f794-4d0c-bd29-420631a858b3\",\r\n                \"text\": \"Miracles in Luke\",\r\n                \"category\": null\r\n            }),\r\n            required: ref(false),\r\n            importCode: getSfcControlImportPath(\"contentChannelItemPicker\"),\r\n            exampleCode: `<ContentChannelItemPicker label=\"Content Channel Item\" v-model=\"value\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"value\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\" >\r\n\r\n    <ContentChannelItemPicker label=\"Choose A Content Channel Item\" v-model=\"value\" :rules=\"required ? 'required' : ''\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Required\" v-model=\"required\" />\r\n            </div>\r\n        </div>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates person link */\r\nconst personLinkGallery = defineComponent({\r\n    name: \"PersonLinkGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        PersonLink,\r\n        DropDownList,\r\n        TextBox\r\n    },\r\n    setup() {\r\n        const placement = ref(\"right\");\r\n        const textAlign = computed(() => {\r\n            if (placement.value == \"right\") {\r\n                return \"left\";\r\n            }\r\n\r\n            if (placement.value == \"left\") {\r\n                return \"right\";\r\n            }\r\n\r\n            return \"center\";\r\n        });\r\n\r\n        return {\r\n            placementOptions: [\r\n                { text: \"Top\", value: \"top\" },\r\n                { text: \"Right (Default)\", value: \"right\" },\r\n                { text: \"Bottom\", value: \"bottom\" },\r\n                { text: \"Left\", value: \"left\" },\r\n            ],\r\n            placement,\r\n            textAlign,\r\n            personName: ref(\"Ted Decker\"),\r\n            role: ref(\"Member\"),\r\n            photoId: ref(\"\"),\r\n            personId: ref(\"1\"),\r\n            importCode: getSfcControlImportPath(\"personLink\"),\r\n            exampleCode: `<PersonLink :personId=\"56\" personName=\"Ted Decker\" role=\"Member\" popOverPlacement=\"right\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\" >\r\n\r\n    <div :style=\"{textAlign, 'margin-top': placement == 'top' ? '150px' : '0'}\">\r\n        <PersonLink :personId=\"personId\" :personName=\"personName\" :photoId=\"photoId\" :role=\"role\" :popOverPlacement=\"placement\" />\r\n    </div>\r\n    <div class=\"mt-5 text-center\" v-if=\"textAlign != 'left'\"><strong>Note:</strong> The link has been moved to demonstrate the placement position of the pop over better. Changing the pop over placement does not normally move PersonLink around, just the position of the pop over.</div>\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <TextBox v-model=\"personName\" label=\"Person Name\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <TextBox v-model=\"role\" label=\"Role\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <TextBox v-model=\"photoId\" label=\"Photo ID\" help=\"NOTE: Providing a photo ID only adds a dot. Currently, this does nothing else and the value does not matter, as long as a value is provided.\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <TextBox v-model=\"personId\" label=\"Person ID\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <DropDownList v-model=\"placement\" :items=\"placementOptions\" label=\"Pop Over Placement\" :showBlankItem=\"false\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates popOver */\r\nconst popOverGallery = defineComponent({\r\n    name: \"PopOverGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        PopOver,\r\n        DropDownList,\r\n        CheckBox\r\n    },\r\n    setup() {\r\n        const placement = ref(\"right\");\r\n        const triggerUpdate = ref(false);\r\n\r\n        watch(placement, () => {\r\n            triggerUpdate.value = true;\r\n        });\r\n\r\n        return {\r\n            placementOptions: [\r\n                { text: \"Top\", value: \"top\" },\r\n                { text: \"Right (Default)\", value: \"right\" },\r\n                { text: \"Bottom\", value: \"bottom\" },\r\n                { text: \"Left\", value: \"left\" },\r\n            ],\r\n            placement,\r\n            triggerUpdate,\r\n            show: ref(false),\r\n            importCode: getSfcControlImportPath(\"popOver\"),\r\n            exampleCode: `<PopOver v-model:isVisible=\"isVisible\" placement=\"right\">\r\n    <template #activator=\"props\">\r\n        <strong v-bind=\"props\">Hover Me</strong>\r\n    </template>\r\n    <template #popOverContent>\r\n        This is the content that shows up in the popOver\r\n    </template>\r\n</PopOver>`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\" >\r\n\r\n    <div class=\"text-center\">\r\n        <PopOver v-model:isVisible=\"show\" :placement=\"placement\" v-model:triggerUpdate=\"triggerUpdate\">\r\n            <template #activator=\"props\">\r\n                <strong v-bind=\"props\">Hover Me</strong>\r\n            </template>\r\n            <template #popOverContent>\r\n                This is the content that shows up in the popOver\r\n            </template>\r\n        </PopOver>\r\n    </div>\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox v-model=\"show\" label=\"Show PopOver\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <DropDownList v-model=\"placement\" :items=\"placementOptions\" label=\"Pop Over Placement\" :showBlankItem=\"false\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n\r\n    <template #syntaxNotes>\r\n        <p class=\"font-italic\"><strong>Important Notes:</strong> The <code>activator</code> slot's contents must be an HTML element. Putting a component there will not work. Also,\r\n        you must bind the activator slot's props to that element. This allows the popOver to attach the event listeners so it can detect if\r\n        it is being hovered.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates rockLiteral */\r\nconst rockLiteralGallery = defineComponent({\r\n    name: \"RockLiteralGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        RockLiteral,\r\n        TextBox,\r\n        CheckBox\r\n    },\r\n    setup() {\r\n        return {\r\n            label: ref(\"Romans 11:33\"),\r\n            labelClass: ref(\"\"),\r\n            content: ref(\"<p>Oh, the depth of the riches and the wisdom and the knowledge of God!<br> How unsearchable his judgments and untraceable his ways!\"),\r\n            useLabelSlot: ref(false),\r\n            importCode: getSfcControlImportPath(\"rockLiteral\"),\r\n            exampleCode: `// Simple Label\r\n<RockLiteral label=\"Label Text\" labelCssClass=\"text-primary\">\r\n    My content beneath the label.\r\n</RockLiteral>\r\n\r\n// Advanced Label with Slot\r\n<RockLiteral labelCssClass=\"text-primary\">\r\n    <template #label><i class=\"fa fa-cross\"></i> <strong>My Custom Label</strong></template>\r\n    My content beneath the label.\r\n</RockLiteral>`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\" >\r\n\r\n    <RockLiteral :labelCssClass=\"labelClass\" :label=\"label\">\r\n        <template #label v-if=\"useLabelSlot\"><span v-html=\"label\"></span></template>\r\n        <div v-html=\"content\"></div>\r\n    </RockLiteral>\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <TextBox v-model=\"label\" label=\"Label Text\" textMode=\"multiline\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox v-model=\"useLabelSlot\" label=\"Use Label Slot\" help=\"Instead of using the prop. This allows you to pass in HTML or a component for the label instead of plain text.\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <TextBox v-model=\"labelClass\" label=\"Label Class\" help=\"Try something like <code>text-primary</code> to change the color\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <TextBox v-model=\"content\" label=\"Content HTML\" textMode=\"multiline\" />\r\n            </div>\r\n        </div>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates a registry entry */\r\nconst registryEntryGallery = defineComponent({\r\n    name: \"RegistryEntryGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        RegistryEntry,\r\n        RockForm,\r\n        RockButton,\r\n        CheckBox\r\n    },\r\n    setup() {\r\n        return {\r\n            entry: ref(null),\r\n            submit: ref(false),\r\n            isRequired: ref(false),\r\n            importCode: getSfcControlImportPath(\"registryEntry\"),\r\n            exampleCode: `<RegistryEntry label=\"Registry Entry\" v-model=\"phoneNumber\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"entry\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    enableReflection >\r\n\r\n    <RockForm v-model:submit=\"submit\">\r\n        <RegistryEntry label=\"Registry Entry\" v-model=\"entry\" :rules=\"isRequired ? 'required' : ''\" class=\"text-primary\" />\r\n        <RockButton @click=\"submit=true\">Validate</RockButton>\r\n    </RockForm>\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <CheckBox v-model=\"isRequired\" label=\"Required\" />\r\n            </div>\r\n        </div>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n/** Demonstrates group type group picker */\r\nconst groupTypeGroupPickerGallery = defineComponent({\r\n    name: \"GroupTypeGroupPickerGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        GroupTypeGroupPicker,\r\n        TextBox,\r\n        RockButton\r\n    },\r\n    setup() {\r\n        return {\r\n            value: ref(null),\r\n            groupType: ref(null),\r\n            required: ref(false),\r\n            glabel: ref(\"Group\"),\r\n            importCode: getSfcControlImportPath(\"groupTypeGroupPicker\"),\r\n            exampleCode: `<GroupTypeGroupPicker label=\"Group Type and TypeGroup\" groupLabel=\"Group\" v-model=\"value\"v-model:groupType=\"groupType\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :value=\"{value, groupType}\"\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\"\r\n    hasMultipleValues\r\n    enableReflection >\r\n\r\n    <GroupTypeGroupPicker label=\"Group Type and TypeGroup\" :groupLabel=\"glabel\" v-model=\"value\" v-model:groupType=\"groupType\" :rules=\"required ? 'required' : ''\" />\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <TextBox label=\"Group Label\" v-model=\"glabel\" help=\"The label for the 2nd dropdown. The label for the first dropdown is not customizable\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <CheckBox label=\"Required\" v-model=\"required\" />\r\n            </div>\r\n        </div>\r\n        <p class=\"text-semibold font-italic\">Not all settings are demonstrated in this gallery.</p>\r\n        <p>Additional props extend and are passed to the underlying <code>Rock Form Field</code>.</p>\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\n\r\nconst controlGalleryComponents: Record<string, Component> = [\r\n    notificationBoxGallery,\r\n    attributeValuesContainerGallery,\r\n    badgeListGallery,\r\n    fieldFilterEditorGallery,\r\n    textBoxGallery,\r\n    datePickerGallery,\r\n    dateRangePickerGallery,\r\n    dateTimePickerGallery,\r\n    datePartsPickerGallery,\r\n    radioButtonListGallery,\r\n    dialogGallery,\r\n    checkBoxGallery,\r\n    inlineCheckBoxGallery,\r\n    switchGallery,\r\n    inlineSwitchGallery,\r\n    checkBoxListGallery,\r\n    listBoxGallery,\r\n    phoneNumberBoxGallery,\r\n    dropDownListGallery,\r\n    helpBlockGallery,\r\n    colorPickerGallery,\r\n    numberBoxGallery,\r\n    numberRangeBoxGallery,\r\n    genderDropDownListGallery,\r\n    socialSecurityNumberBoxGallery,\r\n    timePickerGallery,\r\n    ratingGallery,\r\n    currencyBoxGallery,\r\n    emailBoxGallery,\r\n    numberUpDownGallery,\r\n    staticFormControlGallery,\r\n    addressControlGallery,\r\n    toggleGallery,\r\n    progressTrackerGallery,\r\n    itemsWithPreAndPostHtmlGallery,\r\n    urlLinkBoxGallery,\r\n    fullscreenGallery,\r\n    panelGallery,\r\n    personPickerGallery,\r\n    fileUploaderGallery,\r\n    imageUploaderGallery,\r\n    slidingDateRangePickerGallery,\r\n    definedValuePickerGallery,\r\n    campusPickerGallery,\r\n    entityTypePickerGallery,\r\n    sectionHeaderGallery,\r\n    sectionContainerGallery,\r\n    categoryPickerGallery,\r\n    locationItemPickerGallery,\r\n    copyButtonGallery,\r\n    entityTagListGallery,\r\n    followingGallery,\r\n    achievementTypePickerGallery,\r\n    badgeComponentPickerGallery,\r\n    assessmentTypePickerGallery,\r\n    assetStorageProviderPickerGallery,\r\n    auditDetailGallery,\r\n    binaryFileTypePickerGallery,\r\n    binaryFilePickerGallery,\r\n    codeEditorGallery,\r\n    modalGallery,\r\n    eventItemPickerGallery,\r\n    dataViewPickerGallery,\r\n    workflowTypePickerGallery,\r\n    componentPickerGallery,\r\n    financialGatewayPickerGallery,\r\n    financialStatementTemplatePickerGallery,\r\n    fieldTypePickerGallery,\r\n    gradePickerGallery,\r\n    groupMemberPickerGallery,\r\n    interactionChannelPickerGallery,\r\n    interactionComponentPickerGallery,\r\n    lavaCommandPickerGallery,\r\n    remoteAuthsPickerGallery,\r\n    stepProgramPickerGallery,\r\n    stepStatusPickerGallery,\r\n    stepTypePickerGallery,\r\n    streakTypePickerGallery,\r\n    badgePickerGallery,\r\n    basicTimePickerGallery,\r\n    birthdayPickerGallery,\r\n    countdownTimerGallery,\r\n    electronicSignatureGallery,\r\n    fieldTypeEditorGallery,\r\n    inlineRangeSliderGallery,\r\n    javaScriptAnchorGallery,\r\n    keyValueListGallery,\r\n    loadingGallery,\r\n    loadingIndicatorGallery,\r\n    numberUpDownGroupGallery,\r\n    panelWidgetGallery,\r\n    progressBarGallery,\r\n    rockButtonGallery,\r\n    rockLabelGallery,\r\n    rockValidationGallery,\r\n    rangeSliderGallery,\r\n    tabbedContentGallery,\r\n    transitionVerticalCollapseGallery,\r\n    valueDetailListGallery,\r\n    pagePickerGallery,\r\n    connectionRequestPickerGallery,\r\n    groupPickerGallery,\r\n    mergeTemplatePickerGallery,\r\n    metricCategoryPickerGallery,\r\n    metricItemPickerGallery,\r\n    registrationTemplatePickerGallery,\r\n    reportPickerGallery,\r\n    schedulePickerGallery,\r\n    workflowActionTypePickerGallery,\r\n    dayOfWeekPickerGallery,\r\n    monthDayPickerGallery,\r\n    monthYearPickerGallery,\r\n    cacheabilityPickerGallery,\r\n    buttonGroupGallery,\r\n    intervalPickerGallery,\r\n    geoPickerGallery,\r\n    contentDropDownPickerGallery,\r\n    scheduleBuilderGallery,\r\n    wordCloudGallery,\r\n    eventCalendarPickerGallery,\r\n    groupTypePickerGallery,\r\n    locationAddressPickerGallery,\r\n    locationPickerGallery,\r\n    locationListGallery,\r\n    ethnicityPickerGallery,\r\n    racePickerGallery,\r\n    mediaElementPickerGallery,\r\n    mergeFieldPickerGallery,\r\n    categorizedValuePickerGallery,\r\n    reminderTypePickerGallery,\r\n    groupRolePickerGallery,\r\n    modalAlertGallery,\r\n    contentChannelItemPickerGallery,\r\n    personLinkGallery,\r\n    popOverGallery,\r\n    rockLiteralGallery,\r\n    registryEntryGallery,\r\n    groupTypeGroupPickerGallery,\r\n]\r\n    // Sort list by component name\r\n    .sort((a, b) => a.name.localeCompare(b.name))\r\n    // Convert list to an object where the key is the component name and the value is the component\r\n    .reduce((newList, comp) => {\r\n        newList[comp.name] = comp;\r\n        return newList;\r\n    }, {});\r\n\r\n// #endregion\r\n\r\n// #region Template Gallery\r\n\r\n/** Demonstrates the detailPanel component. */\r\nconst detailBlockGallery = defineComponent({\r\n    name: \"DetailBlockGallery\",\r\n    components: {\r\n        GalleryAndResult,\r\n        CheckBox,\r\n        CheckBoxList,\r\n        DetailBlock\r\n    },\r\n\r\n    setup() {\r\n        const simulateValues = ref<string[]>([]);\r\n\r\n        const headerActions = computed((): PanelAction[] => {\r\n            if (!simulateValues.value.includes(\"headerActions\")) {\r\n                return [];\r\n            }\r\n\r\n            return [\r\n                {\r\n                    iconCssClass: \"fa fa-user\",\r\n                    title: \"Action 1\",\r\n                    type: \"default\",\r\n                    handler: () => alert(\"Action 1 selected.\")\r\n                },\r\n                {\r\n                    iconCssClass: \"fa fa-group\",\r\n                    title: \"Action 2\",\r\n                    type: \"success\",\r\n                    handler: () => alert(\"Action 2 selected.\")\r\n                }\r\n            ];\r\n        });\r\n\r\n        const labels = computed((): PanelAction[] => {\r\n            if (!simulateValues.value.includes(\"labels\")) {\r\n                return [];\r\n            }\r\n\r\n            return [\r\n                {\r\n                    iconCssClass: \"fa fa-user\",\r\n                    title: \"Action 1\",\r\n                    type: \"info\",\r\n                    handler: () => alert(\"Action 1 selected.\")\r\n                },\r\n                {\r\n                    iconCssClass: \"fa fa-group\",\r\n                    title: \"Action 2\",\r\n                    type: \"success\",\r\n                    handler: () => alert(\"Action 2 selected.\")\r\n                }\r\n            ];\r\n        });\r\n\r\n        const headerSecondaryActions = computed((): PanelAction[] => {\r\n            if (!simulateValues.value.includes(\"headerSecondaryActions\")) {\r\n                return [];\r\n            }\r\n\r\n            return [\r\n                {\r\n                    iconCssClass: \"fa fa-user\",\r\n                    title: \"Action 1\",\r\n                    type: \"default\",\r\n                    handler: () => alert(\"Action 1 selected.\")\r\n                },\r\n                {\r\n                    iconCssClass: \"fa fa-group\",\r\n                    title: \"Action 2\",\r\n                    type: \"success\",\r\n                    handler: () => alert(\"Action 2 selected.\")\r\n                }\r\n            ];\r\n        });\r\n\r\n        const footerActions = computed((): PanelAction[] => {\r\n            if (!simulateValues.value.includes(\"footerActions\")) {\r\n                return [];\r\n            }\r\n\r\n            return [\r\n                {\r\n                    iconCssClass: \"fa fa-user\",\r\n                    title: \"Action 1\",\r\n                    type: \"default\",\r\n                    handler: () => alert(\"Action 1 selected.\")\r\n                },\r\n                {\r\n                    iconCssClass: \"fa fa-group\",\r\n                    title: \"Action 2\",\r\n                    type: \"success\",\r\n                    handler: () => alert(\"Action 2 selected.\")\r\n                }\r\n            ];\r\n        });\r\n\r\n        const footerSecondaryActions = computed((): PanelAction[] => {\r\n            if (!simulateValues.value.includes(\"footerSecondaryActions\")) {\r\n                return [];\r\n            }\r\n\r\n            return [\r\n                {\r\n                    iconCssClass: \"fa fa-user\",\r\n                    title: \"Action 1\",\r\n                    type: \"default\",\r\n                    handler: () => alert(\"Action 1 selected.\")\r\n                },\r\n                {\r\n                    iconCssClass: \"fa fa-group\",\r\n                    title: \"Action 2\",\r\n                    type: \"success\",\r\n                    handler: () => alert(\"Action 2 selected.\")\r\n                }\r\n            ];\r\n        });\r\n\r\n        return {\r\n            colors: Array.apply(0, Array(256)).map((_: unknown, index: number) => `rgb(${index}, ${index}, ${index})`),\r\n            entityTypeGuid: EntityType.Group,\r\n            footerActions,\r\n            footerSecondaryActions,\r\n            headerActions,\r\n            headerSecondaryActions,\r\n            isAuditHidden: ref(false),\r\n            isBadgesVisible: ref(true),\r\n            isDeleteVisible: ref(true),\r\n            isEditVisible: ref(true),\r\n            isFollowVisible: ref(true),\r\n            isSecurityHidden: ref(false),\r\n            isTagsVisible: ref(false),\r\n            labels,\r\n            simulateValues,\r\n            simulateOptions: [\r\n                {\r\n                    value: \"headerActions\",\r\n                    text: \"Header Actions\"\r\n                },\r\n                {\r\n                    value: \"headerSecondaryActions\",\r\n                    text: \"Header Secondary Actions\"\r\n                },\r\n                {\r\n                    value: \"labels\",\r\n                    text: \"Labels\",\r\n                },\r\n                {\r\n                    value: \"footerActions\",\r\n                    text: \"Footer Actions\"\r\n                },\r\n                {\r\n                    value: \"footerSecondaryActions\",\r\n                    text: \"Footer Secondary Actions\"\r\n                },\r\n                {\r\n                    value: \"helpContent\",\r\n                    text: \"Help Content\"\r\n                }\r\n            ],\r\n            simulateHelp: computed((): boolean => simulateValues.value.includes(\"helpContent\")),\r\n            importCode: getTemplateImportPath(\"detailBlock\"),\r\n            exampleCode: `<DetailBlock name=\"Sample Entity\" :entityTypeGuid=\"entityTypeGuid\" entityTypeName=\"Entity Type\" entityKey=\"57dc00a3-ff88-4d4c-9878-30ae309117e2\" />`\r\n        };\r\n    },\r\n    template: `\r\n<GalleryAndResult\r\n    :importCode=\"importCode\"\r\n    :exampleCode=\"exampleCode\">\r\n    <DetailBlock name=\"Sample Entity\"\r\n        :entityTypeGuid=\"entityTypeGuid\"\r\n        entityTypeName=\"Entity Type\"\r\n        entityKey=\"57dc00a3-ff88-4d4c-9878-30ae309117e2\"\r\n        :headerActions=\"headerActions\"\r\n        :headerSecondaryActions=\"headerSecondaryActions\"\r\n        :labels=\"labels\"\r\n        :footerActions=\"footerActions\"\r\n        :footerSecondaryActions=\"footerSecondaryActions\"\r\n        :isAuditHidden=\"isAuditHidden\"\r\n        :isEditVisible=\"isEditVisible\"\r\n        :isDeleteVisible=\"isDeleteVisible\"\r\n        :isFollowVisible=\"isFollowVisible\"\r\n        :isBadgesVisible=\"isBadgesVisible\"\r\n        :isSecurityHidden=\"isSecurityHidden\"\r\n        :isTagsVisible=\"isTagsVisible\">\r\n        <template v-if=\"simulateHelp\" #helpContent>\r\n            This is some help text.\r\n        </template>\r\n        <div v-for=\"c in colors\" :style=\"{ background: c, height: '1px' }\"></div>\r\n    </DetailBlock>\r\n\r\n    <template #settings>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-3\">\r\n                <CheckBox v-model=\"isAuditHidden\" label=\"Is Audit Hidden\" />\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <CheckBox v-model=\"isBadgesVisible\" label=\"Is Badges Visible\" />\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <CheckBox v-model=\"isDeleteVisible\" label=\"Is Delete Visible\" />\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <CheckBox v-model=\"isEditVisible\" label=\"Is Edit Visible\" />\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <CheckBox v-model=\"isFollowVisible\" label=\"Is Follow Visible\" />\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <CheckBox v-model=\"isSecurityHidden\" label=\"Is Security Hidden\" />\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <CheckBox v-model=\"isTagsVisible\" label=\"Is Tags Visible\" />\r\n            </div>\r\n        </div>\r\n\r\n        <CheckBoxList v-model=\"simulateValues\" label=\"Simulate\" :items=\"simulateOptions\" horizontal />\r\n    </template>\r\n</GalleryAndResult>`\r\n});\r\n\r\nconst templateGalleryComponents = [\r\n    detailBlockGallery\r\n]\r\n    .sort((a, b) => a.name.localeCompare(b.name))\r\n    .reduce((newList, comp) => {\r\n        newList[comp.name] = comp;\r\n        return newList;\r\n    }, {});\r\n\r\n// #endregion\r\n\r\nexport default defineComponent({\r\n    name: \"Example.ControlGallery\",\r\n    components: {\r\n        Panel,\r\n        SectionHeader,\r\n        ...controlGalleryComponents,\r\n        ...templateGalleryComponents\r\n    },\r\n\r\n    setup() {\r\n        const currentComponent = ref<Component>(Object.values(controlGalleryComponents)[0]);\r\n\r\n        function getComponentFromHash(): void {\r\n            const hashComponent = new URL(document.URL).hash.replace(\"#\", \"\");\r\n            const component = controlGalleryComponents[hashComponent] ?? templateGalleryComponents[hashComponent];\r\n\r\n            if (component) {\r\n                currentComponent.value = component;\r\n            }\r\n        }\r\n\r\n        onMounted(() => {\r\n            getComponentFromHash();\r\n\r\n            window.addEventListener(\"hashchange\", getComponentFromHash);\r\n        });\r\n\r\n        onUnmounted(() => {\r\n            window.removeEventListener(\"hashchange\", getComponentFromHash);\r\n        });\r\n\r\n        return {\r\n            currentComponent,\r\n            convertComponentName,\r\n            controlGalleryComponents,\r\n            templateGalleryComponents\r\n        };\r\n    },\r\n\r\n    template: `\r\n<v-style>\r\n.gallerySidebar {\r\n    border-radius: 0;\r\n    margin: -1px 0 -1px -1px;\r\n    overflow-y: auto;\r\n}\r\n\r\n.gallerySidebar li.current {\r\n    font-weight: 700;\r\n}\r\n\r\n.galleryContent {\r\n    flex-grow: 1;\r\n    overflow-x: clip;\r\n    overflow-y: auto;\r\n    padding: 20px;\r\n}\r\n\r\n.galleryContent .rock-header {\r\n    margin: 0 -20px;\r\n}\r\n\r\n.galleryContent .rock-header .title {\r\n    margin-left: 20px;\r\n}\r\n</v-style>\r\n<Panel type=\"block\">\r\n    <template #title>\r\n        Obsidian Control Gallery\r\n    </template>\r\n    <template #default>\r\n        <div class=\"panel-flex-fill-body flex-row\">\r\n\r\n            <div class=\"gallerySidebar well\">\r\n                <h4>Components</h4>\r\n\r\n                <ul class=\"list-unstyled mb-0\">\r\n                    <li v-for=\"(component, key) in controlGalleryComponents\" :key=\"key\" :class=\"{current: currentComponent.name === component.name}\">\r\n                        <a :href=\"'#' + key\" @click=\"currentComponent = component\">{{ convertComponentName(component.name) }}</a>\r\n                    </li>\r\n                </ul>\r\n\r\n                <h4 class=\"mt-3\">Templates</h4>\r\n\r\n                <ul class=\"list-unstyled mb-0\">\r\n                    <li v-for=\"(component, key) in templateGalleryComponents\" :key=\"key\" :class=\"{current: currentComponent.name === component.name}\">\r\n                        <a :href=\"'#' + key\" @click=\"currentComponent = component\">{{ convertComponentName(component.name) }}</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div class=\"galleryContent\">\r\n                <component :is=\"currentComponent\" />\r\n            </div>\r\n\r\n        </div>\r\n    </template>\r\n</Panel>`\r\n});\r\n"],"names":["displayStyleItems","value","PickerDisplayStyle","Auto","text","List","Condensed","convertComponentName","name","replace","trim","buildExampleCode","elementName","attributes","attrs","attr","console","log","isRef","push","concat","join","GalleryAndResult","defineComponent","inheritAttrs","components","Switch","SectionHeader","TransitionVerticalCollapse","CopyButton","props","required","hasMultipleValues","type","Boolean","default","enableReflection","importCode","String","exampleCode","description","displayAsRaw","setup","_getCurrentInstance","_getCurrentInstance$p","_getCurrentInstance$p2","componentName","getCurrentInstance","parent","formattedValue","computed","JSON","stringify","ObjectUtils","fromEntries","Object","entries","map","_ref","_ref2","_slicedToArray","key","val","styledImportCode","_HighlightJs$highligh","undefined","HighlightJs","highlight","language","styledExampleCode","_HighlightJs$highligh2","showReflection","ref","template","getControlImportPath","fileName","upperCaseFirstCharacter","getSfcControlImportPath","getTemplateImportPath","attributeValuesContainerGallery","AttributeValuesContainer","CheckBox","NumberBox","TextBox","isEditMode","showAbbreviatedName","showEmptyValues","displayAsTabs","showCategoryLabel","numberOfColumns","entityName","categories","guid","newGuid","order","attributeGuid","fieldTypeGuid","FieldType","Text","isRequired","configurationValues","color","Color","bool","textagain","single","SingleSelect","values","attributeValues","fieldFilterEditorGallery","FieldFilterEditor","sources","attribute","maxcharacters","selectiontype","hideUnknownGender","numberofrows","allowhtml","showcountdown","prefilled","expressionType","rules","comparisonType","sourceType","clean","usePrefilled","watch","title","phoneNumberBoxGallery","PhoneNumberBox","RockForm","RockButton","phoneNumber","submit","helpBlockGallery","HelpBlock","dropDownListGallery","DropDownList","options","category","loadOptionsAsync","_ref3","_asyncToGenerator","sleep","apply","arguments","enhanceForLongLists","showBlankItem","grouped","multiple","radioButtonListGallery","RadioButtonList","Toggle","NumberUpDown","isHorizontal","repeatColumns","checkBoxGallery","isChecked","inlineCheckBoxGallery","InlineCheckBox","data","inline","dialogGallery","Dialog","isDialogVisible","isDismissible","checkBoxListGallery","CheckBoxList","items","listBoxGallery","ListBox","enhanced","datePickerGallery","DatePicker","date","displayCurrentOption","isCurrentDateOffset","disableForceParse","disableShowOnFocus","disableHighlightToday","disallowFutureDateSelection","disallowPastDateSelection","isDisabled","startView","viewOptions","dateRangePickerGallery","DateRangePicker","dateTimePickerGallery","DateTimePicker","datePartsPickerGallery","DatePartsPicker","showYear","datePartsModel","month","day","year","textBoxGallery","colorPickerGallery","ColorPicker","numberBoxGallery","minimumValue","maximumValue","numericMinimumValue","toNumber","numericMaximumValue","numberRangeBoxGallery","NumberRangeBox","lower","upper","genderDropDownListGallery","GenderDropDownList","socialSecurityNumberBoxGallery","SocialSecurityNumberBox","timePickerGallery","TimePicker","hour","minute","ratingGallery","Rating","switchGallery","inlineSwitchGallery","InlineSwitch","isBold","currencyBoxGallery","CurrencyBox","emailBoxGallery","EmailBox","numberUpDownGallery","staticFormControlGallery","StaticFormControl","addressControlGallery","AddressControl","toggleGallery","trueText","falseText","btnSize","sizeOptions","progressTrackerGallery","ProgressTracker","subtitle","itemsWithPreAndPostHtmlGallery","ItemsWithPreAndPostHtml","preHtml","postHtml","slotName","urlLinkBoxGallery","UrlLinkBox","fullscreenGallery","Fullscreen","pageOnly","panelGallery","Panel","simulateValues","headerSecondaryActions","includes","iconCssClass","handler","alert","colors","Array","_","index","collapsibleValue","drawerValue","hasFullscreen","hasZoom","simulateOptions","simulateDrawer","simulateHeaderActions","simulateSubheaderLeft","simulateSubheaderRight","simulateFooterActions","simulateFooterSecondaryActions","simulateLargeBody","simulateHelp","isFullscreenPageOnly","personPickerGallery","PersonPicker","fileUploaderGallery","FileUploader","binaryFileTypeGuid","BinaryFiletype","Default","showDeleteButton","uploadAsTemporary","uploadButtonText","imageUploaderGallery","ImageUploader","slidingDateRangePickerGallery","SlidingDateRangePicker","rangeTypeOptions","rangeTypes","previewLocation","previewLocationOptions","definedValuePickerGallery","DefinedValuePicker","onsubmit","displayStyle","allowAdd","definedTypeGuid","DefinedType","PersonConnectionStatus","entityTypePickerGallery","EntityTypePicker","columnCount","includeGlobalOption","EntityType","Person","achievementTypePickerGallery","AchievementTypePicker","badgeComponentPickerGallery","BadgeComponentPicker","entityTypeGuid","sectionHeaderGallery","showSeparator","showDescription","showActionBar","showContent","sectionContainerGallery","SectionContainer","showContentToggle","categoryPickerGallery","CategoryPicker","entityType","_entityType$value","locationItemPickerGallery","LocationItemPicker","connectionRequestPickerGallery","ConnectionRequestPicker","copyButtonGallery","tooltip","buttonSize","entityTagListGallery","EntityTagList","_store$state$currentP","_store$state$currentP2","store","useStore","disabled","entityKey","state","currentPerson","idKey","followingGallery","Following","_store$state$currentP3","_store$state$currentP4","assessmentTypePickerGallery","AssessmentTypePicker","isInactiveIncluded","AssessmentType","Disc","assetStorageProviderPickerGallery","AssetStorageProviderPicker","binaryFileTypePickerGallery","BinaryFileTypePicker","campusPickerGallery","CampusPicker","forceVisible","includeInactive","campusStatusFilter","campusTypeFilter","campusStatusDefinedTypeGuid","CampusStatus","campusTypeDefinedTypeGuid","CampusType","scheduleBuilderGallery","ScheduleBuilder","binaryFilePickerGallery","BinaryFilePicker","binaryFileType","eventItemPickerGallery","EventItemPicker","dataViewPickerGallery","DataViewPicker","workflowTypePickerGallery","WorkflowTypePicker","includeInactiveItems","financialGatewayPickerGallery","FinancialGatewayPicker","showAllGatewayComponents","financialStatementTemplatePickerGallery","FinancialStatementTemplatePicker","fieldTypePickerGallery","FieldTypePicker","auditDetailGallery","AuditDetail","_store$state$currentP5","_store$state$currentP6","modalGallery","Modal","isOpen","componentPickerGallery","ComponentPicker","containerType","gradePickerGallery","GradePicker","useAbbreviation","useGuidAsValue","groupMemberPickerGallery","GroupMemberPicker","groupGuid","interactionChannelPickerGallery","InteractionChannelPicker","interactionComponentPickerGallery","InteractionComponentPicker","interactionChannelGuid","lavaCommandPickerGallery","LavaCommandPicker","remoteAuthsPickerGallery","RemoteAuthsPicker","stepProgramPickerGallery","StepProgramPicker","stepStatusPickerGallery","StepStatusPicker","stepProgramGuid","stepTypePickerGallery","StepTypePicker","streakTypePickerGallery","StreakTypePicker","badgePickerGallery","BadgePicker","notificationBoxGallery","NotificationBox","heading","details","onDismiss","alertType","AlertType","badgeListGallery","BadgeList","_store$state$currentP7","_store$state$currentP8","badgeTypes","badgeTypeGuids","b","basicTimePickerGallery","BasicTimePicker","birthdayPickerGallery","BirthdayPicker","countdownTimerGallery","CountdownTimer","seconds","setToSeconds","reset","electronicSignatureGallery","ElectronicSignature","signature","isDrawn","term","fieldTypeEditorGallery","FieldTypeEditor","readOnly","inlineRangeSliderGallery","InlineRangeSlider","step","min","max","showValue","javaScriptAnchorGallery","JavaScriptAnchor","onClick","keyValueListGallery","KeyValueList","limitValues","displayValueFirst","valueOptions","keyPlaceholder","valuePlaceholder","loadingGallery","Loading","isLoading","loadingIndicatorGallery","LoadingIndicator","numberUpDownGroupGallery","NumberUpDownGroup","prop1","prop2","prop3","label","panelWidgetGallery","PanelWidget","progressBarGallery","ProgressBar","RangeSlider","rockButtonGallery","BtnSize","ExtraSmall","Small","Large","typeOptions","BtnType","Primary","Danger","Warning","Success","Info","Link","btnType","Promise","res","setTimeout","autoLoading","autoDisable","isSquare","loadingText","rockLabelGallery","RockLabel","rockValidationGallery","RockValidation","errors","rangeSliderGallery","tabbedContentGallery","TabbedContent","list","transitionVerticalCollapseGallery","valueDetailListGallery","ValueDetailList","modelValue","textValue","htmlValue","codeEditorGallery","CodeEditor","themeItems","sort","a","localeCompare","modeItems","theme","mode","editorHeight","pagePickerGallery","PagePicker","showSelectCurrentPage","promptForPageRoute","groupPickerGallery","GroupPicker","limitToSchedulingEnabled","limitToRSVPEnabled","mergeTemplatePickerGallery","MergeTemplatePicker","ownershipOptions","MergeTemplateOwnership","Global","Personal","PersonalAndGlobal","ownership","metricCategoryPickerGallery","MetricCategoryPicker","metricItemPickerGallery","MetricItemPicker","registrationTemplatePickerGallery","RegistrationTemplatePicker","reportPickerGallery","ReportPicker","schedulePickerGallery","SchedulePicker","workflowActionTypePickerGallery","WorkflowActionTypePicker","dayOfWeekPickerGallery","DayOfWeekPicker","columns","monthDayPickerGallery","MonthDayPicker","monthYearPickerGallery","MonthYearPicker","cacheabilityPickerGallery","CacheabilityPicker","buttonGroupGallery","ButtonGroup","buttonOptions","sbtnType","ubtnType","intervalPickerGallery","IntervalPicker","geoPickerGallery","GeoPicker","toggleValue","drawingMode","contentDropDownPickerGallery","ContentDropDownPicker","innerLabel","showPopup","isFullscreen","onSelect","onClear","primaryButtonLabel","secondaryButtonLabel","showClearButton","wordCloudGallery","WordCloud","wordsText","colorsText","words","split","v","filter","length","animationDuration","angleCount","autoClear","fontName","minimumAngle","minimumFontSize","maximumAngle","maximumFontSize","wordPadding","eventCalendarPickerGallery","EventCalendarPicker","groupTypePickerGallery","GroupTypePicker","isSortedByName","locationAddressPickerGallery","LocationAddressPicker","locationPickerGallery","LocationPicker","locationListGallery","LocationList","locationType","parentLocation","showCityState","isAddressRequired","parentLocationGuid","ethnicityPickerGallery","EthnicityPicker","racePickerGallery","RacePicker","mediaElementPickerGallery","MediaElementPicker","account","folder","hideRefresh","hideAccountPicker","hideFolderPicker","hideMediaPicker","mergeFieldPickerGallery","MergeFieldPicker","additionalFields","categorizedValuePickerGallery","CategorizedValuePicker","definedType","PowerbiAccounts","reminderTypePickerGallery","ReminderTypePicker","groupRolePickerGallery","GroupRolePicker","modalAlertGallery","ModalAlert","types","ModalAlertType","Alert","Information","None","isShowing","message","contentChannelItemPickerGallery","ContentChannelItemPicker","personLinkGallery","PersonLink","placement","textAlign","placementOptions","personName","role","photoId","personId","popOverGallery","PopOver","triggerUpdate","show","rockLiteralGallery","RockLiteral","labelClass","content","useLabelSlot","registryEntryGallery","RegistryEntry","entry","groupTypeGroupPickerGallery","GroupTypeGroupPicker","groupType","glabel","controlGalleryComponents","reduce","newList","comp","detailBlockGallery","DetailBlock","headerActions","labels","footerActions","footerSecondaryActions","Group","isAuditHidden","isBadgesVisible","isDeleteVisible","isEditVisible","isFollowVisible","isSecurityHidden","isTagsVisible","templateGalleryComponents","_objectSpread","currentComponent","getComponentFromHash","_controlGalleryCompon","hashComponent","URL","document","hash","component","onMounted","window","addEventListener","onUnmounted","removeEventListener"],"mappings":"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"}