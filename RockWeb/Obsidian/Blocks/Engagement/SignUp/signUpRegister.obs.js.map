{"version":3,"file":"signUpRegister.obs.js","sources":["../../../src/Engagement/SignUp/SignUpRegister/registerIndividual.partial.obs","../../../src/Engagement/SignUp/SignUpRegister/registerAnonymous.partial.obs","../../../src/Engagement/SignUp/SignUpRegister/listUnmetRequirements.partial.obs","../../../src/Engagement/SignUp/SignUpRegister/registerFamily.partial.obs","../../../src/Engagement/SignUp/SignUpRegister/registerGroup.partial.obs","../../../src/Engagement/SignUp/signUpRegister.obs"],"sourcesContent":["<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <h4>{{ title }}</h4>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <TextBox v-model=\"firstName\"\r\n                     label=\"First Name\"\r\n                     rules=\"required\"\r\n                     :disabled=\"disabled\" />\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            <TextBox v-model=\"lastName\"\r\n                     label=\"Last Name\"\r\n                     rules=\"required\"\r\n                     :disabled=\"disabled\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <EmailBox v-model=\"email\"\r\n                      label=\"Email\"\r\n                      :rules=\"emailRules\"\r\n                      :disabled=\"disabled\" />\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            <PhoneNumberBox v-model=\"mobilePhoneNumber\"\r\n                            v-model:countryCode=\"mobilePhoneCountryCode\"\r\n                            label=\"Mobile Phone\"\r\n                            :rules=\"mobilePhoneRules\"\r\n                            :disabled=\"disabled\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row -mt-form-group\">\r\n        <div class=\"col-md-6 col-md-offset-6\">\r\n            <CheckBox v-model=\"registrant.allowSms\"\r\n                      label=\"\"\r\n                      text=\"Allow SMS Messages\"\r\n                      :disabled=\"disabled || !mobilePhoneNumber\" />\r\n        </div>\r\n    </div>\r\n\r\n    <hr>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, PropType } from \"vue\";\r\n    import CheckBox from \"@Obsidian/Controls/checkBox\";\r\n    import EmailBox from \"@Obsidian/Controls/emailBox\";\r\n    import PhoneNumberBox from \"@Obsidian/Controls/phoneNumberBox.obs\";\r\n    import TextBox from \"@Obsidian/Controls/textBox\";\r\n    import { SignUpRegistrantBag } from \"@Obsidian/ViewModels/Blocks/Engagement/SignUp/SignUpRegister/signUpRegistrantBag\";\r\n\r\n    const props = defineProps({\r\n        registrant: {\r\n            type: Object as PropType<SignUpRegistrantBag>,\r\n            required: true\r\n        },\r\n\r\n        title: {\r\n            type: String as PropType<string>,\r\n            required: true\r\n        },\r\n\r\n        requireEmail: {\r\n            type: Boolean as PropType<boolean>,\r\n            required: true\r\n        },\r\n\r\n        requireMobilePhone: {\r\n            type: Boolean as PropType<boolean>,\r\n            required: true\r\n        },\r\n\r\n        disabled: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        }\r\n    });\r\n\r\n    // #region Computed Values\r\n\r\n    const firstName = computed<string>({\r\n        get() {\r\n            return props.registrant.firstName ?? \"\";\r\n        },\r\n        set(newValue: string) {\r\n            props.registrant.firstName = newValue;\r\n        }\r\n    });\r\n\r\n    const lastName = computed<string>({\r\n        get() {\r\n            return props.registrant.lastName ?? \"\";\r\n        },\r\n        set(newValue: string) {\r\n            props.registrant.lastName = newValue;\r\n        }\r\n    });\r\n\r\n    const email = computed<string>({\r\n        get() {\r\n            return props.registrant.email ?? \"\";\r\n        },\r\n        set(newValue: string) {\r\n            props.registrant.email = newValue;\r\n        }\r\n    });\r\n\r\n    const emailRules = computed((): string => {\r\n        return props.requireEmail ? \"required\" : \"\";\r\n    });\r\n\r\n    const mobilePhoneNumber = computed<string | undefined>({\r\n        get() {\r\n            return props.registrant.mobilePhoneNumber ?? undefined;\r\n        },\r\n        set(newValue: string | undefined) {\r\n            props.registrant.mobilePhoneNumber = newValue;\r\n            props.registrant.allowSms = !!newValue;\r\n        }\r\n    });\r\n\r\n    const mobilePhoneCountryCode = computed<string | undefined>({\r\n        get() {\r\n            return props.registrant.mobilePhoneCountryCode ?? undefined;\r\n        },\r\n        set(newValue: string | undefined) {\r\n            props.registrant.mobilePhoneCountryCode = newValue;\r\n        }\r\n    });\r\n\r\n    const mobilePhoneRules = computed((): string => {\r\n        return props.requireMobilePhone ? \"required\" : \"\";\r\n    });\r\n\r\n    // #endregion\r\n</script>","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <div v-if=\"registrarUnmetRequirements.length\" class=\"form-group\">\r\n        We are unable to register you for this project as you don't currently meet the requirement(s) below:\r\n        <ul>\r\n            <li v-for=\"(requirement, i) in registrarUnmetRequirements\" :key=\"`requirement-{i}`\">\r\n                {{ requirement }}\r\n            </li>\r\n        </ul>\r\n    </div>\r\n\r\n    <RegisterIndividual v-else v-for=\"(registrant, i) in registrants\" :key=\"`registrant-{i}`\"\r\n                        :registrant=\"registrant\"\r\n                        :title=\"`Registrant #${i + 1}`\"\r\n                        :requireEmail=\"requireEmail\"\r\n                        :requireMobilePhone=\"requireMobilePhone\"\r\n                        :disabled=\"isRegistering\"></RegisterIndividual>\r\n\r\n    <div v-if=\"allowAddRegistrants\" class=\"form-group\">\r\n        <RockButton type=\"button\" @click=\"onAddClick\" class=\"btn-square mr-1\">\r\n            <i class=\"fa fa-plus\"></i>\r\n        </RockButton>\r\n        Add Additional Individual\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, PropType } from \"vue\";\r\n    import RegisterIndividual from \"./registerIndividual.partial.obs\";\r\n    import RockButton from \"@Obsidian/Controls/rockButton\";\r\n    import { SignUpRegistrantBag } from \"@Obsidian/ViewModels/Blocks/Engagement/SignUp/SignUpRegister/signUpRegistrantBag\";\r\n\r\n    const props = defineProps({\r\n        isRegistering: {\r\n            type: Boolean as PropType<boolean>,\r\n            required: true\r\n        },\r\n\r\n        registrants: {\r\n            type: Array as PropType<SignUpRegistrantBag[]>,\r\n            required: true\r\n        },\r\n\r\n        projectHasRequiredGroupRequirements: {\r\n            type: Boolean as PropType<boolean>,\r\n            required: true\r\n        },\r\n\r\n        requireEmail: {\r\n            type: Boolean as PropType<boolean>,\r\n            required: true\r\n        },\r\n\r\n        requireMobilePhone: {\r\n            type: Boolean as PropType<boolean>,\r\n            required: true\r\n        }\r\n    });\r\n\r\n    // #region Computed Values\r\n\r\n    const registrarUnmetRequirements = computed((): string[] => {\r\n        return props.registrants\r\n            .find((r: SignUpRegistrantBag) => r?.isRegistrar)\r\n            ?.unmetGroupRequirements ?? [];\r\n    });\r\n\r\n    const allowAddRegistrants = computed((): boolean => {\r\n        return !props.projectHasRequiredGroupRequirements && !props.isRegistering;\r\n    });\r\n\r\n    // #endregion\r\n\r\n    // #region Functions\r\n\r\n    function ensureAtLeastOneRegistrant(): void {\r\n        if (!props.registrants.length) {\r\n            addRegistrant();\r\n        }\r\n    }\r\n\r\n    function addRegistrant(): void {\r\n        props.registrants.push({\r\n            allowSms: false,\r\n            communicationPreference: 0,\r\n            email: null,\r\n            firstName: null,\r\n            fullName: null,\r\n            isChild: false,\r\n            isRegistrar: true,\r\n            lastName: null,\r\n            mobilePhoneCountryCode: null,\r\n            mobilePhoneNumber: null,\r\n            mobilePhoneNumberFormatted: null,\r\n            personIdKey: null,\r\n            unmetGroupRequirements: null,\r\n            willAttend: true\r\n        });\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Event Handlers\r\n\r\n    function onAddClick(): void {\r\n        addRegistrant();\r\n    }\r\n\r\n    // #endregion\r\n\r\n    ensureAtLeastOneRegistrant();\r\n</script>","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <div v-if=\"Object.keys(registrantsWithUnmetRequirements).length\" class=\"form-group\">\r\n        <RockLabel>{{ label }}</RockLabel>\r\n        <div v-for=\"r in registrantsWithUnmetRequirements\" :key=\"r.key\">\r\n            {{ r.fullName }} - {{ r.unmetRequirements }}\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, PropType } from \"vue\";\r\n    import RockLabel from \"@Obsidian/Controls/rockLabel\";\r\n    import { SignUpRegistrantBag } from \"@Obsidian/ViewModels/Blocks/Engagement/SignUp/SignUpRegister/signUpRegistrantBag\";\r\n\r\n    const props = defineProps({\r\n        registrants: {\r\n            type: Array as PropType<SignUpRegistrantBag[]>,\r\n            required: true\r\n        },\r\n\r\n        groupTerm: {\r\n            type: String as PropType<string>,\r\n            default: \"group\"\r\n        }\r\n    });\r\n\r\n    // #region Computed Values\r\n\r\n    const label = computed((): string => {\r\n        return `The following ${props.groupTerm || \"group\"} member(s) do not meet the project requirements`;\r\n    });\r\n\r\n    const registrantsWithUnmetRequirements = computed((): ({ key: string, fullName: string, unmetRequirements: string }[]) => {\r\n        return props.registrants\r\n            ?.filter((r: SignUpRegistrantBag) =>\r\n                r?.personIdKey\r\n                && r?.fullName\r\n                && r?.unmetGroupRequirements?.length)\r\n            .map((r: SignUpRegistrantBag) => ({\r\n                // These property values will never be null | undefined here, but TS is only happy if we use the nullish coalescing operator.\r\n                key: r.personIdKey ?? \"\",\r\n                fullName: r.fullName ?? \"\",\r\n                unmetRequirements: r.unmetGroupRequirements?.join(\", \") ?? \"\"\r\n            }));\r\n    });\r\n\r\n    // #endregion\r\n</script>","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <NotificationBox v-if=\"!registrar\" alertType=\"warning\">\r\n        {{ unableToRegisterMsgPrefix }}.\r\n    </NotificationBox>\r\n\r\n    <div v-else>\r\n        <h3 v-if=\"props.title\">{{ props.title }}</h3>\r\n\r\n        <div v-if=\"showRegistrarContactSummary\" class=\"form-group\">\r\n            <div v-if=\"registrar?.mobilePhoneNumberFormatted\">\r\n                Mobile Phone: {{ registrar.mobilePhoneNumberFormatted }}\r\n            </div>\r\n\r\n            <div v-if=\"registrar?.email\">\r\n                Email: {{ registrar?.email }}\r\n            </div>\r\n        </div>\r\n\r\n        <div v-if=\"registrarUnmetRequirements.length\" class=\"form-group\">\r\n            {{ unableToRegisterMsgPrefix }} as you don't currently meet the requirement(s) below:\r\n            <ul>\r\n                <li v-for=\"(requirement, i) in registrarUnmetRequirements\" :key=\"`requirement-{i}`\">\r\n                    {{ requirement }}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n        <div v-else class=\"form-group\">\r\n            <CheckBox v-model=\"registrar.willAttend\"\r\n                      label=\"\"\r\n                      text=\"I will attend\"\r\n                      :disabled=\"isRegistering\" />\r\n        </div>\r\n\r\n        <div v-if=\"anyEligibleRegistrants && props.communicationPreferenceItems.length\">\r\n            <RadioButtonList v-model=\"registrarCommunicationPreference\"\r\n                             label=\"Please send reminder using\"\r\n                             :items=\"props.communicationPreferenceItems\"\r\n                             :horizontal=\"true\"\r\n                             :disabled=\"isRegistering\" />\r\n\r\n            <div v-if=\"communicationPreferenceIsSms\">\r\n                <PhoneNumberBox v-model=\"registrarMobilePhoneNumber\"\r\n                                v-model:countryCode=\"registrarMobilePhoneCountryCode\"\r\n                                label=\"Mobile Phone\"\r\n                                class=\"input-max-w-xl\"\r\n                                :disabled=\"isRegistering\" />\r\n                <div class=\"form-group\">\r\n                    The number provided will be updated on your personal profile with permissions to allow us to send SMS messages.\r\n                </div>\r\n            </div>\r\n\r\n            <div v-if=\"communicationPreferenceIsEmail\">\r\n                <EmailBox v-model=\"registrarEmail\"\r\n                          label=\"Email\"\r\n                          class=\"input-max-w-xl\"\r\n                          :disabled=\"isRegistering\" />\r\n                <div class=\"form-group\">\r\n                    The email provided will be updated on your personal profile.\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <CheckBoxList v-if=\"eligibleFamilyMembers.length\"\r\n                      v-model=\"registeredFamilyMembers\"\r\n                      :label=\"registerFamilyMembersLabel\"\r\n                      :items=\"eligibleFamilyMembers\"\r\n                      :disabled=\"isRegistering\"\r\n                      @update:modelValue=\"onRegisteredFamilyMembersChanged\" />\r\n\r\n        <ListUnmetRequirements v-if=\"ineligibleFamilyMembers.length\" :registrants=\"ineligibleFamilyMembers\" groupTerm=\"family\" />\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, PropType } from \"vue\";\r\n    import ListUnmetRequirements from \"./listUnmetRequirements.partial.obs\";\r\n    import NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\n    import CheckBox from \"@Obsidian/Controls/checkBox\";\r\n    import CheckBoxList from \"@Obsidian/Controls/checkBoxList\";\r\n    import EmailBox from \"@Obsidian/Controls/emailBox\";\r\n    import PhoneNumberBox from \"@Obsidian/Controls/phoneNumberBox.obs\";\r\n    import RadioButtonList from \"@Obsidian/Controls/radioButtonList\";\r\n    import { SignUpRegistrantBag } from \"@Obsidian/ViewModels/Blocks/Engagement/SignUp/SignUpRegister/signUpRegistrantBag\";\r\n    import { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\n\r\n    const props = defineProps({\r\n        isRegistering: {\r\n            type: Boolean as PropType<boolean>,\r\n            required: true\r\n        },\r\n\r\n        registrants: {\r\n            type: Array as PropType<SignUpRegistrantBag[]>,\r\n            required: true\r\n        },\r\n\r\n        anyEligibleRegistrants: {\r\n            type: Boolean as PropType<boolean>,\r\n            required: true\r\n        },\r\n\r\n        communicationPreferenceItems: {\r\n            type: Array as PropType<ListItemBag[]>,\r\n            required: true\r\n        },\r\n\r\n        title: {\r\n            type: String as PropType<string | null | undefined>,\r\n            default: \"\"\r\n        }\r\n    });\r\n\r\n    const unableToRegisterMsgPrefix = \"We are unable to register you for this project\";\r\n\r\n    // #region Computed Values\r\n\r\n    const registrar = computed((): SignUpRegistrantBag | null | undefined => {\r\n        return props.registrants?.find((r: SignUpRegistrantBag) => r.isRegistrar);\r\n    });\r\n\r\n    const showRegistrarContactSummary = computed((): boolean => {\r\n        return !!(registrar.value?.mobilePhoneNumberFormatted || registrar.value?.email);\r\n    });\r\n\r\n    const registrarUnmetRequirements = computed((): string[] => {\r\n        return registrar.value?.unmetGroupRequirements ?? [];\r\n    });\r\n\r\n    const registrarCommunicationPreference = computed<string | undefined>({\r\n        get() {\r\n            return registrar.value?.communicationPreference?.toString() ?? undefined;\r\n        },\r\n        set(newValue: string | undefined) {\r\n            if (registrar.value && newValue) {\r\n                if (newValue) {\r\n                    registrar.value.communicationPreference = +newValue;\r\n                }\r\n                else {\r\n                    registrar.value.communicationPreference = 0;\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    const communicationPreferenceIsSms = computed((): boolean => {\r\n        return registrarCommunicationPreference.value == \"2\";\r\n    });\r\n\r\n    const communicationPreferenceIsEmail = computed((): boolean => {\r\n        return registrarCommunicationPreference.value == \"1\";\r\n    });\r\n\r\n    const registrarMobilePhoneNumber = computed<string | undefined>({\r\n        get() {\r\n            return registrar.value?.mobilePhoneNumber ?? undefined;\r\n        },\r\n        set(newValue: string | undefined) {\r\n            if (registrar.value) {\r\n                registrar.value.mobilePhoneNumber = newValue;\r\n                registrar.value.allowSms = !!newValue;\r\n            }\r\n        }\r\n    });\r\n\r\n    const registrarMobilePhoneCountryCode = computed<string | undefined>({\r\n        get() {\r\n            return registrar.value?.mobilePhoneCountryCode ?? undefined;\r\n        },\r\n        set(newValue: string | undefined) {\r\n            if (registrar.value) {\r\n                registrar.value.mobilePhoneCountryCode = newValue;\r\n            }\r\n        }\r\n    });\r\n\r\n    const registrarEmail = computed<string>({\r\n        get() {\r\n            return registrar.value?.email ?? \"\";\r\n        },\r\n        set(newValue: string) {\r\n            if (registrar.value) {\r\n                registrar.value.email = newValue;\r\n            }\r\n        }\r\n    });\r\n\r\n    const nonRegistrarRegistrants = computed((): SignUpRegistrantBag[] => {\r\n        return props.registrants\r\n            ?.filter((r: SignUpRegistrantBag) =>\r\n                r?.isRegistrar === false\r\n                && r?.personIdKey\r\n                && r?.fullName\r\n            ) ?? [];\r\n    });\r\n\r\n    const eligibleFamilyMembers = computed((): ListItemBag[] => {\r\n        return nonRegistrarRegistrants.value\r\n            .filter((r: SignUpRegistrantBag) => !r.unmetGroupRequirements?.length)\r\n            .map((r: SignUpRegistrantBag) => ({\r\n                value: r.personIdKey,\r\n                text: r.fullName\r\n            }));\r\n    });\r\n\r\n    const registeredFamilyMembers = computed<string[]>({\r\n        get() {\r\n            return nonRegistrarRegistrants.value\r\n                .filter((r: SignUpRegistrantBag) => r.willAttend)\r\n                // r.personIdKey will never be null | undefined here, but TS is only happy if we use the nullish coalescing operator.\r\n                .map((r: SignUpRegistrantBag) => r.personIdKey ?? \"\");\r\n        },\r\n        set(newValue: string[]) {\r\n            nonRegistrarRegistrants.value\r\n                .forEach((r: SignUpRegistrantBag) => {\r\n                    r.willAttend = newValue.some((personIdKey: string) => personIdKey === r.personIdKey);\r\n                });\r\n        }\r\n    });\r\n\r\n    const ineligibleFamilyMembers = computed((): SignUpRegistrantBag[] => {\r\n        return nonRegistrarRegistrants.value\r\n            .filter((r: SignUpRegistrantBag) => r.unmetGroupRequirements?.length);\r\n    });\r\n\r\n    const registerFamilyMembersLabel = computed((): string => {\r\n        const registrarIsEligibleAndWillAttend = !registrarUnmetRequirements.value.length && registrar.value?.willAttend;\r\n        return `Please ${registrarIsEligibleAndWillAttend ? \"also \" : \"\"}sign-up the following family members`;\r\n    });\r\n\r\n    // #endregion\r\n\r\n    // #region Event Handlers\r\n\r\n    /**\r\n     * Synchronizes each family member's `SignUpRegistrantBag.willAttend` value when the control emits changes.\r\n     */\r\n    function onRegisteredFamilyMembersChanged(): void {\r\n        props.registrants\r\n            ?.filter((r: SignUpRegistrantBag) => r?.isRegistrar === false)\r\n            .forEach((r: SignUpRegistrantBag) => {\r\n                r.willAttend = registeredFamilyMembers.value.some((personIdKey: string) => personIdKey === r.personIdKey);\r\n            });\r\n    }\r\n\r\n    // #endregion\r\n</script>\r\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <NotificationBox v-if=\"!identifiableGroupMembers.length\" alertType=\"warning\">\r\n        No group members found to register for this project.\r\n    </NotificationBox>\r\n\r\n    <div v-else>\r\n        <h3 v-if=\"props.title\">{{ props.title }}</h3>\r\n\r\n        <CheckBoxList v-if=\"eligibleGroupMembers.length\"\r\n                      v-model=\"registeredGroupMembers\"\r\n                      label=\"Group Members\"\r\n                      :items=\"eligibleGroupMembers\"\r\n                      :disabled=\"isRegistering\"\r\n                      @update:modelValue=\"onRegisteredGroupMembersChanged\" />\r\n\r\n        <ListUnmetRequirements v-if=\"ineligibleGroupMembers.length\" :registrants=\"ineligibleGroupMembers\" />\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, PropType } from \"vue\";\r\n    import ListUnmetRequirements from \"./listUnmetRequirements.partial.obs\";\r\n    import NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\n    import CheckBoxList from \"@Obsidian/Controls/checkBoxList\";\r\n    import { SignUpRegistrantBag } from \"@Obsidian/ViewModels/Blocks/Engagement/SignUp/SignUpRegister/signUpRegistrantBag\";\r\n    import { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\n\r\n    const props = defineProps({\r\n        isRegistering: {\r\n            type: Boolean as PropType<boolean>,\r\n            required: true\r\n        },\r\n\r\n        registrants: {\r\n            type: Array as PropType<SignUpRegistrantBag[]>,\r\n            required: true\r\n        },\r\n\r\n        title: {\r\n            type: String as PropType<string | null | undefined>,\r\n            default: \"\"\r\n        }\r\n    });\r\n\r\n    // #region Computed Values\r\n\r\n    const identifiableGroupMembers = computed((): SignUpRegistrantBag[] => {\r\n        return props.registrants\r\n            ?.filter((r: SignUpRegistrantBag) =>\r\n                r?.personIdKey\r\n                && r?.fullName\r\n            ) ?? [];\r\n    });\r\n\r\n    const eligibleGroupMembers = computed((): ListItemBag[] => {\r\n        return identifiableGroupMembers.value\r\n            .filter((r: SignUpRegistrantBag) => !r.unmetGroupRequirements?.length)\r\n            .map((r: SignUpRegistrantBag) => ({\r\n                value: r.personIdKey,\r\n                text: r.fullName\r\n            }));\r\n    });\r\n\r\n    const registeredGroupMembers = computed<string[]>({\r\n        get() {\r\n            return identifiableGroupMembers.value\r\n                .filter((r: SignUpRegistrantBag) => r.willAttend)\r\n                // r.personIdKey will never be null | undefined here, but TS is only happy if we use the nullish coalescing operator.\r\n                .map((r: SignUpRegistrantBag) => r.personIdKey ?? \"\");\r\n        },\r\n        set(newValue: string[]) {\r\n            identifiableGroupMembers.value\r\n                .forEach((r: SignUpRegistrantBag) => {\r\n                    r.willAttend = newValue.some((personIdKey: string) => personIdKey === r.personIdKey);\r\n                });\r\n        }\r\n    });\r\n\r\n    const ineligibleGroupMembers = computed((): SignUpRegistrantBag[] => {\r\n        return identifiableGroupMembers.value\r\n            .filter((r: SignUpRegistrantBag) => r.unmetGroupRequirements?.length);\r\n    });\r\n\r\n    // #endregion\r\n\r\n    // #region Event Handlers\r\n\r\n    /**\r\n     * Synchronizes each group member's `SignUpRegistrantBag.willAttend` value when the control emits changes.\r\n     */\r\n    function onRegisteredGroupMembersChanged(): void {\r\n        props.registrants\r\n            ?.filter((r: SignUpRegistrantBag) => r?.isRegistrar === false)\r\n            .forEach((r: SignUpRegistrantBag) => {\r\n                r.willAttend = registeredGroupMembers.value.some((personIdKey: string) => personIdKey === r.personIdKey);\r\n            });\r\n    }\r\n\r\n    // #endregion\r\n</script>","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <NotificationBox v-if=\"blockErrorMessage\" :alertType=\"AlertType.Warning\">\r\n        {{ blockErrorMessage }}\r\n    </NotificationBox>\r\n\r\n    <NotificationBox v-if=\"errorMessage\" :alertType=\"AlertType.Warning\">\r\n        {{ errorMessage }}\r\n    </NotificationBox>\r\n\r\n    <NotificationBox v-if=\"showRegistrationSuccess\" :alertType=\"AlertType.Success\">\r\n        <div v-if=\"registeredRegistrantNames?.length\">\r\n            <p>Successfully registered individual(s):</p>\r\n            <ul>\r\n                <li v-for=\"(name, i) in registeredRegistrantNames\" :key=\"`registered-{i}`\">\r\n                    {{ name }}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <div v-if=\"unregisteredRegistrantNames?.length\">\r\n            <p>Successfully unregistered individual(s):</p>\r\n            <ul>\r\n                <li v-for=\"(name, i) in unregisteredRegistrantNames\" :key=\"`unregistered-{i}`\">\r\n                    {{ name }}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </NotificationBox>\r\n\r\n    <NotificationBox v-if=\"showRegistrationWarning\" :alertType=\"AlertType.Warning\">\r\n        <div v-if=\"registrationWarning\">\r\n            <p>\r\n                {{ registrationWarning }}\r\n            </p>\r\n        </div>\r\n        <div v-if=\"unsuccessfulRegistrantNames?.length\">\r\n            <p>Unable to register individual(s):</p>\r\n            <ul>\r\n                <li v-for=\"(name, i) in unsuccessfulRegistrantNames\" :key=\"`unsuccessful-{i}`\">\r\n                    {{ name }}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </NotificationBox>\r\n\r\n    <div v-if=\"showRegistrationForm\">\r\n        <RockForm @submit=\"onSubmit\">\r\n\r\n            <RegisterAnonymous v-if=\"registerMode == RegisterMode.Anonymous\"\r\n                               :isRegistering=\"isRegistering\"\r\n                               :registrants=\"registrants\"\r\n                               :projectHasRequiredGroupRequirements=\"config.projectHasRequiredGroupRequirements\"\r\n                               :requireEmail=\"config.requireEmail\"\r\n                               :requireMobilePhone=\"config.requireMobilePhone\" />\r\n\r\n            <RegisterFamily v-if=\"registerMode == RegisterMode.Family\"\r\n                            :isRegistering=\"isRegistering\"\r\n                            :registrants=\"registrants\"\r\n                            :anyEligibleRegistrants=\"anyEligibleRegistrants\"\r\n                            :communicationPreferenceItems=\"communicationPreferenceItems\"\r\n                            :title=\"config.title\" />\r\n\r\n            <RegisterGroup v-if=\"registerMode == RegisterMode.Group\"\r\n                           :isRegistering=\"isRegistering\"\r\n                           :registrants=\"registrants\"\r\n                           :title=\"config.title\" />\r\n\r\n            <Loading :isLoading=\"isRegistering\">\r\n                <div v-if=\"anyEligibleRegistrants\" class=\"actions\">\r\n                    <RockButton type=\"submit\" :btnType=\"BtnType.Primary\" :disabled=\"isRegistering\">{{ submitButtonText }}</RockButton>\r\n                </div>\r\n            </Loading>\r\n        </RockForm>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, ref } from \"vue\";\r\n    import RegisterAnonymous from \"./SignUpRegister/registerAnonymous.partial.obs\";\r\n    import RegisterFamily from \"./SignUpRegister/registerFamily.partial.obs\";\r\n    import RegisterGroup from \"./SignUpRegister/registerGroup.partial.obs\";\r\n    import NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\n    import Loading from \"@Obsidian/Controls/loading\";\r\n    import RockButton from \"@Obsidian/Controls/rockButton\";\r\n    import RockForm from \"@Obsidian/Controls/rockForm\";\r\n    import { RegisterMode } from \"@Obsidian/Enums/Blocks/Engagement/SignUp/registerMode\";\r\n    import { AlertType } from \"@Obsidian/Enums/Controls/alertType\";\r\n    import { BtnType } from \"@Obsidian/Enums/Controls/btnType\";\r\n    import { HttpResult } from \"@Obsidian/Types/Utility/http\";\r\n    import { onConfigurationValuesChanged, useConfigurationValues, useInvokeBlockAction, useReloadBlock } from \"@Obsidian/Utility/block\";\r\n    import { SignUpRegisterInitializationBox } from \"@Obsidian/ViewModels/Blocks/Engagement/SignUp/SignUpRegister/signUpRegisterInitializationBox\";\r\n    import { SignUpRegisterRequestBag } from \"@Obsidian/ViewModels/Blocks/Engagement/SignUp/SignUpRegister/signUpRegisterRequestBag\";\r\n    import { SignUpRegisterResponseBag } from \"@Obsidian/ViewModels/Blocks/Engagement/SignUp/SignUpRegister/signUpRegisterResponseBag\";\r\n    import { SignUpRegistrantBag } from \"@Obsidian/ViewModels/Blocks/Engagement/SignUp/SignUpRegister/signUpRegistrantBag\";\r\n    import { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\n\r\n    const config = useConfigurationValues<SignUpRegisterInitializationBox>();\r\n    const invokeBlockAction = useInvokeBlockAction();\r\n    const reloadBlock = useReloadBlock();\r\n\r\n    // #region Values\r\n\r\n    const registerMode = ref<RegisterMode>(config.mode ?? RegisterMode.Anonymous);\r\n    const communicationPreferenceItems = ref<ListItemBag[]>(config.communicationPreferenceItems ?? []);\r\n    const registrants = ref<SignUpRegistrantBag[]>(config.registrants ?? []);\r\n\r\n    const isRegistering = ref(false);\r\n    const errorMessage = ref(\"\");\r\n\r\n    const registrationWarning = ref(\"\");\r\n    const registeredRegistrantNames = ref<string[]>([]);\r\n    const unregisteredRegistrantNames = ref<string[]>([]);\r\n    const unsuccessfulRegistrantNames = ref<string[]>([]);\r\n\r\n    // We'll set this value on initial load + whenever a registration attempt is succesful.\r\n    const submitButtonText = ref(getSubmitButtonText(config.registrants));\r\n\r\n    // #endregion\r\n\r\n    // #region Computed Values\r\n\r\n    const blockErrorMessage = computed((): string | undefined | null => {\r\n        return config.errorMessage;\r\n    });\r\n\r\n    const anyEligibleRegistrants = computed((): boolean => {\r\n        return registrants.value.some((r: SignUpRegistrantBag) => r && !r.unmetGroupRequirements?.length);\r\n    });\r\n\r\n    const showRegistrationSuccess = computed((): boolean => {\r\n        return !!(registeredRegistrantNames.value?.length || unregisteredRegistrantNames.value?.length);\r\n    });\r\n\r\n    const showRegistrationWarning = computed((): boolean => {\r\n        return !!(unsuccessfulRegistrantNames.value?.length || registrationWarning.value?.length);\r\n    });\r\n\r\n    const showRegistrationForm = computed((): boolean => {\r\n        if (blockErrorMessage.value) {\r\n            return false;\r\n        }\r\n\r\n        if (showRegistrationSuccess.value) {\r\n            // If registration was successful, only re-show the form if there was also a registration warning.\r\n            return showRegistrationWarning.value;\r\n        }\r\n\r\n        return true;\r\n    });\r\n\r\n    // #endregion\r\n\r\n    // #region Functions\r\n\r\n    /**\r\n     * Gets the text to use for the submit button:\r\n     * \"Register\" if there are not any registrants who were already registered.\r\n     * \"Update Registration\" if there are any registrants who were already registered.\r\n     *\r\n     * @param registrants The array of registrants to consider.\r\n     */\r\n    function getSubmitButtonText(registrants: SignUpRegistrantBag[] | null | undefined): string {\r\n        return registrants?.some((r: SignUpRegistrantBag) => r?.willAttend && r?.personIdKey)\r\n            ? \"Update Registration\"\r\n            : \"Register\";\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Event Handlers\r\n\r\n    /**\r\n     * Handles the form submission.\r\n     */\r\n    async function onSubmit(): Promise<void> {\r\n        isRegistering.value = true;\r\n        errorMessage.value = \"\";\r\n\r\n        registrationWarning.value = \"\";\r\n        registeredRegistrantNames.value = [];\r\n        unregisteredRegistrantNames.value = [];\r\n        unsuccessfulRegistrantNames.value = [];\r\n\r\n        const bag: SignUpRegisterRequestBag = {\r\n            registrants: registrants.value\r\n        };\r\n\r\n        const result: HttpResult<SignUpRegisterResponseBag> = await invokeBlockAction(\"Register\", { bag });\r\n        isRegistering.value = false;\r\n\r\n        if (!result.isSuccess) {\r\n            errorMessage.value = result.errorMessage ?? \"Unknown error when trying to register for this project.\";\r\n            return;\r\n        }\r\n\r\n        registrationWarning.value = result.data?.warningMessage ?? \"\";\r\n        registeredRegistrantNames.value = result.data?.registeredRegistrantNames ?? [];\r\n        unregisteredRegistrantNames.value = result.data?.unregisteredRegistrantNames ?? [];\r\n        unsuccessfulRegistrantNames.value = result.data?.unsuccessfulRegistrantNames ?? [];\r\n\r\n        // Only update this value if the registration attempt was successful.\r\n        submitButtonText.value = getSubmitButtonText(registrants.value);\r\n    }\r\n\r\n    // #endregion\r\n\r\n    onConfigurationValuesChanged(reloadBlock);\r\n</script>\r\n"],"names":["firstName","computed","get","_props$registrant$fir","props","registrant","set","newValue","lastName","_props$registrant$las","email","_props$registrant$ema","emailRules","requireEmail","mobilePhoneNumber","_props$registrant$mob","undefined","allowSms","mobilePhoneCountryCode","_props$registrant$mob2","mobilePhoneRules","requireMobilePhone","registrarUnmetRequirements","_props$registrants$fi","_props$registrants$fi2","registrants","find","r","isRegistrar","unmetGroupRequirements","allowAddRegistrants","projectHasRequiredGroupRequirements","isRegistering","ensureAtLeastOneRegistrant","length","addRegistrant","push","communicationPreference","fullName","isChild","mobilePhoneNumberFormatted","personIdKey","willAttend","onAddClick","label","concat","groupTerm","registrantsWithUnmetRequirements","_props$registrants","filter","_r$unmetGroupRequirem","map","_r$personIdKey","_r$fullName","_r$unmetGroupRequirem2","_r$unmetGroupRequirem3","key","unmetRequirements","join","unableToRegisterMsgPrefix","registrar","showRegistrarContactSummary","_registrar$value","_registrar$value2","value","_registrar$value$unme","_registrar$value3","registrarCommunicationPreference","_registrar$value$comm","_registrar$value4","_registrar$value4$com","toString","communicationPreferenceIsSms","communicationPreferenceIsEmail","registrarMobilePhoneNumber","_registrar$value$mobi","_registrar$value5","registrarMobilePhoneCountryCode","_registrar$value$mobi2","_registrar$value6","registrarEmail","_registrar$value$emai","_registrar$value7","nonRegistrarRegistrants","_props$registrants2","eligibleFamilyMembers","text","registeredFamilyMembers","forEach","some","ineligibleFamilyMembers","registerFamilyMembersLabel","_registrar$value8","registrarIsEligibleAndWillAttend","onRegisteredFamilyMembersChanged","_props$registrants3","identifiableGroupMembers","eligibleGroupMembers","registeredGroupMembers","ineligibleGroupMembers","onRegisteredGroupMembersChanged","config","useConfigurationValues","invokeBlockAction","useInvokeBlockAction","reloadBlock","useReloadBlock","registerMode","ref","_config$mode","mode","RegisterMode","Anonymous","communicationPreferenceItems","_config$communication","_config$registrants","errorMessage","registrationWarning","registeredRegistrantNames","unregisteredRegistrantNames","unsuccessfulRegistrantNames","submitButtonText","getSubmitButtonText","blockErrorMessage","anyEligibleRegistrants","showRegistrationSuccess","_registeredRegistrant","_unregisteredRegistra","showRegistrationWarning","_unsuccessfulRegistra","_registrationWarning$","showRegistrationForm","onSubmit","_onSubmit","apply","arguments","_asyncToGenerator","_result$data$warningM","_result$data","_result$data$register","_result$data2","_result$data$unregist","_result$data3","_result$data$unsucces","_result$data4","bag","result","isSuccess","_result$errorMessage","data","warningMessage","onConfigurationValuesChanged"],"mappings":"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"}