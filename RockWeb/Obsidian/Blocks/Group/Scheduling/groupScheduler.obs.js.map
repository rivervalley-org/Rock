{"version":3,"file":"groupScheduler.obs.js","sources":["../../../src/Group/Scheduling/GroupScheduler/cloneSchedules.partial.obs","../../../src/Group/Scheduling/GroupScheduler/types.partial.ts","../../../src/Group/Scheduling/GroupScheduler/progressBar.partial.obs","../../../../Rock.JavaScript.Obsidian/node_modules/style-inject/dist/style-inject.es.js","../../../src/Group/Scheduling/GroupScheduler/updatePreference.partial.obs","../../../src/Group/Scheduling/GroupScheduler/scheduledResource.partial.obs","../../../src/Group/Scheduling/GroupScheduler/resourceNotes.partial.obs","../../../src/Group/Scheduling/GroupScheduler/availableResources.partial.obs","../../../src/Group/Scheduling/GroupScheduler/resourceFilterByName.partial.obs","../../../src/Group/Scheduling/GroupScheduler/selectIndividuals.partial.obs","../../../src/Group/Scheduling/GroupScheduler/occurrence.partial.obs","../../../src/Group/Scheduling/GroupScheduler/provideLocations.partial.obs","../../../src/Group/Scheduling/GroupScheduler/group.partial.obs","../../../src/Group/Scheduling/GroupScheduler/schedule.partial.obs","../../../src/Group/Scheduling/GroupScheduler/utils.partial.ts","../../../src/Group/Scheduling/GroupScheduler/occurrenceDate.partial.obs","../../../src/Group/Scheduling/GroupScheduler/selectFilters.partial.obs","../../../src/Group/Scheduling/groupScheduler.obs"],"sourcesContent":["<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <Modal v-model=\"isVisible\"\r\n           title=\"Clone Schedules\"\r\n           saveText=\"Clone\"\r\n           :isSaveButtonDisabled=\"isCloningDisabled\"\r\n           @save=\"onSave\">\r\n\r\n        <NotificationBox :alertType=\"AlertType.Info\">\r\n            Configure the settings below to clone schedules for a different week.\r\n        </NotificationBox>\r\n\r\n        <NotificationBox v-if=\"loadCloneSettingsErrorMessage\" :alertType=\"AlertType.Warning\">\r\n            {{ loadCloneSettingsErrorMessage }}\r\n        </NotificationBox>\r\n\r\n        <div v-else class=\"row\">\r\n\r\n            <div class=\"col-md-6\">\r\n                <h3>Source Settings</h3>\r\n\r\n                <DropDownList v-model=\"selectedSourceDate\"\r\n                              label=\"Source Week Of\"\r\n                              rules=\"required\"\r\n                              :items=\"availableSourceDates\"\r\n                              :loading=\"isBusy\" />\r\n\r\n                <DropDownList v-model=\"selectedGroups\"\r\n                              label=\"Groups\"\r\n                              :items=\"availableGroups\"\r\n                              :multiple=\"true\"\r\n                              :loading=\"isBusy\" />\r\n\r\n                <DropDownList v-model=\"selectedLocations\"\r\n                              label=\"Locations\"\r\n                              :items=\"availableLocations\"\r\n                              :multiple=\"true\"\r\n                              :loading=\"isBusy\" />\r\n\r\n                <DropDownList v-model=\"selectedSchedules\"\r\n                              label=\"Schedules\"\r\n                              :items=\"availableSchedules\"\r\n                              :multiple=\"true\"\r\n                              :loading=\"isBusy\" />\r\n\r\n            </div>\r\n\r\n            <div class=\"col-md-6\">\r\n                <h3>Destination Settings</h3>\r\n\r\n                <DropDownList v-model=\"selectedDestinationDate\"\r\n                              label=\"Destination Week Of\"\r\n                              rules=\"required\"\r\n                              :items=\"availableDestinationDates\"\r\n                              :loading=\"isBusy\" />\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </Modal>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, PropType, ref, watch } from \"vue\";\r\n    import DropDownList from \"@Obsidian/Controls/dropDownList.obs\";\r\n    import Modal from \"@Obsidian/Controls/modal.obs\";\r\n    import NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\n    import { AlertType } from \"@Obsidian/Enums/Controls/alertType\";\r\n    import { useInvokeBlockAction } from \"@Obsidian/Utility/block\";\r\n    import { useVModelPassthrough } from \"@Obsidian/Utility/component\";\r\n    import { GroupSchedulerCloneSettingsBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduler/groupSchedulerCloneSettingsBag\";\r\n    import { GroupSchedulerFiltersBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduler/groupSchedulerFiltersBag\";\r\n    import { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\n\r\n    const invokeBlockAction = useInvokeBlockAction();\r\n\r\n    const props = defineProps({\r\n        isVisible: {\r\n            type: Boolean as PropType<boolean>,\r\n            required: true\r\n        },\r\n\r\n        filters: {\r\n            type: Object as PropType<GroupSchedulerFiltersBag | null | undefined>,\r\n            required: true\r\n        }\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"update:isVisible\"): void,\r\n        (e: \"cloneSchedules\", cloneSettings: GroupSchedulerCloneSettingsBag): void\r\n    }>();\r\n\r\n    // #region Values\r\n\r\n    const isVisible = useVModelPassthrough(props, \"isVisible\", emit);\r\n\r\n    const isLoadingCloneSettings = ref(false);\r\n    const loadCloneSettingsErrorMessage = ref(\"\");\r\n\r\n    const cloneSettings = ref<GroupSchedulerCloneSettingsBag | null>(null);\r\n\r\n    const selectedSourceDate = ref<string>(\"\");\r\n    const selectedDestinationDate = ref<string>(\"\");\r\n    const selectedGroups = ref<string[]>([]);\r\n    const selectedLocations = ref<string[]>([]);\r\n    const selectedSchedules = ref<string[]>([]);\r\n\r\n    // #endregion\r\n\r\n    // #region Computed Values\r\n\r\n    const isBusy = computed((): boolean => {\r\n        return isLoadingCloneSettings.value;\r\n    });\r\n\r\n    const isCloningDisabled = computed((): boolean => {\r\n        return isBusy.value\r\n            || !cloneSettings.value\r\n            || !!loadCloneSettingsErrorMessage.value;\r\n    });\r\n\r\n    const availableSourceDates = computed((): ListItemBag[] => {\r\n        return cloneSettings.value?.availableSourceDates ?? [];\r\n    });\r\n\r\n    const availableDestinationDates = computed((): ListItemBag[] => {\r\n        return cloneSettings.value?.availableDestinationDates ?? [];\r\n    });\r\n\r\n    const availableGroups = computed((): ListItemBag[] => {\r\n        return cloneSettings.value?.availableGroups ?? [];\r\n    });\r\n\r\n    const availableLocations = computed((): ListItemBag[] => {\r\n        return cloneSettings.value?.availableLocations ?? [];\r\n    });\r\n\r\n    const availableSchedules = computed((): ListItemBag[] => {\r\n        return cloneSettings.value?.availableSchedules ?? [];\r\n    });\r\n\r\n    // #endregion\r\n\r\n    // #region Functions\r\n\r\n    /**\r\n     * Gets the clone settings.\r\n     */\r\n    async function getCloneSettings(): Promise<void> {\r\n        if (isLoadingCloneSettings.value) {\r\n            return;\r\n        }\r\n\r\n        isLoadingCloneSettings.value = true;\r\n        loadCloneSettingsErrorMessage.value = \"\";\r\n\r\n        const result = await invokeBlockAction<GroupSchedulerCloneSettingsBag>(\"GetCloneSettings\", { bag: props.filters });\r\n        isLoadingCloneSettings.value = false;\r\n\r\n        if (!result.isSuccess) {\r\n            loadCloneSettingsErrorMessage.value = result.errorMessage || \"Unknown error while trying to load clone settings.\";\r\n            return;\r\n        }\r\n\r\n        cloneSettings.value = result.data;\r\n\r\n        selectedSourceDate.value = cloneSettings.value?.selectedSourceDate ?? \"\";\r\n        selectedDestinationDate.value = cloneSettings.value?.selectedDestinationDate ?? \"\";\r\n        selectedGroups.value = cloneSettings.value?.selectedGroups ?? [];\r\n        selectedLocations.value = cloneSettings.value?.selectedLocations ?? [];\r\n        selectedSchedules.value = cloneSettings.value?.selectedSchedules ?? [];\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Event Handlers\r\n\r\n    /**\r\n     * Handles the `save` event of the clone schedules modal.\r\n     */\r\n    function onSave(): void {\r\n        emit(\"cloneSchedules\", {\r\n            availableSourceDates: availableSourceDates.value,\r\n            selectedSourceDate: selectedSourceDate.value,\r\n            availableDestinationDates: availableDestinationDates.value,\r\n            selectedDestinationDate: selectedDestinationDate.value,\r\n            availableGroups: availableGroups.value,\r\n            selectedGroups: selectedGroups.value,\r\n            availableLocations: availableLocations.value,\r\n            selectedLocations: selectedLocations.value,\r\n            availableSchedules: availableSchedules.value,\r\n            selectedSchedules: selectedSchedules.value\r\n        });\r\n        isVisible.value = false;\r\n    }\r\n\r\n    // #endregion\r\n\r\n    watch(isVisible, () => {\r\n        if (isVisible.value) {\r\n            getCloneSettings();\r\n        }\r\n        else {\r\n            isLoadingCloneSettings.value = false;\r\n        }\r\n    });\r\n</script>\r\n","/* eslint-disable @typescript-eslint/naming-convention */\r\n\r\n// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { InjectionKey, Ref } from \"vue\";\r\nimport { ResourceListSourceType } from \"@Obsidian/Enums/Blocks/Group/Scheduling/resourceListSourceType\";\r\nimport { GroupSchedulerUnassignedResourceCountBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduler/groupSchedulerUnassignedResourceCountBag\";\r\n\r\n/**\r\n * Information about a scheduler resource assignment for the group scheduler.\r\n * Represenation of: https://github.com/SparkDevNetwork/Rock/blob/8dfb45edcbf4f166d483f6e96ed39806f3ca6a1b/Rock/Model/Event/Attendance/AttendanceService.cs#L3107\r\n */\r\nexport interface ISchedulerResourceAssignment {\r\n    /** The group identifier. */\r\n    GroupId: number,\r\n\r\n    /** The name of the group. */\r\n    GroupName?: string | null,\r\n\r\n    /** The schedule identifier. */\r\n    ScheduleId: number,\r\n\r\n    /** The naem of the schedule. */\r\n    ScheduleName?: string | null,\r\n\r\n    /** The location identifier. */\r\n    LocationId?: number | null,\r\n\r\n    /** The name of the location. */\r\n    LocationName?: string | null,\r\n\r\n    /** The occurrence date. */\r\n    OccurrenceDate?: string | null\r\n}\r\n\r\n/**\r\n * Information about a group [type] role.\r\n */\r\nexport interface IGroupRole {\r\n    Name?: string | null;\r\n}\r\n\r\n/**\r\n * Information about a potential scheduler resource (Person) for the group scheduler.\r\n * Represenation of: https://github.com/SparkDevNetwork/Rock/blob/8dfb45edcbf4f166d483f6e96ed39806f3ca6a1b/Rock/Model/Event/Attendance/AttendanceService.cs#L3169\r\n */\r\nexport interface ISchedulerResource {\r\n    /** The person identifier. */\r\n    PersonId: number,\r\n\r\n    /** The scheduled attendance confirmation status of the resource. */\r\n    ConfirmationStatus: string,\r\n\r\n    /** The group member ID. NOTE: This will be NULL if the resource list has manually added personIds and/or comes from a Person DataView. */\r\n    GroupMemberId?: number | null,\r\n\r\n    /** The nickname of the person. */\r\n    PersonNickName?: string | null,\r\n\r\n    /** The last name of the person. */\r\n    PersonLastName?: string | null,\r\n\r\n    /** The name of the person. */\r\n    PersonName?: string | null,\r\n\r\n    /** The photo URL for the person. */\r\n    PersonPhotoUrl?: string | null,\r\n\r\n    /** The last attendance date time. */\r\n    LastAttendanceDateTime?: string | null,\r\n\r\n    /** The last attendance date time, formattted. */\r\n    LastAttendanceDateTimeFormatted?: string | null,\r\n\r\n    /** The note. */\r\n    Note?: string | null,\r\n\r\n    /** Whether this person has a conflict. */\r\n    HasConflict: boolean,\r\n\r\n    /** The conflict note. */\r\n    ConflictNote?: string | null,\r\n\r\n    /** Whether this Person has blackout conflict for all the occurrences. */\r\n    HasBlackoutConflict: boolean,\r\n\r\n    /** Whether this Person has partial blackout conflict (blackout for some of the occurrences, but not all of them). */\r\n    HasPartialBlackoutConflict: boolean,\r\n\r\n    /** The number of days shown in the Group Scheduler. */\r\n    DisplayedDaysCount?: number | null,\r\n\r\n    /** Obsolete: Use DisplayedDaysCount instead */\r\n    OccurrenceDateCount: number,\r\n\r\n    /** The displayed time slot count. */\r\n    DisplayedTimeSlotCount?: number | null,\r\n\r\n    /** The blackout dates */\r\n    BlackoutDates?: string[] | null,\r\n\r\n    /** Whether this Person has group requirements conflict. */\r\n    HasGroupRequirementsConflict: boolean,\r\n\r\n    /** Whether this Person has scheduling conflict with some other group for this schedule+date. */\r\n    HasSchedulingConflict: boolean,\r\n\r\n    /** The scheduling conflicts. */\r\n    SchedulingConflicts?: ISchedulerResourceAssignment[] | null,\r\n\r\n    /** Whether this Person is already scheduled for this group+schedule+date. */\r\n    IsAlreadyScheduledForGroup?: boolean | null,\r\n\r\n    /** The group role, if the person is a member of the occurrence group. */\r\n    GroupRole: IGroupRole,\r\n\r\n    /** The name of the group role. */\r\n    GroupRoleName?: string | null,\r\n\r\n    /** The resource's preferences. */\r\n    ResourcePreferenceList?: ISchedulerResourceAssignment[] | null,\r\n\r\n    /** Teh resource's scheduled list. */\r\n    ResourceScheduledList?: ISchedulerResourceAssignment[] | null\r\n}\r\n\r\n/**\r\n * A scheduler resource (Person) that has been associated with an attendance occurrence in some sort of scheduled state (Pending, Confirmed or Declined).\r\n * Representation of: https://github.com/SparkDevNetwork/Rock/blob/8dfb45edcbf4f166d483f6e96ed39806f3ca6a1b/Rock/Model/Event/Attendance/AttendanceService.cs#L3045\r\n */\r\nexport interface ISchedulerResourceAttend extends ISchedulerResource {\r\n    /** The attendance identifier. */\r\n    AttendanceId: number,\r\n\r\n    /** The occurrence date. */\r\n    OccurrenceDate?: string | null,\r\n\r\n    /** How the scheduled attendance instance matches the preference of the individual. */\r\n    MatchesPreference: string,\r\n\r\n    /** Whether this scheduled resource has a blackout conflict for the occurrence date. */\r\n    HasBlackoutConflict: boolean,\r\n\r\n    /** The declined reason. */\r\n    DeclinedReason?: string | null\r\n}\r\n\r\n/**\r\n * Request parameters indicating the resources that should be retrieved for a group scheduler occurrence.\r\n * Representation of: https://github.com/SparkDevNetwork/Rock/blob/8dfb45edcbf4f166d483f6e96ed39806f3ca6a1b/Rock/Model/Event/Attendance/AttendanceService.cs#L3486\r\n */\r\nexport interface ISchedulerResourceParameters {\r\n    /** The attendance occurrence group identifier. */\r\n    AttendanceOccurrenceGroupId: number,\r\n\r\n    /** The attendance occurrence schedule IDs. */\r\n    AttendanceOccurrenceScheduleIds: number[],\r\n\r\n    /** The attendance occurrence location IDs */\r\n    AttendanceOccurrenceLocationIds: number[],\r\n\r\n    /** The attendance occurrence Sunday date. */\r\n    AttendanceOccurrenceSundayDate: string,\r\n\r\n    /** The resource group identifier. */\r\n    ResourceGroupId?: number | null,\r\n\r\n    /** The resource group guid. */\r\n    ResourceGroupGuid?: string | null,\r\n\r\n    /** If we just need the data for a specific person. */\r\n    LimitToPersonId?: number | null,\r\n\r\n    /** The group member filter type that should be used when retrieving available resources for the group scheduler. */\r\n    GroupMemberFilterType?: number | null,\r\n\r\n    /** The resource list source type that should be used when retrieving available resources for the group scheduler. */\r\n    ResourceListSourceType?: ResourceListSourceType | null,\r\n\r\n    /** The resource data view identifier. */\r\n    ResourceDataViewId?: number | null,\r\n\r\n    /** The resource data view guid. */\r\n    ResourceDataViewGuid?: string | null,\r\n\r\n    /** The resource additional person IDs. */\r\n    ResourceAdditionalPersonIds?: number[] | null\r\n}\r\n\r\n/**\r\n * Information about a group scheduler occurrence's progress (towards filling the specified min, desired and max capcacities).\r\n */\r\nexport interface IScheduleProgress {\r\n    /** The minimum capacity for this occurrence. */\r\n    minimumCapacity?: number | null,\r\n\r\n    /** The desired capacity for this occurrence. */\r\n    desiredCapacity?: number | null,\r\n\r\n    /** The maximum capacity for this occurrence. */\r\n    maximumCapacity?: number | null,\r\n\r\n    /** The count of confirmed resources for this occurrence. */\r\n    confirmedCount: number,\r\n\r\n    /** The count of pending resources for this occurrence. */\r\n    pendingCount: number,\r\n\r\n    /** The count of declined resources for this occurrence. */\r\n    declinedCount: number\r\n}\r\n\r\n/**\r\n * Information about the remaining resource spots to be filled for a group scheduler occurrence.\r\n */\r\nexport interface IRemainingResourceSpots {\r\n    /** A brief explanation of the remaning spots. */\r\n    label: string;\r\n\r\n    /** The CSS class(es) that should be applied to the remaining spots element. */\r\n    cssClass: string;\r\n}\r\n\r\n/**\r\n * An injection key to provide information about unassigned resource counts.\r\n */\r\nexport const UnassignedResourceCounts: InjectionKey<Ref<GroupSchedulerUnassignedResourceCountBag[]>> = Symbol(\"unassigned-resource-counts\");\r\n\r\n/**\r\n * An injection key to provide a function that can be used to report unassigned resources as assigned.\r\n */\r\nexport const ReportAssignedResources: InjectionKey<(unassignedResourceCountGuid: string | null | undefined, assignedCount: number) => void> = Symbol(\"report-assigned-resources\");\r\n\r\n/**\r\n * An injection key to provide an occurrence date.\r\n */\r\nexport const OccurrenceDate: InjectionKey<Ref<string>> = Symbol(\"occurrence-date\");\r\n\r\n/**\r\n * An injection key to provide a computed occurrence date title to descendent components.\r\n */\r\nexport const OccurrenceDateTitle: InjectionKey<Ref<string>> = Symbol(\"occurrence-date-title\");\r\n\r\n/**\r\n * * An injection key to provide a schedule identifier.\r\n */\r\nexport const ScheduleId: InjectionKey<Ref<number>> = Symbol(\"schedule-id\");\r\n\r\n/**\r\n * An injection key to instruct all schedule occurrences to reload themselves.\r\n */\r\nexport const ReloadAllOccurrences: InjectionKey<Ref<boolean>> = Symbol(\"reload-all-occurrences\");\r\n\r\n/**\r\n * An injection key to instruct occurrences belonging to a specific schedule to reload themselves.\r\n * The number injected will be the attendance occurrence ID that triggered the update, so it knows\r\n * that it doesn't need to update itself, while all of its siblings will know to update themselves.\r\n */\r\nexport const ReloadScheduleOccurrences: InjectionKey<Ref<number | null>> = Symbol(\"reload-schedule-occurrences\");\r\n\r\n/**\r\n * An injection key to instruct occurrences containing a specific resource to reload themselves.\r\n * The number injected will be the person ID representing the targeted resource.\r\n */\r\nexport const ReloadOccurrencesContainingResource: InjectionKey<Ref<number | null>> = Symbol(\"reload-occurrences-containing-resource\");\r\n\r\n/**\r\n * The available progress states for a group scheduler occurrence.\r\n */\r\nexport const ProgressState = {\r\n    danger: \"danger\",\r\n    critical: \"critical\",\r\n    warning: \"warning\",\r\n    success: \"success\"\r\n};\r\n\r\n/**\r\n * The classification of how a scheduled attendance instance matches the preference of the individual.\r\n */\r\nexport const Preference = {\r\n    matches: \"matches-preference\",\r\n    notMatches: \"not-matches-preference\",\r\n    none: \"no-preference\"\r\n};\r\n\r\n/**\r\n * The actions that can be taken for a given, scheduled resource.\r\n */\r\nexport const enum ResourceAction {\r\n    MarkConfirmed = 0,\r\n    MarkPending = 1,\r\n    MarkDeclined = 2,\r\n    ResendConfirmation = 3,\r\n    UpdatePreference = 4,\r\n    Remove = 5\r\n}\r\n\r\n/**\r\n * The navigation url keys for linked pages.\r\n */\r\nexport const enum NavigationUrlKey {\r\n    CopyLink = \"CopyLink\",\r\n    RosterPage = \"RosterPage\"\r\n}\r\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <div ref=\"progressBarElement\"\r\n         :class=\"`progress text-${state} m-0 flex-fill`\"\r\n         role=\"progressbar\"\r\n         aria-label=\"Group Scheduler Progress\"\r\n         data-toggle=\"tooltip\"\r\n         :data-original-title=\"progressBarTooltip\">\r\n\r\n        <div :class=\"`progress-bar bg-${state}`\" :style=\"`width:${confirmedPercentage}%`\"></div>\r\n        <div :class=\"`progress-bar bg-${state} o-50`\" :style=\"`width:${pendingPercentage}%`\"></div>\r\n\r\n        <div v-if=\"showMinimumThreshold\"\r\n             class=\"indicator\"\r\n             :style=\"`left:${minimumPercentage}%;`\"></div>\r\n\r\n        <div v-if=\"showDesiredThreshold\"\r\n             class=\"indicator\"\r\n             :style=\"`left:${desiredPercentage}%;`\"></div>\r\n\r\n        <div v-if=\"showMaximumThreshold\"\r\n             class=\"indicator\"\r\n             :style=\"`left:${maximumPercentage}%;`\"></div>\r\n    </div>\r\n</template>\r\n\r\n<!-- These styles cannot be scoped since they're being used in a tooltip. -->\r\n<style>\r\n.group-scheduler-v2 .progress-bar-tooltip {\r\n    min-width: 130px;\r\n}\r\n\r\n.group-scheduler-v2 .progress-bar-tooltip-label {\r\n    font-weight: bold;\r\n}\r\n\r\n.group-scheduler-v2 .progress-bar-tooltip-responses {\r\n    margin-top: 12px;\r\n}\r\n\r\n.group-scheduler-v2 .progress-bar-tooltip-counts {\r\n    margin-top: 4px;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n}\r\n\r\n.group-scheduler-v2 .progress-bar-tooltip-counts > span {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 6px;\r\n}\r\n</style>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, nextTick, PropType, ref, watch } from \"vue\";\r\n    import { IScheduleProgress, ProgressState } from \"./types.partial\";\r\n    import { tooltip } from \"@Obsidian/Utility/tooltip\";\r\n\r\n    const props = defineProps({\r\n        progress: {\r\n            type: Object as PropType<IScheduleProgress>,\r\n            required: true\r\n        }\r\n    });\r\n\r\n    // #region Values\r\n\r\n    const progressBarElement = ref<HTMLElement | null>(null);\r\n\r\n    // #endregion\r\n\r\n    // #region Computed Values\r\n\r\n    const progressBarTooltip = computed((): string => {\r\n        return `\r\n<div class='progress-bar-tooltip'>\r\n    <div class='progress-bar-tooltip-configured'>\r\n        <span class=\"progress-bar-tooltip-label\">Configured</span>\r\n        <div class='progress-bar-tooltip-counts'>\r\n            <span>\r\n                <i class='far fa-minus-square'></i>\r\n                ${minimumCapacity.value === 0 ? \"-\" : minimumCapacity.value}\r\n            </span>\r\n            <span>\r\n                <i class='far fa-star'></i>\r\n                ${desiredCapacity.value === 0 ? \"-\" : desiredCapacity.value}\r\n            </span>\r\n            <span>\r\n                <i class='far fa-plus-square'></i>\r\n                ${maximumCapacity.value === 0 ? \"-\" : maximumCapacity.value}\r\n            </span>\r\n        </div>\r\n    </div>\r\n    <div class='progress-bar-tooltip-responses'>\r\n        <span class=\"progress-bar-tooltip-label\">Responses</span>\r\n        <div class='progress-bar-tooltip-counts'>\r\n            <span><i class='far fa-calendar-check'></i> ${confirmedCount.value}</span>\r\n            <span><i class='fa fa-question'></i> ${pendingCount.value}</span>\r\n            <span><i class='far fa-calendar-times'></i> ${declinedCount.value}</span>\r\n        </div>\r\n    </div>\r\n</div>`;\r\n    });\r\n\r\n    const minimumCapacity = computed((): number => {\r\n        return props.progress?.minimumCapacity ?? 0;\r\n    });\r\n\r\n    const minimumPercentage = computed((): number => {\r\n        return getPercentageOfWhole(minimumCapacity.value);\r\n    });\r\n\r\n    const showMinimumThreshold = computed((): boolean => {\r\n        return minimumPercentage.value > 0 && minimumPercentage.value < 100;\r\n    });\r\n\r\n    const desiredCapacity = computed((): number => {\r\n        return props.progress?.desiredCapacity ?? 0;\r\n    });\r\n\r\n    const desiredPercentage = computed((): number => {\r\n        return getPercentageOfWhole(desiredCapacity.value);\r\n    });\r\n\r\n    const showDesiredThreshold = computed((): boolean => {\r\n        return desiredPercentage.value > 0 && desiredPercentage.value < 100;\r\n    });\r\n\r\n    const maximumCapacity = computed((): number => {\r\n        return props.progress?.maximumCapacity ?? 0;\r\n    });\r\n\r\n    const maximumPercentage = computed((): number => {\r\n        return getPercentageOfWhole(maximumCapacity.value);\r\n    });\r\n\r\n    const showMaximumThreshold = computed((): boolean => {\r\n        return maximumPercentage.value > 0\r\n            && maximumPercentage.value < 100\r\n            && totalCount.value > maximumCapacity.value;\r\n    });\r\n\r\n    const confirmedCount = computed((): number => {\r\n        return props.progress?.confirmedCount ?? 0;\r\n    });\r\n\r\n    const confirmedPercentage = computed((): number => {\r\n        return getPercentageOfWhole(confirmedCount.value);\r\n    });\r\n\r\n    const pendingCount = computed((): number => {\r\n        return props.progress?.pendingCount ?? 0;\r\n    });\r\n\r\n    const pendingPercentage = computed((): number => {\r\n        const pendingCountForPercentage = pendingCount.value + confirmedCount.value;\r\n        return getPercentageOfWhole(pendingCountForPercentage);\r\n    });\r\n\r\n    const declinedCount = computed((): number => {\r\n        return props.progress?.declinedCount ?? 0;\r\n    });\r\n\r\n    const totalCount = computed((): number => {\r\n        return confirmedCount.value + pendingCount.value;\r\n    });\r\n\r\n    const state = computed((): string => {\r\n        const min = minimumCapacity.value;\r\n        const desired = desiredCapacity.value;\r\n        const max = maximumCapacity.value;\r\n        const confirmed = confirmedCount.value;\r\n\r\n        let progressState = ProgressState.danger;\r\n        if (confirmed > 0) {\r\n            progressState = ProgressState.success;\r\n            if (max > 0 && confirmed > max) {\r\n                progressState = ProgressState.critical;\r\n            }\r\n            else if (confirmed < min) {\r\n                progressState = ProgressState.danger;\r\n            }\r\n            else if (confirmed < desired) {\r\n                progressState = ProgressState.warning;\r\n            }\r\n        }\r\n\r\n        return progressState;\r\n    });\r\n\r\n    const whole = computed((): number => {\r\n        const min = minimumCapacity.value;\r\n        const desired = desiredCapacity.value;\r\n        const max = maximumCapacity.value;\r\n        const filled = totalCount.value;\r\n\r\n        let whole = 0;\r\n        if (max > 0) {\r\n            whole = max;\r\n        }\r\n        else if (desired > 0) {\r\n            whole = desired;\r\n        }\r\n        else if (min > 0) {\r\n            whole = min;\r\n        }\r\n\r\n        if (filled > whole) {\r\n            whole = filled;\r\n        }\r\n\r\n        return whole;\r\n    });\r\n\r\n    // #endregion\r\n\r\n    // #region Functions\r\n\r\n    /**\r\n     * Gets the part's percentage of the whole.\r\n     *\r\n     * @param part The part whose percentage should be calculated.\r\n     */\r\n    function getPercentageOfWhole(part: number): number {\r\n        if (whole.value > 0) {\r\n            /*\r\n                11/6/2023 - JPH\r\n\r\n                Although the original design specified to show min/desired/max threshold \"ticks\" to\r\n                the left of the spot that will satisfy a given value, a bug was opened requesting\r\n                to show them to the right of said value.\r\n\r\n                Reason: Clarify min/desired/max threshold \"ticks\".\r\n                https://github.com/SparkDevNetwork/Rock/issues/5662\r\n            */\r\n\r\n            var percentage = Math.floor(part / whole.value * 100);\r\n            return percentage > 100 ? 100 : percentage;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Configures the progress bar tooltip.\r\n     */\r\n    function configureTooltip(): void {\r\n        nextTick(() => {\r\n            if (progressBarElement.value) {\r\n                tooltip(progressBarElement.value, { html: true });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    // #endregion\r\n\r\n    watch([\r\n        minimumCapacity,\r\n        desiredCapacity,\r\n        maximumCapacity,\r\n        confirmedCount,\r\n        pendingCount,\r\n        declinedCount\r\n    ], () => {\r\n        configureTooltip();\r\n    });\r\n\r\n    configureTooltip();\r\n</script>\r\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <Modal v-model=\"isVisible\"\r\n           title=\"Update Preference\"\r\n           saveText=\"Save\"\r\n           :subtitle=\"subtitle\"\r\n           :isSaveButtonDisabled=\"isUpdatingDisabled\"\r\n           @save=\"onSave\">\r\n\r\n        <NotificationBox v-if=\"loadPreferencesErrorMessage\" :alertType=\"AlertType.Warning\">\r\n            {{ loadPreferencesErrorMessage }}\r\n        </NotificationBox>\r\n\r\n        <template v-else>\r\n\r\n            <NotificationBox v-if=\"updatePreferenceErrorMessage\" :alertType=\"AlertType.Warning\">\r\n                {{ updatePreferenceErrorMessage }}\r\n            </NotificationBox>\r\n\r\n            <NotificationBox v-if=\"warningMessage\" :alertType=\"AlertType.Warning\">\r\n                {{ warningMessage }}\r\n            </NotificationBox>\r\n\r\n            <DropDownList v-model=\"scheduleTemplate\"\r\n                          label=\"Schedule\"\r\n                          :items=\"availableScheduleTemplates\"\r\n                          :loading=\"isBusy\"\r\n                          :showBlankItem=\"false\" />\r\n\r\n            <DatePicker v-if=\"showScheduleStartDate\"\r\n                        v-model=\"scheduleStartDate\"\r\n                        label=\"Starting On\"\r\n                        :isLoading=\"isBusy\" />\r\n\r\n            <div class=\"form-group\">\r\n                <RadioButtonList v-model=\"updateMode\"\r\n                                 :items=\"availableUpdateModes\"\r\n                                 :horizontal=\"true\" />\r\n            </div>\r\n\r\n            <NotificationBox v-if=\"showOtherPreferences\" :alertType=\"AlertType.Info\">\r\n                <span class='control-label'>These other preferences will be removed and replaced.</span>\r\n                <ul>\r\n                    <li v-for=\"otherPreference in otherPreferences\">\r\n                        {{ otherPreference }}\r\n                    </li>\r\n                </ul>\r\n            </NotificationBox>\r\n\r\n        </template>\r\n\r\n    </Modal>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, PropType, ref, watch } from \"vue\";\r\n    import { ISchedulerResourceAttend } from \"./types.partial\";\r\n    import DatePicker from \"@Obsidian/Controls/datePicker.obs\";\r\n    import DropDownList from \"@Obsidian/Controls/dropDownList.obs\";\r\n    import Modal from \"@Obsidian/Controls/modal.obs\";\r\n    import NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\n    import RadioButtonList from \"@Obsidian/Controls/radioButtonList.obs\";\r\n    import { UpdateSchedulePreferenceMode, UpdateSchedulePreferenceModeDescription } from \"@Obsidian/Enums/Blocks/Group/Scheduling/updateSchedulePreferenceMode\";\r\n    import { AlertType } from \"@Obsidian/Enums/Controls/alertType\";\r\n    import { useInvokeBlockAction } from \"@Obsidian/Utility/block\";\r\n    import { useVModelPassthrough } from \"@Obsidian/Utility/component\";\r\n    import { GroupSchedulerGetPreferencesBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduler/groupSchedulerGetPreferencesBag\";\r\n    import { GroupSchedulerOccurrenceBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduler/groupSchedulerOccurrenceBag\";\r\n    import { GroupSchedulerPreferencesBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduler/groupSchedulerPreferencesBag\";\r\n    import { GroupSchedulerUpdatePreferenceBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduler/groupSchedulerUpdatePreferenceBag\";\r\n    import { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\n\r\n    const invokeBlockAction = useInvokeBlockAction();\r\n\r\n    const props = defineProps({\r\n        isVisible: {\r\n            type: Boolean as PropType<boolean>,\r\n            required: true\r\n        },\r\n\r\n        occurrence: {\r\n            type: Object as PropType<GroupSchedulerOccurrenceBag>,\r\n            required: true\r\n        },\r\n\r\n        resource: {\r\n            type: Object as PropType<ISchedulerResourceAttend>,\r\n            required: true\r\n        }\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"update:isVisible\"): void,\r\n        (e: \"preferenceUpdated\"): void\r\n    }>();\r\n\r\n    const noScheduleTemplateValue = \"0\";\r\n\r\n    const availableUpdateModes: ListItemBag[] = [\r\n        {\r\n            value: UpdateSchedulePreferenceMode.ReplacePreference.toString(),\r\n            text: UpdateSchedulePreferenceModeDescription[UpdateSchedulePreferenceMode.ReplacePreference]\r\n        },\r\n        {\r\n            value: UpdateSchedulePreferenceMode.AddToPreference.toString(),\r\n            text: UpdateSchedulePreferenceModeDescription[UpdateSchedulePreferenceMode.AddToPreference]\r\n        }\r\n    ];\r\n\r\n    // #region Values\r\n\r\n    const isVisible = useVModelPassthrough(props, \"isVisible\", emit);\r\n\r\n    const isLoadingPreferences = ref(false);\r\n    const loadPreferencesErrorMessage = ref(\"\");\r\n\r\n    const isUpdatingPreference = ref(false);\r\n    const updatePreferenceErrorMessage = ref(\"\");\r\n\r\n    const scheduleTemplate = ref(\"\");\r\n    const scheduleStartDate = ref<string | null>(\"\");\r\n    const otherPreferences = ref<string[]>([]);\r\n    const availableScheduleTemplates = ref<ListItemBag[]>([]);\r\n    const warningMessage = ref(\"\");\r\n\r\n    const updateMode = ref<string>(UpdateSchedulePreferenceMode.ReplacePreference.toString());\r\n\r\n    // #endregion\r\n\r\n    // #region Computed Values\r\n\r\n    const subtitle = computed((): string => {\r\n        const o = props.occurrence;\r\n        const r = props.resource;\r\n        const titleParts: string[] = [];\r\n\r\n        if (o?.scheduleName) {\r\n            titleParts.push(o.scheduleName);\r\n        }\r\n\r\n        if (o?.locationName) {\r\n            titleParts.push(o.locationName);\r\n        }\r\n\r\n        const personName = r?.PersonName\r\n            ? `${r.PersonName}, `\r\n            : \"\";\r\n\r\n        return titleParts.length\r\n            ? `${personName}${titleParts.join(\" - \")}`\r\n            : \"\";\r\n    });\r\n\r\n    const attendanceId = computed((): number => {\r\n        return props.resource?.AttendanceId ?? 0;\r\n    });\r\n\r\n    const groupMemberId = computed((): number => {\r\n        return props.resource?.GroupMemberId ?? 0;\r\n    });\r\n\r\n    const showScheduleStartDate = computed((): boolean => {\r\n        return !!scheduleTemplate.value && scheduleTemplate.value !== noScheduleTemplateValue;\r\n    });\r\n\r\n    const showOtherPreferences = computed((): boolean => {\r\n        return !!otherPreferences.value?.length && updateMode.value === UpdateSchedulePreferenceMode.ReplacePreference.toString();\r\n    });\r\n\r\n    const isBusy = computed((): boolean => {\r\n        return isLoadingPreferences.value || isUpdatingPreference.value;\r\n    });\r\n\r\n    const isUpdatingDisabled = computed((): boolean => {\r\n        return isBusy.value\r\n            || !!loadPreferencesErrorMessage.value;\r\n    });\r\n\r\n    // #endregion\r\n\r\n    // #region Functions\r\n\r\n    /**\r\n     * Gets the existing preferences.\r\n     */\r\n    async function getPreferences(): Promise<void> {\r\n        if (isLoadingPreferences.value) {\r\n            return;\r\n        }\r\n\r\n        isLoadingPreferences.value = true;\r\n        loadPreferencesErrorMessage.value = \"\";\r\n\r\n        const bag: GroupSchedulerGetPreferencesBag = {\r\n            attendanceId: attendanceId.value,\r\n            groupMemberId: groupMemberId.value\r\n        };\r\n\r\n        const result = await invokeBlockAction<GroupSchedulerPreferencesBag>(\"GetPreferences\", { bag });\r\n        isLoadingPreferences.value = false;\r\n\r\n        if (!result.isSuccess) {\r\n            loadPreferencesErrorMessage.value = result.errorMessage || \"Unknown error while trying to load preferences.\";\r\n            return;\r\n        }\r\n\r\n        const preferences = result.data;\r\n        if (preferences?.errorMessage) {\r\n            loadPreferencesErrorMessage.value = `${preferences.errorMessage} Unable to update preferences for this individual.`;\r\n            return;\r\n        }\r\n\r\n        scheduleTemplate.value = preferences?.schedulePreference?.scheduleTemplate ?? \"\";\r\n        scheduleStartDate.value = preferences?.schedulePreference?.scheduleStartDate ?? \"\";\r\n        otherPreferences.value = preferences?.otherPreferencesForGroup ?? [];\r\n        availableScheduleTemplates.value = preferences?.availableScheduleTemplates ?? [];\r\n        warningMessage.value = preferences?.warningMessage ?? \"\";\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Event Handlers\r\n\r\n    /**\r\n     * Handles the `save` event of the update preference modal.\r\n     */\r\n    async function onSave(): Promise<void> {\r\n        if (isUpdatingPreference.value) {\r\n            return;\r\n        }\r\n\r\n        isUpdatingPreference.value = true;\r\n        updatePreferenceErrorMessage.value = \"\";\r\n\r\n        const bag: GroupSchedulerUpdatePreferenceBag = {\r\n            attendanceId: attendanceId.value,\r\n            groupMemberId: groupMemberId.value,\r\n            schedulePreference: {\r\n                scheduleStartDate: showScheduleStartDate.value ? scheduleStartDate.value : undefined,\r\n                scheduleTemplate: scheduleTemplate.value\r\n            },\r\n            updateMode: +updateMode.value as UpdateSchedulePreferenceMode\r\n        };\r\n\r\n        const result = await invokeBlockAction(\"UpdatePreference\", { bag });\r\n        isUpdatingPreference.value = false;\r\n\r\n        if (!result.isSuccess) {\r\n            updatePreferenceErrorMessage.value = result.errorMessage || \"Unknown error while trying to update preference.\";\r\n            return;\r\n        }\r\n\r\n        emit(\"preferenceUpdated\");\r\n\r\n        isVisible.value = false;\r\n    }\r\n\r\n    // #endregion\r\n\r\n    watch(isVisible, () => {\r\n        if (isVisible.value) {\r\n            getPreferences();\r\n        }\r\n        else {\r\n            isLoadingPreferences.value = false;\r\n        }\r\n    });\r\n</script>\r\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <li v-if=\"resource\" :class=\"resourceCssClass\">\r\n        <img :src=\"imgSrc\" class=\"avatar\" draggable=\"false\">\r\n        <span ref=\"resourceNameElement\"\r\n              class=\"resource-name\"\r\n              data-toggle=\"tooltip\"\r\n              :data-original-title=\"resourceTooltip\">\r\n            {{ personName }}\r\n            <i v-if=\"conflictTooltip\" class=\"fa fa-exclamation-triangle\"></i>\r\n            <i v-if=\"preferenceTooltip\" class=\"fa fa-minus-circle\"></i>\r\n        </span>\r\n        <span class=\"resource-role\">{{ resource?.GroupRoleName }}</span>\r\n\r\n        <div v-no-drag-scroll class=\"dropdown\">\r\n            <button type=\"button\"\r\n                    class=\"btn btn-link btn-overflow\"\r\n                    data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded=\"false\"\r\n                    :disabled=\"isSchedulingDisabled\">\r\n                <i class=\"fa fa-ellipsis-v\"></i>\r\n            </button>\r\n\r\n            <ul class=\"dropdown-menu dropdown-menu-right\">\r\n                <li>\r\n                    <button type=\"button\"\r\n                            class=\"dropdown-item btn-link\"\r\n                            :disabled=\"isSchedulingDisabled\"\r\n                            @click=\"onUpdateResource(ResourceAction.MarkConfirmed)\">\r\n                        Mark Confirmed\r\n                    </button>\r\n                </li>\r\n                <li>\r\n                    <button type=\"button\"\r\n                            class=\"dropdown-item btn-link\"\r\n                            :disabled=\"isSchedulingDisabled\"\r\n                            @click=\"onUpdateResource(ResourceAction.MarkPending)\">\r\n                        Mark Pending\r\n                    </button>\r\n                </li>\r\n                <li>\r\n                    <button type=\"button\"\r\n                            class=\"dropdown-item btn-link\"\r\n                            :disabled=\"isSchedulingDisabled\"\r\n                            @click=\"onUpdateResource(ResourceAction.MarkDeclined)\">\r\n                        Mark Declined\r\n                    </button>\r\n                </li>\r\n                <li>\r\n                    <button type=\"button\"\r\n                            class=\"dropdown-item btn-link\"\r\n                            :disabled=\"isSchedulingDisabled\"\r\n                            @click=\"onUpdateResource(ResourceAction.ResendConfirmation)\">\r\n                        Resend Confirmation\r\n                    </button>\r\n                </li>\r\n                <li v-if=\"groupMemberId\">\r\n                    <button type=\"button\"\r\n                            class=\"dropdown-item btn-link\"\r\n                            :disabled=\"isSchedulingDisabled\"\r\n                            @click=\"onUpdateResource(ResourceAction.UpdatePreference)\">\r\n                        Update Preference\r\n                    </button>\r\n                </li>\r\n                <li>\r\n                    <button type=\"button\"\r\n                            class=\"dropdown-item dropdown-item-danger btn-link\"\r\n                            :disabled=\"isSchedulingDisabled\"\r\n                            @click=\"onUpdateResource(ResourceAction.Remove)\">\r\n                        Remove\r\n                    </button>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n    </li>\r\n\r\n    <UpdatePreference v-model:isVisible=\"isUpdatingPreference\"\r\n                      :occurrence=\"occurrence\"\r\n                      :resource=\"resource\"\r\n                      @preferenceUpdated=\"$emit('preferenceUpdated')\"></UpdatePreference>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, PropType, ref, watch } from \"vue\";\r\n    import { ISchedulerResourceAssignment, ISchedulerResourceAttend, Preference, ResourceAction } from \"./types.partial\";\r\n    import UpdatePreference from \"./updatePreference.partial.obs\";\r\n    import { NoDragScroll as vNoDragScroll } from \"@Obsidian/Directives/dragScroll\";\r\n    import { useVModelPassthrough } from \"@Obsidian/Utility/component\";\r\n    import { useHttp } from \"@Obsidian/Utility/http\";\r\n    import { tooltip } from \"@Obsidian/Utility/tooltip\";\r\n    import { GroupSchedulerOccurrenceBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduler/groupSchedulerOccurrenceBag\";\r\n\r\n    const http = useHttp();\r\n\r\n    const props = defineProps({\r\n        occurrence: {\r\n            type: Object as PropType<GroupSchedulerOccurrenceBag>,\r\n            required: true\r\n        },\r\n\r\n        resource: {\r\n            type: Object as PropType<ISchedulerResourceAttend>,\r\n            required: true\r\n        },\r\n\r\n        updateResourceWarningMessage: {\r\n            type: String as PropType<string>,\r\n            default: \"\"\r\n        },\r\n\r\n        disabled: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        }\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"resourceUpdated\", action: ResourceAction): void,\r\n        (e: \"preferenceUpdated\"): void\r\n        (e: \"update:updateResourceWarningMessage\"): void\r\n    }>();\r\n\r\n    // #region Values\r\n\r\n    const updateResourceWarningMessage = useVModelPassthrough(props, \"updateResourceWarningMessage\", emit);\r\n\r\n    const isUpdatingResource = ref(false);\r\n    const isUpdatingPreference = ref(false);\r\n\r\n    const imgSrc = ref<string>(props.resource?.PersonPhotoUrl ?? \"\");\r\n    const personName = ref<string>(props.resource?.PersonName ?? \"\");\r\n\r\n    const resourceNameElement = ref<HTMLElement | null>(null);\r\n\r\n    // #endregion\r\n\r\n    // #region Computed Values\r\n\r\n    const status = computed((): string => {\r\n        return props.resource?.ConfirmationStatus ?? \"\";\r\n    });\r\n\r\n    const statusCssClass = computed((): string => {\r\n        return `status-${(status.value ? `${status.value.toLowerCase()}` : \"unknown\")}`;\r\n    });\r\n\r\n    const resourceCssClass = computed((): string => {\r\n        return `list-group-item text-sm ${statusCssClass.value}`;\r\n    });\r\n\r\n    const attendanceId = computed((): number => {\r\n        return props.resource?.AttendanceId ?? 0;\r\n    });\r\n\r\n    const groupMemberId = computed((): number => {\r\n        return props.resource?.GroupMemberId ?? 0;\r\n    });\r\n\r\n    const isSchedulingDisabled = computed((): boolean => {\r\n        return props.disabled || isUpdatingResource.value;\r\n    });\r\n\r\n    const declinedReasonTooltip = computed((): string | null | undefined => {\r\n        const reason = props.resource?.DeclinedReason;\r\n        return reason\r\n            ? wrapTooltipSection(`<div class='font-weight-semibold'>Declined Reason</div><div>${reason}</div>`)\r\n            : \"\";\r\n    });\r\n\r\n    const preferenceList = computed((): ISchedulerResourceAssignment[] => {\r\n        return props.resource\r\n            ?.ResourcePreferenceList\r\n            ?.filter((a: ISchedulerResourceAssignment) => a.ScheduleName) ?? [];\r\n    });\r\n\r\n    const preferenceTooltip = computed((): string => {\r\n        let tooltip = \"\";\r\n\r\n        if (props.resource?.MatchesPreference === Preference.notMatches\r\n            && preferenceList.value.length) {\r\n            tooltip += \"<div class='font-weight-semibold'>Preference</div>\";\r\n            preferenceList.value.forEach((preference: ISchedulerResourceAssignment) => {\r\n                const locationName = preference.LocationName ? ` - ${preference.LocationName}` : \"\";\r\n                tooltip += `<div>${preference.ScheduleName}${locationName}</div>`;\r\n            });\r\n        }\r\n\r\n        return tooltip\r\n            ? wrapTooltipSection(tooltip)\r\n            : \"\";\r\n    });\r\n\r\n    const schedulingConflictList = computed((): ISchedulerResourceAssignment[] => {\r\n        return props.resource\r\n            ?.SchedulingConflicts\r\n            ?.filter((a: ISchedulerResourceAssignment) => a.ScheduleName) ?? [];\r\n    });\r\n\r\n    const conflictTooltip = computed((): string => {\r\n        let tooltip = \"\";\r\n\r\n        if (schedulingConflictList.value?.length) {\r\n            schedulingConflictList.value.forEach((conflict: ISchedulerResourceAssignment) => {\r\n                const locationName = conflict.LocationName ? ` - ${conflict.LocationName}` : \"\";\r\n                tooltip += `<div>${conflict.ScheduleName}${locationName}</div>`;\r\n            });\r\n        }\r\n\r\n        if (props.resource?.HasBlackoutConflict) {\r\n            tooltip += \"<div>Cannot be scheduled due to a blackout.</div>\";\r\n        }\r\n\r\n        if (props.resource?.HasGroupRequirementsConflict) {\r\n            tooltip += \"<div>Does not meet the requirements for this group.</div>\";\r\n        }\r\n\r\n        if (tooltip) {\r\n            tooltip = `<div class='font-weight-semibold'>Scheduling Conflicts</div>${tooltip}`;\r\n        }\r\n\r\n        return tooltip\r\n            ? wrapTooltipSection(tooltip)\r\n            : \"\";\r\n    });\r\n\r\n    const resourceTooltip = computed((): string => {\r\n        return `${declinedReasonTooltip.value}${preferenceTooltip.value}${conflictTooltip.value}`;\r\n    });\r\n\r\n    // #endregion\r\n\r\n    // #region Functions\r\n\r\n    /**\r\n     * Returns a friendly action that can be used in messaging, based on the provided action.\r\n     *\r\n     * @param action The action for which to return a friendly action.\r\n     */\r\n    function getFriendlyAction(action: ResourceAction): string {\r\n        switch (action) {\r\n            case ResourceAction.MarkConfirmed:\r\n                return `marking ${personName.value} as confirmed`;\r\n            case ResourceAction.MarkPending:\r\n                return `marking ${personName.value} as pending`;\r\n            case ResourceAction.MarkDeclined:\r\n                return `marking ${personName.value} as declined`;\r\n            case ResourceAction.ResendConfirmation:\r\n                return `resending confirmation to ${personName.value}`;\r\n            case ResourceAction.UpdatePreference:\r\n                return `updating preferences for ${personName.value}`;\r\n            case ResourceAction.Remove:\r\n                return `removing ${personName.value}`;\r\n            default:\r\n                return `updating ${personName.value}`;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wraps a tooltip section with a div to make it easier to target for styling.\r\n     *\r\n     * @param tooltipSection The tooltip section to wrap.\r\n     */\r\n    function wrapTooltipSection(tooltipSection: string): string {\r\n        return `<div class=\"tooltip-section\">${tooltipSection}</div>`;\r\n    }\r\n\r\n    /**\r\n     * Configures the tooltip.\r\n     */\r\n    function configureTooltip(): void {\r\n        if (resourceNameElement.value) {\r\n            tooltip(resourceNameElement.value, { html: true });\r\n        }\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Event Handlers\r\n\r\n    /**\r\n     * Updates the resource according to the specified action.\r\n     *\r\n     * @param action The update action to perform.\r\n     */\r\n    async function onUpdateResource(action: ResourceAction): Promise<void> {\r\n        isUpdatingResource.value = true;\r\n        updateResourceWarningMessage.value = \"\";\r\n\r\n        const warningMessage = `There was an error while ${getFriendlyAction(action)}`;\r\n\r\n        let endpoint = \"\";\r\n        switch (action) {\r\n            case ResourceAction.MarkConfirmed:\r\n                endpoint = \"ScheduledPersonConfirm\";\r\n                break;\r\n            case ResourceAction.MarkPending:\r\n                endpoint = \"ScheduledPersonPending\";\r\n                break;\r\n            case ResourceAction.MarkDeclined:\r\n                endpoint = \"ScheduledPersonDecline\";\r\n                break;\r\n            case ResourceAction.ResendConfirmation:\r\n                endpoint = \"ScheduledPersonSendConfirmationCommunication\";\r\n                break;\r\n            case ResourceAction.Remove:\r\n                endpoint = \"ScheduledPersonRemove\";\r\n                break;\r\n            case ResourceAction.UpdatePreference:\r\n                isUpdatingPreference.value = true;\r\n                return;\r\n            default:\r\n                updateResourceWarningMessage.value = warningMessage;\r\n                isUpdatingResource.value = false;\r\n                return;\r\n        }\r\n\r\n        const result = await http.doApiCall(\"PUT\", `/api/Attendances/${endpoint}?attendanceId=${attendanceId.value}`);\r\n        isUpdatingResource.value = false;\r\n\r\n        if (!result.isSuccess) {\r\n            updateResourceWarningMessage.value = warningMessage;\r\n            return;\r\n        }\r\n\r\n        emit(\"resourceUpdated\", action);\r\n    }\r\n\r\n    // #endregion\r\n\r\n    watch([\r\n        resourceNameElement,\r\n        resourceTooltip\r\n    ], () => {\r\n        configureTooltip();\r\n    });\r\n\r\n    watch(isUpdatingPreference, () => {\r\n        if (!isUpdatingPreference.value) {\r\n            isUpdatingResource.value = false;\r\n        }\r\n    });\r\n</script>\r\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <div v-if=\"shouldShow\" :class=\"cssClass\">\r\n\r\n        <div v-if=\"hasBlackoutConflict\" class=\"resource-notes-section\">\r\n            Cannot be scheduled due to a blackout.\r\n        </div>\r\n\r\n        <div v-if=\"hasGroupRequirementsConflict\" class=\"resource-notes-section\">\r\n            Does not meet the requirements for this group.\r\n        </div>\r\n\r\n        <div v-if=\"schedulingConflictList.length\" class=\"resource-notes-section text-danger\">\r\n            <div class=\"resource-notes-header\">Conflicts</div>\r\n            <div v-for=\"conflict in schedulingConflictList\" :key=\"`conflict-${conflict.ScheduleId}-${conflict.LocationId}`\" class=\"resource-schedule-conflict\">\r\n                {{ conflict.ScheduleName }}\r\n                <template v-if=\"conflict.LocationName\">\r\n                    - {{ conflict.LocationName }}\r\n                </template>\r\n            </div>\r\n        </div>\r\n\r\n        <div v-if=\"preferenceList.length\" class=\"resource-notes-section\">\r\n            <div class=\"resource-notes-header\">Preference</div>\r\n            <div v-for=\"preference in preferenceList\" :key=\"`preference-${preference.ScheduleId}-${preference.LocationId}`\" class=\"resource-preference\">\r\n                {{ preference.ScheduleName }}\r\n                <template v-if=\"preference.LocationName\">\r\n                    - {{ preference.LocationName }}\r\n                </template>\r\n            </div>\r\n        </div>\r\n\r\n        <div v-if=\"scheduledList.length\" class=\"resource-notes-section\">\r\n            <div class=\"resource-notes-header\">Assignments</div>\r\n            <div v-for=\"scheduled in scheduledList\" :key=\"`scheduled-${scheduled.ScheduleId}-${scheduled.LocationId}`\" class=\"resource-scheduled\">\r\n                {{ scheduled.ScheduleName }}\r\n                <template v-if=\"scheduled.LocationName\">\r\n                    - {{ scheduled.LocationName }}\r\n                </template>\r\n            </div>\r\n        </div>\r\n\r\n        <div v-if=\"hasNote\" class=\"resource-notes-section\">\r\n            {{ resource.Note }}\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, PropType } from \"vue\";\r\n    import { ISchedulerResource, ISchedulerResourceAssignment } from \"./types.partial\";\r\n\r\n    const props = defineProps({\r\n        resource: {\r\n            type: Object as PropType<ISchedulerResource>,\r\n            required: true\r\n        },\r\n\r\n        disabled: {\r\n            type: Boolean as PropType<boolean>,\r\n            required: true\r\n        }\r\n    });\r\n\r\n    // #region Computed Values\r\n\r\n    const cssClass = computed((): string => {\r\n        return `resource-notes${(props.disabled ? \" resource-disabled\" : \"\")}`;\r\n    });\r\n\r\n    const preferenceList = computed((): ISchedulerResourceAssignment[] => {\r\n        return props.resource\r\n            ?.ResourcePreferenceList\r\n            ?.filter((a: ISchedulerResourceAssignment) => a.ScheduleName) ?? [];\r\n    });\r\n\r\n    const scheduledList = computed((): ISchedulerResourceAssignment[] => {\r\n        return props.resource\r\n            ?.ResourceScheduledList\r\n            ?.filter((a: ISchedulerResourceAssignment) => a.ScheduleName) ?? [];\r\n    });\r\n\r\n    const hasBlackoutConflict = computed((): boolean => {\r\n        return props.resource?.HasBlackoutConflict;\r\n    });\r\n\r\n    const hasGroupRequirementsConflict = computed((): boolean => {\r\n        return props.resource?.HasGroupRequirementsConflict;\r\n    });\r\n\r\n    const schedulingConflictList = computed((): ISchedulerResourceAssignment[] => {\r\n        return props.resource\r\n            ?.SchedulingConflicts\r\n            ?.filter((a: ISchedulerResourceAssignment) => a.ScheduleName) ?? [];\r\n    });\r\n\r\n    const hasNote = computed((): boolean => {\r\n        return !!props.resource?.Note;\r\n    });\r\n\r\n    const shouldShow = computed((): boolean => {\r\n        return !!(\r\n            preferenceList.value?.length\r\n            || scheduledList.value?.length\r\n            || hasBlackoutConflict.value\r\n            || hasGroupRequirementsConflict.value\r\n            || schedulingConflictList.value?.length\r\n            || hasNote\r\n        );\r\n    });\r\n\r\n    // #endregion\r\n</script>\r\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <RockFormField v-model=\"selectedResources\"\r\n                   formGroupClasses=\"check-box-list\"\r\n                   name=\"check-box-list\">\r\n        <div class=\"control-wrapper\">\r\n            <div class=\"controls rockcheckboxlist rockcheckboxlist-vertical input-group\">\r\n                <div v-for=\"resource in resources\" :key=\"resource.PersonId\" class=\"checkbox resource\">\r\n                    <label :for=\"resource.PersonId.toString()\">\r\n                        <input\r\n                               type=\"checkbox\"\r\n                               v-model=\"selectedResources\"\r\n                               :id=\"resource.PersonId.toString()\"\r\n                               :name=\"resource.PersonId.toString()\"\r\n                               :value=\"resource.PersonId\"\r\n                               :disabled=\"disabled || getIsDisabled(resource)\" />\r\n                        <span class=\"label-text resource-name\">\r\n                            {{ resource.PersonName }}\r\n                            <span v-if=\"resource.GroupRole?.Name\" class=\"small text-muted\">\r\n                                {{ resource.GroupRole.Name }}\r\n                            </span>\r\n                        </span>\r\n                    </label>\r\n                    <ResourceNotes :resource=\"resource\" :disabled=\"getIsDisabled(resource)\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </RockFormField>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { PropType } from \"vue\";\r\n    import ResourceNotes from \"./resourceNotes.partial.obs\";\r\n    import { ISchedulerResource } from \"./types.partial\";\r\n    import RockFormField from \"@Obsidian/Controls/rockFormField.obs\";\r\n    import { useVModelPassthrough } from \"@Obsidian/Utility/component\";\r\n\r\n    const props = defineProps({\r\n        modelValue: {\r\n            type: Array as PropType<number[]>,\r\n            required: true\r\n        },\r\n\r\n        resources: {\r\n            type: Array as PropType<ISchedulerResource[]>,\r\n            required: true\r\n        },\r\n\r\n        disabled: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        }\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"update:modelValue\"): void\r\n    }>();\r\n\r\n    // #region Values\r\n\r\n    const selectedResources = useVModelPassthrough(props, \"modelValue\", emit);\r\n\r\n    // #endregion\r\n\r\n    // #region Functions\r\n\r\n    /**\r\n     * Gets whether this resource should be disabled for scheduling.\r\n     *\r\n     * @param resource The resource to check.\r\n     */\r\n    function getIsDisabled(resource: ISchedulerResource): boolean {\r\n        return resource.HasBlackoutConflict || resource.HasGroupRequirementsConflict;\r\n    }\r\n\r\n    // #endregion\r\n</script>\r\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <TextBox v-model=\"nameFilter\"\r\n             placeholder=\"Search\"\r\n             size=\"small\"\r\n             :disabled=\"disabled\">\r\n        <template #inputGroupPrepend>\r\n            <div class=\"input-group-addon\">\r\n                <i class=\"fa fa-search\"></i>\r\n            </div>\r\n        </template>\r\n        <template #inputGroupAppend>\r\n            <div :class=\"clearButtonCssClass\" @click=\"onClearClick\">\r\n                <i :class=\"clearIconCssClass\"></i>\r\n            </div>\r\n        </template>\r\n    </TextBox>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, PropType } from \"vue\";\r\n    import TextBox from \"@Obsidian/Controls/textBox.obs\";\r\n    import { useVModelPassthrough } from \"@Obsidian/Utility/component\";\r\n\r\n    const props = defineProps({\r\n        modelValue: {\r\n            type: String as PropType<string>,\r\n            required: true\r\n        },\r\n\r\n        disabled: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        }\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"update:modelValue\"): void\r\n    }>();\r\n\r\n    // #region Values\r\n\r\n    const nameFilter = useVModelPassthrough(props, \"modelValue\", emit);\r\n\r\n    // #endregion Values\r\n\r\n    // #region Computed Values\r\n\r\n    const isDisabled = computed((): boolean => {\r\n        return props.disabled;\r\n    });\r\n\r\n    const hasFilter = computed((): boolean => {\r\n        return !!nameFilter.value;\r\n    });\r\n\r\n    const clearButtonCssClass = computed((): Record<string, boolean> => {\r\n        return {\r\n            \"input-group-addon\": true,\r\n            \"clickable\": !isDisabled.value && hasFilter.value\r\n        };\r\n    });\r\n\r\n    const clearIconCssClass = computed((): Record<string, boolean> => {\r\n        return {\r\n            \"fa fa-times\": true,\r\n            \"text-muted\": isDisabled.value || !hasFilter.value\r\n        };\r\n    });\r\n\r\n    // #endregion Computed Values\r\n\r\n    // #region Event Handlers\r\n\r\n    /**\r\n     * Event handler for when the individual clicks the clear button in\r\n     * the name filter text box.\r\n     */\r\n    function onClearClick(): void {\r\n        if (isDisabled.value) {\r\n            return;\r\n        }\r\n\r\n        nameFilter.value = \"\";\r\n    }\r\n\r\n    // #endregion Event Handlers\r\n</script>\r\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <Modal v-model=\"isVisible\"\r\n           title=\"Select Individuals\"\r\n           saveText=\"Assign\"\r\n           :subtitle=\"occurrenceTitle\"\r\n           :isSaveButtonDisabled=\"isSaveButtonDisabled\"\r\n           @save=\"onSave\">\r\n\r\n        <NotificationBox v-if=\"loadResourceSettingsErrorMessage\" :alertType=\"AlertType.Warning\">\r\n            {{ loadResourceSettingsErrorMessage }}\r\n        </NotificationBox>\r\n\r\n        <template v-else>\r\n\r\n            <div class=\"d-md-flex justify-content-md-between\">\r\n\r\n                <div class=\"resource-sources\">\r\n                    <template v-if=\"primarySourceTypeItems.length > 1\">\r\n                        <!-- Desktop -->\r\n                        <div class=\"d-none d-md-block form-group\">\r\n                            <ButtonGroup v-model=\"selectedPrimarySourceType\"\r\n                                         :items=\"primarySourceTypeItems\"\r\n                                         :disabled=\"isBusy\"\r\n                                         @update:modelValue=\"onSettingsSelectionChanged\" />\r\n                        </div>\r\n\r\n                        <!-- Mobile -->\r\n                        <div class=\"d-md-none form-group\">\r\n                            <DropDownList v-model=\"selectedPrimarySourceType\"\r\n                                          :items=\"primarySourceTypeItems\"\r\n                                          :showBlankItem=\"false\"\r\n                                          :disabled=\"isBusy\"\r\n                                          @update:modelValue=\"onSettingsSelectionChanged\" />\r\n                        </div>\r\n                    </template>\r\n\r\n                    <div v-if=\"selectedSourceTypeIsAlternateGroup\" class=\"form-group\">\r\n                        <GroupPicker v-model=\"selectedAlternateGroup\"\r\n                                     :disabled=\"isBusy\"\r\n                                     @update:modelValue=\"onSettingsSelectionChanged\" />\r\n                    </div>\r\n\r\n                    <div v-if=\"selectedSourceTypeIsDataView\" class=\"form-group\">\r\n                        <DataViewPicker v-model=\"selectedDataView\"\r\n                                        :entityTypeGuid=\"EntityType.Person\"\r\n                                        :disabled=\"isBusy\"\r\n                                        @update:modelValue=\"onSettingsSelectionChanged\" />\r\n                    </div>\r\n\r\n                    <h4 v-if=\"groupName\">{{ groupName }}</h4>\r\n\r\n                    <template v-if=\"selectedSourceTypeIsGroup\">\r\n                        <!-- Desktop -->\r\n                        <div class=\"d-none d-md-block form-group\">\r\n                            <ButtonGroup v-model=\"selectedSecondarySourceType\"\r\n                                         :items=\"secondarySourceTypeItems\"\r\n                                         :btnSize=\"BtnSize.ExtraSmall\"\r\n                                         :disabled=\"isBusy\"\r\n                                         @update:modelValue=\"onSettingsSelectionChanged\" />\r\n                        </div>\r\n\r\n                        <!-- Mobile -->\r\n                        <div class=\"d-md-none form-group\">\r\n                            <DropDownList v-model=\"selectedSecondarySourceType\"\r\n                                          :items=\"secondarySourceTypeItems\"\r\n                                          :showBlankItem=\"false\"\r\n                                          :disabled=\"isBusy\"\r\n                                          @update:modelValue=\"onSettingsSelectionChanged\" />\r\n                        </div>\r\n                    </template>\r\n                </div>\r\n\r\n                <div :class=\"remainingSpotsAndNameFilterCssClass\">\r\n                    <div v-if=\"remainingResourceSpots\" class=\"mb-0 mb-md-2\">\r\n                        <span :class=\"remainingResourceSpots.cssClass\">\r\n                            {{ remainingResourceSpots.label }}\r\n                        </span>\r\n                    </div>\r\n                    <div :class=\"{ 'mb-2 mb-md-0': remainingResourceSpots }\">\r\n                        <ResourceFilterByName v-model=\"resourceNameFilter\"\r\n                                              :disabled=\"isNameFilterDisabled\" />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <Loading :isLoading=\"isBusy\">\r\n                <NotificationBox v-if=\"unsuccessfulAssignmentPersonIds.length\" :alertType=\"AlertType.Warning\">\r\n                    <template v-if=\"!unsuccessfulAssignmentMessages.length\">\r\n                        Some assignments were unsuccessful.\r\n                    </template>\r\n                    <template v-else-if=\"unsuccessfulAssignmentMessages.length === 1\">\r\n                        {{ unsuccessfulAssignmentMessages[0] }}\r\n                    </template>\r\n                    <ul v-else>\r\n                        <li v-for=\"(message, index) in unsuccessfulAssignmentMessages\" :key=\"index\">\r\n                            {{ message }}\r\n                        </li>\r\n                    </ul>\r\n                </NotificationBox>\r\n\r\n                <NotificationBox v-if=\"loadResourcesErrorMessage\" :alertType=\"AlertType.Warning\">\r\n                    {{ loadResourcesErrorMessage }}\r\n                </NotificationBox>\r\n\r\n                <NotificationBox v-else-if=\"noResourcesMessage\" :alertType=\"AlertType.Info\">\r\n                    {{ noResourcesMessage }}\r\n                </NotificationBox>\r\n\r\n                <AvailableResources v-else v-model=\"selectedPersonIds\"\r\n                                    :resources=\"filteredResources\"\r\n                                    :disabled=\"isBusy\" />\r\n            </Loading>\r\n\r\n        </template>\r\n\r\n    </Modal>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, inject, nextTick, PropType, ref, watch } from \"vue\";\r\n    import AvailableResources from \"./availableResources.partial.obs\";\r\n    import ResourceFilterByName from \"./resourceFilterByName.partial.obs\";\r\n    import { IRemainingResourceSpots, ISchedulerResource, ISchedulerResourceParameters, OccurrenceDateTitle } from \"./types.partial\";\r\n    import ButtonGroup from \"@Obsidian/Controls/buttonGroup.obs\";\r\n    import DataViewPicker from \"@Obsidian/Controls/dataViewPicker.obs\";\r\n    import DropDownList from \"@Obsidian/Controls/dropDownList.obs\";\r\n    import GroupPicker from \"@Obsidian/Controls/groupPicker.obs\";\r\n    import Loading from \"@Obsidian/Controls/loading.obs\";\r\n    import Modal from \"@Obsidian/Controls/modal.obs\";\r\n    import NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\n    import { ResourceListSourceType, ResourceListSourceTypeDescription } from \"@Obsidian/Enums/Blocks/Group/Scheduling/resourceListSourceType\";\r\n    import { AlertType } from \"@Obsidian/Enums/Controls/alertType\";\r\n    import { BtnSize } from \"@Obsidian/Enums/Controls/btnSize\";\r\n    import { EntityType } from \"@Obsidian/SystemGuids/entityType\";\r\n    import { HttpUrlParams } from \"@Obsidian/Types/Utility/http\";\r\n    import { useInvokeBlockAction } from \"@Obsidian/Utility/block\";\r\n    import { useVModelPassthrough } from \"@Obsidian/Utility/component\";\r\n    import { useHttp } from \"@Obsidian/Utility/http\";\r\n    import { toNumber } from \"@Obsidian/Utility/numberUtils\";\r\n    import { GroupSchedulerApplyResourceSettingsBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduler/groupSchedulerApplyResourceSettingsBag\";\r\n    import { GroupSchedulerOccurrenceBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduler/groupSchedulerOccurrenceBag\";\r\n    import { GroupSchedulerResourceSettingsBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduler/groupSchedulerResourceSettingsBag\";\r\n    import { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\n\r\n    const invokeBlockAction = useInvokeBlockAction();\r\n    const http = useHttp();\r\n    const baseApiUrl = \"/api/Attendances\";\r\n\r\n    const props = defineProps({\r\n        isVisible: {\r\n            type: Boolean as PropType<boolean>,\r\n            required: true\r\n        },\r\n\r\n        occurrence: {\r\n            type: Object as PropType<GroupSchedulerOccurrenceBag>,\r\n            required: true\r\n        },\r\n\r\n        spotsFilledCount: {\r\n            type: Number as PropType<number>,\r\n            required: true\r\n        }\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"update:isVisible\"): void,\r\n        (e: \"partialAssignmentSuccess\"): void\r\n    }>();\r\n\r\n    const primarySourceTypeGroupValue = \"group\";\r\n\r\n    const primarySourceTypes = [\r\n        // \"Group\" will be added as the first item (see below).\r\n        ResourceListSourceType.AlternateGroup,\r\n        ResourceListSourceType.ParentGroup,\r\n        ResourceListSourceType.DataView\r\n    ];\r\n\r\n    const secondarySourceTypes = [\r\n        ResourceListSourceType.GroupMembers,\r\n        ResourceListSourceType.GroupMatchingPreference,\r\n        ResourceListSourceType.GroupMatchingAssignment\r\n    ];\r\n\r\n    // #region Values\r\n\r\n    const isVisible = useVModelPassthrough(props, \"isVisible\", emit);\r\n\r\n    const occurrenceDateTitle = inject(OccurrenceDateTitle, ref(\"\"));\r\n\r\n    const isLoadingResourceSettings = ref(false);\r\n    const loadResourceSettingsErrorMessage = ref(\"\");\r\n\r\n    const isLoadingResources = ref(false);\r\n    const loadResourcesInfoMessage = ref(\"\");\r\n    const loadResourcesErrorMessage = ref(\"\");\r\n\r\n    const isAssigningResources = ref(false);\r\n    const unsuccessfulAssignmentPersonIds = ref<number[]>([]);\r\n    const unsuccessfulAssignmentMessages = ref<string[]>([]);\r\n\r\n    const resourceSettings = ref<GroupSchedulerResourceSettingsBag | null>(null);\r\n\r\n    const selectedPrimarySourceType = ref(\"\");\r\n    const selectedSecondarySourceType = ref(\"\");\r\n    const selectedAlternateGroup = ref<ListItemBag | null>(null);\r\n    const selectedDataView = ref<ListItemBag | null>(null);\r\n\r\n    const availableResources = ref<ISchedulerResource[]>([]);\r\n    const selectedPersonIds = ref<number[]>([]);\r\n\r\n    const resourceNameFilter = ref(\"\");\r\n\r\n    // #endregion\r\n\r\n    // #region Computed Values\r\n\r\n    const occurrenceTitle = computed((): string => {\r\n        const o = props.occurrence;\r\n        const titleParts: string[] = [];\r\n\r\n        if (o?.groupName) {\r\n            titleParts.push(o.groupName);\r\n        }\r\n\r\n        if (o?.locationName) {\r\n            titleParts.push(o.locationName);\r\n        }\r\n\r\n        if (o?.scheduleName) {\r\n            titleParts.push(o.scheduleName);\r\n        }\r\n\r\n        const friendlyOccurrenceDate = occurrenceDateTitle.value\r\n            ? ` (${occurrenceDateTitle.value})`\r\n            : \"\";\r\n\r\n        return titleParts.length\r\n            ? `${titleParts.join(\" - \")}${friendlyOccurrenceDate}`\r\n            : \"\";\r\n    });\r\n\r\n    const enabledSourceTypes = computed((): ResourceListSourceType[] => {\r\n        return resourceSettings.value?.enabledResourceListSourceTypes ?? [];\r\n    });\r\n\r\n    const secondarySourceTypeItems = computed((): { text: string, value: string }[] => {\r\n        return enabledSourceTypes.value\r\n            .filter((value: ResourceListSourceType) =>\r\n                secondarySourceTypes.some((secondary: ResourceListSourceType) => value === secondary)\r\n            )\r\n            .map((value: ResourceListSourceType) => ({\r\n                text: ResourceListSourceTypeDescription[value],\r\n                value: value.toString()\r\n            }));\r\n    });\r\n\r\n    const primarySourceTypeItems = computed((): { text: string, value: string }[] => {\r\n        const items = enabledSourceTypes.value\r\n            .filter((value: ResourceListSourceType) =>\r\n                primarySourceTypes.some((primary: ResourceListSourceType) => value === primary)\r\n            )\r\n            .map((value: ResourceListSourceType) => ({\r\n                text: ResourceListSourceTypeDescription[value],\r\n                value: value.toString()\r\n            }));\r\n\r\n        if (secondarySourceTypeItems.value.length) {\r\n            items.unshift({\r\n                text: \"Group\",\r\n                value: primarySourceTypeGroupValue\r\n            });\r\n        }\r\n\r\n        return items;\r\n    });\r\n\r\n    const selectedSourceType = computed((): ResourceListSourceType | undefined => {\r\n        if (!selectedPrimarySourceType.value) {\r\n            return;\r\n        }\r\n\r\n        if (selectedPrimarySourceType.value === primarySourceTypeGroupValue) {\r\n            return toNumber(selectedSecondarySourceType.value) as ResourceListSourceType;\r\n        }\r\n\r\n        return toNumber(selectedPrimarySourceType.value) as ResourceListSourceType;\r\n    });\r\n\r\n    const selectedSourceTypeIsGroup = computed((): boolean => {\r\n        return selectedPrimarySourceType.value === primarySourceTypeGroupValue;\r\n    });\r\n\r\n    const selectedSourceTypeIsAlternateGroup = computed((): boolean => {\r\n        return selectedSourceType.value === ResourceListSourceType.AlternateGroup;\r\n    });\r\n\r\n    const selectedSourceTypeIsParentGroup = computed((): boolean => {\r\n        return selectedSourceType.value === ResourceListSourceType.ParentGroup;\r\n    });\r\n\r\n    const selectedSourceTypeIsDataView = computed((): boolean => {\r\n        return selectedSourceType.value === ResourceListSourceType.DataView;\r\n    });\r\n\r\n    const groupName = computed((): string | null | undefined => {\r\n        if (selectedSourceTypeIsGroup.value) {\r\n            return props.occurrence?.groupName;\r\n        }\r\n        else if (selectedSourceTypeIsParentGroup.value) {\r\n            return props.occurrence?.parentGroupName;\r\n        }\r\n    });\r\n\r\n    const remainingResourceSpots = computed((): IRemainingResourceSpots | undefined => {\r\n        let label: string | undefined;\r\n        let state: \"info\" | \"warning\" | undefined;\r\n\r\n        const min = props.occurrence?.minimumCapacity ?? 0;\r\n        const desired = props.occurrence?.desiredCapacity ?? 0;\r\n        const max = props.occurrence?.maximumCapacity ?? 0;\r\n        const filled = props.spotsFilledCount + selectedPersonIds.value?.length ?? 0;\r\n\r\n        if (min > 0 && filled < min) {\r\n            label = `Required for Minimum Capacity: ${min - filled}`;\r\n            state = \"warning\";\r\n        }\r\n        else if (desired > 0 && filled < desired) {\r\n            label = `Required for Desired Capacity: ${desired - filled}`;\r\n            state = \"info\";\r\n        }\r\n        else if (max > 0) {\r\n            label = `Available for Max Capacity: ${filled > max ? 0 : max - filled}`;\r\n            state = \"warning\";\r\n        }\r\n\r\n        if (label && state) {\r\n            return {\r\n                label,\r\n                cssClass: `label label-${state} align-self-md-start`\r\n            };\r\n        }\r\n    });\r\n\r\n    const remainingSpotsAndNameFilterCssClass = computed((): string => {\r\n        const justifyClass = remainingResourceSpots.value\r\n            ? \"justify-content-between\"\r\n            : \"justify-content-end\";\r\n\r\n        return `d-flex flex-column-reverse flex-md-column ${justifyClass} align-items-start align-items-md-end form-group`;\r\n    });\r\n\r\n    const groupId = computed((): number => {\r\n        return props.occurrence?.groupId ?? 0;\r\n    });\r\n\r\n    const parentGroupId = computed((): number | null | undefined => {\r\n        return props.occurrence?.parentGroupId;\r\n    });\r\n\r\n    const locationIds = computed((): number[] => {\r\n        return props.occurrence\r\n            ? [props.occurrence.locationId]\r\n            : [];\r\n    });\r\n\r\n    const scheduleIds = computed((): number[] => {\r\n        return props.occurrence\r\n            ? [props.occurrence.scheduleId]\r\n            : [];\r\n    });\r\n\r\n    const sundayDate = computed((): string => {\r\n        return props.occurrence?.sundayDate ?? \"\";\r\n    });\r\n\r\n    const groupMemberFilterType = computed((): number => {\r\n        return resourceSettings.value?.resourceGroupMemberFilterType ?? 1;\r\n    });\r\n\r\n    const filteredResources = computed((): ISchedulerResource[] => {\r\n        // Remove unwanted whitespace.\r\n        const filter = resourceNameFilter.value\r\n            ?.trim()\r\n            .replace(/\\s+/g, \" \");\r\n\r\n        if (!filter || filter.length < 2) {\r\n            return availableResources.value;\r\n        }\r\n\r\n        let filterParts: string[];\r\n        let lastNameFilter: string;\r\n        let firstNameFilter: string;\r\n        let useOrComparison = false;\r\n\r\n        if (filter.includes(\",\")) {\r\n            // last, first\r\n            filterParts = filter.split(\",\");\r\n            lastNameFilter = filterParts[0].trim();\r\n            firstNameFilter = filterParts[1].trim();\r\n        }\r\n        else if (filter.includes(\" \")) {\r\n            // first last\r\n            filterParts = filter.split(\" \");\r\n            lastNameFilter = filterParts[1];\r\n            firstNameFilter = filterParts[0];\r\n        }\r\n        else {\r\n            // last OR first\r\n            lastNameFilter = filter;\r\n            firstNameFilter = filter;\r\n            useOrComparison = true;\r\n        }\r\n\r\n        lastNameFilter = lastNameFilter.toUpperCase();\r\n        firstNameFilter = firstNameFilter.toUpperCase();\r\n\r\n        return availableResources.value\r\n            .filter((resource: ISchedulerResource) => {\r\n                if (useOrComparison) {\r\n                    return !!(resource.PersonNickName?.toUpperCase().startsWith(firstNameFilter))\r\n                        || !!(resource.PersonLastName?.toUpperCase().startsWith(lastNameFilter));\r\n                }\r\n                else {\r\n                    return !!(resource.PersonNickName?.toUpperCase().startsWith(firstNameFilter))\r\n                        && !!(resource.PersonLastName?.toUpperCase().startsWith(lastNameFilter));\r\n                }\r\n            });\r\n    });\r\n\r\n    const noResourcesMessage = computed((): string => {\r\n        if (loadResourcesInfoMessage.value) {\r\n            return loadResourcesInfoMessage.value;\r\n        }\r\n\r\n        return filteredResources.value.length\r\n            ? \"\"\r\n            : \"No individuals available for selection.\";\r\n    });\r\n\r\n    const isBusy = computed((): boolean => {\r\n        return isLoadingResourceSettings.value || isLoadingResources.value || isAssigningResources.value;\r\n    });\r\n\r\n    const isNameFilterDisabled = computed((): boolean => {\r\n        return isBusy.value || !availableResources.value.length;\r\n    });\r\n\r\n    const isSaveButtonDisabled = computed((): boolean => {\r\n        return isBusy.value\r\n            || selectedSourceType.value === undefined\r\n            || !selectedPersonIds.value?.length;\r\n    });\r\n\r\n    // #endregion\r\n\r\n    // #region Functions\r\n\r\n    /**\r\n     * Gets the resource settings for this group scheduler occurrence.\r\n     */\r\n    async function getResourceSettings(): Promise<void> {\r\n        if (isLoadingResourceSettings.value) {\r\n            return;\r\n        }\r\n\r\n        isLoadingResourceSettings.value = true;\r\n        loadResourceSettingsErrorMessage.value = \"\";\r\n\r\n        const result = await invokeBlockAction<GroupSchedulerResourceSettingsBag>(\"GetResourceSettings\", { groupId: groupId.value });\r\n        if (!result.isSuccess) {\r\n            isLoadingResourceSettings.value = false;\r\n            loadResourceSettingsErrorMessage.value = result.errorMessage || \"Unknown error while trying to load settings.\";\r\n            return;\r\n        }\r\n\r\n        resourceSettings.value = result.data;\r\n\r\n        nextTick(() => {\r\n            isLoadingResourceSettings.value = false;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Updates settings-related values based on the currently-applied resource settings.\r\n     */\r\n    function updateSettingsValues(): void {\r\n        const sourceType = resourceSettings.value?.resourceListSourceType;\r\n        // A \"falsy\" check won't work here, as sourceType might be 0.\r\n        if (sourceType !== undefined) {\r\n            if (secondarySourceTypes.some((secondary: ResourceListSourceType) => secondary === sourceType)) {\r\n                selectedPrimarySourceType.value = primarySourceTypeGroupValue;\r\n                selectedSecondarySourceType.value = sourceType.toString();\r\n            }\r\n            else {\r\n                selectedPrimarySourceType.value = sourceType.toString();\r\n            }\r\n        }\r\n\r\n        selectedAlternateGroup.value = resourceSettings.value?.resourceAlternateGroup ?? null;\r\n        selectedDataView.value = resourceSettings.value?.resourceDataView ?? null;\r\n\r\n        getResources();\r\n    }\r\n\r\n    /**\r\n     * Gets the resources for this group scheduler occurrence, based on the currently-applied resource settings.\r\n     */\r\n    async function getResources(): Promise<void> {\r\n        if (isLoadingResources.value) {\r\n            return;\r\n        }\r\n\r\n        const sourceType = selectedSourceType.value;\r\n        if (sourceType === undefined) {\r\n            return;\r\n        }\r\n\r\n        const parameters: Partial<ISchedulerResourceParameters> = {\r\n            AttendanceOccurrenceGroupId: groupId.value,\r\n            AttendanceOccurrenceScheduleIds: scheduleIds.value,\r\n            AttendanceOccurrenceLocationIds: locationIds.value,\r\n            AttendanceOccurrenceSundayDate: sundayDate.value,\r\n            GroupMemberFilterType: groupMemberFilterType.value,\r\n            ResourceListSourceType: selectedSourceType.value\r\n        };\r\n\r\n        if (selectedSourceTypeIsGroup.value) {\r\n            parameters.ResourceGroupId = groupId.value;\r\n        }\r\n        else if (selectedSourceTypeIsAlternateGroup.value) {\r\n            if (!selectedAlternateGroup.value) {\r\n                availableResources.value = [];\r\n                loadResourcesInfoMessage.value = \"Select an alternate group to continue.\";\r\n                return;\r\n            }\r\n\r\n            parameters.ResourceGroupGuid = selectedAlternateGroup.value.value;\r\n        }\r\n        else if (selectedSourceTypeIsParentGroup.value) {\r\n            if (!parentGroupId.value) {\r\n                availableResources.value = [];\r\n                loadResourcesErrorMessage.value = \"No parent group available.\";\r\n                return;\r\n            }\r\n\r\n            parameters.ResourceGroupId = parentGroupId.value;\r\n        }\r\n        else if (selectedSourceTypeIsDataView.value) {\r\n            if (!selectedDataView.value) {\r\n                availableResources.value = [];\r\n                loadResourcesInfoMessage.value = \"Select a data view to continue.\";\r\n                return;\r\n            }\r\n\r\n            parameters.ResourceDataViewGuid = selectedDataView.value.value;\r\n        }\r\n\r\n        isLoadingResources.value = true;\r\n        loadResourcesInfoMessage.value = \"\";\r\n        loadResourcesErrorMessage.value = \"\";\r\n\r\n        const result = await http.post<ISchedulerResource[]>(`${baseApiUrl}/GetSchedulerResources`, null, parameters);\r\n        isLoadingResources.value = false;\r\n\r\n        if (!result.isSuccess) {\r\n            loadResourcesErrorMessage.value = result.errorMessage ?? \"Unknown error while trying to load available individuals.\";\r\n            return;\r\n        }\r\n\r\n        availableResources.value = result.data ?? [];\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Event Handlers\r\n\r\n    /**\r\n     * Handles resource settings selection changes.\r\n     */\r\n    async function onSettingsSelectionChanged(): Promise<void> {\r\n        if (isLoadingResourceSettings.value || selectedSourceType.value === undefined) {\r\n            return;\r\n        }\r\n\r\n        isLoadingResourceSettings.value = true;\r\n        loadResourceSettingsErrorMessage.value = \"\";\r\n\r\n        const bag: GroupSchedulerApplyResourceSettingsBag = {\r\n            groupId: groupId.value,\r\n            resourceListSourceType: selectedSourceType.value,\r\n            resourceAlternateGroupGuid: selectedAlternateGroup.value?.value,\r\n            resourceDataViewGuid: selectedDataView.value?.value\r\n        };\r\n\r\n        const result = await invokeBlockAction<GroupSchedulerResourceSettingsBag>(\"ApplyResourceSettings\", { bag });\r\n        if (!result.isSuccess) {\r\n            isLoadingResourceSettings.value = false;\r\n            loadResourceSettingsErrorMessage.value = result.errorMessage || \"Unknown error while trying to apply settings.\";\r\n            return;\r\n        }\r\n\r\n        resourceSettings.value = result.data;\r\n\r\n        nextTick(() => {\r\n            isLoadingResourceSettings.value = false;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handles the `save` event of the select individuals modal.\r\n     */\r\n    async function onSave(): Promise<void> {\r\n        if (isAssigningResources.value || !selectedPersonIds.value?.length) {\r\n            return;\r\n        }\r\n\r\n        isAssigningResources.value = true;\r\n        unsuccessfulAssignmentPersonIds.value = [];\r\n        unsuccessfulAssignmentMessages.value = [];\r\n\r\n        const attendanceOccurrenceId = props.occurrence?.attendanceOccurrenceId ?? 0;\r\n        let resourcesWereAssigned = false;\r\n\r\n        await Promise.all(selectedPersonIds.value.map(async (personId: number) => {\r\n            const params: HttpUrlParams = {\r\n                personId,\r\n                attendanceOccurrenceId\r\n            };\r\n\r\n            // Use this logic instead of what's below if we decide we no longer want to allow conflicts.\r\n            // let result = await http.get(`${baseApiUrl}/CanSchedulePerson`, params);\r\n            // if (!result.isSuccess) {\r\n            //     unsuccessfulAssignmentPersonIds.value.push(personId);\r\n            //     if (result.errorMessage) {\r\n            //         unsuccessfulAssignmentMessages.value.push(result.errorMessage);\r\n            //     }\r\n            // }\r\n            // else {\r\n            //     result = await http.doApiCall(\"PUT\", `${baseApiUrl}/ScheduledPersonAddPending`, params);\r\n            //     if (!result.isSuccess) {\r\n            //         unsuccessfulAssignmentPersonIds.value.push(personId);\r\n            //     }\r\n            //     else {\r\n            //         resourcesWereAssigned = true;\r\n            //     }\r\n            // }\r\n\r\n            const result = await http.doApiCall(\"PUT\", `${baseApiUrl}/ScheduledPersonAddPending`, params);\r\n            if (!result.isSuccess) {\r\n                unsuccessfulAssignmentPersonIds.value.push(personId);\r\n            }\r\n            else {\r\n                resourcesWereAssigned = true;\r\n            }\r\n        }));\r\n\r\n        if (unsuccessfulAssignmentPersonIds.value.length) {\r\n            isAssigningResources.value = false;\r\n            selectedPersonIds.value = [...unsuccessfulAssignmentPersonIds.value];\r\n            getResources();\r\n\r\n            if (resourcesWereAssigned) {\r\n                emit(\"partialAssignmentSuccess\");\r\n            }\r\n        }\r\n        else {\r\n            isVisible.value = false;\r\n        }\r\n    }\r\n\r\n    // #endregion\r\n\r\n    watch(isVisible, () => {\r\n        if (isVisible.value) {\r\n            getResourceSettings();\r\n            resourceNameFilter.value = \"\";\r\n        }\r\n        else {\r\n            isLoadingResourceSettings.value = false;\r\n            isLoadingResources.value = false;\r\n            isAssigningResources.value = false;\r\n            availableResources.value = [];\r\n            selectedPersonIds.value = [];\r\n            unsuccessfulAssignmentPersonIds.value = [];\r\n            unsuccessfulAssignmentMessages.value = [];\r\n        }\r\n    });\r\n\r\n    watch(resourceSettings, () => {\r\n        updateSettingsValues();\r\n    });\r\n</script>\r\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <NotificationBox v-if=\"!isValidAttendanceOccurrence\" :alertType=\"AlertType.Warning\">\r\n        Unable to schedule this occurrence.\r\n    </NotificationBox>\r\n\r\n    <div v-else class=\"location js-schedule-location\">\r\n        <div class=\"d-flex\">\r\n            <span class=\"d-block text-sm\">\r\n                {{ title }}\r\n            </span>\r\n        </div>\r\n\r\n        <NotificationBox v-if=\"updateResourceWarningMessage\" :alertType=\"AlertType.Warning\">\r\n            {{ updateResourceWarningMessage }}\r\n        </NotificationBox>\r\n\r\n        <NotificationBox v-if=\"getResourcesWarningMessage\" :alertType=\"AlertType.Warning\">\r\n            {{ getResourcesWarningMessage }}\r\n        </NotificationBox>\r\n\r\n        <ul v-else class=\"list-group list-group-sched\">\r\n\r\n            <ScheduledResource v-for=\"resource in resources\" :key=\"resource.AttendanceId\"\r\n                               :occurrence=\"occurrence\"\r\n                               :resource=\"resource\"\r\n                               v-model:updateResourceWarningMessage=\"updateResourceWarningMessage\"\r\n                               :disabled=\"schedulingDisabled\"\r\n                               @resourceUpdated=\"onResourceUpdated\"\r\n                               @preferenceUpdated=\"$emit('preferenceUpdated', resource.PersonId)\"></ScheduledResource>\r\n\r\n            <li class=\"list-group-item d-flex align-items-center\">\r\n                <ProgressBar :progress=\"scheduleProgress\"></ProgressBar>\r\n                <div v-no-drag-scroll>\r\n                    <RockButton type=\"button\"\r\n                                class=\"circle-plus\"\r\n                                :disabled=\"schedulingDisabled\"\r\n                                @click=\"onSelectIndividualsClick\">\r\n                        <Loading :isLoading=\"isLoadingResources\" :isSmall=\"true\">\r\n                            <i class=\"fa fa-plus\"></i>\r\n                        </Loading>\r\n                    </RockButton>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n\r\n        <SelectIndividuals v-model:isVisible=\"isSelectingIndividuals\"\r\n                           :occurrence=\"occurrence\"\r\n                           :spotsFilledCount=\"totalCount\"\r\n                           @partialAssignmentSuccess=\"getCurrentResources\"></SelectIndividuals>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, inject, PropType, ref, watch } from \"vue\";\r\n    import ProgressBar from \"./progressBar.partial.obs\";\r\n    import ScheduledResource from \"./scheduledResource.partial.obs\";\r\n    import SelectIndividuals from \"./selectIndividuals.partial.obs\";\r\n    import { IScheduleProgress, ISchedulerResourceAttend, ReloadAllOccurrences, ReloadOccurrencesContainingResource, ReloadScheduleOccurrences, ResourceAction } from \"./types.partial\";\r\n    import Loading from \"@Obsidian/Controls/loading.obs\";\r\n    import NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\n    import RockButton from \"@Obsidian/Controls/rockButton.obs\";\r\n    import { NoDragScroll as vNoDragScroll } from \"@Obsidian/Directives/dragScroll\";\r\n    import { AlertType } from \"@Obsidian/Enums/Controls/alertType\";\r\n    import { ScheduledAttendanceItemStatus, ScheduledAttendanceItemStatusDescription } from \"@Obsidian/Enums/Event/scheduledAttendanceItemStatus\";\r\n    import { useHttp } from \"@Obsidian/Utility/http\";\r\n    import { GroupSchedulerOccurrenceBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduler/groupSchedulerOccurrenceBag\";\r\n\r\n    const http = useHttp();\r\n\r\n    const props = defineProps({\r\n        occurrence: {\r\n            type: Object as PropType<GroupSchedulerOccurrenceBag>,\r\n            required: true\r\n        },\r\n\r\n        disabled: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        }\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"resourceListUpdated\", attendanceOccurrenceId: number): void,\r\n        (e: \"preferenceUpdated\", personId: number): void\r\n    }>();\r\n\r\n    // #region Values\r\n\r\n    const isSelectingIndividuals = ref(false);\r\n    const isLoadingResources = ref(true);\r\n    const getResourcesWarningMessage = ref(\"\");\r\n    const updateResourceWarningMessage = ref(\"\");\r\n\r\n    const resources = ref<ISchedulerResourceAttend[]>([]);\r\n\r\n    const reloadAllOccurrences = inject(ReloadAllOccurrences, ref(false));\r\n    const reloadScheduleOccurrences = inject(ReloadScheduleOccurrences, ref(null));\r\n    const reloadOccurrencesContainingResource = inject(ReloadOccurrencesContainingResource, ref(null));\r\n\r\n    // #endregion\r\n\r\n    // #region Computed Values\r\n\r\n    const title = computed((): string => {\r\n        return props.occurrence?.locationName || \"Location\";\r\n    });\r\n\r\n    const attendanceOccurrenceId = computed((): number => {\r\n        return props.occurrence?.attendanceOccurrenceId ?? 0;\r\n    });\r\n\r\n    const isValidAttendanceOccurrence = computed((): boolean => {\r\n        return attendanceOccurrenceId.value > 0;\r\n    });\r\n\r\n    const confirmedCount = computed((): number => {\r\n        const confirmed = ScheduledAttendanceItemStatusDescription[ScheduledAttendanceItemStatus.Confirmed].toLowerCase();\r\n        return resources.value\r\n            .filter((r: ISchedulerResourceAttend) => r.ConfirmationStatus === confirmed)\r\n            .length;\r\n    });\r\n\r\n    const pendingCount = computed((): number => {\r\n        const pending = ScheduledAttendanceItemStatusDescription[ScheduledAttendanceItemStatus.Pending].toLowerCase();\r\n        return resources.value\r\n            .filter((r: ISchedulerResourceAttend) => r.ConfirmationStatus === pending)\r\n            .length;\r\n    });\r\n\r\n    const declinedCount = computed((): number => {\r\n        const declined = ScheduledAttendanceItemStatusDescription[ScheduledAttendanceItemStatus.Declined].toLowerCase();\r\n        return resources.value\r\n            .filter((r: ISchedulerResourceAttend) => r.ConfirmationStatus === declined)\r\n            .length;\r\n    });\r\n\r\n    const totalCount = computed((): number => {\r\n        return confirmedCount.value + pendingCount.value;\r\n    });\r\n\r\n    const scheduleProgress = computed((): IScheduleProgress => {\r\n        let minimumCapacity: number | null | undefined;\r\n        let desiredCapacity: number | null | undefined;\r\n        let maximumCapacity: number | null | undefined;\r\n\r\n        if (props.occurrence) {\r\n            minimumCapacity = props.occurrence.minimumCapacity;\r\n            desiredCapacity = props.occurrence.desiredCapacity;\r\n            maximumCapacity = props.occurrence.maximumCapacity;\r\n        }\r\n\r\n        const progress = {\r\n            minimumCapacity,\r\n            desiredCapacity,\r\n            maximumCapacity,\r\n            confirmedCount: confirmedCount.value,\r\n            pendingCount: pendingCount.value,\r\n            declinedCount: declinedCount.value\r\n        };\r\n\r\n        return progress;\r\n    });\r\n\r\n    const schedulingDisabled = computed((): boolean => {\r\n        return props.disabled || isLoadingResources.value || !props.occurrence.isSchedulingEnabled;\r\n    });\r\n\r\n    // #endregion\r\n\r\n    // #region Functions\r\n\r\n    async function getCurrentResources(): Promise<void> {\r\n        isLoadingResources.value = true;\r\n        getResourcesWarningMessage.value = \"\";\r\n        updateResourceWarningMessage.value = \"\";\r\n\r\n        const result = await http.get<ISchedulerResourceAttend[]>(`/api/Attendances/GetAttendingSchedulerResources?attendanceOccurrenceId=${attendanceOccurrenceId.value}`);\r\n        isLoadingResources.value = false;\r\n\r\n        if (!result.isSuccess) {\r\n            getResourcesWarningMessage.value = result.errorMessage ?? \"Unknown error when trying to get current resources.\";\r\n            return;\r\n        }\r\n\r\n        resources.value = result.data ?? [];\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Event Handlers\r\n\r\n    /**\r\n     * Handles the `resourceUpdated` event of the scheduled resource component.\r\n     *\r\n     * @param action The update action performed.\r\n     */\r\n    function onResourceUpdated(action: ResourceAction): void {\r\n        getCurrentResources();\r\n\r\n        if (action === ResourceAction.Remove) {\r\n            emit(\"resourceListUpdated\", attendanceOccurrenceId.value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles the click event of the select individuals button.\r\n     */\r\n    function onSelectIndividualsClick(): void {\r\n        isSelectingIndividuals.value = true;\r\n    }\r\n\r\n    // #endregion\r\n\r\n    getCurrentResources();\r\n\r\n    watch(() => props.occurrence, () => {\r\n        getCurrentResources();\r\n    });\r\n\r\n    watch(isSelectingIndividuals, () => {\r\n        if (!isSelectingIndividuals.value) {\r\n            getCurrentResources();\r\n            emit(\"resourceListUpdated\", attendanceOccurrenceId.value);\r\n        }\r\n    });\r\n\r\n    watch(reloadAllOccurrences, () => {\r\n        if (reloadAllOccurrences.value) {\r\n            getCurrentResources();\r\n        }\r\n    });\r\n\r\n    watch(reloadScheduleOccurrences, ((triggeredById: number | null) => {\r\n        if (triggeredById && triggeredById !== attendanceOccurrenceId.value) {\r\n            getCurrentResources();\r\n        }\r\n    }));\r\n\r\n    watch(reloadOccurrencesContainingResource, ((personId: number | null) => {\r\n        if (personId && resources.value\r\n            ?.some((r: ISchedulerResourceAttend) => r?.PersonId === personId)) {\r\n            getCurrentResources();\r\n        }\r\n    }));\r\n</script>\r\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <Modal v-model=\"isVisible\"\r\n           modalWrapperClasses=\"group-scheduler-v2 provide-location-modal\"\r\n           saveText=\"Save\"\r\n           :title=\"title\"\r\n           :isSaveButtonDisabled=\"isSaveButtonDisabled\"\r\n           @save=\"onSave\">\r\n\r\n        <NotificationBox v-if=\"isDataMissing\" :alertType=\"AlertType.Warning\">\r\n            {{ missingDataErrorMessage }}\r\n        </NotificationBox>\r\n\r\n        <template v-else>\r\n            <NotificationBox v-if=\"blockActionErrorMessage\" :alertType=\"AlertType.Warning\">\r\n                {{ blockActionErrorMessage }}\r\n            </NotificationBox>\r\n\r\n            <LoadingIndicator v-if=\"isLoadingResources\" :delay=\"500\" />\r\n\r\n            <div v-for=\"resource in resources\" class=\"sched-group-provide-location-resource\">\r\n                <div class=\"sched-group-provide-location-resource-name\">\r\n                    {{ resource.PersonName }}\r\n                </div>\r\n\r\n                <DropDownList v-model=\"locationIdByPersonIds[resource.PersonId]\"\r\n                              :items=\"locations\"\r\n                              :validationTitle=\"`Location for ${resource.PersonName}`\"\r\n                              inputClasses=\"input-width-lg\"\r\n                              :disabled=\"isBusy\" />\r\n            </div>\r\n        </template>\r\n\r\n    </Modal>\r\n</template>\r\n\r\n<!-- These styles cannot be scoped since some of them are being used in a modal. -->\r\n<style>\r\n.group-scheduler-v2 {\r\n    @media (min-width: 576px) {\r\n        &.provide-location-modal {\r\n            .modal-scrollable {\r\n                display: flex;\r\n                justify-content: center;\r\n            }\r\n\r\n            .modal.container {\r\n                width: auto;\r\n                min-width: 480px;\r\n                left: auto;\r\n                right: auto;\r\n                margin-left: auto;\r\n                margin-right: auto;\r\n            }\r\n        }\r\n    }\r\n\r\n    .sched-group-provide-location-resource {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        gap: 12px;\r\n\r\n        &:not(:first-of-type) {\r\n            margin-top: 12px;\r\n        }\r\n    }\r\n}\r\n</style>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, inject, PropType, ref } from \"vue\";\r\n    import { ISchedulerResourceAttend, ReportAssignedResources } from \"./types.partial\";\r\n    import DropDownList from \"@Obsidian/Controls/dropDownList.obs\";\r\n    import LoadingIndicator from \"@Obsidian/Controls/loadingIndicator.obs\";\r\n    import Modal from \"@Obsidian/Controls/modal.obs\";\r\n    import NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\n    import { AlertType } from \"@Obsidian/Enums/Controls/alertType\";\r\n    import { Guid } from \"@Obsidian/Types\";\r\n    import { HttpUrlParams } from \"@Obsidian/Types/Utility/http\";\r\n    import { useVModelPassthrough } from \"@Obsidian/Utility/component\";\r\n    import { useHttp } from \"@Obsidian/Utility/http\";\r\n    import { toNumberOrNull } from \"@Obsidian/Utility/numberUtils\";\r\n    import { pluralize } from \"@Obsidian/Utility/stringUtils\";\r\n    import { GroupSchedulerOccurrenceBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduler/groupSchedulerOccurrenceBag\";\r\n    import { GroupSchedulerUnassignedResourceCountBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduler/groupSchedulerUnassignedResourceCountBag\";\r\n    import { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\n\r\n    const http = useHttp();\r\n    const baseApiUrl = \"/api/Attendances\";\r\n\r\n    const props = defineProps({\r\n        isVisible: {\r\n            type: Boolean as PropType<boolean>,\r\n            required: true\r\n        },\r\n\r\n        unassignedResourceCount: {\r\n            type: Object as PropType<GroupSchedulerUnassignedResourceCountBag | null | undefined>,\r\n            required: true\r\n        },\r\n\r\n        availableOccurrences: {\r\n            type: Array as PropType<GroupSchedulerOccurrenceBag[]>,\r\n            required: true\r\n        }\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"update:isVisible\"): void,\r\n        (e: \"resourceListUpdated\", attendanceOccurrenceId: number): void\r\n    }>();\r\n\r\n    const missingDataErrorMessage = \"Unable to get unassigned resources.\";\r\n\r\n    // #region Values\r\n\r\n    const isVisible = useVModelPassthrough(props, \"isVisible\", emit);\r\n\r\n    const blockActionErrorMessage = ref(\"\");\r\n\r\n    const isLoadingResources = ref(false);\r\n    const resources = ref<ISchedulerResourceAttend[]>([]);\r\n\r\n    const locationIdByPersonIds = ref<Record<number, string>>({});\r\n\r\n    const isAssigningResources = ref(false);\r\n\r\n    const reportAssignedResources = inject(ReportAssignedResources);\r\n\r\n    // #endregion Values\r\n\r\n    // #region Computed Values\r\n\r\n    const title = computed((): string => {\r\n        return `Provide ${pluralize(\"Location\", props.unassignedResourceCount?.resourceCount ?? 0)}`;\r\n    });\r\n\r\n    const unassignedResourceCountGuid = computed((): Guid | null | undefined => {\r\n        return props.unassignedResourceCount?.guid;\r\n    });\r\n\r\n    const occurrenceDate = computed((): string => {\r\n        return props.unassignedResourceCount?.occurrenceDate ?? \"\";\r\n    });\r\n\r\n    const scheduleId = computed((): number => {\r\n        return props.unassignedResourceCount?.scheduleId ?? 0;\r\n    });\r\n\r\n    const groupId = computed((): number => {\r\n        return props.unassignedResourceCount?.groupId ?? 0;\r\n    });\r\n\r\n    const attendanceOccurrenceId = computed((): number => {\r\n        return props.unassignedResourceCount?.attendanceOccurrenceId ?? 0;\r\n    });\r\n\r\n    const locations = computed((): ListItemBag[] => {\r\n        return props.availableOccurrences\r\n            ?.filter((o: GroupSchedulerOccurrenceBag) => o?.locationId && o.locationName)\r\n            .map((o: GroupSchedulerOccurrenceBag) => ({\r\n                text: o.locationName,\r\n                value: o.locationId.toString()\r\n            })) ?? [];\r\n    });\r\n\r\n    const isDataMissing = computed((): boolean => {\r\n        return !unassignedResourceCountGuid\r\n            || !occurrenceDate\r\n            || !scheduleId\r\n            || !groupId\r\n            || !attendanceOccurrenceId\r\n            || !locations.value.length;\r\n    });\r\n\r\n    const isBusy = computed((): boolean => {\r\n        return isLoadingResources.value || isAssigningResources.value;\r\n    });\r\n\r\n    const areAnyLocationsSelected = computed((): boolean => {\r\n        return Object.entries(locationIdByPersonIds.value)\r\n            .some(([_, value]: [string, string]) => !!value);\r\n    });\r\n\r\n    const isSaveButtonDisabled = computed((): boolean => {\r\n        return isDataMissing.value || isBusy.value || !areAnyLocationsSelected.value;\r\n    });\r\n\r\n    // #endregion Computed Values\r\n\r\n    // #region Functions\r\n\r\n    /**\r\n     * Gets the unassigned resources.\r\n     */\r\n    async function getUnassignedResources(): Promise<void> {\r\n        if (isBusy.value || isDataMissing.value) {\r\n            return;\r\n        }\r\n\r\n        isLoadingResources.value = true;\r\n        blockActionErrorMessage.value = \"\";\r\n\r\n        const result = await http.get<ISchedulerResourceAttend[]>(`${baseApiUrl}/GetAttendingSchedulerResources?attendanceOccurrenceId=${attendanceOccurrenceId.value}`);\r\n        isLoadingResources.value = false;\r\n\r\n        if (!result.isSuccess) {\r\n            blockActionErrorMessage.value = result.errorMessage || \"Unknown error while trying to get unassigned resources.\";\r\n            return;\r\n        }\r\n\r\n        resources.value = result.data ?? [];\r\n\r\n        if (!resources.value.length) {\r\n            blockActionErrorMessage.value = missingDataErrorMessage;\r\n            return;\r\n        }\r\n\r\n        const locationIdByPersonIds: Record<number, string> = {};\r\n        resources.value.forEach((r: ISchedulerResourceAttend) => {\r\n            locationIdByPersonIds[r.PersonId] = \"\";\r\n        });\r\n    }\r\n\r\n    // #endregion Functions\r\n\r\n    // #region Event Handlers\r\n\r\n    /**\r\n     * Handles the `save` event of the Modal component.\r\n     */\r\n    async function onSave(): Promise<void> {\r\n        if (isSaveButtonDisabled.value) {\r\n            return;\r\n        }\r\n\r\n        isAssigningResources.value = true;\r\n        blockActionErrorMessage.value = \"\";\r\n\r\n        const successfullyAssignedPersonIds: number[] = [];\r\n        const unsuccessfullyAssignedPersonIds: number[] = [];\r\n\r\n        await Promise.all(resources.value.map(async (resource: ISchedulerResourceAttend) => {\r\n            // Map each selected location back to its respective attendance occurrence.\r\n            const personId = resource.PersonId;\r\n            const locationId = toNumberOrNull(locationIdByPersonIds.value[personId]);\r\n            if (!locationId) {\r\n                // A location wasn't selected for this resource; move on to the next resource.\r\n                return;\r\n            }\r\n\r\n            const assignToAttendanceOccurrenceId = props.availableOccurrences\r\n                ?.find((o: GroupSchedulerOccurrenceBag) => o?.locationId === locationId)\r\n                ?.attendanceOccurrenceId;\r\n            if (!assignToAttendanceOccurrenceId) {\r\n                // Unable to map the selected location back to the attendance occurrence; should never happen.\r\n                unsuccessfullyAssignedPersonIds.push(personId);\r\n                return;\r\n            }\r\n\r\n            // Unassign the person from the attendance occurrence without a location.\r\n            const attendanceId = resource.AttendanceId;\r\n            let result = await http.doApiCall(\"PUT\", `${baseApiUrl}/ScheduledPersonRemove?attendanceId=${attendanceId}`);\r\n            if (!result.isSuccess) {\r\n                // Unable to remove the resource from the non-location attendance occurrence; should never happen.\r\n                unsuccessfullyAssignedPersonIds.push(personId);\r\n                return;\r\n            }\r\n\r\n            // Assign the person the the newly-selected attendance occurrence.\r\n            const params: HttpUrlParams = {\r\n                personId,\r\n                attendanceOccurrenceId: assignToAttendanceOccurrenceId\r\n            };\r\n\r\n            result = await http.doApiCall(\"PUT\", `${baseApiUrl}/ScheduledPersonAddConfirmed`, params);\r\n            if (!result.isSuccess) {\r\n                unsuccessfullyAssignedPersonIds.push(personId);\r\n            }\r\n            else {\r\n                successfullyAssignedPersonIds.push(personId);\r\n            }\r\n        }));\r\n\r\n        if (successfullyAssignedPersonIds.length) {\r\n            // Instruct all other occurrences within this occurrence date > schedule to reload themselves.\r\n            emit(\"resourceListUpdated\", attendanceOccurrenceId.value);\r\n\r\n            // Report the count of resources successfully assigned to update the DOM.\r\n            reportAssignedResources?.(unassignedResourceCountGuid.value, successfullyAssignedPersonIds.length);\r\n\r\n            // Remove any successfully-assigned resources from local refs.\r\n            resources.value = resources.value\r\n                .filter((resource: ISchedulerResourceAttend) =>\r\n                    !successfullyAssignedPersonIds.some((id: number) => resource.PersonId === id)\r\n                );\r\n\r\n            successfullyAssignedPersonIds.forEach((id: number) => delete locationIdByPersonIds.value[id]);\r\n        }\r\n\r\n        if (unsuccessfullyAssignedPersonIds.length) {\r\n            const count = unsuccessfullyAssignedPersonIds.length;\r\n            blockActionErrorMessage.value = `The following ${pluralize(\"assignment\", count)} ${pluralize(\"was\", count)} unsuccessful.`;\r\n        }\r\n        else {\r\n            // All assignments were successful; close the modal.\r\n            isVisible.value = false;\r\n        }\r\n\r\n        isAssigningResources.value = false;\r\n    }\r\n\r\n    // #endregion Event Handlers\r\n\r\n    getUnassignedResources();\r\n</script>\r\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <div class=\"card card-sched js-schedule-group\">\r\n        <div class=\"card-body\">\r\n            <span class=\"d-block font-weight-bold text-sm\">\r\n                {{ title }}\r\n            </span>\r\n\r\n            <NotificationBox v-if=\"!anyLocations\" :alertType=\"AlertType.Info\">\r\n                No locations available.\r\n            </NotificationBox>\r\n\r\n            <template v-else>\r\n                <NotificationBox v-if=\"unassignedResourceCount\"\r\n                                 :alertType=\"AlertType.Warning\"\r\n                                 class=\"group-sched-unassigned-resources small\">\r\n                    <div class=\"group-sched-unassigned-resources-text\">\r\n                        {{ unassignedResourceText }}\r\n                    </div>\r\n                    <div v-no-drag-scroll\r\n                         class=\"group-sched-provide-locations\"\r\n                         @click=\"isProvideLocationsModalVisible = true\">\r\n                        {{ provideLocationText }}\r\n                    </div>\r\n                </NotificationBox>\r\n\r\n                <Occurrence v-for=\"occurrence in occurrences\" :key=\"occurrence.locationId\"\r\n                            :occurrence=\"occurrence\"\r\n                            :disabled=\"disabled\"\r\n                            @resourceListUpdated=\"$emit('resourceListUpdated', $event)\"\r\n                            @preferenceUpdated=\"$emit('preferenceUpdated', $event)\"></Occurrence>\r\n            </template>\r\n        </div>\r\n    </div>\r\n\r\n    <ProvideLocations v-if=\"unassignedResourceCount\"\r\n                      v-model:isVisible=\"isProvideLocationsModalVisible\"\r\n                      :unassignedResourceCount=\"unassignedResourceCount\"\r\n                      :availableOccurrences=\"occurrences\"\r\n                      @resourceListUpdated=\"$emit('resourceListUpdated', $event)\" />\r\n</template>\r\n\r\n<style scoped>\r\n.group-sched-unassigned-resources {\r\n    margin: 8px 0;\r\n}\r\n\r\n.group-sched-provide-locations {\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n}\r\n</style>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, inject, PropType, ref } from \"vue\";\r\n    import Occurrence from \"./occurrence.partial.obs\";\r\n    import ProvideLocations from \"./provideLocations.partial.obs\";\r\n    import {\r\n        OccurrenceDate,\r\n        ScheduleId,\r\n        UnassignedResourceCounts\r\n    } from \"./types.partial\";\r\n    import NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\n    import { NoDragScroll as vNoDragScroll } from \"@Obsidian/Directives/dragScroll\";\r\n    import { AlertType } from \"@Obsidian/Enums/Controls/alertType\";\r\n    import { pluralize } from \"@Obsidian/Utility/stringUtils\";\r\n    import { GroupSchedulerOccurrenceBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduler/groupSchedulerOccurrenceBag\";\r\n    import { GroupSchedulerUnassignedResourceCountBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduler/groupSchedulerUnassignedResourceCountBag\";\r\n\r\n    const props = defineProps({\r\n        occurrences: {\r\n            type: Array as PropType<GroupSchedulerOccurrenceBag[]>,\r\n            required: true\r\n        },\r\n\r\n        disabled: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        }\r\n    });\r\n\r\n    defineEmits<{\r\n        (e: \"resourceListUpdated\", attendanceOccurrenceId: number): void,\r\n        (e: \"preferenceUpdated\", personId: number): void\r\n    }>();\r\n\r\n    // #region Values\r\n\r\n    const occurrenceDate = inject(OccurrenceDate, ref(\"\"));\r\n    const scheduleId = inject(ScheduleId, ref(0));\r\n    const unassignedResourceCounts = inject(UnassignedResourceCounts, ref([]));\r\n\r\n    const isProvideLocationsModalVisible = ref(false);\r\n\r\n    // #endregion Values\r\n\r\n    // #region Computed Values\r\n\r\n    const groupId = computed((): number => {\r\n        // It's assumed that all occurrences provided will belong to the same group;\r\n        // just grab the first groupId, since they should all be the same.\r\n        return props.occurrences?.[0]?.groupId ?? 0;\r\n    });\r\n\r\n    const title = computed((): string => {\r\n        // It's assumed that all occurrences provided will belong to the same group;\r\n        // just grab the first groupName, since they should all be the same.\r\n        return props.occurrences?.[0]?.groupName || \"Group\";\r\n    });\r\n\r\n    const anyLocations = computed((): boolean => {\r\n        return !!props.occurrences?.length;\r\n    });\r\n\r\n    const unassignedResourceCount = computed((): GroupSchedulerUnassignedResourceCountBag | null | undefined => {\r\n        if (!occurrenceDate.value\r\n            || !scheduleId.value\r\n            || !groupId.value\r\n            || !unassignedResourceCounts.value?.length\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        return unassignedResourceCounts.value\r\n            .find((bag: GroupSchedulerUnassignedResourceCountBag) =>\r\n                bag.occurrenceDate === occurrenceDate.value\r\n                && bag.scheduleId === scheduleId.value\r\n                && bag.groupId === groupId.value\r\n            );\r\n    });\r\n\r\n    const unassignedResourceText = computed((): string => {\r\n        const count = unassignedResourceCount.value?.resourceCount ?? 0;\r\n        return count\r\n            ? `Missing ${pluralize(\"location\", count)} for ${count} ${pluralize(\"individual\", count)}.`\r\n            : \"\";\r\n    });\r\n\r\n    const provideLocationText = computed((): string => {\r\n        const count = unassignedResourceCount.value?.resourceCount ?? 0;\r\n        return count\r\n            ? `Provide ${pluralize(\"Location\", count)}`\r\n            : \"\";\r\n    });\r\n\r\n    // #endregion\r\n</script>\r\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <div class=\"schedule-column js-schedule-column\">\r\n        <div class=\"schedule-header\">\r\n            <span v-if=\"showPrevNextButtons\" class=\"page prev clickable\" @click=\"$emit('goPrevious')\">\r\n                <i class=\"fa fa-chevron-left\"></i>\r\n            </span>\r\n            <span class=\"text-center text-sm-left\">\r\n                {{ title }}\r\n            </span>\r\n            <span v-if=\"showPrevNextButtons\" class=\"page next clickable\" @click=\"$emit('goNext')\">\r\n                <i class=\"fa fa-chevron-right\"></i>\r\n            </span>\r\n        </div>\r\n\r\n        <NotificationBox v-if=\"!anyGroups\" :alertType=\"AlertType.Info\">\r\n            No groups available.\r\n        </NotificationBox>\r\n\r\n        <Group v-for=\"occurrences in sortedOccurrencesByGroup\" :key=\"getGroupIdKey(occurrences)\"\r\n               :occurrences=\"occurrences\"\r\n               :disabled=\"disabled\"\r\n               @resourceListUpdated=\"onResourceListUpdated\"\r\n               @preferenceUpdated=\"$emit('preferenceUpdated', $event)\"></Group>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, nextTick, PropType, provide, ref } from \"vue\";\r\n    import Group from \"./group.partial.obs\";\r\n    import { ReloadScheduleOccurrences, ScheduleId } from \"./types.partial\";\r\n    import NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\n    import { AlertType } from \"@Obsidian/Enums/Controls/alertType\";\r\n    import { GroupSchedulerOccurrenceBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduler/groupSchedulerOccurrenceBag\";\r\n\r\n    const props = defineProps({\r\n        occurrences: {\r\n            type: Array as PropType<GroupSchedulerOccurrenceBag[]>,\r\n            required: true\r\n        },\r\n\r\n        showPrevNextButtons: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        },\r\n\r\n        disabled: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        }\r\n    });\r\n\r\n    defineEmits<{\r\n        (e: \"goPrevious\"): void,\r\n        (e: \"goNext\"): void,\r\n        (e: \"preferenceUpdated\", personId: number): void\r\n    }>();\r\n\r\n    // #region Values\r\n\r\n    const reloadScheduleOccurrences = ref<number | null>(null);\r\n\r\n    // #endregion\r\n\r\n    // #region Computed Values\r\n\r\n    const scheduleId = computed((): number => {\r\n        // It's assumed that all occurrences provided will belong to the same schedule;\r\n        // just grab the first scheduleId, since they should all be the same.\r\n        return props.occurrences?.[0]?.scheduleId ?? 0;\r\n    });\r\n\r\n    const title = computed((): string => {\r\n        // It's assumed that all occurrences provided will belong to the same schedule;\r\n        // just grab the first scheduleName, since they should all be the same.\r\n        return props.occurrences?.[0]?.scheduleName || \"Schedule\";\r\n    });\r\n\r\n    const sortedOccurrencesByGroup = computed((): (GroupSchedulerOccurrenceBag[])[] => {\r\n        if (!props.occurrences?.length) {\r\n            return [];\r\n        }\r\n\r\n        // We're assuming the server has performed the sort and returned the occcurrences to us in the expected display order.\r\n        // A Map object is needed to maintain sort order.\r\n        const groupedOccurrences = new Map<number, GroupSchedulerOccurrenceBag[]>();\r\n        props.occurrences\r\n            .filter((o: GroupSchedulerOccurrenceBag) => o.groupId)\r\n            .forEach((o: GroupSchedulerOccurrenceBag) => {\r\n                const groupId = o.groupId || 0;\r\n                let groupOccurrences = groupedOccurrences.get(groupId);\r\n\r\n                if (!groupOccurrences) {\r\n                    groupOccurrences = [];\r\n                    groupedOccurrences.set(groupId, groupOccurrences);\r\n                }\r\n\r\n                groupOccurrences.push(o);\r\n            });\r\n\r\n        const sortedGroupOccurrences: (GroupSchedulerOccurrenceBag[])[] = [];\r\n        groupedOccurrences.forEach((occurrences) => sortedGroupOccurrences.push(occurrences));\r\n\r\n        return sortedGroupOccurrences;\r\n    });\r\n\r\n    const anyGroups = computed((): boolean => {\r\n        return !!sortedOccurrencesByGroup.value.length;\r\n    });\r\n\r\n    // #endregion\r\n\r\n    // #region Functions\r\n\r\n    /**\r\n     * Gets the group ID \"key\" from the first occurrence in the collection.\r\n     *\r\n     * @param occurrences The occurrences for a given group.\r\n     */\r\n    function getGroupIdKey(occurrences: GroupSchedulerOccurrenceBag[]): number {\r\n        return occurrences?.[0]?.groupId ?? 0;\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Event Handlers\r\n\r\n    /**\r\n     * Handles the `resourceListUpdated` event of the group component.\r\n     *\r\n     * @param triggeredByAttendanceOccurrenceId The ID of the attendance occurrence that triggered the event.\r\n     */\r\n    function onResourceListUpdated(triggeredByAttendanceOccurrenceId: number): void {\r\n        reloadScheduleOccurrences.value = triggeredByAttendanceOccurrenceId;\r\n\r\n        nextTick(() => {\r\n            reloadScheduleOccurrences.value = null;\r\n        });\r\n    }\r\n\r\n    // #endregion\r\n\r\n    provide(ScheduleId, scheduleId);\r\n    provide(ReloadScheduleOccurrences, reloadScheduleOccurrences);\r\n</script>\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n\r\nimport { toOrdinalSuffix } from \"@Obsidian/Utility/numberUtils\";\r\nimport { RockDateTime } from \"@Obsidian/Utility/rockDateTime\";\r\n\r\n/**\r\n * Formats the date for consistent, friendly display within the scheduler.\r\n *\r\n * @param dateString The string that contains the ISO 8601 formatted text.\r\n * @returns The formatted date.\r\n */\r\nexport function formatSchedulerDate(dateString: string): string {\r\n    let formattedDate: string | null | undefined;\r\n    const rockDateTime = RockDateTime.parseISO(dateString);\r\n    if (rockDateTime) {\r\n        formattedDate = rockDateTime.toASPString(\"dddd, MMM d\");\r\n\r\n        if (formattedDate) {\r\n            const dateParts = formattedDate.split(\" \");\r\n            if (dateParts.length === 3) {\r\n                const ordinalDate = toOrdinalSuffix(+dateParts[2]);\r\n                formattedDate = [\r\n                    dateParts[0],\r\n                    dateParts[1],\r\n                    ordinalDate ?? dateParts[2]\r\n                ].join(\" \");\r\n            }\r\n        }\r\n    }\r\n\r\n    return formattedDate || \"No Date Provided\";\r\n}","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <div ref=\"occurrenceDateElement\" class=\"occurrence-date js-occurrence-date\" :style=\"inlineStyle\">\r\n        <h2 class=\"occurrence-date-title\">{{ title }}</h2>\r\n\r\n        <NotificationBox v-if=\"!anySchedules\" :alertType=\"AlertType.Info\">\r\n            No schedules available.\r\n        </NotificationBox>\r\n\r\n        <div v-else class=\"schedules\">\r\n\r\n            <Schedule v-for=\"(occurrences, index) in sortedOccurrencesBySchedule\" :key=\"getScheduleIdKey(occurrences)\"\r\n                      :occurrences=\"occurrences\"\r\n                      :showPrevNextButtons=\"showPrevNextButtons\"\r\n                      :ref=\"(comp) => addScheduleComponent(comp, index)\"\r\n                      :disabled=\"disabled\"\r\n                      @goPrevious=\"$emit('goPrevious', index)\"\r\n                      @goNext=\"$emit('goNext', index)\"\r\n                      @preferenceUpdated=\"$emit('preferenceUpdated', $event)\"></Schedule>\r\n\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { ComponentPublicInstance, computed, nextTick, onUnmounted, PropType, provide, ref, watch } from \"vue\";\r\n    import Schedule from \"./schedule.partial.obs\";\r\n    import { OccurrenceDate, OccurrenceDateTitle } from \"./types.partial\";\r\n    import { formatSchedulerDate } from \"./utils.partial\";\r\n    import NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\n    import { AlertType } from \"@Obsidian/Enums/Controls/alertType\";\r\n    import { GroupSchedulerOccurrenceBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduler/groupSchedulerOccurrenceBag\";\r\n\r\n    const props = defineProps({\r\n        occurrences: {\r\n            type: Array as PropType<GroupSchedulerOccurrenceBag[]>,\r\n            required: true\r\n        },\r\n\r\n        showPrevNextButtons: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        },\r\n\r\n        disabled: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        }\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"scheduleComponentsCreated\", scheduleComponents: (ComponentPublicInstance | null)[]): void,\r\n        (e: \"goPrevious\", currentScheduleIndex: number): void,\r\n        (e: \"goNext\", currentScheduleIndex: number): void,\r\n        (e: \"preferenceUpdated\", personId: number): void\r\n    }>();\r\n\r\n    let locationsResizeObserver: ResizeObserver | undefined;\r\n\r\n    // #region Values\r\n\r\n    const occurrenceDateElement = ref<HTMLElement | null>(null);\r\n\r\n    const scheduleComponents = ref<(ComponentPublicInstance | null)[]>([]);\r\n\r\n    // #endregion\r\n\r\n    // #region Computed Values\r\n\r\n    const occurrenceDate = computed((): string => {\r\n        // It's assumed that all occurrences provided will belong to the same occurrence date;\r\n        // just provide the first occcurrenceDate, since they should all be the same.\r\n        return props.occurrences?.[0]?.occurrenceDate ?? \"\";\r\n    });\r\n\r\n    const title = computed((): string => {\r\n        return formatSchedulerDate(occurrenceDate.value);\r\n    });\r\n\r\n    const sortedOccurrencesBySchedule = computed((): (GroupSchedulerOccurrenceBag[])[] => {\r\n        if (!props.occurrences?.length) {\r\n            return [];\r\n        }\r\n\r\n        // We're assuming the server has performed the sort and returned the occcurrences to us in the expected display order.\r\n        // A Map object is needed to maintain sort order.\r\n        const groupedOccurrences = new Map<number, GroupSchedulerOccurrenceBag[]>();\r\n        props.occurrences\r\n            .filter((o: GroupSchedulerOccurrenceBag) => o.scheduleId)\r\n            .forEach((o: GroupSchedulerOccurrenceBag) => {\r\n                const scheduleId = o.scheduleId || 0;\r\n                let scheduleOccurrences = groupedOccurrences.get(scheduleId);\r\n\r\n                if (!scheduleOccurrences) {\r\n                    scheduleOccurrences = [];\r\n                    groupedOccurrences.set(scheduleId, scheduleOccurrences);\r\n                }\r\n\r\n                scheduleOccurrences.push(o);\r\n            });\r\n\r\n        const sortedScheduleOccurrences: (GroupSchedulerOccurrenceBag[])[] = [];\r\n        groupedOccurrences.forEach((occurrences) => sortedScheduleOccurrences.push(occurrences));\r\n\r\n        return sortedScheduleOccurrences;\r\n    });\r\n\r\n    const scheduleCount = computed((): number => {\r\n        return sortedOccurrencesBySchedule.value.length;\r\n    });\r\n\r\n    const anySchedules = computed((): boolean => {\r\n        return !!scheduleCount.value;\r\n    });\r\n\r\n    const inlineStyle = computed((): string => {\r\n        return `--schedule-count:${scheduleCount.value}`;\r\n    });\r\n\r\n    // #endregion\r\n\r\n    // #region Functions\r\n\r\n    /**\r\n     * Gets the schedule ID \"key\" from the first occurrence in the collection.\r\n     *\r\n     * @param occurrences The occurrences for a given schedule.\r\n     */\r\n    function getScheduleIdKey(occurrences: GroupSchedulerOccurrenceBag[]): number {\r\n        return occurrences?.[0]?.scheduleId ?? 0;\r\n    }\r\n\r\n    /**\r\n     * Adds the component to the array of schedule components.\r\n     *\r\n     * @param component The schedule component to add.\r\n     * @param index The index of the component's corresponding schedule within the occurrences provided to this occurrence date component.\r\n     *  Per Vue docs: \"It should be noted that the ref array does not guarantee the same order as the source array.\"\r\n     *  Hence the need to provide this component's index to know which schedule it represents.\r\n     */\r\n    function addScheduleComponent(component: Element | ComponentPublicInstance | null, index: number): void {\r\n        if (!component) {\r\n            return;\r\n        }\r\n\r\n        scheduleComponents.value[index] = component as ComponentPublicInstance;\r\n\r\n        // Once all schedule components have been added, report them back to the parent component\r\n        // and begin observing their descendent location elements' sizes.\r\n        if (scheduleComponents.value.length === scheduleCount.value) {\r\n            emit(\"scheduleComponentsCreated\", scheduleComponents.value);\r\n            observeLocationSizes();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Observes this occurrence date's descendent location elements' sizes.\r\n     */\r\n    function observeLocationSizes(): void {\r\n        if (!window.ResizeObserver || !occurrenceDateElement.value) {\r\n            return;\r\n        }\r\n\r\n        if (locationsResizeObserver) {\r\n            // Stop observing any previous location elements.\r\n            locationsResizeObserver.disconnect();\r\n        }\r\n        else {\r\n            locationsResizeObserver = new ResizeObserver((_: ResizeObserverEntry[]) => {\r\n                setEqualGroupHeights();\r\n            });\r\n        }\r\n\r\n        // Start observing any current location elements.\r\n        occurrenceDateElement.value.querySelectorAll(\".js-schedule-location\").forEach((location: Element) => {\r\n            locationsResizeObserver?.observe(location);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sets this occurrence date's descendent group elements to have a minimum height equal to each\r\n     * respective tallest sibling group element. \"Sibling\" within this context means: the group\r\n     * element(s) at the matching query selector index position for each schedule column within this\r\n     * occurrence date.\r\n     */\r\n    function setEqualGroupHeights(): void {\r\n        if (!occurrenceDateElement.value) {\r\n            return;\r\n        }\r\n\r\n        const schedules = occurrenceDateElement.value.querySelectorAll<HTMLElement>(\".js-schedule-column\");\r\n\r\n        // Start by setting all groups back to \"auto\" minimum height. This will do two things:\r\n        //  1. Reclaim any vertical space that is no longer needed (if an individual was removed).\r\n        //  2. Set up the UI for mobile widths (as we won't synchronize heights in that case).\r\n        schedules.forEach((schedule: HTMLElement) => {\r\n            schedule.querySelectorAll<HTMLElement>(\".js-schedule-group\").forEach((group: HTMLElement) => {\r\n                group.style.minHeight = \"auto\";\r\n            });\r\n        });\r\n\r\n        // For non-mobile widths, synchronize heights.\r\n        if (window.innerWidth > 768) {\r\n            // But wait until the next tick to give the above \"auto\" minimum heights to take effect first.\r\n            nextTick(() => {\r\n                const groupHeights: number[] = [];\r\n\r\n                // Loop through all groups to find the tallest one for a given index position.\r\n                schedules.forEach((schedule: HTMLElement) => {\r\n                    schedule.querySelectorAll<HTMLElement>(\".js-schedule-group\").forEach((group: HTMLElement, i: number) => {\r\n                        if (!groupHeights[i] || groupHeights[i] < group.offsetHeight) {\r\n                            groupHeights[i] = group.offsetHeight;\r\n                        }\r\n                    });\r\n                });\r\n\r\n                // Loop through all groups again to set each minimum height to match their tallest sibling.\r\n                schedules.forEach((schedule: HTMLElement) => {\r\n                    schedule.querySelectorAll<HTMLElement>(\".js-schedule-group\").forEach((group: HTMLElement, i: number) => {\r\n                        group.style.minHeight = `${groupHeights[i]}px`;\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    // #endregion\r\n\r\n    provide(OccurrenceDate, occurrenceDate);\r\n    provide(OccurrenceDateTitle, title);\r\n\r\n    watch(() => props.occurrences, () => {\r\n        scheduleComponents.value = [];\r\n    });\r\n\r\n    onUnmounted(() => {\r\n        if (locationsResizeObserver) {\r\n            locationsResizeObserver.disconnect();\r\n        }\r\n    });\r\n</script>\r\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <Modal v-model=\"isVisible\"\r\n           title=\"Filters\"\r\n           saveText=\"Apply\"\r\n           :isSaveButtonDisabled=\"isBusy\"\r\n           @save=\"onSave\">\r\n\r\n        <div class=\"group-scheduler-v2\">\r\n            <NotificationBox :alertType=\"AlertType.Info\">\r\n                Select the filter options below to limit what is shown on the group scheduler.\r\n            </NotificationBox>\r\n\r\n            <NotificationBox v-if=\"warningMessage\" :alertType=\"AlertType.Warning\">\r\n                {{ warningMessage }}\r\n            </NotificationBox>\r\n\r\n            <div v-if=\"disallowGroupSelection\" class=\"form-group\">\r\n                <RockLabel>{{ groupsTextLabel }}</RockLabel>\r\n                <div>\r\n                    {{ groupsText }}\r\n                </div>\r\n            </div>\r\n\r\n            <GroupPicker v-else\r\n                         v-model=\"selectedGroups\"\r\n                         label=\"Groups\"\r\n                         :multiple=\"true\"\r\n                         :limitToSchedulingEnabled=\"true\"\r\n                         :autoExpand=\"true\"\r\n                         :disabled=\"isBusy\"\r\n                         rules=\"required\"\r\n                         @update:modelValue=\"onFiltersChanged\" />\r\n\r\n            <!-- This control's @update:modelValue fires too often to post to the server on every update. -->\r\n            <!-- Instead, the date range will be validated and applied when the other controls trigger a POST and/or when the filters are saved. -->\r\n            <SlidingDateRangePicker v-model=\"selectedDateRange\"\r\n                                    label=\"Dates\"\r\n                                    previewLocation=\"Top\"\r\n                                    :disabled=\"isBusy\" />\r\n\r\n            <DropDownList v-model=\"selectedLocationValues\"\r\n                          label=\"Locations\"\r\n                          :items=\"availableLocations\"\r\n                          :multiple=\"true\"\r\n                          :loading=\"isRefiningFilters\"\r\n                          :disabled=\"isApplyingFilters\"\r\n                          @open=\"onFiltersChanged\" />\r\n\r\n            <DropDownList v-model=\"selectedScheduleValues\"\r\n                          label=\"Schedules\"\r\n                          :items=\"availableSchedules\"\r\n                          :multiple=\"true\"\r\n                          :loading=\"isRefiningFilters\"\r\n                          :disabled=\"isApplyingFilters\"\r\n                          @open=\"onFiltersChanged\" />\r\n        </div>\r\n\r\n    </Modal>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, PropType, ref, watch } from \"vue\";\r\n    import DropDownList from \"@Obsidian/Controls/dropDownList.obs\";\r\n    import GroupPicker from \"@Obsidian/Controls/groupPicker.obs\";\r\n    import Modal from \"@Obsidian/Controls/modal.obs\";\r\n    import NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\n    import RockLabel from \"@Obsidian/Controls/rockLabel.obs\";\r\n    import SlidingDateRangePicker from \"@Obsidian/Controls/slidingDateRangePicker.obs\";\r\n    import { AlertType } from \"@Obsidian/Enums/Controls/alertType\";\r\n    import { useInvokeBlockAction } from \"@Obsidian/Utility/block\";\r\n    import { useVModelPassthrough } from \"@Obsidian/Utility/component\";\r\n    import { SlidingDateRange } from \"@Obsidian/Utility/slidingDateRange\";\r\n    import { pluralConditional } from \"@Obsidian/Utility/stringUtils\";\r\n    import { GroupSchedulerAppliedFiltersBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduler/groupSchedulerAppliedFiltersBag\";\r\n    import { GroupSchedulerFiltersBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduler/groupSchedulerFiltersBag\";\r\n    import { SlidingDateRangeBag } from \"@Obsidian/ViewModels/Controls/slidingDateRangeBag\";\r\n    import { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\n\r\n    const invokeBlockAction = useInvokeBlockAction();\r\n\r\n    const props = defineProps({\r\n        isVisible: {\r\n            type: Boolean as PropType<boolean>,\r\n            required: true\r\n        },\r\n\r\n        filters: {\r\n            type: Object as PropType<GroupSchedulerFiltersBag | null | undefined>,\r\n            required: true\r\n        },\r\n\r\n        disallowGroupSelection: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false,\r\n        }\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"update:isVisible\"): void,\r\n        (e: \"filtersApplied\", value: GroupSchedulerAppliedFiltersBag | null): void\r\n    }>();\r\n\r\n    // #region Values\r\n\r\n    const isVisible = useVModelPassthrough(props, \"isVisible\", emit);\r\n\r\n    const isRefiningFilters = ref(false);\r\n    const isApplyingFilters = ref(false);\r\n    const warningMessage = ref(\"\");\r\n    const isCanceled = ref(true);\r\n\r\n    const originalValue = ref(props.filters);\r\n\r\n    const selectedGroups = ref<ListItemBag[]>(props.filters?.groups ?? []);\r\n    const availableLocations = ref<ListItemBag[]>(props.filters?.locations?.availableLocations ?? []);\r\n    const selectedLocations = ref<ListItemBag[]>(props.filters?.locations?.selectedLocations ?? []);\r\n    const availableSchedules = ref<ListItemBag[]>(props.filters?.schedules?.availableSchedules ?? []);\r\n    const selectedSchedules = ref<ListItemBag[]>(props.filters?.schedules?.selectedSchedules ?? []);\r\n    const selectedDateRange = ref<SlidingDateRange | null>(getSlidingDateRange(props.filters?.dateRange));\r\n    const firstEndOfWeekDate = ref<string | null | undefined>(props.filters?.firstEndOfWeekDate);\r\n    const lastEndOfWeekdDate = ref<string | null | undefined>(props.filters?.lastEndOfWeekDate);\r\n    const friendlyDateRange = ref<string | null | undefined>(props.filters?.friendlyDateRange);\r\n\r\n    // #endregion\r\n\r\n    // #region Computed Values\r\n\r\n    const groupsTextLabel = computed((): string => {\r\n        return pluralConditional(selectedGroups.value.length, \"Group\", \"Groups\");\r\n    });\r\n\r\n    const groupsText = computed((): string => {\r\n        return selectedGroups.value.length\r\n            ? selectedGroups.value.map(g => g.text).join(\", \")\r\n            : \"No groups selected\";\r\n    });\r\n\r\n    const selectedLocationValues = computed<string[]>({\r\n        get() {\r\n            return selectedLocations.value\r\n                ?.filter((item: ListItemBag) => item?.value)\r\n                ?.map((item: ListItemBag) => item.value ?? \"\") ?? [];\r\n        },\r\n        set(newValue: string[]) {\r\n            selectedLocations.value = newValue.map((value: string) => ({\r\n                value\r\n            }));\r\n        }\r\n    });\r\n\r\n    const selectedScheduleValues = computed<string[]>({\r\n        get() {\r\n            return selectedSchedules.value\r\n                ?.filter((item: ListItemBag) => item?.value)\r\n                ?.map((item: ListItemBag) => item.value ?? \"\") ?? [];\r\n        },\r\n        set(newValue: string[]) {\r\n            selectedSchedules.value = newValue.map((value: string) => ({\r\n                value\r\n            }));\r\n        }\r\n    });\r\n\r\n    const isBusy = computed((): boolean => {\r\n        return isRefiningFilters.value || isApplyingFilters.value;\r\n    });\r\n\r\n    // #endregion\r\n\r\n    // #region Functions\r\n\r\n    /**\r\n     * Gets the sliding date range from the provided sliding date range bag.\r\n     *\r\n     * @param bag The date range bag from which to create a sliding date range.\r\n     */\r\n    function getSlidingDateRange(bag: SlidingDateRangeBag | null | undefined): SlidingDateRange | null {\r\n        return bag\r\n            ? bag as SlidingDateRange\r\n            : null;\r\n    }\r\n\r\n    /**\r\n     * Gets the current filters according the the controls' selected values.\r\n     */\r\n    function getCurrentFilters(): GroupSchedulerFiltersBag {\r\n        var dateRange: SlidingDateRangeBag | null = selectedDateRange.value\r\n            ? selectedDateRange.value as SlidingDateRangeBag\r\n            : null;\r\n\r\n        return {\r\n            groups: selectedGroups.value,\r\n            locations: {\r\n                availableLocations: availableLocations.value,\r\n                selectedLocations: selectedLocations.value\r\n            },\r\n            schedules: {\r\n                availableSchedules: availableSchedules.value,\r\n                selectedSchedules: selectedSchedules.value\r\n            },\r\n            dateRange,\r\n            firstEndOfWeekDate: firstEndOfWeekDate.value,\r\n            lastEndOfWeekDate: lastEndOfWeekdDate.value,\r\n            friendlyDateRange: friendlyDateRange.value\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Sets the internal values using the provided filters.\r\n     *\r\n     * @param appliedFilters The filters value from which to set the internal values.\r\n     */\r\n    function setCurrentFilters(filters: GroupSchedulerFiltersBag | null | undefined): void {\r\n        selectedGroups.value = filters?.groups ?? [];\r\n        availableLocations.value = filters?.locations?.availableLocations ?? [];\r\n        selectedLocations.value = filters?.locations?.selectedLocations ?? [];\r\n        availableSchedules.value = filters?.schedules?.availableSchedules ?? [];\r\n        selectedSchedules.value = filters?.schedules?.selectedSchedules ?? [];\r\n        selectedDateRange.value = getSlidingDateRange(filters?.dateRange);\r\n        firstEndOfWeekDate.value = filters?.firstEndOfWeekDate;\r\n        lastEndOfWeekdDate.value = filters?.lastEndOfWeekDate;\r\n        friendlyDateRange.value = filters?.friendlyDateRange;\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Event Handlers\r\n\r\n    /**\r\n     * Handles the updating of filter values within this component, based on the current combined values of all filter controls.\r\n     */\r\n    async function onFiltersChanged(): Promise<void> {\r\n        if (isRefiningFilters.value) {\r\n            return;\r\n        }\r\n\r\n        isRefiningFilters.value = true;\r\n        warningMessage.value = \"\";\r\n\r\n        const result = await invokeBlockAction<GroupSchedulerFiltersBag>(\"RefineFilters\", { bag: getCurrentFilters() });\r\n        isRefiningFilters.value = false;\r\n\r\n        if (!result.isSuccess) {\r\n            warningMessage.value = result.errorMessage || \"Unknown error while trying to update available filters.\";\r\n            return;\r\n        }\r\n\r\n        setCurrentFilters(result.data);\r\n    }\r\n\r\n    /**\r\n     * Handles the `save` event of the select filters modal.\r\n     */\r\n    async function onSave(): Promise<void> {\r\n        if (isApplyingFilters.value) {\r\n            return;\r\n        }\r\n\r\n        isApplyingFilters.value = true;\r\n        warningMessage.value = \"\";\r\n\r\n        const result = await invokeBlockAction<GroupSchedulerAppliedFiltersBag>(\"ApplyFilters\", { bag: getCurrentFilters() });\r\n        isApplyingFilters.value = false;\r\n\r\n        if (!result.isSuccess) {\r\n            warningMessage.value = result.errorMessage || \"Unknown issue while trying to apply filters.\";\r\n            return;\r\n        }\r\n\r\n        emit(\"filtersApplied\", result.data);\r\n\r\n        isCanceled.value = false;\r\n        isVisible.value = false;\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // Watch for filters props changes and update our original and internal values.\r\n    watch(() => props.filters, () => {\r\n        originalValue.value = props.filters;\r\n        setCurrentFilters(props.filters);\r\n    });\r\n\r\n    // Watch for the modal closing without the save button being clicked and revert any changes to internal values.\r\n    watch(isVisible, () => {\r\n        if (isVisible.value) {\r\n            // Reset this value each time this component is presented.\r\n            isCanceled.value = true;\r\n        }\r\n        else {\r\n            if (isCanceled.value) {\r\n                // Cancel (or close button) was clicked; reset the internal values back to the original.\r\n                setCurrentFilters(originalValue.value);\r\n            }\r\n        }\r\n    });\r\n</script>\r\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <NotificationBox v-if=\"blockErrorMessage\" :alertType=\"AlertType.Warning\">\r\n        {{ blockErrorMessage }}\r\n    </NotificationBox>\r\n\r\n    <div class=\"group-scheduler-v2\">\r\n        <Panel v-if=\"!blockErrorMessage\"\r\n               type=\"block\"\r\n               title=\"Group Scheduler\"\r\n               class=\"styled-scroll\"\r\n               :hasZoom=\"true\"\r\n               :hasFullscreen=\"true\"\r\n               :headerSecondaryActions=\"secondaryActions\">\r\n\r\n            <template #helpContent>\r\n                <div class=\"p-3 bg-white\">\r\n                    <div>\r\n                        <h5 class=\"mt-0 mb-4\">Group Scheduler Help</h5>\r\n                        <p><strong>Scheduling Basics</strong></p>\r\n                        <p>This screen allows you to schedule individuals into groups. Individuals can be added to a schedule by clicking the ‘Plus’ icon in the lower right corner of each location.</p>\r\n                    </div>\r\n                    <div class=\"row mt-4\">\r\n                        <div class=\"col-md-6\">\r\n                            <p><strong>Scheduled Individual Legend</strong></p>\r\n                            <p>Each scheduled individual has one of three invite statuses:</p>\r\n                            <ul>\r\n                                <li><i class=\"fa fa-circle text-success\"></i> Accepted Invite</li>\r\n                                <li><i class=\"fa fa-circle text-muted\"></i> Pending Invite</li>\r\n                                <li><i class=\"fa fa-circle text-danger\"></i> Declined Invite</li>\r\n                            </ul>\r\n                            <p>The invite status is shown by a border around the individual's avatar.</p>\r\n                            <p>Some scheduled individuals may also have notification icons that alert you to issues with their schedule.</p>\r\n                            <ul>\r\n                                <li><i class=\"fa fa-exclamation-triangle\"></i> Indicates a conflict; which can happen if an individual is unavailable due to a blackout, they do not meet the group requirements, or because they have a scheduling conflict.</li>\r\n                                <li><i class=\"fa fa-minus-circle\"></i> Indicates that the schedule does not match this person's scheduling preference.</li>\r\n                            </ul>\r\n                            <p>For both notification icon types, additional details can be viewed by hovering over the icon.</p>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-6\">\r\n                            <p><strong>Group Location Schedule Status</strong></p>\r\n                            <p>Each group location has a status bar at the bottom that shows the overall status of the schedule.</p>\r\n                            <ul>\r\n                                <li><i class=\"fa fa-square text-danger\"></i> A red bar means there are not enough accepted invites to reach the minimum number of individuals needed.</li>\r\n                                <li><i class=\"fa fa-square text-warning\"></i> A yellow bar means there are enough accepted invites to reach the minimum number, but not the desired number.</li>\r\n                                <li><i class=\"fa fa-square text-success\"></i> A green bar means there are enough accepted invites to reach or exceed the desired number.</li>\r\n                                <li><i class=\"fa fa-square text-critical\"></i> An orange bar means there are too many accepted invites and the maximum number is exceeded.</li>\r\n                            </ul>\r\n                            <p>Each status bar will show a solid bar representing the accepted invites, and a semi-transparent bar representing pending invites.</p>\r\n                            <p>Bars include ticks, that mark the thresholds (minimum, desired and maximum) for each schedule. You can hover over each tick to see a tooltip with the threshold and the number of individuals required.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </template>\r\n\r\n            <template #preBody>\r\n                <div class=\"panel-collapsable\">\r\n                    <!-- Toolbar: Desktop -->\r\n                    <div class=\"panel-toolbar d-none d-md-flex flex-wrap flex-sm-nowrap justify-content-between\">\r\n                        <div :class=\"filtersCssClass\"\r\n                             :disabled=\"isBusy\"\r\n                             @click=\"onSelectFiltersClick\"><i class=\"fa fa-sliders-h\"></i> {{ filtersText }}</div>\r\n\r\n                        <div class=\"d-block flex-shrink-0\">\r\n                            <RockButton :btnSize=\"BtnSize.ExtraSmall\"\r\n                                        :disabled=\"isSchedulingDisabled\"\r\n                                        @click=\"onCloneSchedulesClick\">\r\n                                <i class=\"fa fa-clone\"></i> Clone Schedules\r\n                                <Loading :isLoading=\"isCloningSchedules\" :isSmall=\"true\" class=\"d-inline-block\" />\r\n                            </RockButton>\r\n\r\n                            <RockButton v-if=\"rosterUrl\"\r\n                                        :btnSize=\"BtnSize.ExtraSmall\"\r\n                                        :disabled=\"isSchedulingDisabled\"\r\n                                        class=\"ml-1\"\r\n                                        @click=\"onRosterClick\">\r\n                                <i class=\"fa fa-calendar-check\"></i> Rosters\r\n                            </RockButton>\r\n\r\n                            <RockButton :btnSize=\"BtnSize.ExtraSmall\"\r\n                                        :disabled=\"isSchedulingDisabled\"\r\n                                        class=\"ml-1\"\r\n                                        @click=\"onAutoScheduleClick\">\r\n                                <i class=\"fa fa-magic\"></i> Auto Schedule\r\n                                <Loading :isLoading=\"isAutoScheduling\" :isSmall=\"true\" class=\"d-inline-block\" />\r\n                            </RockButton>\r\n\r\n                            <RockButton :btnSize=\"BtnSize.ExtraSmall\"\r\n                                        :disabled=\"isSchedulingDisabled\"\r\n                                        class=\"ml-1\"\r\n                                        @click=\"onSendNowClick\">\r\n                                <i class=\"fa fa-envelope-o\"></i> Send Now\r\n                                <Loading :isLoading=\"isSendingNow\" :isSmall=\"true\" class=\"d-inline-block\" />\r\n                            </RockButton>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- Toolbar: Mobile -->\r\n                    <div class=\"panel-toolbar panel-toolbar-mobile d-flex d-md-none justify-content-between\">\r\n                        <RockButton :btnSize=\"BtnSize.Small\"\r\n                                    :disabled=\"isBusy\"\r\n                                    @click=\"onSelectFiltersClick\"><i class=\"fa fa-sliders-h\"></i> Filters</RockButton>\r\n\r\n                        <div class=\"d-flex\">\r\n                            <div class=\"dropdown\">\r\n                                <button type=\"button\"\r\n                                        class=\"btn btn-default btn-square btn-sm\"\r\n                                        data-toggle=\"dropdown\"\r\n                                        aria-haspopup=\"true\"\r\n                                        aria-expanded=\"false\"\r\n                                        :disabled=\"isSchedulingDisabled\">\r\n                                    <Loading :isLoading=\"isCloningSchedules || isAutoScheduling || isSendingNow\" :isSmall=\"true\">\r\n                                        <i class=\"fa fa-ellipsis-v\"></i>\r\n                                    </Loading>\r\n                                </button>\r\n                                <ul class=\"dropdown-menu dropdown-menu-right\">\r\n                                    <li>\r\n                                        <button type=\"button\"\r\n                                                class=\"dropdown-item btn-link text-nowrap\"\r\n                                                :disabled=\"isSchedulingDisabled\"\r\n                                                @click=\"onSendNowClick\">\r\n                                            <i class=\"fa fa-envelope-o\"></i> Send Now\r\n                                        </button>\r\n                                    </li>\r\n                                    <li>\r\n                                        <button type=\"button\"\r\n                                                class=\"dropdown-item btn-link text-nowrap\"\r\n                                                :disabled=\"isSchedulingDisabled\"\r\n                                                @click=\"onCloneSchedulesClick\">\r\n                                            <i class=\"fa fa-clone\"></i> Clone Schedules\r\n                                        </button>\r\n                                    </li>\r\n                                    <li>\r\n                                        <button v-if=\"rosterUrl\"\r\n                                                type=\"button\"\r\n                                                class=\"dropdown-item btn-link text-nowrap\"\r\n                                                :disabled=\"isSchedulingDisabled\"\r\n                                                @click=\"onRosterClick\">\r\n                                            <i class=\"fa fa-calendar-check\"></i> Rosters\r\n                                        </button>\r\n                                    </li>\r\n                                    <li>\r\n                                        <button type=\"button\"\r\n                                                class=\"dropdown-item btn-link text-nowrap\"\r\n                                                :disabled=\"isSchedulingDisabled\"\r\n                                                @click=\"onAutoScheduleClick\">\r\n                                            <i class=\"fa fa-magic\"></i> Auto Schedule\r\n                                        </button>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </template>\r\n\r\n            <!-- Body -->\r\n            <div v-if=\"!anyOccurrences\" class=\"panel-body-alert\">\r\n\r\n                <NotificationBox v-if=\"!anyGroupsSelected\" :alertType=\"AlertType.Info\">\r\n                    Please select at least one group.\r\n                </NotificationBox>\r\n\r\n                <NotificationBox v-else :alertType=\"AlertType.Info\">\r\n                    No schedule occurrences match the selected filters.\r\n                </NotificationBox>\r\n\r\n            </div>\r\n\r\n            <div v-else v-drag-scroll.left=\"{ id: newGuid() }\" ref=\"snapContainerElement\" class=\"snap-container\">\r\n\r\n                <OccurrenceDate v-for=\"(occurrences, index) in sortedOccurrencesByDate\" :key=\"getOccurrenceDateKey(occurrences)\"\r\n                                :occurrences=\"occurrences\"\r\n                                :showPrevNextButtons=\"showPrevNextButtons\"\r\n                                :ref=\"(comp) => addOccurrenceDateComponent(comp, index)\"\r\n                                :disabled=\"isSchedulingDisabled\"\r\n                                @scheduleComponentsCreated=\"onScheduleComponentsCreated(index, $event)\"\r\n                                @goPrevious=\"onGoPrevious(index, $event)\"\r\n                                @goNext=\"onGoNext(index, $event)\"\r\n                                @preferenceUpdated=\"onPreferenceUpdated\"></OccurrenceDate>\r\n\r\n            </div>\r\n\r\n            <SelectFilters v-model:isVisible=\"isSelectingFilters\"\r\n                           :filters=\"filters\"\r\n                           :disallowGroupSelection=\"disallowGroupSelection\"\r\n                           @filtersApplied=\"onFiltersApplied\" />\r\n\r\n            <CloneSchedules v-model:isVisible=\"isSelectingCloneSettings\"\r\n                            :filters=\"filters\"\r\n                            @cloneSchedules=\"onCloneSchedules\" />\r\n\r\n            <ModalAlert v-model=\"isCloneSchedulesModalVisible\"\r\n                        :type=\"ModalAlertType.Information\">\r\n\r\n                <p v-if=\"cloneSchedulesResponse?.anyOccurrencesToClone === false\">\r\n                    No schedules were cloned.\r\n                </p>\r\n\r\n                <p v-else-if=\"clonedSchedulesMessage\">\r\n                    {{ clonedSchedulesMessage }}\r\n                </p>\r\n\r\n                <p>\r\n                    <strong>Source: </strong>Week of {{ clonedSchedulesSourceDateRange }}\r\n                    <br>\r\n                    <strong>Destination: </strong>Week of {{ clonedSchedulesDestinationDateRange }}\r\n                </p>\r\n\r\n                <p v-if=\"cloneSchedulesResponse?.skippedIndividualsExplanation\">\r\n                    {{ cloneSchedulesResponse.skippedIndividualsExplanation }}\r\n                </p>\r\n\r\n            </ModalAlert>\r\n\r\n            <ModalAlert v-model=\"isSendNowModalVisible\"\r\n                        :type=\"sendNowModalAlertType\">\r\n\r\n                <div v-if=\"anySendErrors\">\r\n                    One or more errors occurred when sending confirmations:\r\n                    <ul>\r\n                        <li v-for=\"error in sendNowResponse!.errors\">\r\n                            {{ error }}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div v-if=\"anySendWarnings\">\r\n                    One or more warnings occurred when sending confirmations:\r\n                    <ul>\r\n                        <li v-for=\"warning in sendNowResponse!.warnings\">\r\n                            {{ warning }}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div v-if=\"sendNowOutcomeMessage\" v-html=\"sendNowOutcomeMessage\"></div>\r\n\r\n            </ModalAlert>\r\n        </Panel>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { ComponentPublicInstance, computed, nextTick, onUnmounted, provide, ref } from \"vue\";\r\n    import CloneSchedules from \"./GroupScheduler/cloneSchedules.partial.obs\";\r\n    import OccurrenceDate from \"./GroupScheduler/occurrenceDate.partial.obs\";\r\n    import SelectFilters from \"./GroupScheduler/selectFilters.partial.obs\";\r\n    import {\r\n        NavigationUrlKey,\r\n        ReloadAllOccurrences,\r\n        ReloadOccurrencesContainingResource,\r\n        ReportAssignedResources,\r\n        UnassignedResourceCounts\r\n    } from \"./GroupScheduler/types.partial\";\r\n    import Loading from \"@Obsidian/Controls/loading.obs\";\r\n    import ModalAlert from \"@Obsidian/Controls/modalAlert.obs\";\r\n    import NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\n    import Panel from \"@Obsidian/Controls/panel.obs\";\r\n    import RockButton from \"@Obsidian/Controls/rockButton.obs\";\r\n    import { AlertType } from \"@Obsidian/Enums/Controls/alertType\";\r\n    import { BtnSize } from \"@Obsidian/Enums/Controls/btnSize\";\r\n    import { DragScroll as vDragScroll } from \"@Obsidian/Directives/dragScroll\";\r\n    import { ModalAlertType } from \"@Obsidian/Enums/Controls/modalAlertType\";\r\n    import { PanelAction } from \"@Obsidian/Types/Controls/panelAction\";\r\n    import { getSecurityGrant, onConfigurationValuesChanged, provideSecurityGrant, useConfigurationValues, useInvokeBlockAction, useReloadBlock } from \"@Obsidian/Utility/block\";\r\n    import { newGuid } from \"@Obsidian/Utility/guid\";\r\n    import { pluralize } from \"@Obsidian/Utility/stringUtils\";\r\n    import { GroupSchedulerAppliedFiltersBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduler/groupSchedulerAppliedFiltersBag\";\r\n    import { GroupSchedulerCloneSchedulesResponseBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduler/groupSchedulerCloneSchedulesResponseBag\";\r\n    import { GroupSchedulerCloneSettingsBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduler/groupSchedulerCloneSettingsBag\";\r\n    import { GroupSchedulerFiltersBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduler/groupSchedulerFiltersBag\";\r\n    import { GroupSchedulerInitializationBox } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduler/groupSchedulerInitializationBox\";\r\n    import { GroupSchedulerOccurrenceBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduler/groupSchedulerOccurrenceBag\";\r\n    import { GroupSchedulerSendNowResponseBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduler/groupSchedulerSendNowResponseBag\";\r\n    import { GroupSchedulerUnassignedResourceCountBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduler/groupSchedulerUnassignedResourceCountBag\";\r\n    import { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\n\r\n    const config = useConfigurationValues<GroupSchedulerInitializationBox>();\r\n    const invokeBlockAction = useInvokeBlockAction();\r\n\r\n    const securityGrant = getSecurityGrant(config.securityGrantToken);\r\n    const reloadBlock = useReloadBlock();\r\n\r\n    enum ScrollDirection {\r\n        Previous,\r\n        Next\r\n    }\r\n\r\n    let schedulesResizeObserver: ResizeObserver | undefined;\r\n\r\n    // #region Values\r\n\r\n    const blockActionErrorMessage = ref(\"\");\r\n\r\n    const snapContainerElement = ref<HTMLElement | null>(null);\r\n    const occurrenceDateComponents = ref<(ComponentPublicInstance | null)[]>([]);\r\n    const scheduleComponentsByOccurrenceDate = ref<Record<number, (ComponentPublicInstance | null)[]>>({});\r\n\r\n    const filters = ref<GroupSchedulerFiltersBag | null | undefined>(config.appliedFilters?.filters);\r\n    const scheduleOccurrences = ref<GroupSchedulerOccurrenceBag[] | null | undefined>(config.appliedFilters?.scheduleOccurrences);\r\n    const unassignedResourceCounts = ref<GroupSchedulerUnassignedResourceCountBag[]>(config.appliedFilters?.unassignedResourceCounts ?? []);\r\n    const navigationUrls = ref<Record<string, string> | null | undefined>(config.appliedFilters?.navigationUrls);\r\n    const disallowGroupSelection = ref<boolean>(config.disallowGroupSelection);\r\n\r\n    const isSelectingFilters = ref(false);\r\n\r\n    const isSelectingCloneSettings = ref(false);\r\n    const isCloningSchedules = ref(false);\r\n    const cloneSchedulesResponse = ref<GroupSchedulerCloneSchedulesResponseBag | null>(null);\r\n    const isCloneSchedulesModalVisible = ref(false);\r\n\r\n    const isAutoScheduling = ref(false);\r\n\r\n    const isSendingNow = ref(false);\r\n    const sendNowResponse = ref<GroupSchedulerSendNowResponseBag | null>(null);\r\n    const isSendNowModalVisible = ref(false);\r\n\r\n    const reloadAllOccurrences = ref(false);\r\n    const reloadOccurrencesContainingResource = ref<number | null>(null);\r\n\r\n    // #endregion\r\n\r\n    // #region Computed Values\r\n\r\n    const blockErrorMessage = computed((): string | undefined | null => {\r\n        return config.errorMessage;\r\n    });\r\n\r\n    const anyGroupsSelected = computed((): boolean => {\r\n        return !!filters.value?.groups?.length;\r\n    });\r\n\r\n    const copyLinkUrl = computed((): string | null => {\r\n        return navigationUrls.value?.[NavigationUrlKey.CopyLink] ?? \"hello\";\r\n    });\r\n\r\n    const secondaryActions = computed((): PanelAction[] => {\r\n        const actions: PanelAction[] = [];\r\n\r\n        if (copyLinkUrl.value) {\r\n            actions.push({\r\n                title: \"Copy Link to Clipboard\",\r\n                iconCssClass: \"fa fa-clipboard\",\r\n                type: \"default\",\r\n                handler: onCopyToClipboardClick,\r\n                disabled: isBusy.value || !anyGroupsSelected.value\r\n            });\r\n        }\r\n\r\n        return actions;\r\n    });\r\n\r\n    const filtersText = computed((): string => {\r\n        const currentFilters = filters.value;\r\n\r\n        function getSingleItemOrCount(items: ListItemBag[] | null | undefined, label: string): string {\r\n            if (items?.length) {\r\n                if (items.length === 1 && items[0]) {\r\n                    return items[0].text || \"\";\r\n                }\r\n\r\n                label = items.length === 1 ? label : `${label}s`;\r\n                return `${items.length} ${label}`;\r\n            }\r\n\r\n            return `All ${label}s`;\r\n        }\r\n\r\n        const filtersTextSegements: string[] = [\r\n            currentFilters?.groups?.length ? currentFilters.groups.map(g => g.text).join(\", \") : \"\",\r\n            currentFilters?.friendlyDateRange ? `Weeks: ${currentFilters?.friendlyDateRange}` : \"\",\r\n            getSingleItemOrCount(currentFilters?.locations?.selectedLocations, \"Location\"),\r\n            getSingleItemOrCount(currentFilters?.schedules?.selectedSchedules, \"Schedule\")\r\n        ];\r\n\r\n        return ` Filters: ${filtersTextSegements.filter(s => s).join(\" | \")}`;\r\n    });\r\n\r\n    const filtersCssClass = computed((): string => {\r\n        return `d-block text-muted${(isBusy.value ? \"\" : \" clickable\")} text-truncate`;\r\n    });\r\n\r\n    const sortedOccurrencesByDate = computed((): (GroupSchedulerOccurrenceBag[])[] => {\r\n        if (!scheduleOccurrences.value?.length) {\r\n            return [];\r\n        }\r\n\r\n        // We're assuming the server has performed the sort and returned the occcurrences to us in the expected display order.\r\n        // A Map object is needed to maintain sort order.\r\n        const groupedOccurrences = new Map<string, GroupSchedulerOccurrenceBag[]>();\r\n        scheduleOccurrences.value\r\n            .filter((o: GroupSchedulerOccurrenceBag) => o.occurrenceDate)\r\n            .forEach((o: GroupSchedulerOccurrenceBag) => {\r\n                const date = o.occurrenceDate || \"\";\r\n                let dateOccurrences = groupedOccurrences.get(date);\r\n\r\n                if (!dateOccurrences) {\r\n                    dateOccurrences = [];\r\n                    groupedOccurrences.set(date, dateOccurrences);\r\n                }\r\n\r\n                dateOccurrences.push(o);\r\n            });\r\n\r\n        const sortedDateOccurrences: (GroupSchedulerOccurrenceBag[])[] = [];\r\n        groupedOccurrences.forEach((occurrences) => sortedDateOccurrences.push(occurrences));\r\n\r\n        return sortedDateOccurrences;\r\n    });\r\n\r\n    const occurrenceDateCount = computed((): number => {\r\n        return sortedOccurrencesByDate.value.length;\r\n    });\r\n\r\n    const anyOccurrences = computed((): boolean => {\r\n        return !!occurrenceDateCount.value;\r\n    });\r\n\r\n    const showPrevNextButtons = computed((): boolean => {\r\n        if (!anyOccurrences.value) {\r\n            return false;\r\n        }\r\n\r\n        // If we have more than once occurrence date, show the prev/next buttons.\r\n        if (occurrenceDateCount.value > 1) {\r\n            return true;\r\n        }\r\n\r\n        // If we got here, this means we have eactly one occurrence date; check to see if this date contains\r\n        // more than one schedule. If so, show the prev/next buttons.\r\n        const uniqueScheduleIds: number[] = [];\r\n        sortedOccurrencesByDate[0]?.forEach((o: GroupSchedulerOccurrenceBag) => {\r\n            if (!uniqueScheduleIds.some((id: number) => id === o.scheduleId)) {\r\n                uniqueScheduleIds.push(o.scheduleId);\r\n            }\r\n        });\r\n\r\n        return uniqueScheduleIds.length > 0;\r\n    });\r\n\r\n    const clonedSchedulesMessage = computed((): string | null => {\r\n        const occurrencesClonedCount = cloneSchedulesResponse.value?.occurrencesClonedCount;\r\n\r\n        if (!occurrencesClonedCount) {\r\n            return \"No schedules were cloned.\";\r\n        }\r\n\r\n        const scheduleLabel = `schedule${(occurrencesClonedCount > 1 ? \"s\" : \"\")}`;\r\n\r\n        return `Successfully cloned ${occurrencesClonedCount} ${scheduleLabel}.`;\r\n    });\r\n\r\n    const clonedSchedulesSourceDateRange = computed((): string | null | undefined => {\r\n        return cloneSchedulesResponse.value?.sourceDateRange;\r\n    });\r\n\r\n    const clonedSchedulesDestinationDateRange = computed((): string | null | undefined => {\r\n        return cloneSchedulesResponse.value?.destinationDateRange;\r\n    });\r\n\r\n    const rosterUrl = computed((): string | null => {\r\n        return navigationUrls.value?.[NavigationUrlKey.RosterPage] ?? null;\r\n    });\r\n\r\n    const sentCount = computed((): number => {\r\n        return sendNowResponse.value?.communicationsSentCount ?? 0;\r\n    });\r\n\r\n    const anySendErrors = computed((): boolean => {\r\n        return !!sendNowResponse.value?.errors?.length;\r\n    });\r\n\r\n    const anySendWarnings = computed((): boolean => {\r\n        return !!sendNowResponse.value?.warnings?.length;\r\n    });\r\n\r\n    const anyCommunicationsToSend = computed((): boolean => {\r\n        return !!sendNowResponse.value?.anyCommunicationsToSend;\r\n    });\r\n\r\n    const sendNowModalAlertType = computed((): ModalAlertType => {\r\n        if (anySendErrors.value) {\r\n            return ModalAlertType.Alert;\r\n        }\r\n        else if (anySendWarnings.value) {\r\n            return ModalAlertType.Warning;\r\n        }\r\n\r\n        return ModalAlertType.Information;\r\n    });\r\n\r\n    const sendNowOutcomeMessage = computed((): string => {\r\n        let message = \"\";\r\n\r\n        if (sentCount.value > 0) {\r\n            message = `<p>Successfully sent ${sentCount.value} ${pluralize(\"confirmation\", sentCount.value)}.</p>`;\r\n        }\r\n        else if (!anySendErrors.value && !anySendWarnings.value && !anyCommunicationsToSend.value) {\r\n            message = \"<p>Everybody has already been sent a confirmation. No additional confirmations sent.</p>\";\r\n        }\r\n\r\n        return message;\r\n    });\r\n\r\n    const isBusy = computed((): boolean => {\r\n        return isSelectingFilters.value\r\n            || isSelectingCloneSettings.value\r\n            || isCloningSchedules.value\r\n            || isAutoScheduling.value\r\n            || isSendingNow.value;\r\n    });\r\n\r\n    const isSchedulingDisabled = computed((): boolean => {\r\n        return isBusy.value || !anyGroupsSelected.value || !anyOccurrences.value;\r\n    });\r\n\r\n    // #endregion\r\n\r\n    // #region Functions\r\n\r\n    /**\r\n     * Gets the occurrence date \"key\" from the first occurrence in the collection.\r\n     *\r\n     * @param occurrences The occurrences for a given occurrence date.\r\n     */\r\n    function getOccurrenceDateKey(occurrences: GroupSchedulerOccurrenceBag[]): string {\r\n        return occurrences?.[0]?.occurrenceDate ?? \"unknown\";\r\n    }\r\n\r\n    /**\r\n     * Adds the component to the array of occurrence date components.\r\n     *\r\n     * @param component The occurrence date component to add.\r\n     * @param index The index of the component's corresponding occurrence date within the grouped occurrences.\r\n     *  Per Vue docs: \"It should be noted that the ref array does not guarantee the same order as the source array.\"\r\n     *  Hence the need to provide this component's index to know which occurrence date it represents.\r\n     */\r\n    function addOccurrenceDateComponent(component: Element | ComponentPublicInstance | null, index: number): void {\r\n        if (!component) {\r\n            return;\r\n        }\r\n\r\n        occurrenceDateComponents.value[index] = component as ComponentPublicInstance;\r\n\r\n        // Once all occurrence date components have been added, begin observing their descendent schedule elements' sizes.\r\n        if (occurrenceDateComponents.value.length === occurrenceDateCount.value) {\r\n            observeScheduleSizes();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Observes this group scheduler's descendent schedule elements' sizes.\r\n     */\r\n    function observeScheduleSizes(): void {\r\n        if (!window.ResizeObserver || !snapContainerElement.value) {\r\n            return;\r\n        }\r\n\r\n        if (schedulesResizeObserver) {\r\n            // Stop observing any previous schedule elements.\r\n            schedulesResizeObserver.disconnect();\r\n        }\r\n        else {\r\n            schedulesResizeObserver = new ResizeObserver((_: ResizeObserverEntry[]) => {\r\n                setEqualOccurrenceDateHeights();\r\n            });\r\n        }\r\n\r\n        // Start observing any current schedule elements.\r\n        snapContainerElement.value.querySelectorAll(\".js-schedule-column\").forEach((schedule: Element) => {\r\n            schedulesResizeObserver?.observe(schedule);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sets this group scheduler's descendent occurrence date elements to have a minimum height equal to\r\n     * their tallest sibling occurrence date element.\r\n     */\r\n    function setEqualOccurrenceDateHeights(): void {\r\n        if (!snapContainerElement.value) {\r\n            return;\r\n        }\r\n\r\n        const occurrenceDates = snapContainerElement.value.querySelectorAll<HTMLElement>(\".js-occurrence-date\");\r\n\r\n        // Start by setting all occurrence dates back to \"auto\" minimum height. This will do two things:\r\n        //  1. Reclaim any vertical space that is no longer needed (if an individual was removed).\r\n        //  2. Set up the UI for mobile widths (as we won't synchronize heights in that case).\r\n        occurrenceDates.forEach((occurrenceDate: HTMLElement) => {\r\n            occurrenceDate.style.minHeight = \"auto\";\r\n        });\r\n\r\n        // For non-mobile widths, synchronize heights.\r\n        nextTick(() => {\r\n            let maxHeight = 0;\r\n\r\n            // Loop through all occurrence dates to find the tallest one.\r\n            occurrenceDates.forEach((occurrenceDate: HTMLElement) => {\r\n                if (maxHeight < occurrenceDate.offsetHeight) {\r\n                    maxHeight = occurrenceDate.offsetHeight;\r\n                }\r\n            });\r\n\r\n            // Loop through all occurrence dates again to set each minimum height to match their tallest sibling.\r\n            occurrenceDates.forEach((occurrenceDate: HTMLElement) => {\r\n                occurrenceDate.style.minHeight = `${maxHeight}px`;\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Scrolls to the previous or next schedule component.\r\n     *\r\n     * @param currentDateIndex The index of the occurrenceDate component currently within view.\r\n     * @param currentScheduleIndex The index of the schedule component (within a given occurrence date) currently within view.\r\n     * @param direction The direction to scroll.\r\n     */\r\n    function scrollToSchedule(currentDateIndex: number, currentScheduleIndex: number, direction: ScrollDirection): void {\r\n        let targetSchedules = scheduleComponentsByOccurrenceDate.value[currentDateIndex];\r\n        let targetScheduleIndex = direction == ScrollDirection.Previous ? currentScheduleIndex - 1 : currentScheduleIndex + 1;\r\n\r\n        if (direction == ScrollDirection.Previous) {\r\n            if (targetScheduleIndex < 0) {\r\n                // The first schedule of a given occurrence date is currently within view.\r\n                if (occurrenceDateCount.value > 1) {\r\n                    // There is more than one occurrence date; go to the last schedule of the previous occurrence date.\r\n                    targetSchedules = scheduleComponentsByOccurrenceDate.value[currentDateIndex === 0 ? occurrenceDateCount.value - 1 : currentDateIndex - 1];\r\n                }\r\n                else {\r\n                    // There is only one occurrence date; go to the last schedule within this same occurrence date.\r\n                }\r\n\r\n                if (targetSchedules?.length) {\r\n                    scrollTo(targetSchedules[targetSchedules.length - 1]);\r\n                }\r\n            }\r\n            else {\r\n                // Go to the previous schedule within this same occurrence date.\r\n                if (targetSchedules?.length ?? 0 > targetScheduleIndex) {\r\n                    scrollTo(targetSchedules[targetScheduleIndex]);\r\n                }\r\n            }\r\n        }\r\n        else if (direction == ScrollDirection.Next) {\r\n            if (!targetSchedules) {\r\n                return;\r\n            }\r\n\r\n            if (targetScheduleIndex > targetSchedules.length - 1) {\r\n                // The last schedule of a given occurrence is currently within view.\r\n                if (occurrenceDateCount.value > 1) {\r\n                    // There is more than one occurrence date; go to the first schedule of the next occurrence date.\r\n                    targetSchedules = scheduleComponentsByOccurrenceDate.value[currentDateIndex === occurrenceDateCount.value - 1 ? 0 : currentDateIndex + 1];\r\n                }\r\n                else {\r\n                    // There is only one occurrece date; go to the first schedule within this same occurrence date.\r\n                }\r\n\r\n                if (targetSchedules?.length) {\r\n                    scrollTo(targetSchedules[0]);\r\n                }\r\n            }\r\n            else {\r\n                // Go to the next schedule within this same occurrence date.\r\n                if (targetSchedules?.length ?? 0 > targetScheduleIndex) {\r\n                    scrollTo(targetSchedules[targetScheduleIndex]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Scrolls to the specified component.\r\n     *\r\n     * @param component The component to scroll to.\r\n     */\r\n    function scrollTo(component: ComponentPublicInstance | null): void {\r\n        if (!component?.$el || !snapContainerElement.value) {\r\n            return;\r\n        }\r\n\r\n        const elementLeft: number = component.$el.getBoundingClientRect()?.left ?? 0;\r\n        const snapContainerScrollLeft: number = snapContainerElement.value?.scrollLeft ?? 0;\r\n\r\n        snapContainerElement.value.scrollTo({\r\n            left: elementLeft + snapContainerScrollLeft,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Instructs any listening descendant schedule occurrences to reload themselves.\r\n     */\r\n    function reloadAllScheduleOccurrences(): void {\r\n        reloadAllOccurrences.value = true;\r\n\r\n        nextTick(() => {\r\n            reloadAllOccurrences.value = false;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * A function that can be used to report unassigned resources as assigned.\r\n     *\r\n     * @param unassignedResourceCountGuid The targeted \"unassigned resource count\" unique identifier.\r\n     * @param assignedCount The count of resources that have been assigned.\r\n     */\r\n    function reportAssignedResources(unassignedResourceCountGuid: string | null | undefined, assignedCount: number): void {\r\n        if (!unassignedResourceCountGuid || assignedCount <= 0 || !unassignedResourceCounts.value?.length) {\r\n            return;\r\n        }\r\n\r\n        // Only re-include the targeted count in the array if it still has unassigned resources.\r\n        unassignedResourceCounts.value = unassignedResourceCounts.value\r\n            .filter((c: GroupSchedulerUnassignedResourceCountBag) =>\r\n                c.guid !== unassignedResourceCountGuid || c.resourceCount - assignedCount > 0\r\n            )\r\n            .map((c: GroupSchedulerUnassignedResourceCountBag) => {\r\n                if (c.guid !== unassignedResourceCountGuid) {\r\n                    return c;\r\n                }\r\n                else {\r\n                    return {\r\n                        ...c,\r\n                        resourceCount: c.resourceCount - assignedCount\r\n                    };\r\n                }\r\n            }) ?? [];\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Event Handlers\r\n\r\n    /**\r\n     * Handles the click event of the \"Copy Link to Clipboard\" secondary panel action.\r\n     */\r\n    async function onCopyToClipboardClick(): Promise<void> {\r\n        await navigator.clipboard.writeText(copyLinkUrl.value ?? \"\");\r\n    }\r\n\r\n    /**\r\n     * Handles the click event of the \"Filters...\" elements, to show the `SelectFilters` component.\r\n     */\r\n    function onSelectFiltersClick(): void {\r\n        if (isBusy.value) {\r\n            return;\r\n        }\r\n\r\n        isSelectingFilters.value = true;\r\n    }\r\n\r\n    /**\r\n     * Handles the click event of the \"Clone Schedules\" button.\r\n     */\r\n    function onCloneSchedulesClick(): void {\r\n        if (isSchedulingDisabled.value) {\r\n            return;\r\n        }\r\n\r\n        isSelectingCloneSettings.value = true;\r\n    }\r\n\r\n    /**\r\n     * Handles the `cloneSchedules` event of the CloneSchedules component.\r\n     *\r\n     * @param cloneSettings The settings dictating how schedules should be cloned.\r\n     */\r\n    async function onCloneSchedules(cloneSettings: GroupSchedulerCloneSettingsBag): Promise<void> {\r\n        if (isCloningSchedules.value) {\r\n            return;\r\n        }\r\n\r\n        isCloningSchedules.value = true;\r\n        blockActionErrorMessage.value = \"\";\r\n\r\n        const result = await invokeBlockAction<GroupSchedulerCloneSchedulesResponseBag>(\"CloneSchedules\", { bag: cloneSettings });\r\n        isCloningSchedules.value = false;\r\n\r\n        if (!result.isSuccess) {\r\n            blockActionErrorMessage.value = result.errorMessage || \"Unknown error while trying to clone schedules.\";\r\n            return;\r\n        }\r\n\r\n        cloneSchedulesResponse.value = result.data ?? null;\r\n        isCloneSchedulesModalVisible.value = true;\r\n\r\n        reloadAllScheduleOccurrences();\r\n    }\r\n\r\n    /**\r\n     * Handles the click event of the \"Roster\" button.\r\n     */\r\n    function onRosterClick(): void {\r\n        if (!rosterUrl.value) {\r\n            return;\r\n        }\r\n\r\n        window.location.href = rosterUrl.value;\r\n    }\r\n\r\n    /**\r\n     * Handles the click event of the \"Auto Schedule\" button.\r\n     */\r\n    async function onAutoScheduleClick(): Promise<void> {\r\n        if (isAutoScheduling.value) {\r\n            return;\r\n        }\r\n\r\n        isAutoScheduling.value = true;\r\n        blockActionErrorMessage.value = \"\";\r\n\r\n        const result = await invokeBlockAction<GroupSchedulerAppliedFiltersBag>(\"AutoSchedule\", { bag: filters.value });\r\n        isAutoScheduling.value = false;\r\n\r\n        if (!result.isSuccess) {\r\n            blockActionErrorMessage.value = result.errorMessage || \"Unknown error while auto-scheduling.\";\r\n            return;\r\n        }\r\n\r\n        filters.value = result.data?.filters;\r\n        scheduleOccurrences.value = result.data?.scheduleOccurrences;\r\n        unassignedResourceCounts.value = result.data?.unassignedResourceCounts ?? [];\r\n        navigationUrls.value = result.data?.navigationUrls;\r\n\r\n        reloadAllScheduleOccurrences();\r\n    }\r\n\r\n    /**\r\n     * Handles the click event of the \"Send Now\" button.\r\n     */\r\n    async function onSendNowClick(): Promise<void> {\r\n        if (isSendingNow.value) {\r\n            return;\r\n        }\r\n\r\n        isSendingNow.value = true;\r\n        sendNowResponse.value = null;\r\n        blockActionErrorMessage.value = \"\";\r\n\r\n        const result = await invokeBlockAction<GroupSchedulerSendNowResponseBag>(\"SendNow\", { bag: filters.value });\r\n        isSendingNow.value = false;\r\n\r\n        if (!result.isSuccess) {\r\n            blockActionErrorMessage.value = result.errorMessage || \"Unknown error while sending confirmations.\";\r\n            return;\r\n        }\r\n\r\n        sendNowResponse.value = result.data;\r\n        isSendNowModalVisible.value = true;\r\n    }\r\n\r\n    /**\r\n     * Handles the `filtersApplied` event of the `SelectFilters` component.\r\n     *\r\n     * @param appliedFilters The filters to apply.\r\n     */\r\n    function onFiltersApplied(appliedFilters: GroupSchedulerAppliedFiltersBag | null): void {\r\n        occurrenceDateComponents.value = [];\r\n        scheduleComponentsByOccurrenceDate.value = {};\r\n\r\n        filters.value = appliedFilters?.filters;\r\n        scheduleOccurrences.value = appliedFilters?.scheduleOccurrences;\r\n        unassignedResourceCounts.value = appliedFilters?.unassignedResourceCounts ?? [];\r\n        navigationUrls.value = appliedFilters?.navigationUrls;\r\n\r\n        nextTick(() => {\r\n            if (snapContainerElement.value) {\r\n                snapContainerElement.value.scrollTo({\r\n                    left: 0,\r\n                    behavior: \"smooth\"\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Adds this occurrence date's schedule components to the local collection so we can scroll between them.\r\n     *\r\n     * @param dateIndex The index of the occurrenceDate component from which this event originated.\r\n     * @param scheduleComponents The schedule components that were created as children of the occurrenceDate component.\r\n     */\r\n    function onScheduleComponentsCreated(dateIndex: number, scheduleComponents: (ComponentPublicInstance | null)[]): void {\r\n        scheduleComponentsByOccurrenceDate.value[dateIndex] = scheduleComponents;\r\n    }\r\n\r\n    /**\r\n     * Scrolls the previous schedule component into view.\r\n     *\r\n     * @param dateIndex The index of the occurrenceDate component from which this event originated.\r\n     * @param currentIndex The index of schedule component currently within view.\r\n     */\r\n    function onGoPrevious(dateIndex: number, currentIndex: number): void {\r\n        scrollToSchedule(dateIndex, currentIndex, ScrollDirection.Previous);\r\n    }\r\n\r\n    /**\r\n     * Scrolls the next schedule component into view.\r\n     *\r\n     * @param dateIndex The index of the occurrenceDate component from which this event originated.\r\n     * @param currentIndex The index of schedule component currently within view.\r\n     */\r\n    function onGoNext(dateIndex: number, currentIndex: number): void {\r\n        scrollToSchedule(dateIndex, currentIndex, ScrollDirection.Next);\r\n    }\r\n\r\n    /**\r\n     * Handles the `preferenceUpdated` event of the occurrence date component.\r\n     *\r\n     * @param personId The identifier of the person whose preference was updated.\r\n     */\r\n    function onPreferenceUpdated(personId: number): void {\r\n        reloadOccurrencesContainingResource.value = personId;\r\n\r\n        nextTick(() => {\r\n            reloadOccurrencesContainingResource.value = null;\r\n        });\r\n    }\r\n\r\n    // #endregion\r\n\r\n    provide(UnassignedResourceCounts, unassignedResourceCounts);\r\n    provide(ReportAssignedResources, reportAssignedResources);\r\n    provide(ReloadAllOccurrences, reloadAllOccurrences);\r\n    provide(ReloadOccurrencesContainingResource, reloadOccurrencesContainingResource);\r\n    provideSecurityGrant(securityGrant);\r\n\r\n    onConfigurationValuesChanged(reloadBlock);\r\n\r\n    onUnmounted(() => {\r\n        if (schedulesResizeObserver) {\r\n            schedulesResizeObserver.disconnect();\r\n        }\r\n    });\r\n</script>\r\n"],"names":["invokeBlockAction","useInvokeBlockAction","isVisible","useVModelPassthrough","props","emit","isLoadingCloneSettings","ref","loadCloneSettingsErrorMessage","cloneSettings","selectedSourceDate","selectedDestinationDate","selectedGroups","selectedLocations","selectedSchedules","isBusy","computed","value","isCloningDisabled","availableSourceDates","_cloneSettings$value$","_cloneSettings$value","availableDestinationDates","_cloneSettings$value$2","_cloneSettings$value2","availableGroups","_cloneSettings$value$3","_cloneSettings$value3","availableLocations","_cloneSettings$value$4","_cloneSettings$value4","availableSchedules","_cloneSettings$value$5","_cloneSettings$value5","getCloneSettings","_getCloneSettings","apply","arguments","_asyncToGenerator","_cloneSettings$value$6","_cloneSettings$value6","_cloneSettings$value$7","_cloneSettings$value7","_cloneSettings$value$8","_cloneSettings$value8","_cloneSettings$value$9","_cloneSettings$value9","_cloneSettings$value$10","_cloneSettings$value10","result","bag","filters","isSuccess","errorMessage","data","onSave","watch","UnassignedResourceCounts","Symbol","ReportAssignedResources","OccurrenceDate","OccurrenceDateTitle","ScheduleId","ReloadAllOccurrences","ReloadScheduleOccurrences","ReloadOccurrencesContainingResource","ProgressState","danger","critical","warning","success","Preference","matches","notMatches","none","ResourceAction","NavigationUrlKey","progressBarElement","progressBarTooltip","concat","minimumCapacity","desiredCapacity","maximumCapacity","confirmedCount","pendingCount","declinedCount","_props$progress$minim","_props$progress","progress","minimumPercentage","getPercentageOfWhole","showMinimumThreshold","_props$progress$desir","_props$progress2","desiredPercentage","showDesiredThreshold","_props$progress$maxim","_props$progress3","maximumPercentage","showMaximumThreshold","totalCount","_props$progress$confi","_props$progress4","confirmedPercentage","_props$progress$pendi","_props$progress5","pendingPercentage","pendingCountForPercentage","_props$progress$decli","_props$progress6","state","min","desired","max","confirmed","progressState","whole","filled","part","percentage","Math","floor","configureTooltip","nextTick","tooltip","html","styleInject","css","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","noScheduleTemplateValue","availableUpdateModes","UpdateSchedulePreferenceMode","ReplacePreference","toString","text","UpdateSchedulePreferenceModeDescription","AddToPreference","isLoadingPreferences","loadPreferencesErrorMessage","isUpdatingPreference","updatePreferenceErrorMessage","scheduleTemplate","scheduleStartDate","otherPreferences","availableScheduleTemplates","warningMessage","updateMode","subtitle","o","occurrence","r","resource","titleParts","scheduleName","push","locationName","personName","PersonName","length","join","attendanceId","_props$resource$Atten","_props$resource","AttendanceId","groupMemberId","_props$resource$Group","_props$resource2","GroupMemberId","showScheduleStartDate","showOtherPreferences","_otherPreferences$val","isUpdatingDisabled","getPreferences","_getPreferences","_preferences$schedule","_preferences$schedule2","_preferences$schedule3","_preferences$schedule4","_preferences$otherPre","_preferences$availabl","_preferences$warningM","preferences","schedulePreference","otherPreferencesForGroup","_onSave","undefined","http","useHttp","updateResourceWarningMessage","isUpdatingResource","imgSrc","_props$resource$Perso","PersonPhotoUrl","_props$resource$Perso2","resourceNameElement","status","_props$resource$Confi","_props$resource3","ConfirmationStatus","statusCssClass","toLowerCase","resourceCssClass","_props$resource4","_props$resource5","isSchedulingDisabled","disabled","declinedReasonTooltip","_props$resource6","reason","DeclinedReason","wrapTooltipSection","preferenceList","_props$resource$Resou","_props$resource7","_props$resource7$Reso","ResourcePreferenceList","filter","a","ScheduleName","preferenceTooltip","_props$resource8","MatchesPreference","forEach","preference","LocationName","schedulingConflictList","_props$resource$Sched","_props$resource9","_props$resource9$Sche","SchedulingConflicts","conflictTooltip","_schedulingConflictLi","_props$resource10","_props$resource11","conflict","HasBlackoutConflict","HasGroupRequirementsConflict","resourceTooltip","getFriendlyAction","action","MarkConfirmed","MarkPending","MarkDeclined","ResendConfirmation","UpdatePreference","Remove","tooltipSection","onUpdateResource","_x","_onUpdateResource","endpoint","doApiCall","cssClass","_props$resource$Resou2","scheduledList","_props$resource$Resou3","_props$resource2$Reso","ResourceScheduledList","hasBlackoutConflict","hasGroupRequirementsConflict","_props$resource5$Sche","hasNote","Note","shouldShow","_preferenceList$value","_scheduledList$value","selectedResources","getIsDisabled","nameFilter","isDisabled","hasFilter","clearButtonCssClass","clearIconCssClass","onClearClick","baseApiUrl","primarySourceTypeGroupValue","primarySourceTypes","ResourceListSourceType","AlternateGroup","ParentGroup","DataView","secondarySourceTypes","GroupMembers","GroupMatchingPreference","GroupMatchingAssignment","occurrenceDateTitle","inject","isLoadingResourceSettings","loadResourceSettingsErrorMessage","isLoadingResources","loadResourcesInfoMessage","loadResourcesErrorMessage","isAssigningResources","unsuccessfulAssignmentPersonIds","unsuccessfulAssignmentMessages","resourceSettings","selectedPrimarySourceType","selectedSecondarySourceType","selectedAlternateGroup","selectedDataView","availableResources","selectedPersonIds","resourceNameFilter","occurrenceTitle","groupName","friendlyOccurrenceDate","enabledSourceTypes","_resourceSettings$val","_resourceSettings$val2","enabledResourceListSourceTypes","secondarySourceTypeItems","some","secondary","map","ResourceListSourceTypeDescription","primarySourceTypeItems","items","primary","unshift","selectedSourceType","toNumber","selectedSourceTypeIsGroup","selectedSourceTypeIsAlternateGroup","selectedSourceTypeIsParentGroup","selectedSourceTypeIsDataView","_props$occurrence","_props$occurrence2","parentGroupName","remainingResourceSpots","_props$occurrence$min","_props$occurrence3","_props$occurrence$des","_props$occurrence4","_props$occurrence$max","_props$occurrence5","_ref2","_selectedPersonIds$va","label","spotsFilledCount","remainingSpotsAndNameFilterCssClass","justifyClass","groupId","_props$occurrence$gro","_props$occurrence6","parentGroupId","_props$occurrence7","locationIds","locationId","scheduleIds","scheduleId","sundayDate","_props$occurrence$sun","_props$occurrence8","groupMemberFilterType","_resourceSettings$val3","_resourceSettings$val4","resourceGroupMemberFilterType","filteredResources","_resourceNameFilter$v","trim","replace","filterParts","lastNameFilter","firstNameFilter","useOrComparison","includes","split","toUpperCase","_resource$PersonNickN","_resource$PersonLastN","PersonNickName","startsWith","PersonLastName","_resource$PersonNickN2","_resource$PersonLastN2","noResourcesMessage","isNameFilterDisabled","isSaveButtonDisabled","_selectedPersonIds$va2","getResourceSettings","_getResourceSettings","updateSettingsValues","_resourceSettings$val5","_resourceSettings$val6","_resourceSettings$val7","_resourceSettings$val8","_resourceSettings$val9","sourceType","resourceListSourceType","resourceAlternateGroup","resourceDataView","getResources","_getResources","_result$data","parameters","AttendanceOccurrenceGroupId","AttendanceOccurrenceScheduleIds","AttendanceOccurrenceLocationIds","AttendanceOccurrenceSundayDate","GroupMemberFilterType","ResourceGroupId","ResourceGroupGuid","ResourceDataViewGuid","post","_result$errorMessage","onSettingsSelectionChanged","_onSettingsSelectionChanged","_selectedAlternateGro","_selectedDataView$val","resourceAlternateGroupGuid","resourceDataViewGuid","_selectedPersonIds$va3","_props$occurrence$att","_props$occurrence9","attendanceOccurrenceId","resourcesWereAssigned","Promise","all","_ref3","personId","params","isSelectingIndividuals","getResourcesWarningMessage","resources","reloadAllOccurrences","reloadScheduleOccurrences","reloadOccurrencesContainingResource","title","isValidAttendanceOccurrence","ScheduledAttendanceItemStatusDescription","ScheduledAttendanceItemStatus","Confirmed","pending","Pending","declined","Declined","scheduleProgress","schedulingDisabled","isSchedulingEnabled","getCurrentResources","_getCurrentResources","get","onResourceUpdated","onSelectIndividualsClick","triggeredById","_resources$value","PersonId","missingDataErrorMessage","blockActionErrorMessage","locationIdByPersonIds","reportAssignedResources","_props$unassignedReso","_props$unassignedReso2","pluralize","unassignedResourceCount","resourceCount","unassignedResourceCountGuid","_props$unassignedReso3","guid","occurrenceDate","_props$unassignedReso4","_props$unassignedReso5","_props$unassignedReso6","_props$unassignedReso7","_props$unassignedReso8","_props$unassignedReso9","_props$unassignedReso10","_props$unassignedReso11","locations","_props$availableOccur","_props$availableOccur2","availableOccurrences","isDataMissing","areAnyLocationsSelected","Object","entries","_slicedToArray","_","getUnassignedResources","_getUnassignedResources","successfullyAssignedPersonIds","unsuccessfullyAssignedPersonIds","_ref4","_props$availableOccur3","_props$availableOccur4","toNumberOrNull","assignToAttendanceOccurrenceId","find","id","count","unassignedResourceCounts","isProvideLocationsModalVisible","_props$occurrences$0$","_props$occurrences","_props$occurrences$","occurrences","_props$occurrences2","_props$occurrences2$","anyLocations","_props$occurrences3","_unassignedResourceCo","unassignedResourceText","_unassignedResourceCo2","_unassignedResourceCo3","provideLocationText","_unassignedResourceCo4","_unassignedResourceCo5","sortedOccurrencesByGroup","groupedOccurrences","Map","groupOccurrences","set","sortedGroupOccurrences","anyGroups","getGroupIdKey","_occurrences$0$groupI","_occurrences$","onResourceListUpdated","triggeredByAttendanceOccurrenceId","provide","formatSchedulerDate","dateString","formattedDate","rockDateTime","RockDateTime","parseISO","toASPString","dateParts","ordinalDate","toOrdinalSuffix","locationsResizeObserver","occurrenceDateElement","scheduleComponents","sortedOccurrencesBySchedule","scheduleOccurrences","sortedScheduleOccurrences","scheduleCount","anySchedules","inlineStyle","getScheduleIdKey","_occurrences$0$schedu","addScheduleComponent","component","index","observeLocationSizes","window","ResizeObserver","disconnect","setEqualGroupHeights","querySelectorAll","location","_locationsResizeObser","observe","schedules","schedule","group","minHeight","innerWidth","groupHeights","i","offsetHeight","onUnmounted","isRefiningFilters","isApplyingFilters","isCanceled","originalValue","_props$filters$groups","_props$filters","groups","_props$filters$locati","_props$filters2","_props$filters2$locat","_props$filters$locati2","_props$filters3","_props$filters3$locat","_props$filters$schedu","_props$filters4","_props$filters4$sched","_props$filters$schedu2","_props$filters5","_props$filters5$sched","selectedDateRange","getSlidingDateRange","_props$filters6","dateRange","firstEndOfWeekDate","_props$filters7","lastEndOfWeekdDate","_props$filters8","lastEndOfWeekDate","friendlyDateRange","_props$filters9","groupsTextLabel","pluralConditional","groupsText","g","selectedLocationValues","_selectedLocations$va","_selectedLocations$va2","_selectedLocations$va3","item","_item$value","newValue","selectedScheduleValues","_selectedSchedules$va","_selectedSchedules$va2","_selectedSchedules$va3","_item$value2","getCurrentFilters","setCurrentFilters","_filters$groups","_filters$locations$av","_filters$locations","_filters$locations$se","_filters$locations2","_filters$schedules$av","_filters$schedules","_filters$schedules$se","_filters$schedules2","onFiltersChanged","_onFiltersChanged","ScrollDirection","config","useConfigurationValues","securityGrant","getSecurityGrant","securityGrantToken","reloadBlock","useReloadBlock","schedulesResizeObserver","snapContainerElement","occurrenceDateComponents","scheduleComponentsByOccurrenceDate","_config$appliedFilter","appliedFilters","_config$appliedFilter2","_config$appliedFilter3","_config$appliedFilter4","navigationUrls","_config$appliedFilter5","disallowGroupSelection","isSelectingFilters","isSelectingCloneSettings","isCloningSchedules","cloneSchedulesResponse","isCloneSchedulesModalVisible","isAutoScheduling","isSendingNow","sendNowResponse","isSendNowModalVisible","blockErrorMessage","anyGroupsSelected","_filters$value","_filters$value$groups","copyLinkUrl","_navigationUrls$value","_navigationUrls$value2","CopyLink","secondaryActions","actions","iconCssClass","handler","onCopyToClipboardClick","filtersText","_currentFilters$group","_currentFilters$locat","_currentFilters$sched","currentFilters","getSingleItemOrCount","filtersTextSegements","s","filtersCssClass","sortedOccurrencesByDate","_scheduleOccurrences$","date","dateOccurrences","sortedDateOccurrences","occurrenceDateCount","anyOccurrences","showPrevNextButtons","_sortedOccurrencesByD","uniqueScheduleIds","clonedSchedulesMessage","_cloneSchedulesRespon","occurrencesClonedCount","scheduleLabel","clonedSchedulesSourceDateRange","_cloneSchedulesRespon2","sourceDateRange","clonedSchedulesDestinationDateRange","_cloneSchedulesRespon3","destinationDateRange","rosterUrl","_navigationUrls$value3","_navigationUrls$value4","RosterPage","sentCount","_sendNowResponse$valu","_sendNowResponse$valu2","communicationsSentCount","anySendErrors","_sendNowResponse$valu3","_sendNowResponse$valu4","errors","anySendWarnings","_sendNowResponse$valu5","_sendNowResponse$valu6","warnings","anyCommunicationsToSend","_sendNowResponse$valu7","sendNowModalAlertType","ModalAlertType","Alert","Warning","Information","sendNowOutcomeMessage","message","getOccurrenceDateKey","_occurrences$0$occurr","addOccurrenceDateComponent","observeScheduleSizes","setEqualOccurrenceDateHeights","_schedulesResizeObser","occurrenceDates","maxHeight","scrollToSchedule","currentDateIndex","currentScheduleIndex","direction","targetSchedules","targetScheduleIndex","Previous","_targetSchedules","scrollTo","_targetSchedules$leng","_targetSchedules2","Next","_targetSchedules3","_targetSchedules$leng2","_targetSchedules4","_component$$el$getBou","_component$$el$getBou2","_snapContainerElement","_snapContainerElement2","$el","elementLeft","getBoundingClientRect","left","snapContainerScrollLeft","scrollLeft","behavior","reloadAllScheduleOccurrences","assignedCount","c","_objectSpread","_onCopyToClipboardClick","_copyLinkUrl$value","navigator","clipboard","writeText","onSelectFiltersClick","onCloneSchedulesClick","onCloneSchedules","_onCloneSchedules","onRosterClick","href","onAutoScheduleClick","_onAutoScheduleClick","_result$data2","_result$data3","_result$data$unassign","_result$data4","_result$data5","onSendNowClick","_onSendNowClick","onFiltersApplied","_appliedFilters$unass","onScheduleComponentsCreated","dateIndex","onGoPrevious","currentIndex","onGoNext","onPreferenceUpdated","provideSecurityGrant","onConfigurationValuesChanged"],"mappings":"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"}