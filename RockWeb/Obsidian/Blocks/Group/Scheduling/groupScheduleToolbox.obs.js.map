{"version":3,"file":"groupScheduleToolbox.obs.js","sources":["../../../src/Group/Scheduling/GroupScheduleToolbox/types.partial.ts","../../../src/Group/Scheduling/GroupScheduleToolbox/declineReason.partial.obs","../../../src/Group/Scheduling/GroupScheduleToolbox/utils.partial.ts","../../../src/Group/Scheduling/GroupScheduleToolbox/currentScheduleRow.partial.obs","../../../../Rock.JavaScript.Obsidian/node_modules/style-inject/dist/style-inject.es.js","../../../src/Group/Scheduling/GroupScheduleToolbox/scheduleUnavailability.partial.obs","../../../src/Group/Scheduling/GroupScheduleToolbox/currentSchedule.partial.obs","../../../src/Group/Scheduling/GroupScheduleToolbox/signUpOccurrence.partial.obs","../../../src/Group/Scheduling/GroupScheduleToolbox/signUpOccurrenceDate.partial.obs","../../../src/Group/Scheduling/GroupScheduleToolbox/signUp.partial.obs","../../../src/Group/Scheduling/GroupScheduleToolbox/editAssignment.partial.obs","../../../src/Group/Scheduling/GroupScheduleToolbox/updatePreferences.partial.obs","../../../src/Group/Scheduling/groupScheduleToolbox.obs"],"sourcesContent":["// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { InjectionKey, Ref } from \"vue\";\r\nimport { GroupBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/groupBag\";\r\n\r\n/**\r\n * Keys for page parameters.\r\n */\r\nexport const enum PageParameterKey {\r\n    ToolboxActionType = \"ToolboxActionType\",\r\n    ToolboxGroupId = \"ToolboxGroupId\"\r\n}\r\n\r\n/**\r\n * An injection key to provide the selected person unique identifier.\r\n */\r\nexport const SelectedPersonGuid: InjectionKey<Ref<string>> = Symbol(\"selected-person-guid\");\r\n\r\n/**\r\n * An injection key to provide the selected group bag.\r\n */\r\nexport const SelectedGroup: InjectionKey<Ref<GroupBag | null | undefined>> = Symbol(\"selected-group\");\r\n\r\n/**\r\n * An injection key to provide the save sign-up error message.\r\n */\r\nexport const SaveSignUpErrorMessage: InjectionKey<Ref<string>> = Symbol(\"save-sign-up-error-message\");\r\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <Modal v-model=\"isVisible\"\r\n           title=\"Decline Reason\"\r\n           modalWrapperClasses=\"schedule-toolbox-decline-reason\"\r\n           saveText=\"Save\"\r\n           cancelText=\"\"\r\n           :isSaveButtonDisabled=\"isSavingDeclineReason\"\r\n           :isCloseButtonHidden=\"true\"\r\n           @save=\"onSave\">\r\n\r\n        <p class=\"decline-reason-instructions\">\r\n            Your feedback on declining this schedule would be valuable to us.\r\n        </p>\r\n\r\n        <DefinedValuePicker v-model=\"declineReason\"\r\n                            label=\"Reason for Decline\"\r\n                            formGroupClasses=\"decline-reason-defined-value\"\r\n                            rules=\"required\"\r\n                            :definedTypeGuid=\"DefinedType.GroupScheduleDeclineReason\"\r\n                            :disabled=\"isSavingDeclineReason\" />\r\n\r\n        <NoteTextEditor v-if=\"isDeclineNoteVisible\"\r\n                        v-model=\"declineReasonNote\"\r\n                        label=\"Elaborate on Your Decline Reason\"\r\n                        formGroupClasses=\"decline-reason-note\"\r\n                        :rules=\"declineNoteRules\"\r\n                        :disabled=\"isSavingDeclineReason\" />\r\n\r\n    </Modal>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, inject, PropType, ref } from \"vue\";\r\n    import { SelectedPersonGuid } from \"./types.partial\";\r\n    import DefinedValuePicker from \"@Obsidian/Controls/definedValuePicker.obs\";\r\n    import Modal from \"@Obsidian/Controls/modal.obs\";\r\n    import NoteTextEditor from \"@Obsidian/Controls/noteTextEditor.obs\";\r\n    import { DefinedType } from \"@Obsidian/SystemGuids/definedType\";\r\n    import { Guid } from \"@Obsidian/Types\";\r\n    import { useInvokeBlockAction } from \"@Obsidian/Utility/block\";\r\n    import { useVModelPassthrough } from \"@Obsidian/Utility/component\";\r\n    import { SaveDeclineReasonRequestBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/saveDeclineReasonRequestBag\";\r\n    import { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\n\r\n    const invokeBlockAction = useInvokeBlockAction();\r\n\r\n    const props = defineProps({\r\n        isVisible: {\r\n            type: Boolean as PropType<boolean>,\r\n            required: true\r\n        },\r\n\r\n        attendanceGuid: {\r\n            type: String as PropType<Guid | null | undefined>,\r\n            required: true\r\n        },\r\n\r\n        wasSchedulePreviouslyConfirmed: {\r\n            type: Boolean as PropType<boolean>,\r\n            required: true\r\n        },\r\n\r\n        isDeclineNoteVisible: {\r\n            type: Boolean as PropType<boolean>,\r\n            required: true\r\n        },\r\n\r\n        isDeclineNoteRequired: {\r\n            type: Boolean as PropType<boolean>,\r\n            required: true\r\n        }\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"update:isVisible\"): void\r\n    }>();\r\n\r\n    // #region Values\r\n\r\n    const isVisible = useVModelPassthrough(props, \"isVisible\", emit);\r\n\r\n    const selectedPersonGuid = inject(SelectedPersonGuid);\r\n\r\n    const isSavingDeclineReason = ref(false);\r\n\r\n    const declineReason = ref<ListItemBag | null>(null);\r\n    const declineReasonNote = ref(\"\");\r\n\r\n    // #endregion Values\r\n\r\n    // #region Computed Values\r\n\r\n    const declineNoteRules = computed((): string => {\r\n        return props.isDeclineNoteRequired ? \"required\" : \"\";\r\n    });\r\n\r\n    // #endregion Computed Values\r\n\r\n    // #region Event Handlers\r\n\r\n    /**\r\n     * Handles the `save` event of the Modal component.\r\n     */\r\n    async function onSave(): Promise<void> {\r\n        if (isSavingDeclineReason.value) {\r\n            return;\r\n        }\r\n\r\n        isSavingDeclineReason.value = true;\r\n\r\n        const bag: SaveDeclineReasonRequestBag = {\r\n            selectedPersonGuid: selectedPersonGuid?.value,\r\n            attendanceGuid: props.attendanceGuid,\r\n            wasSchedulePreviouslyConfirmed: props.wasSchedulePreviouslyConfirmed,\r\n            declineReason: declineReason.value,\r\n            declineReasonNote: declineReasonNote.value\r\n        };\r\n\r\n        try {\r\n            await invokeBlockAction(\"SaveDeclineReason\", { bag });\r\n        }\r\n        finally {\r\n            // Since this is nice-to-have info, we'll just fail silently (by closing the modal)\r\n            // even if the response contains an error. The schedule row has already been marked\r\n            // as declined by a separate request.\r\n\r\n            isSavingDeclineReason.value = false;\r\n            isVisible.value = false;\r\n        }\r\n    }\r\n\r\n    // #endregion Event Handlers\r\n</script>\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n\r\nimport { toOrdinalSuffix } from \"@Obsidian/Utility/numberUtils\";\r\nimport { RockDateTime } from \"@Obsidian/Utility/rockDateTime\";\r\n\r\n/**\r\n * Formats the date for consistent, friendly display within the toolbox.\r\n *\r\n * @param dateString The string that contains the ISO 8601 formatted text.\r\n * @returns The formatted date.\r\n */\r\nexport function formatToolboxDate(dateString: string): string {\r\n    let formattedDate: string | null | undefined;\r\n    const rockDateTime = RockDateTime.parseISO(dateString);\r\n    if (rockDateTime) {\r\n        formattedDate = rockDateTime.toASPString(\"ddd, MMM d\");\r\n\r\n        if (formattedDate) {\r\n            const dateParts = formattedDate.split(\" \");\r\n            if (dateParts.length === 3) {\r\n                const ordinalDate = toOrdinalSuffix(+dateParts[2]);\r\n                formattedDate = [\r\n                    dateParts[0],\r\n                    dateParts[1],\r\n                    ordinalDate ?? dateParts[2]\r\n                ].join(\" \");\r\n            }\r\n        }\r\n    }\r\n\r\n    return formattedDate || \"No Date Provided\";\r\n}","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <NotificationBox v-if=\"errorMessage\" :alertType=\"AlertType.Warning\">\r\n        {{ errorMessage }}\r\n    </NotificationBox>\r\n\r\n    <div :class=\"cardCssClass\">\r\n        <div class=\"card-body schedule-toolbox-card\">\r\n\r\n            <div class=\"schedule-toolbox-card-description\">\r\n                <span v-if=\"scheduleDate\" class=\"card-title\">\r\n                    <span class=\"schedule-date\">\r\n                        {{ scheduleDate }}\r\n                    </span>\r\n                </span>\r\n                <span class=\"schedule-occurrence\" v-html=\"cardDetails\"></span>\r\n                <span class=\"schedule-occurrence-schedule\">\r\n                    {{ row.scheduleName }}\r\n                </span>\r\n            </div>\r\n\r\n            <div v-if=\"row.confirmationStatus === ToolboxScheduleRowConfirmationStatus.Pending\" class=\"schedule-confirm schedule-toolbox-card-pending\">\r\n                <RockButton type=\"button\"\r\n                            :btnType=\"BtnType.Danger\"\r\n                            :disabled=\"isRowDisabled\"\r\n                            @click=\"onPerformAction(ToolboxScheduleRowActionType.Decline)\">\r\n                    Decline\r\n                </RockButton>\r\n\r\n                <RockButton type=\"button\"\r\n                            :btnType=\"BtnType.Success\"\r\n                            :disabled=\"isRowDisabled\"\r\n                            @click=\"onPerformAction(ToolboxScheduleRowActionType.Accept)\">\r\n                    Accept\r\n                </RockButton>\r\n            </div>\r\n\r\n            <div v-else class=\"schedule-toolbox-card-not-pending\">\r\n                <span :class=\"labelCssClass\">\r\n                    {{ ToolboxScheduleRowConfirmationStatusDescription[row.confirmationStatus] }}\r\n                </span>\r\n\r\n                <div class=\"btn-group dropdown-right schedule-toolbox-card-context-menu\">\r\n                    <button type=\"button\"\r\n                            class=\"btn btn-link btn-overflow dropdown-toggle\"\r\n                            data-toggle=\"dropdown\"\r\n                            :disabled=\"isRowDisabled\">\r\n                        <i class=\"fa fa-ellipsis-v\"></i>\r\n                    </button>\r\n                    <ul class=\"dropdown-menu\">\r\n                        <li>\r\n                            <a v-if=\"row.confirmationStatus === ToolboxScheduleRowConfirmationStatus.Confirmed\"\r\n                               class=\"text-danger\"\r\n                               href=\"#\"\r\n                               @click.prevent=\"onPerformAction(ToolboxScheduleRowActionType.Cancel)\">\r\n                                Cancel Confirmation\r\n                            </a>\r\n\r\n                            <a v-else-if=\"row.confirmationStatus === ToolboxScheduleRowConfirmationStatus.Declined\"\r\n                               href=\"#\"\r\n                               @click.prevent=\"onPerformAction(ToolboxScheduleRowActionType.Accept)\">\r\n                                Accept Schedule\r\n                            </a>\r\n\r\n                            <a v-else\r\n                               class=\"text-danger\"\r\n                               href=\"#\"\r\n                               @click.prevent=\"onPerformAction(ToolboxScheduleRowActionType.Delete)\">\r\n                                Delete\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <DeclineReason v-model:isVisible=\"isDeclineReasonModalVisible\"\r\n                   :attendanceGuid=\"row.entityGuid\"\r\n                   :wasSchedulePreviouslyConfirmed=\"wasSchedulePreviouslyConfirmed\"\r\n                   :isDeclineNoteVisible=\"isDeclineNoteVisible\"\r\n                   :isDeclineNoteRequired=\"isDeclineNoteRequired\" />\r\n</template>\r\n\r\n<style scoped>\r\n.schedule-toolbox-card {\r\n    display: flex;\r\n}\r\n\r\n.schedule-toolbox-card-description {\r\n    flex: 1 1 auto;\r\n}\r\n\r\n.schedule-toolbox-card-not-pending {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n    flex-wrap: nowrap;\r\n}\r\n\r\n.schedule-toolbox-card-context-menu {\r\n    margin-left: 4px;\r\n}\r\n</style>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, inject, PropType, ref } from \"vue\";\r\n    import DeclineReason from \"./declineReason.partial.obs\";\r\n    import { SelectedPersonGuid } from \"./types.partial\";\r\n    import { formatToolboxDate } from \"./utils.partial\";\r\n    import NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\n    import RockButton from \"@Obsidian/Controls/rockButton.obs\";\r\n    import { AlertType } from \"@Obsidian/Enums/Controls/alertType\";\r\n    import { BtnType } from \"@Obsidian/Enums/Controls/btnType\";\r\n    import { PerformScheduleRowActionRequestBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/performScheduleRowActionRequestBag\";\r\n    import { PerformScheduleRowActionResponseBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/performScheduleRowActionResponseBag\";\r\n    import { ScheduleRowBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/scheduleRowBag\";\r\n    import { ToolboxScheduleRowActionType } from \"@Obsidian/Enums/Blocks/Group/Scheduling/toolboxScheduleRowActionType\";\r\n    import {\r\n        ToolboxScheduleRowConfirmationStatus,\r\n        ToolboxScheduleRowConfirmationStatusDescription\r\n    } from \"@Obsidian/Enums/Blocks/Group/Scheduling/toolboxScheduleRowConfirmationStatus\";\r\n    import { useInvokeBlockAction } from \"@Obsidian/Utility/block\";\r\n\r\n    const invokeBlockAction = useInvokeBlockAction();\r\n\r\n    const props = defineProps({\r\n        row: {\r\n            type: Object as PropType<ScheduleRowBag>,\r\n            required: true\r\n        },\r\n\r\n        disabled: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        }\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"removeScheduleRow\", entityGuid: string): void,\r\n        (e: \"personGroupScheduleFeedUrlUpdated\", personGroupScheduleFeedUrl: string | null | undefined): void\r\n    }>();\r\n\r\n    // #region Values\r\n\r\n    const selectedPersonGuid = inject(SelectedPersonGuid);\r\n\r\n    const isPerformingAction = ref(false);\r\n    const errorMessage = ref(\"\");\r\n\r\n    const isDeclineReasonModalVisible = ref(false);\r\n    const wasSchedulePreviouslyConfirmed = ref(false);\r\n    const isDeclineNoteVisible = ref(false);\r\n    const isDeclineNoteRequired = ref(false);\r\n\r\n    // #endregion Values\r\n\r\n    // #region Computed Values\r\n\r\n    const cardCssClass = computed((): string => {\r\n        const statusDescription = ToolboxScheduleRowConfirmationStatusDescription[props.row.confirmationStatus];\r\n        return `card card-sm card-schedule${statusDescription ? ` schedule-${statusDescription.toLowerCase()}` : \"\"}`;\r\n    });\r\n\r\n    const scheduleDate = computed((): string => {\r\n        if (!props.row.occurrenceStartDate) {\r\n            return \"\";\r\n        }\r\n\r\n        const startDate = formatToolboxDate(props.row.occurrenceStartDate);\r\n\r\n        let endDate: string = \"\";\r\n        if (props.row.occurrenceEndDate) {\r\n            endDate = formatToolboxDate(props.row.occurrenceEndDate);\r\n        }\r\n\r\n        if (!endDate) {\r\n            return startDate;\r\n        }\r\n\r\n        return `${startDate} - ${endDate}`;\r\n    });\r\n\r\n    const cardDetails = computed((): string => {\r\n        const detailParts: string[][] = [];\r\n\r\n        // Family member name.\r\n        if (props.row.familyMemberName) {\r\n            detailParts.push([\"family-member-name\", props.row.familyMemberName]);\r\n        }\r\n\r\n        // Group name.\r\n        if (props.row.groupName) {\r\n            detailParts.push([\"group\", props.row.groupName]);\r\n        }\r\n\r\n        // Location name.\r\n        if (props.row.locationName) {\r\n            detailParts.push([\"location\", props.row.locationName]);\r\n        }\r\n\r\n        // Combine and dash-delimit the parts.\r\n        let detail = \"\";\r\n        for (let i = 0; i < detailParts.length; i++) {\r\n            const cssClass = detailParts[i][0];\r\n            const delimiter = i > 0 ? \" - \" : \"\";\r\n            const value = detailParts[i][1];\r\n            detail += `${delimiter}<span class=\"schedule-occurrence-${cssClass}\">${value}</span>`;\r\n        }\r\n\r\n        return detail;\r\n    });\r\n\r\n    const labelCssClass = computed((): string => {\r\n        let statusColor = \"muted\";\r\n        switch (props.row.confirmationStatus) {\r\n            case ToolboxScheduleRowConfirmationStatus.Confirmed:\r\n                statusColor = \"success\";\r\n                break;\r\n            case ToolboxScheduleRowConfirmationStatus.Declined:\r\n                statusColor = \"danger\";\r\n                break;\r\n        }\r\n\r\n        return `text-${statusColor}`;\r\n    });\r\n\r\n    const isRowDisabled = computed((): boolean => {\r\n        return !!(props.disabled || !props.row.entityGuid || isPerformingAction.value);\r\n    });\r\n\r\n    // #endregion Computed Values\r\n\r\n    // #region Event Handlers\r\n\r\n    /**\r\n     * Handles the `click` event of schedule row action buttons.\r\n     *\r\n     * @param actionType The action type to be performed.\r\n     */\r\n    async function onPerformAction(actionType: ToolboxScheduleRowActionType): Promise<void> {\r\n        if (isRowDisabled.value) {\r\n            return;\r\n        }\r\n\r\n        isPerformingAction.value = true;\r\n        errorMessage.value = \"\";\r\n\r\n        const bag: PerformScheduleRowActionRequestBag = {\r\n            selectedPersonGuid: selectedPersonGuid?.value,\r\n            entityGuid: props.row.entityGuid,\r\n            actionType\r\n        };\r\n\r\n        const result = await invokeBlockAction<PerformScheduleRowActionResponseBag>(\"PerformScheduleRowAction\", { bag });\r\n        isPerformingAction.value = false;\r\n\r\n        if (!result.isSuccess) {\r\n            errorMessage.value = result.errorMessage || \"Unknown error while trying to perform schedule row action.\";\r\n            return;\r\n        }\r\n\r\n        // A falsy check won't work here, as ToolboxScheduleRowConfirmationStatus.Pending == 0;\r\n        const newStatus = result.data?.newStatus;\r\n        if (newStatus !== null && newStatus !== undefined) {\r\n            props.row.confirmationStatus = newStatus;\r\n        }\r\n        else {\r\n            // If a new status wasn't provided in the response, remove this row from the list.\r\n            emit(\"removeScheduleRow\", props.row.entityGuid ?? \"\");\r\n        }\r\n\r\n        emit(\"personGroupScheduleFeedUrlUpdated\", result.data?.personGroupScheduleFeedUrl);\r\n\r\n        if (result.data?.isDeclineReasonRequired) {\r\n            // Show the \"Decline Reason\" modal.\r\n            wasSchedulePreviouslyConfirmed.value = result.data.wasSchedulePreviouslyConfirmed;\r\n            isDeclineNoteVisible.value = result.data.isDeclineNoteVisible;\r\n            isDeclineNoteRequired.value = result.data.isDeclineNoteRequired;\r\n            isDeclineReasonModalVisible.value = true;\r\n        }\r\n    }\r\n\r\n    // #endregion Event Handlers\r\n</script>\r\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <Modal v-model=\"isVisible\"\r\n           title=\"Schedule Unavailability\"\r\n           modalWrapperClasses=\"schedule-toolbox-unavailability\"\r\n           saveText=\"Save\"\r\n           :isSaveButtonDisabled=\"isSavingUnavailability\"\r\n           @save=\"onSave\">\r\n\r\n        <NotificationBox v-if=\"blockActionErrorMessage\" :alertType=\"AlertType.Warning\">\r\n            {{ blockActionErrorMessage }}\r\n        </NotificationBox>\r\n\r\n        <div v-if=\"headerText\" v-html=\"headerText\"></div>\r\n\r\n        <DateRangePicker v-model=\"dateRangeParts\"\r\n                         label=\"Date Range\"\r\n                         formGroupClasses=\"unavailability-date-range\"\r\n                         rules=\"required\"\r\n                         :disabled=\"isSavingUnavailability\" />\r\n\r\n        <TextBox v-model=\"notes\"\r\n                 label=\"Unavailability Notes\"\r\n                 formGroupClasses=\"unavailability-notes\"\r\n                 :disabled=\"isSavingUnavailability\" />\r\n\r\n        <DropDownList v-model=\"groupGuid\"\r\n                      label=\"Group\"\r\n                      formGroupClasses=\"unavailability-group\"\r\n                      :items=\"groups\"\r\n                      :showBlankItem=\"false\"\r\n                      :disabled=\"isSavingUnavailability\" />\r\n\r\n        <CheckBoxList v-if=\"isFamilyMemberListVisible\"\r\n                      v-model=\"personGuids\"\r\n                      label=\"Individual\"\r\n                      formGroupClasses=\"unavailability-people\"\r\n                      rules=\"required\"\r\n                      :items=\"familyMembers\"\r\n                      :disabled=\"isSavingUnavailability\" />\r\n\r\n    </Modal>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, inject, PropType, ref, watch } from \"vue\";\r\n    import {\r\n        SelectedPersonGuid\r\n    } from \"./types.partial\";\r\n    import CheckBoxList from \"@Obsidian/Controls/checkBoxList.obs\";\r\n    import DateRangePicker from \"@Obsidian/Controls/dateRangePicker.obs\";\r\n    import DropDownList from \"@Obsidian/Controls/dropDownList.obs\";\r\n    import Modal from \"@Obsidian/Controls/modal.obs\";\r\n    import NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\n    import TextBox from \"@Obsidian/Controls/textBox.obs\";\r\n    import { AlertType } from \"@Obsidian/Enums/Controls/alertType\";\r\n    import { DateRangeParts } from \"@Obsidian/Types/Controls/dateRangePicker\";\r\n    import { useInvokeBlockAction } from \"@Obsidian/Utility/block\";\r\n    import { useVModelPassthrough } from \"@Obsidian/Utility/component\";\r\n    import { GroupBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/groupBag\";\r\n    import { SaveUnavailabilityRequestBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/saveUnavailabilityRequestBag\";\r\n    import { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\n\r\n    const invokeBlockAction = useInvokeBlockAction();\r\n\r\n    const props = defineProps({\r\n        isVisible: {\r\n            type: Boolean as PropType<boolean>,\r\n            required: true\r\n        },\r\n\r\n        familyMembers: {\r\n            type: Array as PropType<ListItemBag[]>,\r\n            required: true\r\n        },\r\n\r\n        schedulableGroups: {\r\n            type: Array as PropType<GroupBag[]>,\r\n            required: true\r\n        },\r\n\r\n        headerText: {\r\n            type: String as PropType<string | null | undefined>,\r\n            required: false\r\n        }\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"update:isVisible\"): void,\r\n        (e: \"scheduleUnavailabilityAdded\"): void\r\n    }>();\r\n\r\n    // #region Values\r\n\r\n    const isVisible = useVModelPassthrough(props, \"isVisible\", emit);\r\n\r\n    const selectedPersonGuid = inject(SelectedPersonGuid, ref(\"\"));\r\n\r\n    const dateRangeParts = ref<DateRangeParts>({});\r\n    const notes = ref(\"\");\r\n    const groupGuid = ref(\"\");\r\n    const personGuids = ref<string[]>(selectedPersonGuid.value ? [selectedPersonGuid.value] : []);\r\n\r\n    const isSavingUnavailability = ref(false);\r\n    const blockActionErrorMessage = ref(\"\");\r\n\r\n    // #endregion Values\r\n\r\n    // #region Computed Values\r\n\r\n    const groups = computed((): ListItemBag[] => {\r\n        const groupList: ListItemBag[] = [\r\n            {\r\n                text: \"All Groups\",\r\n                value: \"\"\r\n            }\r\n        ];\r\n\r\n        props.schedulableGroups?.forEach((group: GroupBag) => {\r\n            groupList.push({\r\n                text: group.name,\r\n                value: group.guid\r\n            });\r\n        });\r\n\r\n        return groupList;\r\n    });\r\n\r\n    const isFamilyMemberListVisible = computed((): boolean => {\r\n        return (props.familyMembers?.length ?? 0) > 1;\r\n    });\r\n\r\n    // #endregion Computed Values\r\n\r\n    // #region Event Handlers\r\n\r\n    /**\r\n     * Handles the `save` event of the Modal component.\r\n     */\r\n    async function onSave(): Promise<void> {\r\n        if (isSavingUnavailability.value) {\r\n            return;\r\n        }\r\n\r\n        isSavingUnavailability.value = true;\r\n        blockActionErrorMessage.value = \"\";\r\n\r\n        const bag: SaveUnavailabilityRequestBag = {\r\n            selectedPersonGuid: selectedPersonGuid.value,\r\n            startDate: dateRangeParts.value?.lowerValue,\r\n            endDate: dateRangeParts.value?.upperValue,\r\n            notes: notes.value,\r\n            groupGuid: groupGuid.value,\r\n            personGuids: personGuids.value\r\n        };\r\n\r\n        const result = await invokeBlockAction(\"SaveUnavailability\", { bag });\r\n        isSavingUnavailability.value = false;\r\n\r\n        if (!result.isSuccess) {\r\n            blockActionErrorMessage.value = result.errorMessage || \"Unknown error while trying to save unavailability.\";\r\n            return;\r\n        }\r\n\r\n        emit(\"scheduleUnavailabilityAdded\");\r\n\r\n        isVisible.value = false;\r\n\r\n        // Reset the form.\r\n        dateRangeParts.value = {};\r\n        notes.value = \"\";\r\n        groupGuid.value = \"\";\r\n        personGuids.value = selectedPersonGuid.value ? [selectedPersonGuid.value] : [];\r\n    }\r\n\r\n    // #endregion Event Handlers\r\n\r\n    // #region Watchers\r\n\r\n    watch(selectedPersonGuid, () => {\r\n        personGuids.value = selectedPersonGuid.value ? [selectedPersonGuid.value] : [];\r\n    });\r\n\r\n    // #endregion Watchers\r\n</script>\r\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <NotificationBox v-if=\"blockActionErrorMessage\" :alertType=\"AlertType.Warning\">\r\n        {{ blockActionErrorMessage }}\r\n    </NotificationBox>\r\n\r\n    <div class=\"schedule-toolbox-content-header-buttons\">\r\n        <div class=\"schedule-toolbox-calendar-buttons\">\r\n            <span ref=\"addToCalendarButton\" title=\"Downloads your schedule to be added directly to your calendar.\">\r\n                <RockButton type=\"button\"\r\n                            class=\"btn-add-to-calendar\"\r\n                            :btnType=\"BtnType.Default\"\r\n                            :btnSize=\"BtnSize.ExtraSmall\"\r\n                            :disabled=\"disabled || isLoadingCurrentSchedule || !personGroupScheduleFeedUrl\"\r\n                            @click=\"onAddToCalendarClick\">\r\n                    <i class=\"fa fa-calendar-plus-o\"></i>\r\n                    Add to Calendar\r\n                </RockButton>\r\n            </span>\r\n\r\n            <span ref=\"copyCalendarLinkButton\" :title=\"copyCalendarLinkTooltip\">\r\n                <RockButton type=\"button\"\r\n                            class=\"btn-copy-calendar-link\"\r\n                            :btnType=\"BtnType.Default\"\r\n                            :btnSize=\"BtnSize.ExtraSmall\"\r\n                            :disabled=\"disabled || isLoadingCurrentSchedule || !personGroupScheduleFeedUrl\"\r\n                            @click=\"onCopyCalendarLinkClick\">\r\n                    <i class=\"fa fa-calendar-alt\"></i>\r\n                    Copy Calendar Link\r\n                </RockButton>\r\n            </span>\r\n        </div>\r\n\r\n        <RockButton v-if=\"isScheduleUnavailabilityEnabled\"\r\n                    type=\"button\"\r\n                    class=\"btn-schedule-unavailability\"\r\n                    :btnType=\"BtnType.Default\"\r\n                    :btnSize=\"BtnSize.ExtraSmall\"\r\n                    :disabled=\"disabled || isLoadingCurrentSchedule\"\r\n                    @click=\"onScheduleUnavailabilityClick\">\r\n            <i class=\"fa fa-calendar-times-o\"></i>\r\n            {{ scheduleUnavailabilitybuttonText }}\r\n        </RockButton>\r\n    </div>\r\n\r\n    <div class=\"schedule-toolbox-cards\">\r\n        <NotificationBox v-if=\"isNoSchedulesNotificationVisible\" :alertType=\"AlertType.Info\">\r\n            No upcoming schedules.\r\n        </NotificationBox>\r\n\r\n        <CurrentScheduleRow v-else\r\n                            v-for=\"row in scheduleRows\"\r\n                            :key=\"row.entityGuid ?? ''\"\r\n                            :row=\"row\"\r\n                            :disabled=\"disabled || isLoadingCurrentSchedule\"\r\n                            @removeScheduleRow=\"onRemoveScheduleRow\"\r\n                            @personGroupScheduleFeedUrlUpdated=\"onPersonGroupScheduleFeedUrlUpdated\" />\r\n    </div>\r\n\r\n    <ScheduleUnavailability v-model:isVisible=\"isScheduleUnavailabilityModalVisible\"\r\n                            :familyMembers=\"familyMembers\"\r\n                            :schedulableGroups=\"schedulableGroups\"\r\n                            :headerText=\"scheduleUnavailabilityHeaderHtml\"\r\n                            @scheduleUnavailabilityAdded=\"getCurrentSchedule\" />\r\n</template>\r\n\r\n<style scoped>\r\n.schedule-toolbox-content-header-buttons {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n}\r\n\r\n.schedule-toolbox-calendar-buttons {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 8px;\r\n    margin-bottom: 24px;\r\n}\r\n\r\n.btn-schedule-unavailability {\r\n    margin-bottom: 24px;\r\n}\r\n</style>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, inject, PropType, ref, watch } from \"vue\";\r\n    import CurrentScheduleRow from \"./currentScheduleRow.partial.obs\";\r\n    import { SelectedPersonGuid } from \"./types.partial\";\r\n    import NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\n    import ScheduleUnavailability from \"./scheduleUnavailability.partial.obs\";\r\n    import RockButton from \"@Obsidian/Controls/rockButton.obs\";\r\n    import { AlertType } from \"@Obsidian/Enums/Controls/alertType\";\r\n    import { BtnSize } from \"@Obsidian/Enums/Controls/btnSize\";\r\n    import { BtnType } from \"@Obsidian/Enums/Controls/btnType\";\r\n    import { useInvokeBlockAction } from \"@Obsidian/Utility/block\";\r\n    import { showTooltip, tooltip } from \"@Obsidian/Utility/tooltip\";\r\n    import { CurrentScheduleBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/currentScheduleBag\";\r\n    import { GroupBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/groupBag\";\r\n    import { ScheduleRowBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/scheduleRowBag\";\r\n    import { useVModelPassthrough } from \"@Obsidian/Utility/component\";\r\n    import { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\n\r\n    const invokeBlockAction = useInvokeBlockAction();\r\n\r\n    const tooltipTitleAttribute = \"data-original-title\";\r\n    const copyCalendarLinkTooltip = \"Copies the link to synchronize your schedule with a calendar such as Microsoft Outlook or Google Calendar\";\r\n\r\n    const props = defineProps({\r\n        isLoadingCurrentSchedule: {\r\n            type: Boolean as PropType<boolean>,\r\n            required: true\r\n        },\r\n\r\n        isScheduleUnavailabilityEnabled: {\r\n            type: Boolean as PropType<boolean>,\r\n            required: true\r\n        },\r\n\r\n        scheduleUnavailabilitybuttonText: {\r\n            type: String as PropType<string | null | undefined>,\r\n            required: true\r\n        },\r\n\r\n        scheduleUnavailabilityHeaderHtml: {\r\n            type: String as PropType<string | null | undefined>,\r\n            required: true\r\n        },\r\n\r\n        disabled: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        }\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"update:isLoadingCurrentSchedule\"): void\r\n    }>();\r\n\r\n    // #region Values\r\n\r\n    const addToCalendarButton = ref<HTMLElement | null>(null);\r\n    const copyCalendarLinkButton = ref<HTMLElement | null>(null);\r\n\r\n    const selectedPersonGuid = inject(SelectedPersonGuid, ref(\"\"));\r\n\r\n    const isLoadingCurrentSchedule = useVModelPassthrough(props, \"isLoadingCurrentSchedule\", emit);\r\n    const blockActionErrorMessage = ref(\"\");\r\n\r\n    const scheduleRows = ref<ScheduleRowBag[]>([]);\r\n    const personGroupScheduleFeedUrl = ref<string | null | undefined>();\r\n    const familyMembers = ref<ListItemBag[]>([]);\r\n    const schedulableGroups = ref<GroupBag[]>([]);\r\n\r\n    const isScheduleUnavailabilityModalVisible = ref(false);\r\n\r\n    // #endregion Values\r\n\r\n    // #region Computed Values\r\n\r\n    const isNoSchedulesNotificationVisible = computed((): boolean => {\r\n        return !!(!isLoadingCurrentSchedule.value && !scheduleRows.value?.length);\r\n    });\r\n\r\n    // #endregion Computed Values\r\n\r\n    // #region Functions\r\n\r\n    /**\r\n     * Gets the current schedule for the selected person.\r\n     */\r\n    async function getCurrentSchedule(): Promise<void> {\r\n        if (isLoadingCurrentSchedule.value) {\r\n            return;\r\n        }\r\n\r\n        isLoadingCurrentSchedule.value = true;\r\n        blockActionErrorMessage.value = \"\";\r\n\r\n        const result = await invokeBlockAction<CurrentScheduleBag>(\"GetCurrentSchedule\", { selectedPersonGuid: selectedPersonGuid.value });\r\n        isLoadingCurrentSchedule.value = false;\r\n\r\n        if (!result.isSuccess) {\r\n            blockActionErrorMessage.value = result.errorMessage || \"Unknown error while trying to get current schedule.\";\r\n            setCurrentSchedule(null);\r\n            return;\r\n        }\r\n\r\n        setCurrentSchedule(result.data);\r\n    }\r\n\r\n    /**\r\n     * Sets the internal values using the provided current schedule.\r\n     *\r\n     * @param currentSchedule The current schedule value from which to set the internal values.\r\n     */\r\n    function setCurrentSchedule(currentSchedule: CurrentScheduleBag | null): void {\r\n        scheduleRows.value = currentSchedule?.scheduleRows ?? [];\r\n        personGroupScheduleFeedUrl.value = currentSchedule?.personGroupScheduleFeedUrl;\r\n        familyMembers.value = currentSchedule?.familyMembers ?? [];\r\n        schedulableGroups.value = currentSchedule?.schedulableGroups ?? [];\r\n    }\r\n\r\n    /**\r\n     * Configures the button tooltips.\r\n     */\r\n    function configureTooltips(): void {\r\n        if (addToCalendarButton.value) {\r\n            tooltip(addToCalendarButton.value);\r\n        }\r\n\r\n        if (copyCalendarLinkButton.value) {\r\n            tooltip(copyCalendarLinkButton.value);\r\n        }\r\n    }\r\n\r\n    // #endregion Functions\r\n\r\n    // #region Event Handlers\r\n\r\n    /**\r\n     * Handles the `click` event of the add to calendar button.\r\n     *\r\n     * @param event The mouse event.\r\n     */\r\n    async function onAddToCalendarClick(event: MouseEvent): Promise<void> {\r\n        (event.target as HTMLElement)?.blur();\r\n\r\n        if (!personGroupScheduleFeedUrl.value) {\r\n            return;\r\n        }\r\n\r\n        const link = document.createElement(\"a\");\r\n        link.href = personGroupScheduleFeedUrl.value;\r\n        link.setAttribute(\"download\", \"download\");\r\n        link.click();\r\n    }\r\n\r\n    /**\r\n     * Handles the `click` event of the copy calendar link button.\r\n     *\r\n     * @param event The mouse event.\r\n     */\r\n    async function onCopyCalendarLinkClick(event: MouseEvent): Promise<void> {\r\n        (event.target as HTMLElement)?.blur();\r\n\r\n        if (!personGroupScheduleFeedUrl.value) {\r\n            return;\r\n        }\r\n\r\n        await navigator.clipboard.writeText(personGroupScheduleFeedUrl.value ?? \"\");\r\n\r\n        if (!copyCalendarLinkButton.value) {\r\n            return;\r\n        }\r\n\r\n        copyCalendarLinkButton.value.blur();\r\n\r\n        // Temporarily show a \"Copied\" tooltip.\r\n        copyCalendarLinkButton.value.setAttribute(tooltipTitleAttribute, \"Copied\");\r\n        showTooltip(copyCalendarLinkButton.value);\r\n\r\n        // Set the tooltip tile back to the default value.\r\n        copyCalendarLinkButton.value.setAttribute(tooltipTitleAttribute, copyCalendarLinkTooltip);\r\n    }\r\n\r\n    /**\r\n     * Handles the `click` event of the schedule unavailability button.\r\n     */\r\n    function onScheduleUnavailabilityClick(event: MouseEvent): void {\r\n        (event.target as HTMLElement)?.blur();\r\n\r\n        isScheduleUnavailabilityModalVisible.value = true;\r\n    }\r\n\r\n    /**\r\n     * Handles the `removeScheduleRow` event of the CurrentScheduleRow component.\r\n     *\r\n     * @param entityGuid The unique identifier of the schedule row to remove.\r\n     */\r\n    function onRemoveScheduleRow(entityGuid: string): void {\r\n        const rowToRemove = scheduleRows.value?.find(r => r?.entityGuid === entityGuid);\r\n        if (!rowToRemove) {\r\n            return;\r\n        }\r\n\r\n        scheduleRows.value = scheduleRows.value.filter(r => r !== rowToRemove);\r\n    }\r\n\r\n    /**\r\n     * Handles the `personGroupScheduleFeedUrlUpdated` event of the CurrentScheduleRow component.\r\n     *\r\n     * @param updatedUrl The updated URL.\r\n     */\r\n    function onPersonGroupScheduleFeedUrlUpdated(updatedUrl: string | null | undefined): void {\r\n        personGroupScheduleFeedUrl.value = updatedUrl;\r\n    }\r\n\r\n    // #endregion Event Handlers\r\n\r\n    // #region Watchers\r\n\r\n    watch(selectedPersonGuid, () => {\r\n        if (selectedPersonGuid.value) {\r\n            getCurrentSchedule();\r\n        }\r\n    });\r\n\r\n    watch([\r\n        addToCalendarButton,\r\n        copyCalendarLinkButton\r\n    ], () => {\r\n        configureTooltips();\r\n    });\r\n\r\n    // #endregion Watchers\r\n\r\n    getCurrentSchedule();\r\n</script>\r\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <div v-if=\"signUpOccurrence\" :class=\"occurrenceCssClass\">\r\n        <div class=\"flex-fill d-flex flex-column flex-sm-row flex-wrap justify-content-sm-between align-items-sm-center\">\r\n            <CheckBox v-model=\"isChecked\"\r\n                      label=\"\"\r\n                      :text=\"text\"\r\n                      :title=\"title\"\r\n                      :disabled=\"disabled || isSavingSignUp\"\r\n                      @update:modelValue=\"onSignUpChanged\">\r\n                <template v-if=\"peopleNeededText\" #textAppend>\r\n                    <span class=\"text-muted small schedule-signup-people-needed\">\r\n                        {{ peopleNeededText }}\r\n                    </span>\r\n                </template>\r\n            </CheckBox>\r\n\r\n            <DropDownList v-if=\"isLocationListVisible\"\r\n                          v-model=\"selectedLocationGuid\"\r\n                          label=\"\"\r\n                          inputClasses=\"input-sm\"\r\n                          :items=\"locationItems\"\r\n                          :showBlankItem=\"false\"\r\n                          :disabled=\"disabled || isSavingSignUp\"\r\n                          @update:modelValue=\"onSignUpChanged\" />\r\n        </div>\r\n\r\n        <div :class=\"checkCssClass\">\r\n            <i class='fa fa-check'></i>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.schedule-toolbox-sign-up-occurrence {\r\n    border-radius: 6px;\r\n    padding: 0 12px;\r\n    margin-left: 12px;\r\n    background-color: transparent;\r\n    transition: background-color 1s linear;\r\n\r\n    &.sign-up-save-success {\r\n        background-color: #EEFDF8;\r\n        transition: background-color 0s linear;\r\n    }\r\n}\r\n\r\n.schedule-toolbox-sign-up-occurrence-check {\r\n    margin-left: 12px;\r\n    transition: color 0s linear;\r\n\r\n    &.not-signed-up {\r\n        color: transparent !important;\r\n        transition: color 1s linear;\r\n    }\r\n}\r\n</style>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, inject, nextTick, PropType, ref } from \"vue\";\r\n    import { SaveSignUpErrorMessage, SelectedGroup, SelectedPersonGuid } from \"./types.partial\";\r\n    import CheckBox from \"@Obsidian/Controls/checkBox.obs\";\r\n    import DropDownList from \"@Obsidian/Controls/dropDownList.obs\";\r\n    import { useInvokeBlockAction } from \"@Obsidian/Utility/block\";\r\n    import { emptyGuid } from \"@Obsidian/Utility/guid\";\r\n    import { pluralize } from \"@Obsidian/Utility/stringUtils\";\r\n    import { SaveSignUpRequestBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/saveSignUpRequestBag\";\r\n    import { SaveSignUpResponseBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/saveSignUpResponseBag\";\r\n    import { SignUpOccurrenceBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/signUpOccurrenceBag\";\r\n    import { SignUpOccurrenceLocationBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/signUpOccurrenceLocationBag\";\r\n    import { SignUpsBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/signUpsBag\";\r\n    import { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\n\r\n    const invokeBlockAction = useInvokeBlockAction();\r\n\r\n    const props = defineProps({\r\n        occurrence: {\r\n            type: Object as PropType<SignUpOccurrenceBag>,\r\n            required: true\r\n        },\r\n\r\n        disabled: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        }\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"updatedSignUps\", signUps: SignUpsBag | null | undefined): void\r\n    }>();\r\n\r\n    // #region Values\r\n\r\n    const selectedPersonGuid = inject(SelectedPersonGuid, ref(\"\"));\r\n    const selectedGroup = inject(SelectedGroup);\r\n\r\n    const signUpOccurrence = ref<SignUpOccurrenceBag | null | undefined>(props.occurrence);\r\n\r\n    const isChecked = ref(false);\r\n    let oldIsChecked = isChecked.value;\r\n\r\n    const selectedLocationGuid = ref(getFirstLocationOrEmptyGuid(props.occurrence));\r\n    let oldSelectedLocationGuid = selectedLocationGuid.value;\r\n\r\n    const isSavingSignUp = ref(false);\r\n    const saveSignUpErrorMessage = inject(SaveSignUpErrorMessage, ref(\"\"));\r\n\r\n    const postSaveLocationItemCount = ref(0);\r\n\r\n    const areSuccessStylesVisible = ref(false);\r\n    let successStylesTimeoutID: NodeJS.Timeout;\r\n\r\n    // #endregion Values\r\n\r\n    // #region Computed Values\r\n\r\n    const occurrenceCssClass = computed((): string => {\r\n        return `d-flex align-items-center schedule-toolbox-sign-up-occurrence${areSuccessStylesVisible.value ? \" sign-up-save-success\" : \"\"}`;\r\n    });\r\n\r\n    const text = computed((): string => {\r\n        return signUpOccurrence.value?.formattedScheduleName ?? \"\";\r\n    });\r\n\r\n    const peopleNeededText = computed((): string => {\r\n        let peopleNeededCount = signUpOccurrence.value?.peopleNeededCount ?? 0;\r\n        if (peopleNeededCount > 0 && isChecked.value) {\r\n            peopleNeededCount--;\r\n        }\r\n\r\n        return peopleNeededCount > 0\r\n            ? `(${peopleNeededCount} ${pluralize(\"people\", peopleNeededCount)} needed)`\r\n            : \"\";\r\n    });\r\n\r\n    const title = computed((): string => {\r\n        return signUpOccurrence.value?.scheduleName ?? \"\";\r\n    });\r\n\r\n    const locationItems = computed((): ListItemBag[] => {\r\n        return signUpOccurrence.value?.locations\r\n            ?.filter((location: SignUpOccurrenceLocationBag) => location?.locationName && location?.locationGuid)\r\n            .map((location: SignUpOccurrenceLocationBag) => ({\r\n                text: location.locationName,\r\n                value: location.locationGuid\r\n            })) ?? [];\r\n    });\r\n\r\n    const isLocationListVisible = computed((): boolean => {\r\n        return postSaveLocationItemCount.value > 1 && isChecked.value;\r\n    });\r\n\r\n    const checkCssClass = computed((): string => {\r\n        return `text-success schedule-toolbox-sign-up-occurrence-check${!areSuccessStylesVisible.value ? \" not-signed-up\" : \"\"}`;\r\n    });\r\n\r\n    // #endregion Computed Values\r\n\r\n    // #region Functions\r\n\r\n    /**\r\n     * Gets the first occurrence location Guid or an empty guid if not found.\r\n     *\r\n     * @param occurrence The occurrence from which to get the first location guid.\r\n     */\r\n    function getFirstLocationOrEmptyGuid(occurrence: SignUpOccurrenceBag | null | undefined): string {\r\n        return occurrence?.locations?.length\r\n            ? occurrence.locations[0].locationGuid ?? emptyGuid\r\n            : emptyGuid;\r\n    }\r\n\r\n    /**\r\n     * Restores the old values after a save failure.\r\n     */\r\n    function restoreOldValues(): void {\r\n        isChecked.value = oldIsChecked;\r\n        selectedLocationGuid.value = oldSelectedLocationGuid;\r\n\r\n        nextTick(() => {\r\n            // Wait for DOM updates to complete before setting this back to false\r\n            // so we don't repeatedly call the block action method.\r\n            isSavingSignUp.value = false;\r\n        });\r\n    }\r\n\r\n    // #endregion Functions\r\n\r\n    // #region Event Handlers\r\n\r\n    /**\r\n     * Handles the 'update:modelValue' event of the sign-up occurrence controls.\r\n     */\r\n    async function onSignUpChanged(): Promise<void> {\r\n        if (isSavingSignUp.value) {\r\n            return;\r\n        }\r\n\r\n        clearTimeout(successStylesTimeoutID);\r\n\r\n        isSavingSignUp.value = true;\r\n        saveSignUpErrorMessage.value = \"\";\r\n\r\n        const bag: SaveSignUpRequestBag = {\r\n            selectedPersonGuid: selectedPersonGuid.value,\r\n            selectedGroupGuid: selectedGroup?.value?.guid,\r\n            selectedScheduleGuid: signUpOccurrence.value?.scheduleGuid,\r\n            selectedLocationGuid: selectedLocationGuid.value,\r\n            occurrenceDateTime: signUpOccurrence.value?.occurrenceDateTime,\r\n            isSigningUp: isChecked.value\r\n        };\r\n\r\n        const result = await invokeBlockAction<SaveSignUpResponseBag>(\"SaveSignUp\", { bag });\r\n\r\n        if (!result.isSuccess) {\r\n            saveSignUpErrorMessage.value = result.errorMessage || `Unknown error while trying to ${isChecked.value ? \"save\" : \"delete\"} sign-up.`;\r\n            restoreOldValues();\r\n            return;\r\n        }\r\n\r\n        if (result.data?.saveError) {\r\n            saveSignUpErrorMessage.value = result.data.saveError;\r\n            emit(\"updatedSignUps\", result.data.signUps);\r\n            restoreOldValues();\r\n            return;\r\n        }\r\n\r\n        if (isChecked.value) {\r\n            // It's possible that the occurrence's current locations / selected location\r\n            // are different than what was submitted; update local refs just in case.\r\n            signUpOccurrence.value = result.data?.signUpOccurrence;\r\n            selectedLocationGuid.value = result.data?.selectedLocationGuid ?? emptyGuid;\r\n            postSaveLocationItemCount.value = locationItems.value.length;\r\n        }\r\n        else {\r\n            postSaveLocationItemCount.value = 0;\r\n        }\r\n\r\n        // Update the \"old\" values for next time.\r\n        oldIsChecked = isChecked.value;\r\n        oldSelectedLocationGuid = isChecked.value\r\n            ? selectedLocationGuid.value\r\n            : getFirstLocationOrEmptyGuid(signUpOccurrence.value);\r\n\r\n        areSuccessStylesVisible.value = true;\r\n        successStylesTimeoutID = setTimeout(() => areSuccessStylesVisible.value = false, 1000);\r\n\r\n        isSavingSignUp.value = false;\r\n    }\r\n\r\n    // #endregion Event Handlers\r\n</script>\r\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <div class=\"schedule-toolbox-signup-occurrence-date\">\r\n        <RockLabel>{{ title }}</RockLabel>\r\n        <SignUpOccurrence v-for=\"occurrence in occurrences\"\r\n                          :key=\"getOccurrenceKey(occurrence)\"\r\n                          :occurrence=\"occurrence\"\r\n                          :disabled=\"disabled\"\r\n                          @updatedSignUps=\"$emit('updatedSignUps', $event)\" />\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n.schedule-toolbox-signup-occurrence-date {\r\n    margin-top: 24px;\r\n}\r\n</style>\r\n\r\n<script setup lang=\"ts\">\r\n    import { PropType } from \"vue\";\r\n    import SignUpOccurrence from \"./signUpOccurrence.partial.obs\";\r\n    import RockLabel from \"@Obsidian/Controls/rockLabel.obs\";\r\n    import { SignUpOccurrenceBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/signUpOccurrenceBag\";\r\n    import { SignUpOccurrenceLocationBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/signUpOccurrenceLocationBag\";\r\n    import { SignUpsBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/signUpsBag\";\r\n\r\n    defineProps({\r\n        occurrences: {\r\n            type: Array as PropType<SignUpOccurrenceBag[]>,\r\n            required: true\r\n        },\r\n\r\n        title: {\r\n            type: String as PropType<string>,\r\n            required: true\r\n        },\r\n\r\n        disabled: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        }\r\n    });\r\n\r\n    defineEmits<{\r\n        (e: \"updatedSignUps\", signUps: SignUpsBag | null | undefined): void\r\n    }>();\r\n\r\n    // #region Functions\r\n\r\n    /**\r\n     * Gets the v-for key for a given occurrence, to ensure Vue knows when to NOT re-use a component instance.\r\n     *\r\n     * @param occurrence The occurrence.\r\n     */\r\n    function getOccurrenceKey(occurrence: SignUpOccurrenceBag): string {\r\n        const locationGuids = occurrence.locations\r\n            ?.map((location: SignUpOccurrenceLocationBag) => location?.locationGuid)\r\n            ?.join(\";\") ?? \"no-locations\";\r\n\r\n        return `${occurrence.occurrenceDateTime}|${occurrence.scheduleGuid}|${locationGuids}`;\r\n    }\r\n\r\n    // #endregion Functions\r\n</script>\r\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <NotificationBox v-if=\"blockActionErrorMessage\" :alertType=\"AlertType.Warning\">\r\n        {{ blockActionErrorMessage }}\r\n    </NotificationBox>\r\n\r\n    <NotificationBox v-else-if=\"isNoGroupsNotificationVisible\" :alertType=\"AlertType.Info\">\r\n        You are currently not in any scheduled groups.\r\n    </NotificationBox>\r\n\r\n    <template v-if=\"isContentVisible\">\r\n        <TabbedBar v-model=\"selectedGroupGuid\"\r\n                   class=\"schedule-toolbox-group-tabs\"\r\n                   :tabs=\"groupList\"\r\n                   :disabled=\"disabled || isLoadingSignUps\" />\r\n\r\n        <NotificationBox v-if=\"!anySignUps\"\r\n                         class=\"schedule-toolbox-no-sign-ups-available\"\r\n                         :alertType=\"AlertType.Info\">\r\n            No sign-ups available.\r\n        </NotificationBox>\r\n\r\n        <template v-else>\r\n            <NotificationBox v-if=\"saveSignUpErrorMessage\"\r\n                             class=\"schedule-toolbox-signup-save-error-message\"\r\n                             :alertType=\"AlertType.Warning\">\r\n                {{ saveSignUpErrorMessage }}\r\n            </NotificationBox>\r\n\r\n            <NotificationBox v-if=\"anyImmediateSignUps\"\r\n                             class=\"schedule-toolbox-signup-immediate-needs\"\r\n                             :alertType=\"AlertType.Info\"\r\n                             :heading=\"immediateNeedsTitle ?? ''\">\r\n\r\n                <div v-if=\"immediateNeedsIntroduction\"\r\n                     class=\"schedule-toolbox-immediate-needs-introduction\">\r\n                    {{ immediateNeedsIntroduction }}\r\n                </div>\r\n\r\n                <SignUpOccurrenceDate v-for=\"[date, occurrences] in immediateOccurrencesByDate\"\r\n                                      :key=\"`${selectedGroupGuid}-${date}`\"\r\n                                      :title=\"formatToolboxDate(date)\"\r\n                                      :occurrences=\"occurrences\"\r\n                                      :disabled=\"disabled || isLoadingSignUps\"\r\n                                      @updatedSignUps=\"setSignUps($event)\" />\r\n            </NotificationBox>\r\n\r\n            <div v-if=\"anyNonImmediateSignups\" class=\"schedule-toolbox-signup-non-immediate-needs\">\r\n                <SignUpOccurrenceDate v-for=\"[date, occurrences] in nonImmediateOccurrencesByDate\"\r\n                                      :key=\"`${selectedGroupGuid}-${date}`\"\r\n                                      :title=\"formatToolboxDate(date)\"\r\n                                      :occurrences=\"occurrences\"\r\n                                      :disabled=\"disabled || isLoadingSignUps\"\r\n                                      @updatedSignUps=\"setSignUps($event)\" />\r\n            </div>\r\n        </template>\r\n    </template>\r\n</template>\r\n\r\n<style scoped>\r\n.schedule-toolbox-no-sign-ups-available,\r\n.schedule-toolbox-signup-save-error-message,\r\n.schedule-toolbox-signup-immediate-needs {\r\n    margin-top: 20px;\r\n}\r\n</style>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, inject, PropType, provide, ref, watch } from \"vue\";\r\n    import SignUpOccurrenceDate from \"./signUpOccurrenceDate.partial.obs\";\r\n    import { SaveSignUpErrorMessage, SelectedGroup, SelectedPersonGuid } from \"./types.partial\";\r\n    import { formatToolboxDate } from \"./utils.partial\";\r\n    import NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\n    import TabbedBar from \"@Obsidian/Controls/tabbedBar.obs\";\r\n    import { AlertType } from \"@Obsidian/Enums/Controls/alertType\";\r\n    import { useInvokeBlockAction } from \"@Obsidian/Utility/block\";\r\n    import { useVModelPassthrough } from \"@Obsidian/Utility/component\";\r\n    import { RockDateTime } from \"@Obsidian/Utility/rockDateTime\";\r\n    import { GetSignUpsRequestBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/getSignUpsRequestBag\";\r\n    import { GroupBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/groupBag\";\r\n    import { SignUpOccurrenceBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/signUpOccurrenceBag\";\r\n    import { SignUpsBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/signUpsBag\";\r\n    import { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\n\r\n    const invokeBlockAction = useInvokeBlockAction();\r\n\r\n    const props = defineProps({\r\n        isLoadingSignUps: {\r\n            type: Boolean as PropType<boolean>,\r\n            required: true\r\n        },\r\n\r\n        immediateNeedsTitle: {\r\n            type: String as PropType<string | null | undefined>,\r\n            default: \"\"\r\n        },\r\n\r\n        immediateNeedsIntroduction: {\r\n            type: String as PropType<string | null | undefined>,\r\n            default: \"\"\r\n        },\r\n\r\n        disabled: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        }\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"update:isLoadingSignUps\"): void\r\n    }>();\r\n\r\n    // #region Values\r\n\r\n    const selectedPersonGuid = inject(SelectedPersonGuid, ref(\"\"));\r\n    const selectedGroup = inject(SelectedGroup);\r\n\r\n    const blockActionErrorMessage = ref(\"\");\r\n\r\n    const isLoadingSignUps = useVModelPassthrough(props, \"isLoadingSignUps\", emit);\r\n    const hasCompletedInitialLoad = ref(false);\r\n\r\n    const schedulableGroups = ref<GroupBag[]>([]);\r\n    const signUpOccurrences = ref<SignUpOccurrenceBag[]>([]);\r\n\r\n    const saveSignUpErrorMessage = ref(\"\");\r\n\r\n    // #endregion Values\r\n\r\n    // #region Computed Values\r\n\r\n    const isNoGroupsNotificationVisible = computed((): boolean => {\r\n        return !!(!isLoadingSignUps.value && (!schedulableGroups.value?.length || !selectedGroup?.value));\r\n    });\r\n\r\n    const groupList = computed((): ListItemBag[] => {\r\n        return schedulableGroups.value\r\n            .filter((group: GroupBag) => group?.guid && group?.name)\r\n            .map((group: GroupBag) => ({\r\n                text: `${group.name}${group.campusName ? ` (${group.campusName})` : \"\"}`,\r\n                value: group.guid\r\n            }));\r\n    });\r\n\r\n    const selectedGroupGuid = computed<string>({\r\n        get() {\r\n            return selectedGroup?.value?.guid ?? \"\";\r\n        },\r\n        set(newValue) {\r\n            getSignUps(newValue);\r\n        }\r\n    });\r\n\r\n    const isContentVisible = computed((): boolean => {\r\n        return !isNoGroupsNotificationVisible.value && hasCompletedInitialLoad.value;\r\n    });\r\n\r\n    const immediateOccurrencesByDate = computed((): Map<string, SignUpOccurrenceBag[]> => {\r\n        const immediateOccurrences = signUpOccurrences.value\r\n            ?.filter((o: SignUpOccurrenceBag) => o?.occurrenceDateTime && o.isImmediateNeed)\r\n            ?? [];\r\n\r\n        return groupOccurrencesByDate(immediateOccurrences);\r\n    });\r\n\r\n    const anyImmediateSignUps = computed((): boolean => {\r\n        return !!immediateOccurrencesByDate.value.size;\r\n    });\r\n\r\n    const nonImmediateOccurrencesByDate = computed((): Map<string, SignUpOccurrenceBag[]> => {\r\n        const nonImmediateOccurrences = signUpOccurrences.value\r\n            ?.filter((o: SignUpOccurrenceBag) => o?.occurrenceDateTime && !o.isImmediateNeed)\r\n            ?? [];\r\n\r\n        return groupOccurrencesByDate(nonImmediateOccurrences);\r\n    });\r\n\r\n    const anyNonImmediateSignups = computed((): boolean => {\r\n        return !!nonImmediateOccurrencesByDate.value.size;\r\n    });\r\n\r\n    const anySignUps = computed((): boolean => {\r\n        return anyImmediateSignUps.value || anyNonImmediateSignups.value;\r\n    });\r\n\r\n    // #endregion Computed Values\r\n\r\n    // #region Functions\r\n\r\n    /**\r\n     * Gets the additional time sign-ups for the selected person and group.\r\n     *\r\n     * @param groupGuid The selected group unique identifier.\r\n     */\r\n    async function getSignUps(groupGuid: string): Promise<void> {\r\n        if (isLoadingSignUps.value) {\r\n            return;\r\n        }\r\n\r\n        isLoadingSignUps.value = true;\r\n        blockActionErrorMessage.value = \"\";\r\n        saveSignUpErrorMessage.value = \"\";\r\n\r\n        const bag: GetSignUpsRequestBag = {\r\n            selectedPersonGuid: selectedPersonGuid.value,\r\n            selectedGroupGuid: groupGuid\r\n        };\r\n\r\n        const result = await invokeBlockAction<SignUpsBag>(\"GetSignUps\", { bag });\r\n        isLoadingSignUps.value = false;\r\n\r\n        if (!result.isSuccess) {\r\n            blockActionErrorMessage.value = result.errorMessage || \"Unknown error while trying to get additional time sign-ups.\";\r\n            setSignUps(null);\r\n        }\r\n\r\n        setSignUps(result.data);\r\n\r\n        hasCompletedInitialLoad.value = true;\r\n    }\r\n\r\n    /**\r\n     * Sets the internal values using the provided sign-ups data.\r\n     *\r\n     * @param signUps The sign-ups data from which to set the internal values.\r\n     */\r\n    function setSignUps(signUps: SignUpsBag | null | undefined): void {\r\n        if (selectedGroup) {\r\n            selectedGroup.value = signUps?.selectedGroup;\r\n        }\r\n\r\n        schedulableGroups.value = signUps?.schedulableGroups ?? [];\r\n        signUpOccurrences.value = signUps?.occurrences ?? [];\r\n    }\r\n\r\n    /**\r\n     * Groups the provided occurrences by date.\r\n     *\r\n     * @param occurrences The occurrences to be grouped.\r\n     */\r\n    function groupOccurrencesByDate(occurrences: SignUpOccurrenceBag[]): Map<string, SignUpOccurrenceBag[]> {\r\n        const groupedOccurrences = new Map<string, SignUpOccurrenceBag[]>();\r\n\r\n        occurrences.forEach((o: SignUpOccurrenceBag) => {\r\n            if (!o.occurrenceDateTime) {\r\n                return; // Should never happen, but continue to the next iteration if date isn't defined.\r\n            }\r\n\r\n            const date = RockDateTime.parseISO(o.occurrenceDateTime)?.date?.toISOString();\r\n            if (!date) {\r\n                return; // Should never happen, but continue to the next iteration if unable to parse date.\r\n            }\r\n\r\n            let dateOccurrences = groupedOccurrences.get(date);\r\n            if (!dateOccurrences) {\r\n                dateOccurrences = [];\r\n                groupedOccurrences.set(date, dateOccurrences);\r\n            }\r\n\r\n            dateOccurrences.push(o);\r\n        });\r\n\r\n        return groupedOccurrences;\r\n    }\r\n\r\n    // #endregion Functions\r\n\r\n    // #region Watchers\r\n\r\n    watch(selectedPersonGuid, () => {\r\n        if (selectedPersonGuid.value) {\r\n            hasCompletedInitialLoad.value = false;\r\n            getSignUps(selectedGroupGuid.value);\r\n        }\r\n    });\r\n\r\n    // #endregion Watchers\r\n\r\n    provide(SaveSignUpErrorMessage, saveSignUpErrorMessage);\r\n\r\n    getSignUps(selectedGroupGuid.value);\r\n</script>\r\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <Modal v-model=\"isVisible\"\r\n           modalWrapperClasses=\"schedule-toolbox-add-edit-assignment\"\r\n           saveText=\"Save\"\r\n           :title=\"title\"\r\n           :isSaveButtonDisabled=\"isSaveButtonDisabled\"\r\n           @save=\"onSave\">\r\n\r\n        <NotificationBox v-if=\"blockActionErrorMessage\" :alertType=\"AlertType.Warning\">\r\n            {{ blockActionErrorMessage }}\r\n        </NotificationBox>\r\n\r\n        <DropDownList v-model=\"selectedScheduleGuid\"\r\n                      label=\"Schedule\"\r\n                      formGroupClasses=\"assignment-schedules\"\r\n                      rules=\"required\"\r\n                      :items=\"schedules\"\r\n                      :disabled=\"isBusy || !schedules.length\" />\r\n\r\n        <DropDownList v-model=\"selectedLocationGuid\"\r\n                      label=\"Location\"\r\n                      formGroupClasses=\"assignment-location\"\r\n                      :items=\"locations\"\r\n                      :disabled=\"isBusy || !locations.length\" />\r\n\r\n    </Modal>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, PropType, ref } from \"vue\";\r\n    import DropDownList from \"@Obsidian/Controls/dropDownList.obs\";\r\n    import Modal from \"@Obsidian/Controls/modal.obs\";\r\n    import NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\n    import { AlertType } from \"@Obsidian/Enums/Controls/alertType\";\r\n    import { useInvokeBlockAction } from \"@Obsidian/Utility/block\";\r\n    import { useVModelPassthrough } from \"@Obsidian/Utility/component\";\r\n    import { AssignmentOptionsBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/assignmentOptionsBag\";\r\n    import { GetAssignmentOptionsRequestBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/getAssignmentOptionsRequestBag\";\r\n    import { SaveAssignmentRequestBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/saveAssignmentRequestBag\";\r\n    import { SaveAssignmentResponseBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/saveAssignmentResponseBag\";\r\n    import { SchedulePreferenceAssignmentBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/schedulePreferenceAssignmentBag\";\r\n    import { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\n\r\n    const invokeBlockAction = useInvokeBlockAction();\r\n\r\n    const props = defineProps({\r\n        isVisible: {\r\n            type: Boolean as PropType<boolean>,\r\n            required: true\r\n        },\r\n\r\n        optionsRequest: {\r\n            type: Object as PropType<GetAssignmentOptionsRequestBag | null>,\r\n            required: true\r\n        }\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"update:isVisible\"): void,\r\n        (e: \"updatedAssignments\", assignments: SchedulePreferenceAssignmentBag[]): void\r\n    }>();\r\n\r\n    // #region Values\r\n\r\n    /*\r\n        10/13/2023 - JPH\r\n\r\n        This value is intented to be used in both the `v-if` and `v-model:isVisible` directives\r\n        of this `EditAssignment` partial within the parent component. This is to prevent issues\r\n        that may arise with misaligned requests/responses if the individual rapidly opens/closes/reopens\r\n        the modal. If we introduce a way to cancel HTTP requests in the future, we can rethink this\r\n        usage at that time.\r\n    */\r\n    const isVisible = useVModelPassthrough(props, \"isVisible\", emit);\r\n\r\n    const blockActionErrorMessage = ref(\"\");\r\n\r\n    const isLoadingAssignmentOptions = ref(false);\r\n    const isSavingAssignment = ref(false);\r\n\r\n    const schedules = ref<ListItemBag[]>([]);\r\n    const locationsBySchedule = ref<Record<string, ListItemBag[]>>({});\r\n    const editAssignmentGuid = ref<string | null | undefined>(props.optionsRequest?.editAssignmentGuid);\r\n    const selectedScheduleGuid = ref(\"\");\r\n    const selectedLocationGuid = ref(\"\");\r\n\r\n    // #endregion Values\r\n\r\n    // #region Computed Values\r\n\r\n    const title = computed((): string => {\r\n        return `${editAssignmentGuid.value ? \"Edit\" : \"Add\"} Assignment`;\r\n    });\r\n\r\n    const locations = computed((): ListItemBag[] => {\r\n        return locationsBySchedule.value?.[selectedScheduleGuid.value] ?? [];\r\n    });\r\n\r\n    const isBusy = computed((): boolean => {\r\n        return isLoadingAssignmentOptions.value\r\n            || isSavingAssignment.value;\r\n    });\r\n\r\n    const isSaveButtonDisabled = computed((): boolean => {\r\n        return isBusy.value || !selectedScheduleGuid.value;\r\n    });\r\n\r\n    // #endregion Computed Values\r\n\r\n    // #region Functions\r\n\r\n    /**\r\n     * Gets the assignment options for the selected person, group and optional assignment.\r\n     */\r\n    async function getAssignmentOptions(): Promise<void> {\r\n        if (isBusy.value || !props.optionsRequest) {\r\n            return;\r\n        }\r\n\r\n        isLoadingAssignmentOptions.value = true;\r\n        blockActionErrorMessage.value = \"\";\r\n\r\n        const result = await invokeBlockAction<AssignmentOptionsBag>(\"GetAssignmentOptions\", { bag: props.optionsRequest });\r\n        isLoadingAssignmentOptions.value = false;\r\n\r\n        if (!result.isSuccess) {\r\n            blockActionErrorMessage.value = result.errorMessage || \"Unknown error while trying to load assignment options.\";\r\n            return;\r\n        }\r\n\r\n        setInternalValues(result.data);\r\n\r\n        emit(\"updatedAssignments\", result.data?.assignments ?? []);\r\n    }\r\n\r\n    /**\r\n     * Sets the internal values using the provided options.\r\n     *\r\n     * @param options The options value from which to set the internal values.\r\n     */\r\n    function setInternalValues(options: AssignmentOptionsBag | null | undefined): void {\r\n        schedules.value = options?.schedules ?? [];\r\n        locationsBySchedule.value = options?.locationsBySchedule ?? {};\r\n        editAssignmentGuid.value = options?.editAssignmentGuid ?? \"\";\r\n        selectedScheduleGuid.value = options?.selectedScheduleGuid ?? \"\";\r\n        selectedLocationGuid.value = options?.selectedLocationGuid ?? \"\";\r\n    }\r\n\r\n    // #endregion Functions\r\n\r\n    // #region Event Handlers\r\n\r\n    /**\r\n     * Handles the `save` event of the Modal component.\r\n     */\r\n    async function onSave(): Promise<void> {\r\n        if (isBusy.value) {\r\n            return;\r\n        }\r\n\r\n        isSavingAssignment.value = true;\r\n        blockActionErrorMessage.value = \"\";\r\n\r\n        const bag: SaveAssignmentRequestBag = {\r\n            selectedPersonGuid: props.optionsRequest?.selectedPersonGuid,\r\n            selectedGroupGuid: props.optionsRequest?.selectedGroupGuid,\r\n            editAssignmentGuid: editAssignmentGuid.value,\r\n            selectedScheduleGuid: selectedScheduleGuid.value,\r\n            selectedLocationGuid: selectedLocationGuid.value\r\n        };\r\n\r\n        const result = await invokeBlockAction<SaveAssignmentResponseBag>(\"SaveAssignment\", { bag });\r\n        isSavingAssignment.value = false;\r\n\r\n        if (!result.isSuccess) {\r\n            blockActionErrorMessage.value = result.errorMessage || \"Unknown error while trying to save assignment.\";\r\n            return;\r\n        }\r\n\r\n        // Always emit the latest assignments, regardless of success or [known] failure.\r\n        emit(\"updatedAssignments\", result.data?.assignmentOptions?.assignments ?? []);\r\n\r\n        if (result.data?.saveError) {\r\n            blockActionErrorMessage.value = result.data.saveError;\r\n            setInternalValues(result.data.assignmentOptions);\r\n            return;\r\n        }\r\n\r\n        // Only close the modal if the save was successful.\r\n        isVisible.value = false;\r\n    }\r\n\r\n    // #endregion Event Handlers\r\n\r\n    getAssignmentOptions();\r\n</script>\r\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <NotificationBox v-if=\"blockActionErrorMessage\" :alertType=\"AlertType.Warning\">\r\n        {{ blockActionErrorMessage }}\r\n    </NotificationBox>\r\n\r\n    <NotificationBox v-else-if=\"isNoGroupsNotificationVisible\" :alertType=\"AlertType.Info\">\r\n        You are currently not in any scheduled groups.\r\n    </NotificationBox>\r\n\r\n    <template v-if=\"isContentVisible\">\r\n        <TabbedBar v-model=\"selectedGroupGuid\"\r\n                   class=\"schedule-toolbox-group-tabs\"\r\n                   :tabs=\"groupList\"\r\n                   :disabled=\"disabled || isBusy\" />\r\n\r\n        <div class=\"row schedule-toolbox-preference-offset-days\">\r\n            <div class=\"col-md-8\">\r\n                <DropDownList v-model=\"scheduleReminderEmailOffsetDays\"\r\n                              label=\"Send Reminders\"\r\n                              :items=\"offsetDaysItems\"\r\n                              :disabled=\"disabled || isBusy\"\r\n                              @update:modelValue=\"onPreferencesChanged\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row schedule-toolbox-preference-current-schedule\">\r\n            <div class=\"col-md-8\">\r\n                <DropDownList v-model=\"selectedScheduleTemplateGuid\"\r\n                              label=\"Current Schedule\"\r\n                              :items=\"scheduleTemplateItems\"\r\n                              :disabled=\"disabled || isBusy\"\r\n                              @update:modelValue=\"onPreferencesChanged\" />\r\n            </div>\r\n            <div v-if=\"selectedScheduleTemplateGuid\" class=\"col-md-4\">\r\n                <DatePicker v-model=\"scheduleStartDate\"\r\n                            label=\"Starting On\"\r\n                            :disabled=\"disabled || isBusy\"\r\n                            @update:modelValue=\"onPreferencesChanged\" />\r\n            </div>\r\n        </div>\r\n\r\n        <template v-if=\"selectedScheduleTemplateGuid\">\r\n            <RockLabel class=\"schedule-toolbox-preference-assignment-label\">Assignment</RockLabel>\r\n            <p class=\"schedule-toolbox-preference-assignment-instructions\">\r\n                Please select a time and optional location that you would like to be scheduled for.\r\n            </p>\r\n\r\n            <Grid light\r\n                  keyField=\"key\"\r\n                  itemTerm=\"Group Preference Assignment\"\r\n                  :data=\"assignmentGridData\"\r\n                  :disabled=\"disabled || isBusy\"\r\n                  @addItem=\"onAddEditAssignment\">\r\n\r\n                <TextColumn name=\"schedule\"\r\n                            field=\"schedule\"\r\n                            title=\"Schedule\"\r\n                            visiblePriority=\"xs\" />\r\n\r\n                <TextColumn name=\"location\"\r\n                            field=\"location\"\r\n                            title=\"Location\"\r\n                            visiblePriority=\"xs\" />\r\n\r\n                <EditColumn :onClick=\"onAddEditAssignment\" />\r\n\r\n                <DeleteColumn :onClick=\"onDeleteAssignment\" />\r\n            </Grid>\r\n        </template>\r\n\r\n    </template>\r\n\r\n    <!-- See note on `isEditAssignmentModalVisible` usage below. -->\r\n    <EditAssignment v-if=\"isEditAssignmentModalVisible\"\r\n                    v-model:isVisible=\"isEditAssignmentModalVisible\"\r\n                    :optionsRequest=\"getAssignmentOptionsRequest\"\r\n                    @updatedAssignments=\"onUpdatedAssignments\" />\r\n</template>\r\n\r\n<style scoped>\r\n.schedule-toolbox-group-tabs {\r\n    margin-bottom: 24px;\r\n}\r\n</style>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, inject, nextTick, PropType, ref, watch } from \"vue\";\r\n    import EditAssignment from \"./editAssignment.partial.obs\";\r\n    import { SelectedGroup, SelectedPersonGuid } from \"./types.partial\";\r\n    import DatePicker from \"@Obsidian/Controls/datePicker.obs\";\r\n    import DropDownList from \"@Obsidian/Controls/dropDownList.obs\";\r\n    import Grid from \"@Obsidian/Controls/grid\";\r\n    import { DeleteColumn, EditColumn, TextColumn } from \"@Obsidian/Controls/grid\";\r\n    import NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\n    import RockLabel from \"@Obsidian/Controls/rockLabel.obs\";\r\n    import TabbedBar from \"@Obsidian/Controls/tabbedBar.obs\";\r\n    import { AlertType } from \"@Obsidian/Enums/Controls/alertType\";\r\n    import { useInvokeBlockAction } from \"@Obsidian/Utility/block\";\r\n    import { useVModelPassthrough } from \"@Obsidian/Utility/component\";\r\n    import { DeleteAssignmentRequestBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/deleteAssignmentRequestBag\";\r\n    import { GetAssignmentOptionsRequestBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/getAssignmentOptionsRequestBag\";\r\n    import { GroupBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/groupBag\";\r\n    import { SchedulePreferenceAssignmentBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/schedulePreferenceAssignmentBag\";\r\n    import { SchedulePreferenceBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/schedulePreferenceBag\";\r\n    import { GetSchedulePreferencesRequestBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/getSchedulePreferencesRequestBag\";\r\n    import { SaveSchedulePreferenceRequestBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/saveSchedulePreferenceRequestBag\";\r\n    import { SchedulePreferencesBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/schedulePreferencesBag\";\r\n    import { GridDataBag } from \"@Obsidian/ViewModels/Core/Grid/gridDataBag\";\r\n    import { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\n\r\n    const invokeBlockAction = useInvokeBlockAction();\r\n\r\n    const props = defineProps({\r\n        isLoadingSchedulePreferences: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        },\r\n\r\n        disabled: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        }\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"update:isLoadingSchedulePreferences\"): void\r\n    }>();\r\n\r\n    // #region Values\r\n\r\n    const selectedPersonGuid = inject(SelectedPersonGuid, ref(\"\"));\r\n    const selectedGroup = inject(SelectedGroup);\r\n\r\n    const blockActionErrorMessage = ref(\"\");\r\n\r\n    const isLoadingSchedulePreferences = useVModelPassthrough(props, \"isLoadingSchedulePreferences\", emit);\r\n    const hasCompletedInitialLoad = ref(false);\r\n    const isSavingSchedulePreference = ref(false);\r\n\r\n    const schedulableGroups = ref<GroupBag[]>([]);\r\n    const schedulePreference = ref<SchedulePreferenceBag | null | undefined>(null);\r\n\r\n    const scheduleReminderEmailOffsetDays = ref(\"\");\r\n    const selectedScheduleTemplateGuid = ref(\"\");\r\n    const scheduleStartDate = ref(\"\");\r\n    const assignments = ref<SchedulePreferenceAssignmentBag[]>([]);\r\n\r\n    /*\r\n        10/13/2023 - JPH\r\n\r\n        This value is purposely being used in both the `v-if` and `v-model:isVisible` directives\r\n        of the `EditAssignment` partial; don't change this. This is to prevent issues that may\r\n        arise with misaligned requests/responses if the individual rapidly opens/closes/reopens\r\n        the modal. If we introduce a way to cancel HTTP requests in the future, we can rethink\r\n        this usage at that time.\r\n    */\r\n    const isEditAssignmentModalVisible = ref(false);\r\n    const getAssignmentOptionsRequest = ref<GetAssignmentOptionsRequestBag | null>(null);\r\n\r\n    let deletingAssignmentGuids: string[] = [];\r\n\r\n    // #endregion Values\r\n\r\n    // #region Computed Values\r\n\r\n    const isNoGroupsNotificationVisible = computed((): boolean => {\r\n        return !!(!isLoadingSchedulePreferences.value && (!schedulableGroups.value?.length || !selectedGroup?.value));\r\n    });\r\n\r\n    const groupList = computed((): ListItemBag[] => {\r\n        return schedulableGroups.value\r\n            .filter((group: GroupBag) => group?.guid && group?.name)\r\n            .map((group: GroupBag) => ({\r\n                text: `${group.name}${group.campusName ? ` (${group.campusName})` : \"\"}`,\r\n                value: group.guid\r\n            }));\r\n    });\r\n\r\n    const selectedGroupGuid = computed<string>({\r\n        get() {\r\n            return selectedGroup?.value?.guid ?? \"\";\r\n        },\r\n        set(newValue) {\r\n            getSchedulePreferences(newValue);\r\n        }\r\n    });\r\n\r\n    const isContentVisible = computed((): boolean => {\r\n        return !isNoGroupsNotificationVisible.value && hasCompletedInitialLoad.value;\r\n    });\r\n\r\n    const offsetDaysItems = computed((): ListItemBag[] => {\r\n        const items: ListItemBag[] = [\r\n            { text: \"Do not send a reminder\", value: \"\" },\r\n        ];\r\n\r\n        for (let i = 1; i < 15; i++) {\r\n            const text = `${i} day${i > 1 ? \"s\" : \"\"} before`;\r\n            items.push({ text, value: i.toString() });\r\n        }\r\n\r\n        return items;\r\n    });\r\n\r\n    const scheduleTemplateItems = computed((): ListItemBag[] => {\r\n        return schedulePreference.value?.scheduleTemplates ?? [];\r\n    });\r\n\r\n    const assignmentGridData = computed((): GridDataBag => ({\r\n        rows: assignments.value.map((assignment: SchedulePreferenceAssignmentBag) => ({\r\n            key: assignment.groupMemberAssignmentGuid,\r\n            schedule: assignment.scheduleName,\r\n            location: assignment.locationName\r\n        }))\r\n    }));\r\n\r\n    const isBusy = computed((): boolean => {\r\n        return isLoadingSchedulePreferences.value\r\n            || isSavingSchedulePreference.value\r\n            || isEditAssignmentModalVisible.value;\r\n    });\r\n\r\n    // #endregion Computed Values\r\n\r\n    // #region Functions\r\n\r\n    /**\r\n     * Gets the schedule preferences for the selected person and group.\r\n     *\r\n     * @param groupGuid The selected group unique identifier.\r\n     */\r\n    async function getSchedulePreferences(groupGuid: string): Promise<void> {\r\n        if (isBusy.value) {\r\n            return;\r\n        }\r\n\r\n        isLoadingSchedulePreferences.value = true;\r\n        blockActionErrorMessage.value = \"\";\r\n\r\n        const bag: GetSchedulePreferencesRequestBag = {\r\n            selectedPersonGuid: selectedPersonGuid.value,\r\n            selectedGroupGuid: groupGuid\r\n        };\r\n\r\n        const result = await invokeBlockAction<SchedulePreferencesBag>(\"GetSchedulePreferences\", { bag });\r\n\r\n        if (!result.isSuccess) {\r\n            blockActionErrorMessage.value = result.errorMessage || \"Unknown error while trying to get schedule preferences.\";\r\n            setSchedulePreferences(null);\r\n            setIsLoadingSchedulePreferencesFalse();\r\n            return;\r\n        }\r\n\r\n        setSchedulePreferences(result.data);\r\n\r\n        hasCompletedInitialLoad.value = true;\r\n\r\n        setIsLoadingSchedulePreferencesFalse();\r\n    }\r\n\r\n    /**\r\n     * Sets the internal values using the provided schedule preferences.\r\n     *\r\n     * @param schedulePreferences The schedule preferences from which to set the internal values.\r\n     */\r\n    function setSchedulePreferences(schedulePreferences: SchedulePreferencesBag | null): void {\r\n        if (selectedGroup) {\r\n            selectedGroup.value = schedulePreferences?.selectedGroup;\r\n        }\r\n\r\n        schedulableGroups.value = schedulePreferences?.schedulableGroups ?? [];\r\n        schedulePreference.value = schedulePreferences?.schedulePreference;\r\n\r\n        scheduleReminderEmailOffsetDays.value = schedulePreference.value?.scheduleReminderEmailOffsetDays ?? \"\";\r\n        selectedScheduleTemplateGuid.value = schedulePreference.value?.selectedScheduleTemplateGuid ?? \"\";\r\n        scheduleStartDate.value = schedulePreference.value?.scheduleStartDate ?? \"\";\r\n        assignments.value = schedulePreference.value?.assignments ?? [];\r\n\r\n        deletingAssignmentGuids = [];\r\n    }\r\n\r\n    /**\r\n     * Sets the `isLoadingSchedulePreferences` value back to false after waiting for the DOM to update.\r\n     */\r\n    function setIsLoadingSchedulePreferencesFalse(): void {\r\n        nextTick(() => {\r\n            // Wait for the DOM to update before setting this back to false, so the\r\n            // \"SaveSchedulePreference\" block action isn't unneccessarily invoked\r\n            // by simply loading new preference values.\r\n            isLoadingSchedulePreferences.value = false;\r\n        });\r\n    }\r\n\r\n    // #endregion Functions\r\n\r\n    // #region Event Handlers\r\n\r\n    /**\r\n     * Handles the `update:modelValue` event of preference controls.\r\n     */\r\n    async function onPreferencesChanged(): Promise<void> {\r\n        if (isBusy.value) {\r\n            return;\r\n        }\r\n\r\n        isSavingSchedulePreference.value = true;\r\n        blockActionErrorMessage.value = \"\";\r\n\r\n        const bag: SaveSchedulePreferenceRequestBag = {\r\n            selectedPersonGuid: selectedPersonGuid.value,\r\n            selectedGroupGuid: selectedGroupGuid.value,\r\n            scheduleReminderEmailOffsetDays: scheduleReminderEmailOffsetDays.value,\r\n            selectedScheduleTemplateGuid: selectedScheduleTemplateGuid.value,\r\n            scheduleStartDate: scheduleStartDate.value\r\n        };\r\n\r\n        const result = await invokeBlockAction(\"SaveSchedulePreference\", { bag });\r\n        isSavingSchedulePreference.value = false;\r\n\r\n        if (!result.isSuccess) {\r\n            blockActionErrorMessage.value = result.errorMessage || \"Unknown error while trying to save schedule preferences.\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles the `addItem` and `EditColumn.onClick` events of the assignments grid.\r\n     *\r\n     * @param editAssignmentGuid The assignmnent unique identifier if editing an existing assignment.\r\n     */\r\n    function onAddEditAssignment(editAssignmentGuid: string | null | undefined): void {\r\n        if (isBusy.value) {\r\n            return;\r\n        }\r\n\r\n        getAssignmentOptionsRequest.value = {\r\n            selectedPersonGuid: selectedPersonGuid.value,\r\n            selectedGroupGuid: selectedGroupGuid.value\r\n        };\r\n\r\n        if (typeof editAssignmentGuid === \"string\") {\r\n            getAssignmentOptionsRequest.value.editAssignmentGuid = editAssignmentGuid;\r\n        }\r\n\r\n        isEditAssignmentModalVisible.value = true;\r\n    }\r\n\r\n    /**\r\n     * Handles the `updatedAssignments` event of the EditAssignment component.\r\n     *\r\n     * @param updatedAssignments The updated assignments.\r\n     */\r\n    function onUpdatedAssignments(updatedAssignments: SchedulePreferenceAssignmentBag[]): void {\r\n        assignments.value = updatedAssignments;\r\n    }\r\n\r\n    /**\r\n     * Handles the `DeleteColumn.onClick` event of the assignments grid.\r\n     *\r\n     * @param deleteAssignmentGuid The unique identifier of the assignment to delete.\r\n     */\r\n    async function onDeleteAssignment(deleteAssignmentGuid: string): Promise<void> {\r\n        if (deletingAssignmentGuids.indexOf(deleteAssignmentGuid) > -1) {\r\n            return;\r\n        }\r\n\r\n        deletingAssignmentGuids.push(deleteAssignmentGuid);\r\n        blockActionErrorMessage.value = \"\";\r\n\r\n        const bag: DeleteAssignmentRequestBag = {\r\n            selectedPersonGuid: selectedPersonGuid.value,\r\n            deleteAssignmentGuid: deleteAssignmentGuid\r\n        };\r\n\r\n        const result = await invokeBlockAction(\"DeleteAssignment\", { bag });\r\n        deletingAssignmentGuids = deletingAssignmentGuids.filter((guid: string) => guid !== deleteAssignmentGuid);\r\n\r\n        if (!result.isSuccess) {\r\n            blockActionErrorMessage.value = result.errorMessage || \"Unknown errow while trying to delete assignment\";\r\n        }\r\n\r\n        assignments.value = assignments.value\r\n            .filter((assignment: SchedulePreferenceAssignmentBag) =>\r\n                assignment.groupMemberAssignmentGuid !== deleteAssignmentGuid\r\n            );\r\n    }\r\n\r\n    // #endregion Event Handlers\r\n\r\n    // #region Watchers\r\n\r\n    watch(selectedPersonGuid, () => {\r\n        if (selectedPersonGuid.value) {\r\n            hasCompletedInitialLoad.value = false;\r\n            getSchedulePreferences(selectedGroupGuid.value);\r\n        }\r\n    });\r\n\r\n    // #endregion Watchers\r\n\r\n    getSchedulePreferences(selectedGroupGuid.value);\r\n</script>\r\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <NotificationBox v-if=\"blockErrorMessage\" :alertType=\"AlertType.Warning\">\r\n        {{ blockErrorMessage }}\r\n    </NotificationBox>\r\n\r\n    <Panel v-else\r\n           type=\"block\"\r\n           title=\"Schedule Toolbox\"\r\n           class=\"schedule-toolbox\">\r\n\r\n        <div class=\"row\">\r\n            <div :class=\"contentColumnCssClass\">\r\n                <div ref=\"scrollContainer\" :class=\"actionCssClass\">\r\n                    <NotificationBox v-if=\"blockActionErrorMessage\" :alertType=\"AlertType.Warning\">\r\n                        {{ blockActionErrorMessage }}\r\n                    </NotificationBox>\r\n\r\n                    <div v-if=\"contentHeaderHtml\" v-html=\"contentHeaderHtml\" class=\"schedule-toolbox-content-header\"></div>\r\n\r\n                    <CurrentSchedule v-if=\"isActionTypeViewCurrent\"\r\n                                     v-model:isLoadingCurrentSchedule=\"isLoadingCurrentSchedule\"\r\n                                     :isScheduleUnavailabilityEnabled=\"isScheduleUnavailabilityEnabled\"\r\n                                     :scheduleUnavailabilitybuttonText=\"scheduleUnavailabilityButtonText\"\r\n                                     :scheduleUnavailabilityHeaderHtml=\"scheduleUnavailabilityHeaderHtml\"\r\n                                     :disabled=\"isBusy\" />\r\n\r\n                    <UpdatePreferences v-if=\"isActionTypeUpdatePreferences\"\r\n                                       v-model:isLoadingSchedulePreferences=\"isLoadingSchedulePreferences\"\r\n                                       :disabled=\"isBusy\" />\r\n\r\n                    <SignUp v-if=\"isActionTypeSignUp\"\r\n                            v-model:isLoadingSignUps=\"isLoadingSignUps\"\r\n                            :immediateNeedsTitle=\"immediateNeedsTitle\"\r\n                            :immediateNeedsIntroduction=\"immediateNeedsIntroduction\"\r\n                            :disabled=\"isBusy\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div v-if=\"isActionsColumnVisible\" class=\"col-md-4 mt-3 mt-sm-0 schedule-toolbox-actions-column\">\r\n                <DropDownList v-if=\"isFamilyMemberSelectorVisible\"\r\n                              v-model=\"selectedPersonGuid\"\r\n                              label=\"Family Members\"\r\n                              formGroupClasses=\"schedule-toolbox-select-family-member\"\r\n                              :items=\"schedulableFamilyMembers\"\r\n                              :showBlankItem=\"false\"\r\n                              :disabled=\"isBusy\"\r\n                              @update:modelValue=\"scrollToContentTopLeft\" />\r\n\r\n                <div v-if=\"areActionButtonsVisible\" class=\"schedule-actions schedule-toolbox-actions\">\r\n                    <div v-html=\"actionHeaderHtml\" class=\"schedule-toolbox-action-header\"></div>\r\n\r\n                    <div class=\"schedule-toolbox-action-buttons\">\r\n                        <RockButton type=\"button\"\r\n                                    class=\"btn-block\"\r\n                                    :btnType=\"isActionTypeViewCurrent ? BtnType.Primary : BtnType.Default\"\r\n                                    :disabled=\"isBusy\"\r\n                                    @click=\"onActionClick(ToolboxActionType.ViewCurrent, $event)\">\r\n                            {{ currentScheduleButtonText }}\r\n                        </RockButton>\r\n\r\n                        <RockButton v-if=\"isSchedulePreferencesEnabled\"\r\n                                    type=\"button\"\r\n                                    class=\"btn-block\"\r\n                                    :btnType=\"isActionTypeUpdatePreferences ? BtnType.Primary : BtnType.Default\"\r\n                                    :disabled=\"isBusy\"\r\n                                    @click=\"onActionClick(ToolboxActionType.UpdatePreferences, $event)\">\r\n                            {{ schedulePreferencesButtonText }}\r\n                        </RockButton>\r\n\r\n                        <RockButton v-if=\"isAdditionalTimeSignUpsEnabled\"\r\n                                    type=\"button\"\r\n                                    class=\"btn-block\"\r\n                                    :btnType=\"isActionTypeSignUp ? BtnType.Primary : BtnType.Default\"\r\n                                    :disabled=\"isBusy\"\r\n                                    @click=\"onActionClick(ToolboxActionType.SignUp, $event)\">\r\n                            {{ additionalTimeSignUpsButtonText }}\r\n                        </RockButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </Panel>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, provide, ref, watch } from \"vue\";\r\n    import CurrentSchedule from \"./GroupScheduleToolbox/currentSchedule.partial.obs\";\r\n    import SignUp from \"./GroupScheduleToolbox/signUp.partial.obs\";\r\n    import {\r\n        PageParameterKey,\r\n        SelectedGroup,\r\n        SelectedPersonGuid\r\n    } from \"./GroupScheduleToolbox/types.partial\";\r\n    import UpdatePreferences from \"./GroupScheduleToolbox/updatePreferences.partial.obs\";\r\n    import DropDownList from \"@Obsidian/Controls/dropDownList.obs\";\r\n    import NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\n    import Panel from \"@Obsidian/Controls/panel.obs\";\r\n    import RockButton from \"@Obsidian/Controls/rockButton.obs\";\r\n    import { ToolboxActionType } from \"@Obsidian/Enums/Blocks/Group/Scheduling/toolboxActionType\";\r\n    import { AlertType } from \"@Obsidian/Enums/Controls/alertType\";\r\n    import { BtnType } from \"@Obsidian/Enums/Controls/btnType\";\r\n    import {\r\n        getSecurityGrant,\r\n        onConfigurationValuesChanged,\r\n        provideSecurityGrant,\r\n        useConfigurationValues,\r\n        useReloadBlock\r\n    } from \"@Obsidian/Utility/block\";\r\n    import { GroupBag } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/groupBag\";\r\n    import { InitializationBox } from \"@Obsidian/ViewModels/Blocks/Group/Scheduling/GroupScheduleToolbox/initializationBox\";\r\n    import { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\n\r\n    const config = useConfigurationValues<InitializationBox>();\r\n\r\n    const securityGrant = getSecurityGrant(config.securityGrantToken);\r\n    const reloadBlock = useReloadBlock();\r\n\r\n    // #region Values\r\n\r\n    const blockErrorMessage = ref<string | undefined | null>(config.errorMessage);\r\n    const blockActionErrorMessage = ref(\"\");\r\n\r\n    const scrollContainer = ref<HTMLElement | null>(null);\r\n\r\n    const schedulableFamilyMembers = ref<ListItemBag[]>(config.schedulableFamilyMembers ?? []);\r\n    const selectedPersonGuid = ref<string>(schedulableFamilyMembers.value.length ? schedulableFamilyMembers.value[0].value ?? \"\" : \"\");\r\n\r\n    const selectedGroup = ref<GroupBag | null | undefined>();\r\n\r\n    const toolboxActionType = ref<ToolboxActionType>(config.toolboxActionType);\r\n    const actionHeaderHtml = ref(config.actionHeaderHtml);\r\n\r\n    // Current schedule.\r\n    const currentScheduleButtonText = ref(config.currentScheduleButtonText);\r\n    const currentScheduleHeaderHtml = ref(config.currentScheduleHeaderHtml);\r\n    const isScheduleUnavailabilityEnabled = ref(config.isScheduleUnavailabilityEnabled);\r\n    const scheduleUnavailabilityButtonText = ref(config.scheduleUnavailabilityButtonText);\r\n    const scheduleUnavailabilityHeaderHtml = ref(config.scheduleUnavailabilityHeaderHtml);\r\n    const isLoadingCurrentSchedule = ref(false);\r\n\r\n    // Update Schedule Preferernces.\r\n    const isSchedulePreferencesEnabled = ref(config.isSchedulePreferencesEnabled);\r\n    const schedulePreferencesButtonText = ref(config.schedulePreferencesButtonText);\r\n    const schedulePreferencesHeaderHtml = ref(config.schedulePreferencesHeaderHtml);\r\n    const isLoadingSchedulePreferences = ref(false);\r\n\r\n    // Sign Up for Additional Times.\r\n    const isAdditionalTimeSignUpsEnabled = ref(config.isAdditionalTimeSignUpsEnabled);\r\n    const additionalTimeSignUpsButtonText = ref(config.additionalTimeSignUpsButtonText);\r\n    const additionalTimeSignUpsHeaderHtml = ref(config.additionalTimeSignUpsHeaderHtml);\r\n    const immediateNeedsTitle = ref(config.immediateNeedsTitle);\r\n    const immediateNeedsIntroduction = ref(config.immediateNeedsIntroduction);\r\n    const isLoadingSignUps = ref(false);\r\n\r\n    // #end region Values\r\n\r\n    // #region Computed Values\r\n\r\n    const contentColumnCssClass = computed((): string => {\r\n        return `col-md-${isActionsColumnVisible.value ? \"8\" : \"12\"} schedule-toolbox-content-column`;\r\n    });\r\n\r\n    const actionCssClass = computed((): string => {\r\n        let action = \"\";\r\n        switch (toolboxActionType.value) {\r\n            case ToolboxActionType.ViewCurrent:\r\n                action = \"current\";\r\n                break;\r\n            case ToolboxActionType.UpdatePreferences:\r\n                action = \"preferences\";\r\n                break;\r\n            case ToolboxActionType.SignUp:\r\n                action = \"signup\";\r\n                break;\r\n        }\r\n\r\n        return `schedule-toolbox-${action}`;\r\n    });\r\n\r\n    const contentHeaderHtml = computed((): string | null | undefined => {\r\n        switch (toolboxActionType.value) {\r\n            case ToolboxActionType.ViewCurrent:\r\n                return currentScheduleHeaderHtml.value;\r\n            case ToolboxActionType.UpdatePreferences:\r\n                return schedulePreferencesHeaderHtml.value;\r\n            case ToolboxActionType.SignUp:\r\n                return additionalTimeSignUpsHeaderHtml.value;\r\n        }\r\n    });\r\n\r\n    const isFamilyMemberSelectorVisible = computed((): boolean => {\r\n        return schedulableFamilyMembers.value.length > 1;\r\n    });\r\n\r\n    const areActionButtonsVisible = computed((): boolean => {\r\n        return (isSchedulePreferencesEnabled.value || isAdditionalTimeSignUpsEnabled.value);\r\n    });\r\n\r\n    const isActionsColumnVisible = computed((): boolean => {\r\n        return isFamilyMemberSelectorVisible.value || areActionButtonsVisible.value;\r\n    });\r\n\r\n    const isActionTypeViewCurrent = computed((): boolean => {\r\n        return toolboxActionType.value === ToolboxActionType.ViewCurrent;\r\n    });\r\n\r\n    const isActionTypeUpdatePreferences = computed((): boolean => {\r\n        return toolboxActionType.value === ToolboxActionType.UpdatePreferences;\r\n    });\r\n\r\n    const isActionTypeSignUp = computed((): boolean => {\r\n        return toolboxActionType.value === ToolboxActionType.SignUp;\r\n    });\r\n\r\n    const isBusy = computed((): boolean => {\r\n        return isLoadingCurrentSchedule.value\r\n            || isLoadingSchedulePreferences.value\r\n            || isLoadingSignUps.value;\r\n    });\r\n\r\n    // #endregion Computed Values\r\n\r\n    // #region Functions\r\n\r\n    /**\r\n     * Updates the window query string to match the currently-selected action and group (if applicable).\r\n     */\r\n    function updateUrl(): void {\r\n        const qs: string[][] = [\r\n            [PageParameterKey.ToolboxActionType, toolboxActionType.value.toString()]\r\n        ];\r\n\r\n        if (toolboxActionType.value !== ToolboxActionType.ViewCurrent && selectedGroup.value?.idKey) {\r\n            qs.push([PageParameterKey.ToolboxGroupId, selectedGroup.value.idKey.toString()]);\r\n        }\r\n\r\n        // Add in any query string parameters not related to us.\r\n        for (const entry of new URLSearchParams(window.location.search).entries()) {\r\n            if (![\r\n                PageParameterKey.ToolboxActionType,\r\n                PageParameterKey.ToolboxGroupId\r\n            ].some(key => key.toLowerCase() === entry[0].toLowerCase())) {\r\n                qs.push([entry[0], entry[1]]);\r\n            }\r\n        }\r\n\r\n        // Update the URL in the window.\r\n        if (qs.length) {\r\n            const queryString = qs.map(q => `${q[0]}=${q[1]}`).join(\"&\");\r\n            window.history.replaceState(null, \"\", `${window.location.pathname}?${queryString}`);\r\n        }\r\n        else {\r\n            window.history.replaceState(null, \"\", window.location.pathname);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Scrolls to the top, left of the content container.\r\n     */\r\n    function scrollToContentTopLeft(): void {\r\n        if (!scrollContainer.value) {\r\n            return;\r\n        }\r\n\r\n        const rect: DOMRect = scrollContainer.value.getBoundingClientRect();\r\n\r\n        if (rect.top < 0\r\n            || rect.left < 0\r\n            || rect.top >= window.innerHeight\r\n            || rect.left >= window.innerWidth) {\r\n            scrollContainer.value.scrollIntoView({\r\n                behavior: \"smooth\"\r\n            });\r\n        }\r\n    }\r\n\r\n    // #endregion Functions\r\n\r\n    // #region Event Handlers\r\n\r\n    /**\r\n     * Handles the `click` event of the action type buttons.\r\n     *\r\n     * @param actionType The action type to activate.\r\n     * @param event The mouse event.\r\n     */\r\n    async function onActionClick(actionType: ToolboxActionType, event: MouseEvent): Promise<void> {\r\n        (event.target as HTMLElement)?.blur();\r\n\r\n        toolboxActionType.value = actionType;\r\n\r\n        scrollToContentTopLeft();\r\n    }\r\n\r\n    // #endregion Event Handlers\r\n\r\n    // #region Watchers\r\n\r\n    watch([\r\n        toolboxActionType,\r\n        selectedGroup\r\n    ], () => {\r\n        updateUrl();\r\n    });\r\n\r\n    // #endregion Watchers\r\n\r\n    provide(SelectedPersonGuid, selectedPersonGuid);\r\n    provide(SelectedGroup, selectedGroup);\r\n    provideSecurityGrant(securityGrant);\r\n\r\n    onConfigurationValuesChanged(reloadBlock);\r\n\r\n    updateUrl();\r\n</script>\r\n"],"names":["PageParameterKey","SelectedPersonGuid","Symbol","SelectedGroup","SaveSignUpErrorMessage","invokeBlockAction","useInvokeBlockAction","isVisible","useVModelPassthrough","props","emit","selectedPersonGuid","inject","isSavingDeclineReason","ref","declineReason","declineReasonNote","declineNoteRules","computed","isDeclineNoteRequired","onSave","_onSave","apply","arguments","_asyncToGenerator","value","bag","attendanceGuid","wasSchedulePreviouslyConfirmed","formatToolboxDate","dateString","formattedDate","rockDateTime","RockDateTime","parseISO","toASPString","dateParts","split","length","ordinalDate","toOrdinalSuffix","join","isPerformingAction","errorMessage","isDeclineReasonModalVisible","isDeclineNoteVisible","cardCssClass","statusDescription","ToolboxScheduleRowConfirmationStatusDescription","row","confirmationStatus","concat","toLowerCase","scheduleDate","occurrenceStartDate","startDate","endDate","occurrenceEndDate","cardDetails","detailParts","familyMemberName","push","groupName","locationName","detail","i","cssClass","delimiter","labelCssClass","statusColor","ToolboxScheduleRowConfirmationStatus","Confirmed","Declined","isRowDisabled","disabled","entityGuid","onPerformAction","_x","_onPerformAction","actionType","_result$data","_result$data2","_result$data3","result","isSuccess","newStatus","data","undefined","_props$row$entityGuid","personGroupScheduleFeedUrl","isDeclineReasonRequired","styleInject","css","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","dateRangeParts","notes","groupGuid","personGuids","isSavingUnavailability","blockActionErrorMessage","groups","_props$schedulableGro","groupList","text","schedulableGroups","forEach","group","name","guid","isFamilyMemberListVisible","_props$familyMembers$","_props$familyMembers","familyMembers","_dateRangeParts$value","_dateRangeParts$value2","lowerValue","upperValue","watch","tooltipTitleAttribute","copyCalendarLinkTooltip","addToCalendarButton","copyCalendarLinkButton","isLoadingCurrentSchedule","scheduleRows","isScheduleUnavailabilityModalVisible","isNoSchedulesNotificationVisible","_scheduleRows$value","getCurrentSchedule","_getCurrentSchedule","setCurrentSchedule","currentSchedule","_currentSchedule$sche","_currentSchedule$fami","_currentSchedule$sche2","configureTooltips","tooltip","onAddToCalendarClick","_onAddToCalendarClick","event","_event$target2","target","blur","link","href","setAttribute","click","onCopyCalendarLinkClick","_x2","_onCopyCalendarLinkClick","_event$target3","_personGroupScheduleF","navigator","clipboard","writeText","showTooltip","onScheduleUnavailabilityClick","_event$target","onRemoveScheduleRow","_scheduleRows$value2","rowToRemove","find","r","filter","onPersonGroupScheduleFeedUrlUpdated","updatedUrl","selectedGroup","signUpOccurrence","occurrence","isChecked","oldIsChecked","selectedLocationGuid","getFirstLocationOrEmptyGuid","oldSelectedLocationGuid","isSavingSignUp","saveSignUpErrorMessage","postSaveLocationItemCount","areSuccessStylesVisible","successStylesTimeoutID","occurrenceCssClass","_signUpOccurrence$val","_signUpOccurrence$val2","formattedScheduleName","peopleNeededText","_signUpOccurrence$val3","_signUpOccurrence$val4","peopleNeededCount","pluralize","title","_signUpOccurrence$val5","_signUpOccurrence$val6","scheduleName","locationItems","_signUpOccurrence$val7","_signUpOccurrence$val8","_signUpOccurrence$val9","locations","location","locationGuid","map","isLocationListVisible","checkCssClass","_occurrence$locations","_occurrence$locations2","emptyGuid","restoreOldValues","nextTick","onSignUpChanged","_onSignUpChanged","_selectedGroup$value","_signUpOccurrence$val10","_signUpOccurrence$val11","clearTimeout","selectedGroupGuid","selectedScheduleGuid","scheduleGuid","occurrenceDateTime","isSigningUp","saveError","signUps","_result$data$selected","setTimeout","getOccurrenceKey","_occurrence$locations3","locationGuids","isLoadingSignUps","hasCompletedInitialLoad","signUpOccurrences","isNoGroupsNotificationVisible","_schedulableGroups$va","campusName","get","_selectedGroup$value$","set","newValue","getSignUps","isContentVisible","immediateOccurrencesByDate","_signUpOccurrences$va","_signUpOccurrences$va2","immediateOccurrences","o","isImmediateNeed","groupOccurrencesByDate","anyImmediateSignUps","size","nonImmediateOccurrencesByDate","_signUpOccurrences$va3","_signUpOccurrences$va4","nonImmediateOccurrences","anyNonImmediateSignups","anySignUps","_getSignUps","setSignUps","_signUps$schedulableG","_signUps$occurrences","occurrences","groupedOccurrences","Map","_RockDateTime$parseIS","_RockDateTime$parseIS2","date","toISOString","dateOccurrences","provide","isLoadingAssignmentOptions","isSavingAssignment","schedules","locationsBySchedule","editAssignmentGuid","_props$optionsRequest","optionsRequest","_locationsBySchedule$","_locationsBySchedule$2","isBusy","isSaveButtonDisabled","getAssignmentOptions","_getAssignmentOptions","_result$data$assignme","setInternalValues","assignments","options","_options$schedules","_options$locationsByS","_options$editAssignme","_options$selectedSche","_options$selectedLoca","_props$optionsRequest2","_props$optionsRequest3","_result$data$assignme2","_result$data2$assignm","assignmentOptions","isLoadingSchedulePreferences","isSavingSchedulePreference","schedulePreference","scheduleReminderEmailOffsetDays","selectedScheduleTemplateGuid","scheduleStartDate","isEditAssignmentModalVisible","getAssignmentOptionsRequest","deletingAssignmentGuids","getSchedulePreferences","offsetDaysItems","items","toString","scheduleTemplateItems","_schedulePreference$v","_schedulePreference$v2","scheduleTemplates","assignmentGridData","rows","assignment","key","groupMemberAssignmentGuid","schedule","_getSchedulePreferences","setSchedulePreferences","setIsLoadingSchedulePreferencesFalse","schedulePreferences","_schedulePreferences$","_schedulePreference$v3","_schedulePreference$v4","_schedulePreference$v5","_schedulePreference$v6","_schedulePreference$v7","_schedulePreference$v8","_schedulePreference$v9","_schedulePreference$v10","onPreferencesChanged","_onPreferencesChanged","onAddEditAssignment","onUpdatedAssignments","updatedAssignments","onDeleteAssignment","_onDeleteAssignment","deleteAssignmentGuid","indexOf","config","useConfigurationValues","securityGrant","getSecurityGrant","securityGrantToken","reloadBlock","useReloadBlock","blockErrorMessage","scrollContainer","schedulableFamilyMembers","_config$schedulableFa","_schedulableFamilyMem","toolboxActionType","actionHeaderHtml","currentScheduleButtonText","currentScheduleHeaderHtml","isScheduleUnavailabilityEnabled","scheduleUnavailabilityButtonText","scheduleUnavailabilityHeaderHtml","isSchedulePreferencesEnabled","schedulePreferencesButtonText","schedulePreferencesHeaderHtml","isAdditionalTimeSignUpsEnabled","additionalTimeSignUpsButtonText","additionalTimeSignUpsHeaderHtml","immediateNeedsTitle","immediateNeedsIntroduction","contentColumnCssClass","isActionsColumnVisible","actionCssClass","action","ToolboxActionType","ViewCurrent","UpdatePreferences","SignUp","contentHeaderHtml","isFamilyMemberSelectorVisible","areActionButtonsVisible","isActionTypeViewCurrent","isActionTypeUpdatePreferences","isActionTypeSignUp","updateUrl","qs","idKey","ToolboxGroupId","_iterator","_createForOfIteratorHelper","URLSearchParams","window","search","entries","_step","_loop","entry","some","s","n","done","err","e","f","queryString","q","history","replaceState","pathname","scrollToContentTopLeft","rect","getBoundingClientRect","top","left","innerHeight","innerWidth","scrollIntoView","behavior","onActionClick","_onActionClick","provideSecurityGrant","onConfigurationValuesChanged"],"mappings":"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"}