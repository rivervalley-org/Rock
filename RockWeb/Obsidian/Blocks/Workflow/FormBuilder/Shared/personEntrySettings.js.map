{"version":3,"file":"personEntrySettings.js","sources":["../../../../src/WorkFlow/FormBuilder/Shared/types.partial.ts","../../../../src/WorkFlow/FormBuilder/Shared/personEntrySettings.ts"],"sourcesContent":["// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { Guid } from \"@Obsidian/Types\";\r\nimport { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\nimport { FieldFilterGroupBag } from \"@Obsidian/ViewModels/Reporting/fieldFilterGroupBag\";\r\n\r\n// #region Enums\r\n\r\n/**\r\n * The state of the field being shown on the page and if it should be required.\r\n */\r\nexport const enum FormFieldVisibility {\r\n    /** Don't show the control. */\r\n    Hidden = 0,\r\n\r\n    /** Control is visible, but a value is not required. */\r\n    Optional = 1,\r\n\r\n    /** Control is visible, and a value is required. */\r\n    Required = 2\r\n}\r\n\r\n/**\r\n * The possible sources that can be used when generating an e-mail in the\r\n * FormBuilder system.\r\n */\r\nexport const enum FormEmailSourceType {\r\n    /**\r\n     * A template will be used that contains all the information required to\r\n     * generate the e-mail contents.\r\n     */\r\n    UseTemplate = 0,\r\n\r\n    /** Custom properties will be used to generate the e-mail contents. */\r\n    Custom = 1\r\n}\r\n\r\n/**\r\n * The possible destination options for a form notification e-mail.\r\n */\r\nexport const enum FormNotificationEmailDestination {\r\n    /** A specific individual in the database will be sent the notification e-mail. */\r\n    SpecificIndividual = 0,\r\n\r\n    /** One or more raw e-mail adresses will be sent the notification e-mail. */\r\n    EmailAddress = 1,\r\n\r\n    /**\r\n     * A secondary lookup will be performed using CampusTopic to determine\r\n     * the final recipient of the notification e-mail.\r\n     */\r\n    CampusTopic = 2\r\n}\r\n\r\n/**\r\n * The possible actions that can be performed after the form has been submitted.\r\n */\r\nexport const enum FormCompletionActionType {\r\n    /** A message is displayed to the user after the form has been submitted. */\r\n    DisplayMessage = 0,\r\n\r\n    /** The individual will be redirected to a specific URL. */\r\n    Redirect = 1\r\n}\r\n\r\n/**\r\n * Defines the way the campus context is set when a form is processed.\r\n */\r\nexport const enum CampusSetFrom {\r\n    /** Use the campus of the current person who is logged in while filling out the form. */\r\n    CurrentPerson = 0,\r\n\r\n    /** Use the campus of the person in the Person attribute. */\r\n    WorkflowPerson = 1,\r\n\r\n    /** Use the campus from the \"Campus\" query string which could be an Id or Guid. */\r\n    QueryString = 2\r\n}\r\n\r\n// #endregion\r\n\r\n// #region Types\r\n\r\n/**\r\n * All the settings related to a single section on the form.\r\n */\r\nexport type FormSection = {\r\n    /** The unique identifier of this section. */\r\n    guid: Guid;\r\n\r\n    /** The title that will be displayed above this section. */\r\n    title?: string | null;\r\n\r\n    /** The additional descriptive text that will be displayed under the title. */\r\n    description?: string | null;\r\n\r\n    /**\r\n     * Determines if the heading separator will be visible when the form is\r\n     * displayed.\r\n     */\r\n    showHeadingSeparator?: boolean;\r\n\r\n    /**\r\n     * The unique identifier of the type that controls how the section is\r\n     * rendered.\r\n     */\r\n    type?: string | null;\r\n\r\n    /** The list of fields that are contained within this section. */\r\n    fields?: FormField[] | null;\r\n\r\n    /** The rule that controls when this section is visible. */\r\n    visibilityRule?: FieldFilterGroupBag | null;\r\n};\r\n\r\n/**\r\n * Identifies a single form field that has been placed on the form.\r\n */\r\nexport type FormField = {\r\n    /** The unique identifier for this form field. */\r\n    guid: Guid;\r\n\r\n    /**\r\n     * The unique identifier of the field type used to render the edit control\r\n     * of this field.\r\n     */\r\n    fieldTypeGuid: Guid;\r\n\r\n    /** The display name of this field. */\r\n    name: string;\r\n\r\n    /** The descriptive help text that will be rendered along with the name. */\r\n    description?: string | null;\r\n\r\n    /** The unique key used to identify this field in Lava operations. */\r\n    key: string;\r\n\r\n    /**\r\n     * The width of this field in display columns. This should be a value\r\n     * between 1 and 12 inclusive.\r\n     */\r\n    size: number;\r\n\r\n    /**\r\n     * Determines if this field will be considered required in order to submit\r\n     * the form.\r\n     */\r\n    isRequired?: boolean;\r\n\r\n    /** Determines if the label (name) should be hidden when this field is displayed. */\r\n    isHideLabel?: boolean;\r\n\r\n    /**\r\n     * Determines if this field will be included in the results grid displayed\r\n     * to staff when examining the submissions.\r\n     */\r\n    isShowOnGrid?: boolean;\r\n\r\n    /** The configuration values that have been set for this field. */\r\n    configurationValues?: Record<string, string> | null;\r\n\r\n    /** The rule that controls when this field is visible. */\r\n    visibilityRule?: FieldFilterGroupBag | null;\r\n\r\n    /** The default value that will be used when the field is initially displayed. */\r\n    defaultValue?: string | null;\r\n};\r\n\r\n/**\r\n * Identifies a single field type that can be used when designing the form.\r\n */\r\nexport type FormFieldType = {\r\n    /** The unique identifier of the field type. */\r\n    guid: Guid;\r\n\r\n    /** The text that represents the display name of the field type. */\r\n    text: string;\r\n\r\n    /**\r\n     * The SVG content that is used to provide an iconic representation of this\r\n     * field type.\r\n     */\r\n    svg: string;\r\n\r\n    /**\r\n     * Determines if this field type is considered common and should be made\r\n     * readily accessible.\r\n     */\r\n    isCommon: boolean;\r\n};\r\n\r\n/**\r\n * Contains details about a confirmation e-mail for a Form Builder form. This\r\n * specifies if one should be sent, who receives it and the content it will\r\n * contain.\r\n */\r\nexport type FormConfirmationEmail = {\r\n    /** Specifies if the confirmation e-mail has been enabled and should be sent. */\r\n    enabled?: boolean;\r\n\r\n    /**\r\n     * Specifies which workflow attribute will be used to determine the\r\n     * recipient of the confirmation e-mail.\r\n     */\r\n    recipientAttributeGuid?: string | null;\r\n\r\n    /** Determines how the content of the e-mail will be generated. */\r\n    source?: FormEmailSource | null;\r\n};\r\n\r\n/**\r\n * Specifies how an e-mail used by the FormBuilder system will be generated.\r\n */\r\nexport type FormEmailSource = {\r\n    /** The source type that will be used to generate the contents of the e-mail. */\r\n    type?: FormEmailSourceType;\r\n\r\n    /**\r\n     * The template unique identifier that should be used to generate the\r\n     * e-mail contents.\r\n     */\r\n    template?: string | null;\r\n\r\n    /** The plain text to use for the custom subject of the e-mail. */\r\n    subject?: string | null;\r\n\r\n    /** The e-mail address to be used as the reply-to address for the custom e-mail. */\r\n    replyTo?: string | null;\r\n\r\n    /** The HTML content to use for the custom e-mail body. */\r\n    body?: string | null;\r\n\r\n    /**\r\n     * Determines if the standard organization header and footer should be\r\n     * prepended and appended to the custom body.\r\n     */\r\n    appendOrgHeaderAndFooter?: boolean;\r\n};\r\n\r\n/**\r\n * Contains details about a notification e-mail for a Form Builder form.\r\n * This specifies if one should be sent, who receives it and the content\r\n * it will contain.\r\n */\r\nexport type FormNotificationEmail = {\r\n    /** Specifies if the notification e-mail has been enabled and should be sent. */\r\n    enabled?: boolean;\r\n\r\n    /**\r\n     * Determines the destination recipient type for this notification e-mail.\r\n     * This also determines which other properties are valid.\r\n     */\r\n    destination?: FormNotificationEmailDestination;\r\n\r\n    /**\r\n     * The ListItemBag that identifies the current person that will receive\r\n     * the e-mail.\r\n     */\r\n    recipient?: ListItemBag | null;\r\n\r\n    /**\r\n     * Contains the e-mail address that will receive the notification e-mail.\r\n     * Multiple addresses may be separated with a comma.\r\n     */\r\n    emailAddress?: string | null;\r\n\r\n    /**\r\n     * Contains the campus topic DefinedValue unique identifier that will\r\n     * determine who receives the e-mail. This is used in conjunction with\r\n     * the campus specified on the workflow to find the specific recipient.\r\n     */\r\n    campusTopicGuid?: Guid | null;\r\n\r\n    /** Determines how the content of the e-mail will be generated. */\r\n    source?: FormEmailSource;\r\n};\r\n\r\n/**\r\n * Contains the general settings about this form. These loosely correlate\r\n * to the UI of the General tab when viewing the form.\r\n */\r\nexport type FormGeneral = {\r\n    /**\r\n     * The name of the form. This is used internally to identify the form\r\n     * and not normally displayed to the user filling out the form.\r\n     */\r\n    name?: string | null;\r\n\r\n    /**\r\n     * A description of the purpose this form fills and the reason it exists.\r\n     * This is primarily for internal use by staff.\r\n     */\r\n    description?: string | null;\r\n\r\n    /**\r\n     * The unique identifier of the template that is being used by this form\r\n     * to provided a set of overrides.\r\n     */\r\n    template?: Guid | null;\r\n\r\n    /** The category that this form belongs to for organization purposes. */\r\n    category?: ListItemBag | null;\r\n\r\n    /** The date and time this form will begin to allow entries. */\r\n    entryStarts?: string | null;\r\n\r\n    /** The date and time at which point this form will no longer accept new entries. */\r\n    entryEnds?: string | null;\r\n\r\n    /**\r\n     * Determines if this form requires the person to be logged in before they\r\n     * can begin filling it out.\r\n     */\r\n    isLoginRequired?: boolean;\r\n};\r\n\r\n/**\r\n * Identifies the action that should be taken after the form has been submitted\r\n * by the individual.\r\n */\r\nexport type FormCompletionAction = {\r\n    /**\r\n     * The type of action that should be performed after the form has been\r\n     * submitted.\r\n     */\r\n    type?: FormCompletionActionType;\r\n\r\n    /**\r\n     * contains the HTML message content that should be displayed to the\r\n     * individual after the form has been submitted.\r\n     */\r\n    message?: string | null;\r\n\r\n    /**\r\n     * Contains the URL to redirect the individual to after the form has been\r\n     * submitted.\r\n     */\r\n    redirectUrl?: string | null;\r\n};\r\n\r\n/**\r\n * The settings that describe a single form.\r\n */\r\nexport type FormSettings = {\r\n    /**\r\n     * The HTML content that will be displayed before all the sections of\r\n     * the form.\r\n     */\r\n    headerContent?: string | null;\r\n\r\n    /**\r\n     * The HTML content that will be displayed after all the sections of the\r\n     * form.\r\n     */\r\n    footerContent?: string | null;\r\n\r\n    /** The list of sections that exist in this form, including all of the fields. */\r\n    sections?: FormSection[] | null;\r\n\r\n    /** The general settings about this form. */\r\n    general?: FormGeneral | null;\r\n\r\n    /**\r\n     * The settings that describe the confirmation e-mail to be sent when\r\n     * this form is submitted.\r\n     */\r\n    confirmationEmail?: FormConfirmationEmail | null;\r\n\r\n    /**\r\n     * The settings that describe the notification e-mail to be sent when\r\n     * this form is submitted.\r\n     */\r\n    notificationEmail?: FormNotificationEmail | null;\r\n\r\n    /** The action to perform after this form is submitted. */\r\n    completion?: FormCompletionAction | null;\r\n\r\n    /** Determines how the form's campus context will be set when it first runs. */\r\n    campusSetFrom?: CampusSetFrom;\r\n\r\n    /**\r\n     * Determines if the person entry section should be displayed at the top\r\n     * of the form.\r\n     */\r\n    allowPersonEntry?: boolean;\r\n\r\n    /** The settings that describe how the person entry section will be displayed. */\r\n    personEntry?: FormPersonEntry | null;\r\n};\r\n\r\n/**\r\n * Identifies all the settings related to configuring hte Person Entry\r\n * section of a FormBuilder form.\r\n */\r\nexport type FormPersonEntry = {\r\n    /**\r\n     * Indicates if the form should auto-fill values from the Person that is\r\n     * currently logged in.\r\n     */\r\n    autofillCurrentPerson?: boolean;\r\n\r\n    /**\r\n     * Indicates if the form should be hidden when a Person is already\r\n     * logged in and known.\r\n     */\r\n    hideIfCurrentPersonKnown?: boolean;\r\n\r\n    /**\r\n     * The DefinedValue unique identifier that specifies the value used\r\n     * for Person.RecordStatusValue when a new Person is created.\r\n     */\r\n    recordStatus?: Guid | null;\r\n\r\n    /**\r\n     * The DefinedValue unique identifier that specifies the value used for\r\n     * Person.ConnectionStatusValue when a new Person is created.\r\n     */\r\n    connectionStatus?: Guid | null;\r\n\r\n    /**\r\n     * Indicates if the campus picker should be shown on the person entry form.\r\n     * The campus picker will always be required if it is visible.\r\n     */\r\n    showCampus?: boolean;\r\n\r\n    /**\r\n     * The DefinedValue unique identifier for the campus type used to filter\r\n     * Campuses when displaying the campus picker.\r\n     */\r\n    campusType?: Guid | null;\r\n\r\n    /**\r\n     * The DefinedValue unique identifier for the campus status used to filter\r\n     * Campuses when displaying the campus picker.\r\n     */\r\n    campusStatus?: Guid | null;\r\n\r\n    /**\r\n     * Determines if the gender control should be hidden, optional or required\r\n     * when displaying the person entry form.\r\n     */\r\n    gender?: FormFieldVisibility;\r\n\r\n    /**\r\n     * Determines if the e-mail control should be hidden, optional or required\r\n     * when displaying the person entry form.\r\n     */\r\n    email?: FormFieldVisibility;\r\n\r\n    /**\r\n     * Determines if the mobile phone control should be hidden, optional or required\r\n     * when displaying the person entry form.\r\n     */\r\n    mobilePhone?: FormFieldVisibility;\r\n\r\n    /**\r\n     * Determines if the birthdate control should be hidden, optional or required\r\n     * when displaying the person entry form.\r\n     */\r\n    birthdate?: FormFieldVisibility;\r\n\r\n    /**\r\n     * Determines if the address control should be hidden, optional or required\r\n     * when displaying the person entry form.\r\n     */\r\n    address?: FormFieldVisibility;\r\n\r\n    /**\r\n     * The DefinedValue unique identifier that specifies which address type\r\n     * will be used on the person entry form.\r\n     */\r\n    addressType?: Guid | null;\r\n\r\n    /**\r\n     * Determines if the marital status control should be hidden, optional or required\r\n     * when displaying the person entry form.\r\n     */\r\n    maritalStatus?: FormFieldVisibility;\r\n\r\n    /**\r\n     * Determines if the spouse controls should be hidden, optional or required\r\n     * when displaying the person entry form.\r\n     */\r\n    spouseEntry?: FormFieldVisibility;\r\n\r\n    /**\r\n     * The text string that is used above the spouse entry controls to indicate\r\n     * that the following controls are for the spouse.\r\n     */\r\n    spouseLabel?: string | null;\r\n\r\n    /**\r\n    * Determines if the race picker should be hidden, optional or required\r\n    * when displaying the person entry form.\r\n    */\r\n    raceEntry?: FormFieldVisibility;\r\n\r\n    /**\r\n    * Determines if ethnicity picker should be hidden, optional or required\r\n    * when displaying the person entry form.\r\n    */\r\n    ethnicityEntry?: FormFieldVisibility;\r\n};\r\n\r\n// #endregion\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { computed, defineComponent, PropType, ref, watch } from \"vue\";\r\nimport Panel from \"@Obsidian/Controls/panel\";\r\nimport CheckBox from \"@Obsidian/Controls/checkBox\";\r\nimport DropDownList from \"@Obsidian/Controls/dropDownList\";\r\nimport TextBox from \"@Obsidian/Controls/textBox\";\r\nimport RockForm from \"@Obsidian/Controls/rockForm\";\r\nimport { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\nimport { toNumberOrNull } from \"@Obsidian/Utility/numberUtils\";\r\nimport { FormPersonEntry } from \"./types.partial\";\r\nimport { FormFieldVisibility } from \"./types.partial\";\r\n\r\n/**\r\n * The list of options for the individual to pick from when defining if or how\r\n * a field is shown.\r\n */\r\nconst formFieldVisibilityOptions: ListItemBag[] = [\r\n    {\r\n        value: FormFieldVisibility.Hidden.toString(),\r\n        text: \"Hidden\"\r\n    },\r\n    {\r\n        value: FormFieldVisibility.Optional.toString(),\r\n        text: \"Optional\"\r\n    },\r\n    {\r\n        value: FormFieldVisibility.Required.toString(),\r\n        text: \"Required\"\r\n    }\r\n];\r\n\r\nexport default defineComponent({\r\n    name: \"Workflow.FormBuilderDetail.PersonEntrySettings\",\r\n    components: {\r\n        CheckBox,\r\n        DropDownList,\r\n        Panel,\r\n        RockForm,\r\n        TextBox\r\n    },\r\n\r\n    props: {\r\n        modelValue: {\r\n            type: Object as PropType<FormPersonEntry>,\r\n            default: {}\r\n        },\r\n\r\n        recordStatusOptions: {\r\n            type: Array as PropType<ListItemBag[]>,\r\n            default: []\r\n        },\r\n\r\n        connectionStatusOptions: {\r\n            type: Array as PropType<ListItemBag[]>,\r\n            default: []\r\n        },\r\n\r\n        campusTypeOptions: {\r\n            type: Array as PropType<ListItemBag[]>,\r\n            default: []\r\n        },\r\n\r\n        campusStatusOptions: {\r\n            type: Array as PropType<ListItemBag[]>,\r\n            default: []\r\n        },\r\n\r\n        addressTypeOptions: {\r\n            type: Array as PropType<ListItemBag[]>,\r\n            default: []\r\n        },\r\n\r\n        isVertical: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    emits: [\r\n        \"update:modelValue\",\r\n        \"close\"\r\n    ],\r\n\r\n    setup(props, { emit }) {\r\n        const autofillCurrentPerson = ref(props.modelValue.autofillCurrentPerson ?? false);\r\n        const hideIfCurrentPersonKnown = ref(props.modelValue.hideIfCurrentPersonKnown ?? false);\r\n        const recordStatus = ref(props.modelValue.recordStatus ?? \"\");\r\n        const connectionStatus = ref(props.modelValue.connectionStatus ?? \"\");\r\n        const showCampus = ref(props.modelValue.showCampus ?? false);\r\n        const campusType = ref(props.modelValue.campusType ?? \"\");\r\n        const campusStatus = ref(props.modelValue.campusStatus ?? \"\");\r\n        const gender = ref(props.modelValue.gender?.toString() ?? FormFieldVisibility.Hidden.toString());\r\n        const email = ref(props.modelValue.email?.toString() ?? FormFieldVisibility.Hidden.toString());\r\n        const mobilePhone = ref(props.modelValue.mobilePhone?.toString() ?? FormFieldVisibility.Hidden.toString());\r\n        const birthdate = ref(props.modelValue.birthdate?.toString() ?? FormFieldVisibility.Hidden.toString());\r\n        const address = ref(props.modelValue.address?.toString() ?? FormFieldVisibility.Hidden.toString());\r\n        const addressType = ref(props.modelValue.addressType ?? \"\");\r\n        const maritalStatus = ref(props.modelValue.maritalStatus?.toString() ?? FormFieldVisibility.Hidden.toString());\r\n        const spouseEntry = ref(props.modelValue.spouseEntry?.toString() ?? FormFieldVisibility.Hidden.toString());\r\n        const spouseLabel = ref(props.modelValue.spouseLabel ?? \"Spouse\");\r\n        const raceEntry = ref(props.modelValue.raceEntry?.toString() ?? FormFieldVisibility.Hidden.toString());\r\n        const ethnicityEntry = ref(props.modelValue.ethnicityEntry?.toString() ?? FormFieldVisibility.Hidden.toString());\r\n\r\n        /** The column span class to apply to the columns. */\r\n        const columnClass = computed((): string => props.isVertical ? \"col-xs-12\" : \"col-md-3\");\r\n\r\n        // Watch for any changes in our simple field values and update the\r\n        // modelValue.\r\n        watch([autofillCurrentPerson, hideIfCurrentPersonKnown, recordStatus, connectionStatus, showCampus, campusType, campusStatus, gender, email, mobilePhone, birthdate, address, addressType, maritalStatus, spouseEntry, spouseLabel, raceEntry, ethnicityEntry], () => {\r\n            const newValue: FormPersonEntry = {\r\n                ...props.modelValue,\r\n                autofillCurrentPerson: autofillCurrentPerson.value,\r\n                hideIfCurrentPersonKnown: hideIfCurrentPersonKnown.value,\r\n                recordStatus: recordStatus.value,\r\n                connectionStatus: connectionStatus.value,\r\n                showCampus: showCampus.value,\r\n                campusType: campusType.value,\r\n                campusStatus: campusStatus.value,\r\n                gender: toNumberOrNull(gender.value) ?? FormFieldVisibility.Hidden,\r\n                email: toNumberOrNull(email.value) ?? FormFieldVisibility.Hidden,\r\n                mobilePhone: toNumberOrNull(mobilePhone.value) ?? FormFieldVisibility.Hidden,\r\n                birthdate: toNumberOrNull(birthdate.value) ?? FormFieldVisibility.Hidden,\r\n                address: toNumberOrNull(address.value) ?? FormFieldVisibility.Hidden,\r\n                addressType: addressType.value,\r\n                maritalStatus: toNumberOrNull(maritalStatus.value) ?? FormFieldVisibility.Hidden,\r\n                spouseEntry: toNumberOrNull(spouseEntry.value) ?? FormFieldVisibility.Hidden,\r\n                spouseLabel: spouseLabel.value,\r\n                raceEntry: toNumberOrNull(raceEntry.value) ?? FormFieldVisibility.Hidden,\r\n                ethnicityEntry: toNumberOrNull(ethnicityEntry.value) ?? FormFieldVisibility.Hidden\r\n            };\r\n\r\n            emit(\"update:modelValue\", newValue);\r\n        });\r\n\r\n        // Watch for any incoming changes from the parent component and update\r\n        // all our individual field values.\r\n        watch(() => props.modelValue, () => {\r\n            autofillCurrentPerson.value = props.modelValue.autofillCurrentPerson ?? false;\r\n            hideIfCurrentPersonKnown.value = props.modelValue.hideIfCurrentPersonKnown ?? false;\r\n            recordStatus.value = props.modelValue.recordStatus ?? \"\";\r\n            connectionStatus.value = props.modelValue.connectionStatus ?? \"\";\r\n            showCampus.value = props.modelValue.showCampus ?? false;\r\n            campusType.value = props.modelValue.campusType ?? \"\";\r\n            campusStatus.value = props.modelValue.campusStatus ?? \"\";\r\n            gender.value = props.modelValue.gender?.toString() ?? FormFieldVisibility.Hidden.toString();\r\n            email.value = props.modelValue.email?.toString() ?? FormFieldVisibility.Hidden.toString();\r\n            mobilePhone.value = props.modelValue.mobilePhone?.toString() ?? FormFieldVisibility.Hidden.toString();\r\n            birthdate.value = props.modelValue.birthdate?.toString() ?? FormFieldVisibility.Hidden.toString();\r\n            address.value = props.modelValue.address?.toString() ?? FormFieldVisibility.Hidden.toString();\r\n            addressType.value = props.modelValue.addressType ?? \"\";\r\n            maritalStatus.value = props.modelValue.maritalStatus?.toString() ?? FormFieldVisibility.Hidden.toString();\r\n            spouseEntry.value = props.modelValue.spouseEntry?.toString() ?? FormFieldVisibility.Hidden.toString();\r\n            spouseLabel.value = props.modelValue.spouseLabel ?? \"\";\r\n            raceEntry.value = props.modelValue.raceEntry?.toString() ?? FormFieldVisibility.Hidden.toString();\r\n            ethnicityEntry.value = props.modelValue.ethnicityEntry?.toString() ?? FormFieldVisibility.Hidden.toString();\r\n        });\r\n\r\n        return {\r\n            address,\r\n            addressType,\r\n            autofillCurrentPerson,\r\n            birthdate,\r\n            campusStatus,\r\n            campusType,\r\n            columnClass,\r\n            connectionStatus,\r\n            email,\r\n            gender,\r\n            hideIfCurrentPersonKnown,\r\n            maritalStatus,\r\n            mobilePhone,\r\n            recordStatus,\r\n            showCampus,\r\n            spouseEntry,\r\n            spouseLabel,\r\n            raceEntry,\r\n            ethnicityEntry,\r\n            formFieldVisibilityOptions\r\n        };\r\n    },\r\n\r\n    template: `\r\n<div>\r\n    <div class=\"row\">\r\n        <div :class=\"columnClass\">\r\n            <CheckBox v-model=\"autofillCurrentPerson\"\r\n                label=\"Autofill Current Person\" />\r\n        </div>\r\n\r\n        <div :class=\"columnClass\">\r\n            <CheckBox v-model=\"hideIfCurrentPersonKnown\"\r\n                label=\"Hide if Current Person Known\" />\r\n        </div>\r\n\r\n        <div :class=\"columnClass\">\r\n            <DropDownList v-model=\"recordStatus\"\r\n                label=\"Record Status\"\r\n                :items=\"recordStatusOptions\"\r\n                rules=\"required\" />\r\n        </div>\r\n\r\n        <div :class=\"columnClass\">\r\n            <DropDownList v-model=\"connectionStatus\"\r\n                label=\"Connection Status\"\r\n                :items=\"connectionStatusOptions\"\r\n                rules=\"required\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div :class=\"columnClass\">\r\n            <CheckBox v-model=\"showCampus\"\r\n                label=\"Show Campus\" />\r\n        </div>\r\n\r\n        <div :class=\"columnClass\">\r\n            <DropDownList v-model=\"campusType\"\r\n                label=\"Campus Type\"\r\n                :items=\"campusTypeOptions\" />\r\n        </div>\r\n\r\n        <div :class=\"columnClass\">\r\n            <DropDownList v-model=\"campusStatus\"\r\n                label=\"Campus Status\"\r\n                :items=\"campusStatusOptions\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div :class=\"columnClass\">\r\n            <DropDownList v-model=\"gender\"\r\n                label=\"Gender\"\r\n                :showBlankItem=\"false\"\r\n                :items=\"formFieldVisibilityOptions\" />\r\n        </div>\r\n\r\n        <div :class=\"columnClass\">\r\n            <DropDownList v-model=\"email\"\r\n                label=\"Email\"\r\n                :showBlankItem=\"false\"\r\n                :items=\"formFieldVisibilityOptions\" />\r\n        </div>\r\n\r\n        <div :class=\"columnClass\">\r\n            <DropDownList v-model=\"mobilePhone\"\r\n                label=\"Mobile Phone\"\r\n                :showBlankItem=\"false\"\r\n                :items=\"formFieldVisibilityOptions\" />\r\n        </div>\r\n\r\n        <div :class=\"columnClass\">\r\n            <DropDownList v-model=\"birthdate\"\r\n                label=\"Birthdate\"\r\n                :showBlankItem=\"false\"\r\n                :items=\"formFieldVisibilityOptions\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div :class=\"columnClass\">\r\n            <DropDownList v-model=\"address\"\r\n                label=\"Address\"\r\n                :showBlankItem=\"false\"\r\n                :items=\"formFieldVisibilityOptions\" />\r\n        </div>\r\n\r\n        <div :class=\"columnClass\">\r\n            <DropDownList v-model=\"addressType\"\r\n                label=\"Address Type\"\r\n                :items=\"addressTypeOptions\"\r\n                rules=\"required\" />\r\n        </div>\r\n\r\n        <div :class=\"columnClass\">\r\n            <DropDownList v-model=\"maritalStatus\"\r\n                label=\"Marital Status\"\r\n                :showBlankItem=\"false\"\r\n                :items=\"formFieldVisibilityOptions\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div :class=\"columnClass\">\r\n            <DropDownList v-model=\"spouseEntry\"\r\n                label=\"Spouse Entry\"\r\n                :showBlankItem=\"false\"\r\n                :items=\"formFieldVisibilityOptions\" />\r\n        </div>\r\n\r\n        <div :class=\"columnClass\">\r\n            <TextBox v-model=\"spouseLabel\"\r\n                label=\"Spouse Label\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div :class=\"columnClass\">\r\n            <DropDownList v-model=\"raceEntry\"\r\n                label=\"Race Entry\"\r\n                :showBlankItem=\"false\"\r\n                :items=\"formFieldVisibilityOptions\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div :class=\"columnClass\">\r\n            <DropDownList v-model=\"ethnicityEntry\"\r\n                label=\"Ethnicity Entry\"\r\n                :showBlankItem=\"false\"\r\n                :items=\"formFieldVisibilityOptions\" />\r\n        </div>\r\n    </div>\r\n</div>\r\n`\r\n});\r\n"],"names":["FormFieldVisibility","FormEmailSourceType","FormNotificationEmailDestination","FormCompletionActionType","CampusSetFrom","formFieldVisibilityOptions","value","Hidden","toString","text","Optional","Required","defineComponent","name","components","CheckBox","DropDownList","Panel","RockForm","TextBox","props","modelValue","type","Object","default","recordStatusOptions","Array","connectionStatusOptions","campusTypeOptions","campusStatusOptions","addressTypeOptions","isVertical","Boolean","emits","setup","_ref","_props$modelValue$aut","_props$modelValue$hid","_props$modelValue$rec","_props$modelValue$con","_props$modelValue$sho","_props$modelValue$cam","_props$modelValue$cam2","_props$modelValue$gen","_props$modelValue$gen2","_props$modelValue$ema","_props$modelValue$ema2","_props$modelValue$mob","_props$modelValue$mob2","_props$modelValue$bir","_props$modelValue$bir2","_props$modelValue$add","_props$modelValue$add2","_props$modelValue$add3","_props$modelValue$mar","_props$modelValue$mar2","_props$modelValue$spo","_props$modelValue$spo2","_props$modelValue$spo3","_props$modelValue$rac","_props$modelValue$rac2","_props$modelValue$eth","_props$modelValue$eth2","emit","autofillCurrentPerson","ref","hideIfCurrentPersonKnown","recordStatus","connectionStatus","showCampus","campusType","campusStatus","gender","email","mobilePhone","birthdate","address","addressType","maritalStatus","spouseEntry","spouseLabel","raceEntry","ethnicityEntry","columnClass","computed","watch","_toNumberOrNull","_toNumberOrNull2","_toNumberOrNull3","_toNumberOrNull4","_toNumberOrNull5","_toNumberOrNull6","_toNumberOrNull7","_toNumberOrNull8","_toNumberOrNull9","newValue","_objectSpread","toNumberOrNull","_props$modelValue$aut2","_props$modelValue$hid2","_props$modelValue$rec2","_props$modelValue$con2","_props$modelValue$sho2","_props$modelValue$cam3","_props$modelValue$cam4","_props$modelValue$gen3","_props$modelValue$gen4","_props$modelValue$ema3","_props$modelValue$ema4","_props$modelValue$mob3","_props$modelValue$mob4","_props$modelValue$bir3","_props$modelValue$bir4","_props$modelValue$add4","_props$modelValue$add5","_props$modelValue$add6","_props$modelValue$mar3","_props$modelValue$mar4","_props$modelValue$spo4","_props$modelValue$spo5","_props$modelValue$spo6","_props$modelValue$rac3","_props$modelValue$rac4","_props$modelValue$eth3","_props$modelValue$eth4","template"],"mappings":"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"}