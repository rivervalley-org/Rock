{"version":3,"file":"formTemplateDetail.js","sources":["../../../src/WorkFlow/FormBuilder/FormTemplateDetail/utils.partial.ts","../../../src/WorkFlow/FormBuilder/FormTemplateDetail/editPanel.partial.ts","../../../src/WorkFlow/FormBuilder/FormTemplateDetail/viewPanel.partial.ts","../../../src/WorkFlow/FormBuilder/formTemplateDetail.ts"],"sourcesContent":["// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { inject, provide } from \"vue\";\r\nimport { ValueSources } from \"./types.partial\";\r\n\r\n// Unique key used to track the sources for the FormBuilderDetail block.\r\nconst sourcesKey = Symbol();\r\n\r\n/**\r\n * Make the list of value sources available to child components.\r\n *\r\n * @param sources The value sources to make available.\r\n */\r\nexport function provideSources(sources: ValueSources): void {\r\n    provide(sourcesKey, sources);\r\n}\r\n\r\n/**\r\n * Uses the value sources previously made available by the parent component.\r\n *\r\n * @returns The value sources that were provided by the parent component.\r\n */\r\nexport function useSources(): ValueSources {\r\n    return inject<ValueSources>(sourcesKey) ?? {};\r\n}\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { computed, defineComponent, PropType, ref, watch } from \"vue\";\r\nimport Panel from \"@Obsidian/Controls/panel\";\r\nimport RockForm from \"@Obsidian/Controls/rockForm\";\r\nimport AuditDetail from \"@Obsidian/Controls/auditDetail\";\r\nimport CheckBox from \"@Obsidian/Controls/checkBox\";\r\nimport RockButton from \"@Obsidian/Controls/rockButton\";\r\nimport TextBox from \"@Obsidian/Controls/textBox\";\r\nimport { updateRefValue } from \"@Obsidian/Utility/component\";\r\nimport { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\nimport CompletionSettings from \"../Shared/completionSettings\";\r\nimport ConfirmationEmail from \"../Shared/confirmationEmail\";\r\nimport PersonEntrySettings from \"../Shared/personEntrySettings\";\r\nimport SectionContainer from \"@Obsidian/Controls/sectionContainer\";\r\nimport { FormCompletionAction } from \"../Shared/types.partial\";\r\nimport { TemplateEditDetail } from \"./types.partial\";\r\nimport { useSources } from \"./utils.partial\";\r\n\r\n/**\r\n * The recipient options that are available for the individual to pick from.\r\n * These are hard-coded values that will then be translated when the form is\r\n * actually run to lookup the real values.\r\n */\r\nconst recipientOptions: ListItemBag[] = [\r\n    {\r\n        value: \"00000000-0000-0000-0000-000000000001\",\r\n        text: \"Person\"\r\n    },\r\n    {\r\n        value: \"00000000-0000-0000-0000-000000000002\",\r\n        text: \"Spouse\"\r\n    }\r\n];\r\n\r\nexport default defineComponent({\r\n    name: \"Workflow.FormTemplateDetail\",\r\n\r\n    components: {\r\n        AuditDetail,\r\n        CheckBox,\r\n        CompletionSettings,\r\n        ConfirmationEmail,\r\n        Panel,\r\n        PersonEntrySettings,\r\n        RockButton,\r\n        RockForm,\r\n        SectionContainer,\r\n        TextBox\r\n    },\r\n\r\n    props: {\r\n        modelValue: {\r\n            type: Object as PropType<TemplateEditDetail>,\r\n            default: {}\r\n        }\r\n    },\r\n\r\n    emits: [\r\n        \"update:modelValue\"\r\n    ],\r\n\r\n    setup(props, { emit }) {\r\n        const sources = useSources();\r\n\r\n        // Setup all the standard values that we will be editing.\r\n        const name = ref(props.modelValue.name ?? \"\");\r\n        const description = ref(props.modelValue.description ?? \"\");\r\n        const isActive = ref(props.modelValue.isActive ?? true);\r\n        const isLoginRequired = ref(props.modelValue.isLoginRequired ?? false);\r\n        const formHeader = ref(props.modelValue.formHeader ?? \"\");\r\n        const formFooter = ref(props.modelValue.formFooter ?? \"\");\r\n        const allowPersonEntry = ref(props.modelValue.allowPersonEntry ?? false);\r\n        const personEntry = ref(props.modelValue.personEntry ?? {});\r\n        const confirmationEmail = ref(props.modelValue.confirmationEmail ?? {});\r\n\r\n        // The raw completion action value that will be used to track state.\r\n        const internalCompletionAction = ref(props.modelValue.completionAction);\r\n\r\n        /**\r\n         * Use a computed value so that we can provide the CompletionSettings\r\n         * component with a non-null value while using a null value to identify\r\n         * that the completion action isn't enabled.\r\n         */\r\n        const completionAction = computed<FormCompletionAction>({\r\n            get() {\r\n                return internalCompletionAction.value ?? {};\r\n            },\r\n            set(value) {\r\n                if (completionActionEnabled.value) {\r\n                    updateRefValue(internalCompletionAction, value);\r\n                }\r\n            }\r\n        });\r\n\r\n        /**\r\n         * Use a computed value to track if the completion action panel is\r\n         * enabled or not.\r\n         */\r\n        const completionActionEnabled = computed<boolean>({\r\n            get() {\r\n                return !!internalCompletionAction.value;\r\n            },\r\n            set(value) {\r\n                updateRefValue(internalCompletionAction, value ? {} : null);\r\n            }\r\n        });\r\n\r\n        // Watch for a change in the modelValue and then update all our internal\r\n        // values with what has changed.\r\n        watch(() => props.modelValue, () => {\r\n            updateRefValue(name, props.modelValue.name ?? \"\");\r\n            updateRefValue(description, props.modelValue.description ?? \"\");\r\n            updateRefValue(isActive, props.modelValue.isActive ?? true);\r\n            updateRefValue(isLoginRequired, props.modelValue.isLoginRequired ?? false);\r\n            updateRefValue(formHeader, props.modelValue.formHeader ?? \"\");\r\n            updateRefValue(formFooter, props.modelValue.formFooter ?? \"\");\r\n            updateRefValue(allowPersonEntry, props.modelValue.allowPersonEntry ?? false);\r\n            updateRefValue(personEntry, props.modelValue.personEntry ?? {});\r\n            updateRefValue(confirmationEmail, props.modelValue.confirmationEmail ?? {});\r\n            updateRefValue(internalCompletionAction, props.modelValue.completionAction);\r\n        });\r\n\r\n        // Watch for a change in any of our internal values and then update the\r\n        // modelValue with the new value.\r\n        watch([name, description, isActive, isLoginRequired, formHeader, formFooter, allowPersonEntry, personEntry, confirmationEmail, internalCompletionAction], () => {\r\n            const newValue: TemplateEditDetail = {\r\n                ...props.modelValue,\r\n                name: name.value,\r\n                description: description.value,\r\n                isActive: isActive.value,\r\n                isLoginRequired: isLoginRequired.value,\r\n                formHeader: formHeader.value,\r\n                formFooter: formFooter.value,\r\n                allowPersonEntry: allowPersonEntry.value,\r\n                personEntry: personEntry.value,\r\n                confirmationEmail: confirmationEmail.value,\r\n                completionAction: internalCompletionAction.value\r\n            };\r\n\r\n            emit(\"update:modelValue\", newValue);\r\n        });\r\n\r\n        return {\r\n            addressTypeOptions: sources.addressTypeOptions,\r\n            allowPersonEntry,\r\n            campusStatusOptions: sources.campusStatusOptions,\r\n            campusTypeOptions: sources.campusTypeOptions,\r\n            completionAction,\r\n            completionActionEnabled,\r\n            confirmationEmail,\r\n            connectionStatusOptions: sources.connectionStatusOptions,\r\n            description,\r\n            formFooter,\r\n            formHeader,\r\n            isActive,\r\n            isLoginRequired,\r\n            name,\r\n            personEntry,\r\n            recipientOptions,\r\n            recordStatusOptions: sources.recordStatusOptions,\r\n            sourceTemplateOptions: sources.emailTemplateOptions\r\n        };\r\n    },\r\n\r\n    template: `\r\n<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <TextBox v-model=\"name\"\r\n                label=\"Name\"\r\n                rules=\"required\" />\r\n        </div>\r\n\r\n        <div class=\"col-md-6\">\r\n            <CheckBox v-model=\"isActive\"\r\n                label=\"Active\" />\r\n        </div>\r\n    </div>\r\n\r\n    <TextBox v-model=\"description\"\r\n        label=\"Description\"\r\n        textMode=\"multiline\" />\r\n\r\n    <CheckBox v-model=\"isLoginRequired\"\r\n        label=\"Is Login Required\"\r\n        help=\"Determines if a person needs to be logged in to complete this form.\" />\r\n\r\n    <SectionContainer title=\"Form Headers and Footers\"\r\n        description=\"The headers and footers below will be displayed on all pages of the forms that use this template.\">\r\n        <TextBox v-model=\"formHeader\"\r\n            label=\"Form Header\"\r\n            textMode=\"multiline\" />\r\n\r\n        <TextBox v-model=\"formFooter\"\r\n            label=\"Form Footer\"\r\n            textMode=\"multiline\" />\r\n    </SectionContainer>\r\n\r\n    <SectionContainer v-model=\"allowPersonEntry\"\r\n        toggleText=\"Enable\"\r\n        title=\"Person Entry Settings\"\r\n        description=\"These settings will lock the forms person entry settings.\">\r\n        <PersonEntrySettings v-model=\"personEntry\"\r\n            :recordStatusOptions=\"recordStatusOptions\"\r\n            :connectionStatusOptions=\"connectionStatusOptions\"\r\n            :campusTypeOptions=\"campusTypeOptions\"\r\n            :campusStatusOptions=\"campusStatusOptions\"\r\n            :addressTypeOptions=\"addressTypeOptions\" />\r\n    </SectionContainer>\r\n\r\n    <ConfirmationEmail v-model=\"confirmationEmail\"\r\n        :recipientOptions=\"recipientOptions\"\r\n        :sourceTemplateOptions=\"sourceTemplateOptions\" />\r\n\r\n    <CompletionSettings v-model=\"completionAction\" v-model:enabled=\"completionActionEnabled\" hasEnable />\r\n</div>\r\n`\r\n});\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { defineComponent, PropType, ref, watch } from \"vue\";\r\nimport { updateRefValue } from \"@Obsidian/Utility/component\";\r\nimport { TemplateDetail } from \"./types.partial\";\r\n\r\nexport default defineComponent({\r\n    name: \"Workflow.FormTemplateDetail\",\r\n\r\n    components: {\r\n    },\r\n\r\n    props: {\r\n        modelValue: {\r\n            type: Object as PropType<TemplateDetail>,\r\n            default: {}\r\n        }\r\n    },\r\n\r\n    setup(props) {\r\n        // Setup all the standard values that we will be displaying.\r\n        const name = ref(props.modelValue.name ?? \"\");\r\n        const description = ref(props.modelValue.description ?? \"\");\r\n        const usedByWorkflowTypes = ref(props.modelValue.usedBy ?? []);\r\n\r\n        // Watch for changes in our model value and update.\r\n        watch(() => props.modelValue, () => {\r\n            updateRefValue(name, props.modelValue.name ?? \"\");\r\n            updateRefValue(description, props.modelValue.description ?? \"\");\r\n            updateRefValue(usedByWorkflowTypes, props.modelValue.usedBy ?? []);\r\n        });\r\n\r\n        return {\r\n            description,\r\n            name,\r\n            usedByWorkflowTypes\r\n        };\r\n    },\r\n\r\n    template: `\r\n<fieldset>\r\n    <dl>\r\n        <dt>Name</dt>\r\n        <dd>{{ name }}</dd>\r\n\r\n        <template v-if=\"description\">\r\n            <dt>Description</dt>\r\n            <dd>{{ description }}</dd>\r\n        </template>\r\n\r\n        <dt>Used By</dt>\r\n        <dd>\r\n            <ul>\r\n                <li v-for=\"workflowType in usedByWorkflowTypes\" :key=\"workflowType.value\">{{ workflowType.text }}</li>\r\n            </ul>\r\n        </dd>\r\n    </dl>\r\n</fieldset>\r\n`\r\n});\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { computed, defineComponent, ref } from \"vue\";\r\nimport Panel from \"@Obsidian/Controls/panel\";\r\nimport RockForm from \"@Obsidian/Controls/rockForm\";\r\nimport NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\nimport AuditDetail from \"@Obsidian/Controls/auditDetail\";\r\nimport RockButton from \"@Obsidian/Controls/rockButton\";\r\nimport { EntityType } from \"@Obsidian/SystemGuids/entityType\";\r\nimport { useConfigurationValues, useInvokeBlockAction } from \"@Obsidian/Utility/block\";\r\nimport { areEqual, emptyGuid } from \"@Obsidian/Utility/guid\";\r\nimport EditPanel from \"./FormTemplateDetail/editPanel.partial\";\r\nimport { FormTemplateDetailConfiguration, TemplateDetail, TemplateEditDetail } from \"./FormTemplateDetail/types.partial\";\r\nimport { provideSources } from \"./FormTemplateDetail/utils.partial\";\r\nimport ViewPanel from \"./FormTemplateDetail/viewPanel.partial\";\r\n\r\nexport default defineComponent({\r\n    name: \"WorkFlow.FormTemplateDetail\",\r\n\r\n    components: {\r\n        NotificationBox,\r\n        AuditDetail,\r\n        EditPanel,\r\n        Panel,\r\n        RockButton,\r\n        RockForm,\r\n        ViewPanel\r\n    },\r\n\r\n    setup() {\r\n        const config = useConfigurationValues<FormTemplateDetailConfiguration>();\r\n        const invokeBlockAction = useInvokeBlockAction();\r\n\r\n        const templateDetail = ref(config.template);\r\n        const templateEditDetail = ref<TemplateEditDetail>({});\r\n        const isEditable = ref(config.isEditable);\r\n\r\n        // Start in edit mode if we have an empty guid.\r\n        const isEditMode = ref(areEqual(config.templateGuid ?? \"\", emptyGuid));\r\n\r\n        /** True if the template being viewed is inactive. */\r\n        const isInactive = computed(() => !(templateDetail.value?.isActive ?? false));\r\n\r\n        /**\r\n         * True if we have a startup error that prevents us from displaying\r\n         * the normal view or edit panels. It's an error if we don't have a\r\n         * template or a templateGuid. That currently means they tried to view\r\n         * an invalid template.\r\n         */\r\n        const isStartupError = !config.template && !config.templateGuid;\r\n\r\n        /**\r\n         * Gets the title that should currently be displayed in the panel title.\r\n         * This takes into account the current display mode.\r\n         */\r\n        const blockTitle = computed((): string => {\r\n            if (!isEditMode.value) {\r\n                return templateDetail.value?.name ?? \"\";\r\n            }\r\n            else {\r\n                return templateEditDetail.value.name || \"Add Template\";\r\n            }\r\n        });\r\n\r\n        /**\r\n         * Event handler for when the individual clicks the Edit button.\r\n         */\r\n        const onEditClick = async (): Promise<void> => {\r\n            const result = await invokeBlockAction<TemplateEditDetail>(\"StartEdit\", {\r\n                guid: config.templateGuid ?? \"\"\r\n            });\r\n\r\n            if (result.isSuccess && result.data) {\r\n                templateEditDetail.value = result.data;\r\n                isEditMode.value = true;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Event handler for when the individual clicks the Cancel button\r\n         * while in edit mode.\r\n         */\r\n        const onEditCancelClick = (): void => {\r\n            if (config.parentUrl && areEqual(config.templateGuid ?? \"\", emptyGuid)) {\r\n                window.location.href = config.parentUrl;\r\n                return;\r\n            }\r\n\r\n            templateEditDetail.value = {};\r\n            isEditMode.value = false;\r\n        };\r\n\r\n        /**\r\n         * Event handler for when the form has been validated and is now ready\r\n         * to be submitted to the server.\r\n         */\r\n        const onSubmit = async (): Promise<void> => {\r\n            const result = await invokeBlockAction<TemplateDetail | string>(\"SaveTemplate\", {\r\n                guid: config.templateGuid ?? \"\",\r\n                template: templateEditDetail.value\r\n            });\r\n\r\n            if (result.isSuccess && result.data) {\r\n                if (result.statusCode === 200 && typeof result.data === \"object\") {\r\n                    templateDetail.value = result.data;\r\n                    templateEditDetail.value = {};\r\n                    isEditMode.value = false;\r\n                }\r\n                else if (result.statusCode === 201 && typeof result.data === \"string\") {\r\n                    window.location.href = result.data;\r\n                }\r\n            }\r\n        };\r\n\r\n        provideSources(config.sources ?? {});\r\n\r\n        return {\r\n            blockTitle,\r\n            entityKey: config.templateGuid ?? \"\",\r\n            entityTypeGuid: EntityType.WorkflowFormBuilderTemplate,\r\n            isEditable,\r\n            isInactive,\r\n            isStartupError,\r\n            isEditMode,\r\n            onEditCancelClick,\r\n            onEditClick,\r\n            onSubmit,\r\n            templateDetail,\r\n            templateEditDetail\r\n        };\r\n    },\r\n\r\n    template: `\r\n<NotificationBox v-if=\"isStartupError\" alertType=\"warning\">\r\n    Unable to view details of this template.\r\n</NotificationBox>\r\n\r\n<Panel v-else type=\"block\" :title=\"blockTitle\" titleIconCssClass=\"fa fa-align-left\">\r\n    <template v-if=\"!isEditMode\" #headerActions>\r\n        <span v-if=\"isInactive\" class=\"label label-danger\">Inactive</span>\r\n    </template>\r\n\r\n    <template v-if=\"!isEditMode\" #drawer>\r\n        <AuditDetail :entityTypeGuid=\"entityTypeGuid\" :entityKey=\"entityKey\" />\r\n    </template>\r\n\r\n    <div v-if=\"!isEditMode\">\r\n        <ViewPanel :modelValue=\"templateDetail\" />\r\n\r\n        <div class=\"actions\">\r\n            <RockButton v-if=\"isEditable\" btnType=\"primary\" accesskey=\"e\" @click=\"onEditClick\">Edit</RockButton>\r\n        </div>\r\n    </div>\r\n\r\n    <div v-else>\r\n        <RockForm @submit=\"onSubmit\">\r\n            <EditPanel v-model=\"templateEditDetail\" />\r\n\r\n            <div class=\"actions\">\r\n                <RockButton type=\"submit\" btnType=\"primary\">Save</RockButton>\r\n                <RockButton btnType=\"link\" @click=\"onEditCancelClick\">Cancel</RockButton>\r\n            </div>\r\n        </RockForm>\r\n    </div>\r\n</Panel>\r\n`\r\n});\r\n"],"names":["sourcesKey","Symbol","provideSources","sources","provide","useSources","_inject","inject","recipientOptions","value","text","defineComponent","name","components","AuditDetail","CheckBox","CompletionSettings","ConfirmationEmail","Panel","PersonEntrySettings","RockButton","RockForm","SectionContainer","TextBox","props","modelValue","type","Object","default","emits","setup","_ref","_props$modelValue$nam","_props$modelValue$des","_props$modelValue$isA","_props$modelValue$isL","_props$modelValue$for","_props$modelValue$for2","_props$modelValue$all","_props$modelValue$per","_props$modelValue$con","emit","ref","description","isActive","isLoginRequired","formHeader","formFooter","allowPersonEntry","personEntry","confirmationEmail","internalCompletionAction","completionAction","computed","get","_internalCompletionAc","set","completionActionEnabled","updateRefValue","watch","_props$modelValue$nam2","_props$modelValue$des2","_props$modelValue$isA2","_props$modelValue$isL2","_props$modelValue$for3","_props$modelValue$for4","_props$modelValue$all2","_props$modelValue$per2","_props$modelValue$con2","newValue","_objectSpread","addressTypeOptions","campusStatusOptions","campusTypeOptions","connectionStatusOptions","recordStatusOptions","sourceTemplateOptions","emailTemplateOptions","template","_props$modelValue$use","usedByWorkflowTypes","usedBy","_props$modelValue$use2","NotificationBox","EditPanel","ViewPanel","_config$templateGuid","_config$sources","_config$templateGuid5","config","useConfigurationValues","invokeBlockAction","useInvokeBlockAction","templateDetail","templateEditDetail","isEditable","isEditMode","areEqual","templateGuid","emptyGuid","isInactive","_templateDetail$value","_templateDetail$value2","isStartupError","blockTitle","_templateDetail$value3","_templateDetail$value4","onEditClick","_asyncToGenerator","_config$templateGuid2","result","guid","isSuccess","data","apply","arguments","onEditCancelClick","_config$templateGuid3","parentUrl","window","location","href","onSubmit","_ref2","_config$templateGuid4","statusCode","entityKey","entityTypeGuid","EntityType","WorkflowFormBuilderTemplate"],"mappings":"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"}