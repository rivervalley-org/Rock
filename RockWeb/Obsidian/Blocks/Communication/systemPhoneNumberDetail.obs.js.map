{"version":3,"file":"systemPhoneNumberDetail.obs.js","sources":["../../src/Communication/SystemPhoneNumberDetail/editPanel.partial.obs","../../src/Communication/SystemPhoneNumberDetail/viewPanel.partial.obs","../../src/Communication/SystemPhoneNumberDetail/types.partial.ts","../../src/Communication/systemPhoneNumberDetail.obs"],"sourcesContent":["<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <fieldset>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <TextBox v-model=\"name\"\r\n                         label=\"Name\"\r\n                         rules=\"required\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-6\">\r\n                <CheckBox v-model=\"isActive\"\r\n                          label=\"Active\" />\r\n            </div>\r\n        </div>\r\n\r\n        <TextBox v-model=\"description\"\r\n                 label=\"Description\"\r\n                 textMode=\"multiline\" />\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <TextBox v-model=\"phoneNumber\"\r\n                         label=\"Phone Number\"\r\n                         rules=\"required\"\r\n                         help=\"The phone number in the format of +16235553324.\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-6\">\r\n                <PersonPicker v-model=\"assignedToPersonAlias\"\r\n                              label=\"Assigned to Person\"\r\n                              help=\"The person who should receive responses to the SMS number. This person must have a phone number with SMS enabled or no response will be sent.\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <CheckBox v-model=\"isSmsEnabled\"\r\n                          label=\"SMS Enabled\"\r\n                          help=\"Determines if SMS features should be enabled for this phone number.\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-6\">\r\n                <CheckBox v-model=\"isSmsForwardingEnabled\"\r\n                          label=\"SMS Forwarding\"\r\n                          help=\"Determines if messages received on this number should be forwarded to the assigned person.\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <WorkflowTypePicker v-model=\"smsReceivedWorkflowType\"\r\n                                    label=\"SMS Received Workflow\"\r\n                                    help=\"The workflow type to launch when a response is received. Additionally if the workflow type has any of the following attribute keys defined, those attribute values will also be set: FromPhone, Message, SMSFromDefinedValue, FromPerson, ToPerson.\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-6\">\r\n                <GroupPicker v-model=\"smsNotificationGroup\"\r\n                             label=\"SMS Notification Group\"\r\n                             help=\"Active members of this group will recieve notifications when new SMS messages are received.\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <DropDownList v-model=\"mobileApplication\"\r\n                              label=\"Mobile Application\"\r\n                              help=\"Determines which mobile application to use when sending notifications.\"\r\n                              :items=\"options.mobileSites ?? []\" />\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n            </div>\r\n        </div>\r\n\r\n        <AttributeValuesContainer v-model=\"attributeValues\" :attributes=\"attributes\" isEditMode :numberOfColumns=\"2\" />\r\n    </fieldset>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { PropType, ref, watch } from \"vue\";\r\n    import AttributeValuesContainer from \"@Obsidian/Controls/attributeValuesContainer\";\r\n    import CheckBox from \"@Obsidian/Controls/checkBox\";\r\n    import DropDownList from \"@Obsidian/Controls/dropDownList\";\r\n    import GroupPicker from \"@Obsidian/Controls/groupPicker\";\r\n    import PersonPicker from \"@Obsidian/Controls/personPicker\";\r\n    import TextBox from \"@Obsidian/Controls/textBox\";\r\n    import WorkflowTypePicker from \"@Obsidian/Controls/workflowTypePicker\";\r\n    import { watchPropertyChanges } from \"@Obsidian/Utility/block\";\r\n    import { propertyRef, updateRefValue } from \"@Obsidian/Utility/component\";\r\n    import { SystemPhoneNumberBag } from \"@Obsidian/ViewModels/Blocks/Communication/SystemPhoneNumberDetail/systemPhoneNumberBag\";\r\n    import { SystemPhoneNumberDetailOptionsBag } from \"@Obsidian/ViewModels/Blocks/Communication/SystemPhoneNumberDetail/systemPhoneNumberDetailOptionsBag\";\r\n\r\n    const props = defineProps({\r\n        modelValue: {\r\n            type: Object as PropType<SystemPhoneNumberBag>,\r\n            required: true\r\n        },\r\n\r\n        options: {\r\n            type: Object as PropType<SystemPhoneNumberDetailOptionsBag>,\r\n            required: true\r\n        }\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"update:modelValue\", value: SystemPhoneNumberBag): void,\r\n        (e: \"propertyChanged\", value: string): void\r\n    }>();\r\n\r\n    // #region Values\r\n\r\n    const attributes = ref(props.modelValue.attributes ?? {});\r\n    const attributeValues = ref(props.modelValue.attributeValues ?? {});\r\n    const description = propertyRef(props.modelValue.description ?? \"\", \"Description\");\r\n    const isActive = propertyRef(props.modelValue.isActive ?? false, \"IsActive\");\r\n    const name = propertyRef(props.modelValue.name ?? \"\", \"Name\");\r\n    const phoneNumber = propertyRef(props.modelValue.number ?? \"\", \"Number\");\r\n    const assignedToPersonAlias = propertyRef(props.modelValue.assignedToPersonAlias ?? undefined, \"AssignedToPersonAliasId\");\r\n    const isSmsEnabled = propertyRef(props.modelValue.isSmsEnabled ?? false, \"IsSmsEnabled\");\r\n    const isSmsForwardingEnabled = propertyRef(props.modelValue.isSmsForwardingEnabled ?? false, \"IsSmsForwardingEnabled\");\r\n    const smsReceivedWorkflowType = propertyRef(props.modelValue.smsReceivedWorkflowType ?? undefined, \"SmsReceivedWorkflowTypeId\");\r\n    const smsNotificationGroup = propertyRef(props.modelValue.smsNotificationGroup ?? undefined, \"SmsNotificationGroupId\");\r\n    const mobileApplication = propertyRef(props.modelValue.mobileApplicationSite?.value ?? \"\", \"MobileApplicationSiteId\");\r\n\r\n    // The properties that are being edited. This should only contain\r\n    // objects returned by propertyRef().\r\n    const propRefs = [description, isActive, name, phoneNumber, assignedToPersonAlias, isSmsEnabled, isSmsForwardingEnabled, smsReceivedWorkflowType, smsNotificationGroup, mobileApplication];\r\n\r\n    // #endregion\r\n\r\n    // #region Computed Values\r\n\r\n    // #endregion\r\n\r\n    // #region Functions\r\n\r\n    // #endregion\r\n\r\n    // #region Event Handlers\r\n\r\n    // #endregion\r\n\r\n    // Watch for parental changes in our model value and update all our values.\r\n    watch(() => props.modelValue, () => {\r\n        updateRefValue(attributes, props.modelValue.attributes ?? {});\r\n        updateRefValue(attributeValues, props.modelValue.attributeValues ?? {});\r\n        updateRefValue(description, props.modelValue.description ?? \"\");\r\n        updateRefValue(isActive, props.modelValue.isActive ?? false);\r\n        updateRefValue(name, props.modelValue.name ?? \"\");\r\n        updateRefValue(phoneNumber, props.modelValue.number ?? \"\");\r\n        updateRefValue(assignedToPersonAlias, props.modelValue.assignedToPersonAlias ?? undefined);\r\n        updateRefValue(isSmsEnabled, props.modelValue.isSmsEnabled ?? false);\r\n        updateRefValue(isSmsForwardingEnabled, props.modelValue.isSmsForwardingEnabled ?? false);\r\n        updateRefValue(smsReceivedWorkflowType, props.modelValue.smsReceivedWorkflowType ?? undefined);\r\n        updateRefValue(smsNotificationGroup, props.modelValue.smsNotificationGroup ?? undefined);\r\n        updateRefValue(mobileApplication, props.modelValue.mobileApplicationSite?.value ?? \"\");\r\n    });\r\n\r\n    // Determines which values we want to track changes on (defined in the\r\n    // array) and then emit a new object defined as newValue.\r\n    watch([attributeValues, ...propRefs], () => {\r\n        const newValue: SystemPhoneNumberBag = {\r\n            ...props.modelValue,\r\n            attributeValues: attributeValues.value,\r\n            description: description.value,\r\n            isActive: isActive.value,\r\n            name: name.value,\r\n            number: phoneNumber.value,\r\n            assignedToPersonAlias: assignedToPersonAlias.value,\r\n            isSmsEnabled: isSmsEnabled.value,\r\n            isSmsForwardingEnabled: isSmsForwardingEnabled.value,\r\n            smsReceivedWorkflowType: smsReceivedWorkflowType.value,\r\n            smsNotificationGroup: smsNotificationGroup.value,\r\n            mobileApplicationSite: mobileApplication.value ? { value: mobileApplication.value } : null\r\n        };\r\n\r\n        emit(\"update:modelValue\", newValue);\r\n    });\r\n\r\n    // Watch for any changes to props that represent properties and then\r\n    // automatically emit which property changed.\r\n    watchPropertyChanges(propRefs, emit);\r\n</script>\r\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <fieldset>\r\n\r\n        <ValueDetailList :modelValue=\"topValues\" />\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <ValueDetailList :modelValue=\"leftSideValues\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-6\">\r\n                <ValueDetailList :modelValue=\"rightSideValues\" />\r\n            </div>\r\n        </div>\r\n\r\n        <AttributeValuesContainer :modelValue=\"attributeValues\" :attributes=\"attributes\" :numberOfColumns=\"2\" />\r\n    </fieldset>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, PropType, ref } from \"vue\";\r\n    import AttributeValuesContainer from \"@Obsidian/Controls/attributeValuesContainer\";\r\n    import ValueDetailList from \"@Obsidian/Controls/valueDetailList\";\r\n    import { ValueDetailListItemBuilder } from \"@Obsidian/Core/Controls/valueDetailListItemBuilder\";\r\n    import { ValueDetailListItem } from \"@Obsidian/Types/Controls/valueDetailListItem\";\r\n    import { SystemPhoneNumberBag } from \"@Obsidian/ViewModels/Blocks/Communication/SystemPhoneNumberDetail/systemPhoneNumberBag\";\r\n    import { SystemPhoneNumberDetailOptionsBag } from \"@Obsidian/ViewModels/Blocks/Communication/SystemPhoneNumberDetail/systemPhoneNumberDetailOptionsBag\";\r\n\r\n    const props = defineProps({\r\n        modelValue: {\r\n            type: Object as PropType<SystemPhoneNumberBag | null>,\r\n            required: false\r\n        },\r\n\r\n        options: {\r\n            type: Object as PropType<SystemPhoneNumberDetailOptionsBag>,\r\n            required: true\r\n        }\r\n    });\r\n\r\n    // #region Values\r\n\r\n    const attributes = ref(props.modelValue?.attributes ?? {});\r\n    const attributeValues = ref(props.modelValue?.attributeValues ?? {});\r\n\r\n    // #endregion\r\n\r\n    // #region Computed Values\r\n\r\n    /** The values to display full-width at the top of the block. */\r\n    const topValues = computed((): ValueDetailListItem[] => {\r\n        const valueBuilder = new ValueDetailListItemBuilder();\r\n\r\n        if (!props.modelValue) {\r\n            return valueBuilder.build();\r\n        }\r\n\r\n        if (props.modelValue.description) {\r\n            valueBuilder.addTextValue(\"Description\", props.modelValue.description);\r\n        }\r\n\r\n        return valueBuilder.build();\r\n    });\r\n\r\n    /** The values to display at half-width on the left side of the block. */\r\n    const leftSideValues = computed((): ValueDetailListItem[] => {\r\n        const valueBuilder = new ValueDetailListItemBuilder();\r\n\r\n        if (!props.modelValue) {\r\n            return valueBuilder.build();\r\n        }\r\n\r\n        valueBuilder.addTextValue(\"Number\", props.modelValue.number ?? \"\");\r\n\r\n        if (props.modelValue.isSmsEnabled) {\r\n            valueBuilder.addHtmlValue(\"SMS Enabled\", `<i class=\"fa fa-check\"></i>`);\r\n        }\r\n\r\n        if (props.modelValue.smsReceivedWorkflowType?.text) {\r\n            valueBuilder.addTextValue(\"SMS Received Workflow\", props.modelValue.smsReceivedWorkflowType.text);\r\n        }\r\n\r\n        if (props.modelValue.mobileApplicationSite?.text) {\r\n            valueBuilder.addTextValue(\"Mobile Application\", props.modelValue.mobileApplicationSite.text);\r\n        }\r\n\r\n        return valueBuilder.build();\r\n    });\r\n\r\n    /** The values to display at half-width on the left side of the block. */\r\n    const rightSideValues = computed((): ValueDetailListItem[] => {\r\n        const valueBuilder = new ValueDetailListItemBuilder();\r\n\r\n        if (!props.modelValue) {\r\n            return valueBuilder.build();\r\n        }\r\n\r\n        if (props.modelValue.assignedToPersonAlias?.text) {\r\n            valueBuilder.addTextValue(\"Assigned To\", props.modelValue.assignedToPersonAlias.text);\r\n        }\r\n\r\n        if (props.modelValue.isSmsForwardingEnabled) {\r\n            valueBuilder.addHtmlValue(\"SMS Forwarding\", `<i class=\"fa fa-check\"></i>`);\r\n        }\r\n\r\n        if (props.modelValue.smsNotificationGroup?.text) {\r\n            valueBuilder.addTextValue(\"SMS Notification Group\", props.modelValue?.smsNotificationGroup.text);\r\n        }\r\n\r\n        return valueBuilder.build();\r\n    });\r\n\r\n    // #endregion\r\n\r\n    // #region Functions\r\n\r\n    // #endregion\r\n\r\n    // #region Event Handlers\r\n\r\n    // #endregion\r\n</script>\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nexport const enum NavigationUrlKey {\r\n    ParentPage = \"ParentPage\"\r\n}\r\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <NotificationBox v-if=\"blockError\" alertType=\"warning\">{{ blockError }}</NotificationBox>\r\n\r\n    <NotificationBox v-if=\"errorMessage\" alertType=\"danger\">{{ errorMessage }}</NotificationBox>\r\n\r\n    <DetailBlock v-if=\"!blockError\"\r\n                 v-model:mode=\"panelMode\"\r\n                 :name=\"panelName\"\r\n                 :labels=\"blockLabels\"\r\n                 :entityKey=\"entityKey\"\r\n                 :entityTypeGuid=\"entityTypeGuid\"\r\n                 entityTypeName=\"SystemPhoneNumber\"\r\n                 :isAuditHidden=\"false\"\r\n                 :isBadgesVisible=\"true\"\r\n                 :isDeleteVisible=\"isEditable\"\r\n                 :isEditVisible=\"isEditable\"\r\n                 :isFollowVisible=\"false\"\r\n                 :isSecurityHidden=\"false\"\r\n                 @cancelEdit=\"onCancelEdit\"\r\n                 @delete=\"onDelete\"\r\n                 @edit=\"onEdit\"\r\n                 @save=\"onSave\">\r\n        <template #view>\r\n            <ViewPanel :modelValue=\"systemPhoneNumberViewBag\" :options=\"options\" />\r\n        </template>\r\n\r\n        <template #edit>\r\n            <EditPanel v-model=\"systemPhoneNumberEditBag\" :options=\"options\" @propertyChanged=\"onPropertyChanged\" />\r\n        </template>\r\n    </DetailBlock>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, ref } from \"vue\";\r\n    import NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\n    import { EntityType } from \"@Obsidian/SystemGuids/entityType\";\r\n    import DetailBlock from \"@Obsidian/Templates/detailBlock\";\r\n    import { DetailPanelMode } from \"@Obsidian/Enums/Controls/detailPanelMode\";\r\n    import { PanelAction } from \"@Obsidian/Types/Controls/panelAction\";\r\n    import EditPanel from \"./SystemPhoneNumberDetail/editPanel.partial.obs\";\r\n    import ViewPanel from \"./SystemPhoneNumberDetail/viewPanel.partial.obs\";\r\n    import { getSecurityGrant, provideSecurityGrant, refreshDetailAttributes, useConfigurationValues, useInvokeBlockAction } from \"@Obsidian/Utility/block\";\r\n    import { debounce } from \"@Obsidian/Utility/util\";\r\n    import { NavigationUrlKey } from \"./SystemPhoneNumberDetail/types.partial\";\r\n    import { DetailBlockBox } from \"@Obsidian/ViewModels/Blocks/detailBlockBox\";\r\n    import { SystemPhoneNumberBag } from \"@Obsidian/ViewModels/Blocks/Communication/SystemPhoneNumberDetail/systemPhoneNumberBag\";\r\n    import { SystemPhoneNumberDetailOptionsBag } from \"@Obsidian/ViewModels/Blocks/Communication/SystemPhoneNumberDetail/systemPhoneNumberDetailOptionsBag\";\r\n\r\n    const config = useConfigurationValues<DetailBlockBox<SystemPhoneNumberBag, SystemPhoneNumberDetailOptionsBag>>();\r\n    const invokeBlockAction = useInvokeBlockAction();\r\n    const securityGrant = getSecurityGrant(config.securityGrantToken);\r\n\r\n    // #region Values\r\n\r\n    const blockError = ref(\"\");\r\n    const errorMessage = ref(\"\");\r\n\r\n    const systemPhoneNumberViewBag = ref(config.entity);\r\n    const systemPhoneNumberEditBag = ref<SystemPhoneNumberBag>({} as SystemPhoneNumberBag);\r\n\r\n    const entityTypeGuid = EntityType.SystemPhoneNumber;\r\n\r\n    const panelMode = ref<DetailPanelMode>(DetailPanelMode.View);\r\n\r\n    // The properties that are being edited in the UI. This is used to\r\n    // inform the server which incoming values have valid data in them.\r\n    const validProperties = [\r\n        \"attributeValues\",\r\n        \"assignedToPersonAlias\",\r\n        \"description\",\r\n        \"isActive\",\r\n        \"isSmsEnabled\",\r\n        \"isSmsForwardingEnabled\",\r\n        \"name\",\r\n        \"number\",\r\n        \"mobileApplicationSite\",\r\n        \"smsNotificationGroup\",\r\n        \"smsReceivedWorkflowType\"\r\n    ];\r\n\r\n    const refreshAttributesDebounce = debounce(() => refreshDetailAttributes(systemPhoneNumberEditBag, validProperties, invokeBlockAction), undefined, true);\r\n\r\n    // #endregion\r\n\r\n    // #region Computed Values\r\n\r\n    /**\r\n     * The entity name to display in the block panel.\r\n     */\r\n    const panelName = computed((): string => {\r\n        return systemPhoneNumberViewBag.value?.name ?? \"\";\r\n    });\r\n\r\n    /**\r\n     * The identifier key value for this entity.\r\n     */\r\n    const entityKey = computed((): string => {\r\n        return systemPhoneNumberViewBag.value?.idKey ?? \"\";\r\n    });\r\n\r\n    /**\r\n     * Additional labels to display in the block panel.\r\n     */\r\n    const blockLabels = computed((): PanelAction[] | undefined => {\r\n        const labels: PanelAction[] = [];\r\n\r\n        if (panelMode.value !== DetailPanelMode.View) {\r\n            return undefined;\r\n        }\r\n\r\n        if (systemPhoneNumberViewBag.value?.isActive === true) {\r\n            labels.push({\r\n                iconCssClass: \"fa fa-lightbulb\",\r\n                title: \"Active\",\r\n                type: \"success\"\r\n            });\r\n        }\r\n        else {\r\n            labels.push({\r\n                iconCssClass: \"far fa-lightbulb\",\r\n                title: \"Inactive\",\r\n                type: \"danger\"\r\n            });\r\n        }\r\n\r\n        return labels;\r\n    });\r\n\r\n    const isEditable = computed((): boolean => {\r\n        return config.isEditable === true;\r\n    });\r\n\r\n    const options = computed((): SystemPhoneNumberDetailOptionsBag => {\r\n        return config.options ?? {};\r\n    });\r\n\r\n    // #endregion\r\n\r\n    // #region Functions\r\n\r\n    // #endregion\r\n\r\n    // #region Event Handlers\r\n\r\n    /**\r\n     * Event handler for the Cancel button being clicked while in Edit mode.\r\n     * Handles redirect to parent page if creating a new entity.\r\n     *\r\n     * @returns true if the panel should leave edit mode; false if it should stay in edit mode; or a string containing a redirect URL.\r\n     */\r\n    async function onCancelEdit(): Promise<boolean | string> {\r\n        if (!systemPhoneNumberEditBag.value?.idKey) {\r\n            if (config.navigationUrls?.[NavigationUrlKey.ParentPage]) {\r\n                return config.navigationUrls[NavigationUrlKey.ParentPage];\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Event handler for the Delete button being clicked. Sends the\r\n     * delete request to the server and then redirects to the target page.\r\n     *\r\n     * @returns false if it should stay on the page; or a string containing a redirect URL.\r\n     */\r\n    async function onDelete(): Promise<false | string> {\r\n        errorMessage.value = \"\";\r\n\r\n        const result = await invokeBlockAction<string>(\"Delete\", {\r\n            key: systemPhoneNumberViewBag.value?.idKey\r\n        });\r\n\r\n        if (result.isSuccess && result.data) {\r\n            return result.data;\r\n        }\r\n        else {\r\n            errorMessage.value = result.errorMessage ?? \"Unknown error while trying to delete system phone number.\";\r\n\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Event handler for the Edit button being clicked. Request the edit\r\n     * details from the server and then enter edit mode.\r\n     *\r\n     * @returns true if the panel should enter edit mode; otherwise false.\r\n     */\r\n    async function onEdit(): Promise<boolean> {\r\n        const result = await invokeBlockAction<DetailBlockBox<SystemPhoneNumberBag, SystemPhoneNumberDetailOptionsBag>>(\"Edit\", {\r\n            key: systemPhoneNumberViewBag.value?.idKey\r\n        });\r\n\r\n        if (result.isSuccess && result.data && result.data.entity) {\r\n            systemPhoneNumberEditBag.value = result.data.entity;\r\n\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Event handler for when a value has changed that has an associated\r\n     * C# property name. This is used to detect changes to values that\r\n     * might cause qualified attributes to either show up or not show up.\r\n     *\r\n     * @param propertyName The name of the C# property that was changed.\r\n     */\r\n    function onPropertyChanged(propertyName: string): void {\r\n        // If we don't have any qualified attribute properties or this property\r\n        // is not one of them then do nothing.\r\n        if (!config.qualifiedAttributeProperties || !config.qualifiedAttributeProperties.some(n => n.toLowerCase() === propertyName.toLowerCase())) {\r\n            return;\r\n        }\r\n\r\n        refreshAttributesDebounce();\r\n    }\r\n\r\n    /**\r\n     * Event handler for the panel's Save event. Send the data to the server\r\n     * to be saved and then leave edit mode or redirect to target page.\r\n     *\r\n     * @returns true if the panel should leave edit mode; false if it should stay in edit mode; or a string containing a redirect URL.\r\n     */\r\n    async function onSave(): Promise<boolean | string> {\r\n        errorMessage.value = \"\";\r\n\r\n        const data: DetailBlockBox<SystemPhoneNumberBag, SystemPhoneNumberDetailOptionsBag> = {\r\n            entity: systemPhoneNumberEditBag.value,\r\n            isEditable: true,\r\n            validProperties: validProperties\r\n        };\r\n\r\n        const result = await invokeBlockAction<SystemPhoneNumberBag | string>(\"Save\", {\r\n            box: data\r\n        });\r\n\r\n        if (result.isSuccess && result.data) {\r\n            if (result.statusCode === 200 && typeof result.data === \"object\") {\r\n                systemPhoneNumberViewBag.value = result.data;\r\n\r\n                return true;\r\n            }\r\n            else if (result.statusCode === 201 && typeof result.data === \"string\") {\r\n                return result.data;\r\n            }\r\n        }\r\n\r\n        errorMessage.value = result.errorMessage ?? \"Unknown error while trying to save system phone number.\";\r\n\r\n        return false;\r\n    }\r\n\r\n    // #endregion\r\n\r\n    provideSecurityGrant(securityGrant);\r\n\r\n    // Handle any initial error conditions or the need to go into edit mode.\r\n    if (config.errorMessage) {\r\n        blockError.value = config.errorMessage;\r\n    }\r\n    else if (!config.entity) {\r\n        blockError.value = \"The specified system phone number could not be viewed.\";\r\n    }\r\n    else if (!config.entity.idKey) {\r\n        systemPhoneNumberEditBag.value = config.entity;\r\n        panelMode.value = DetailPanelMode.Add;\r\n    }\r\n</script>\r\n"],"names":["attributes","ref","_props$modelValue$att","props","modelValue","attributeValues","_props$modelValue$att2","description","propertyRef","_props$modelValue$des","isActive","_props$modelValue$isA","name","_props$modelValue$nam","phoneNumber","_props$modelValue$num","number","assignedToPersonAlias","_props$modelValue$ass","undefined","isSmsEnabled","_props$modelValue$isS","isSmsForwardingEnabled","_props$modelValue$isS2","smsReceivedWorkflowType","_props$modelValue$sms","smsNotificationGroup","_props$modelValue$sms2","mobileApplication","_props$modelValue$mob","_props$modelValue$mob2","mobileApplicationSite","value","propRefs","watch","_props$modelValue$att3","_props$modelValue$att4","_props$modelValue$des2","_props$modelValue$isA2","_props$modelValue$nam2","_props$modelValue$num2","_props$modelValue$ass2","_props$modelValue$isS3","_props$modelValue$isS4","_props$modelValue$sms3","_props$modelValue$sms4","_props$modelValue$mob3","_props$modelValue$mob4","updateRefValue","newValue","_objectSpread","emit","watchPropertyChanges","_props$modelValue","_props$modelValue2","topValues","computed","valueBuilder","ValueDetailListItemBuilder","build","addTextValue","leftSideValues","addHtmlValue","text","rightSideValues","_props$modelValue3","NavigationUrlKey","config","useConfigurationValues","invokeBlockAction","useInvokeBlockAction","securityGrant","getSecurityGrant","securityGrantToken","blockError","errorMessage","systemPhoneNumberViewBag","entity","systemPhoneNumberEditBag","entityTypeGuid","EntityType","SystemPhoneNumber","panelMode","DetailPanelMode","View","validProperties","refreshAttributesDebounce","debounce","refreshDetailAttributes","panelName","_systemPhoneNumberVie","_systemPhoneNumberVie2","entityKey","_systemPhoneNumberVie3","_systemPhoneNumberVie4","idKey","blockLabels","_systemPhoneNumberVie5","labels","push","iconCssClass","title","type","isEditable","options","_config$options","onCancelEdit","_onCancelEdit","apply","arguments","_asyncToGenerator","_systemPhoneNumberEdi","_config$navigationUrl","navigationUrls","ParentPage","onDelete","_onDelete","_systemPhoneNumberVie6","result","key","isSuccess","data","_result$errorMessage","onEdit","_onEdit","_systemPhoneNumberVie7","onPropertyChanged","propertyName","qualifiedAttributeProperties","some","n","toLowerCase","onSave","_onSave","_result$errorMessage2","box","statusCode","provideSecurityGrant","Add"],"mappings":"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"}