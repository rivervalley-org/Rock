{"version":3,"file":"snippetDetail.obs.js","sources":["../../src/Communication/SnippetDetail/editPanel.partial.obs","../../src/Communication/SnippetDetail/viewPanel.partial.obs","../../src/Communication/SnippetDetail/types.partial.ts","../../src/Communication/snippetDetail.obs"],"sourcesContent":["<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <fieldset>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <TextBox v-model=\"name\"\r\n                         label=\"Name\"\r\n                         rules=\"required\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-6\">\r\n                <CheckBox v-model=\"isActive\"\r\n                          label=\"Active\" />\r\n            </div>\r\n        </div>\r\n\r\n        <TextBox v-model=\"description\"\r\n                 label=\"Description\"\r\n                 textMode=\"multiline\" />\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\" v-if=\"isPersonalAllowed\">\r\n                <div class=\"col-md-6 mt-4\" v-if=\"isAuthorizedToEdit\">\r\n                    <Toggle v-model=\"isShared\"\r\n                            trueText=\"On\"\r\n                            falseText=\"Off\">\r\n                        <template #on=\"\">\r\n                            Shared\r\n                        </template>\r\n                        <template #off=\"\">\r\n                            Personal\r\n                        </template>\r\n                    </Toggle>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <PersonPicker v-model=\"ownerPersonAlias\"\r\n                                  v-if=\"!isShared\"\r\n                                  label=\"Owner\"\r\n                                  :help=\"ownerHelpText\"\r\n                                  rules=\"required\"/>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n                <CategoryPicker label=\"Category\"\r\n                                v-model=\"category\"\r\n                                :multiple=\"false\"\r\n                                :entityTypeGuid=\"entityTypeGuid\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"pull-right\">\r\n            <Toggle label=\"\"\r\n                    v-model=\"isLava\"\r\n                    trueText=\"On\"\r\n                    btnSize=\"xs\">\r\n                <template #on>\r\n                    Lava\r\n                </template>\r\n                <template #off>\r\n                    Text\r\n                </template>\r\n            </Toggle>\r\n        </div>\r\n\r\n        <div class=\"mt-5\">\r\n            <RockLabel>Snippet</RockLabel>\r\n            <TransitionVerticalCollapse>\r\n                <div v-if=\"!isLava\">\r\n                    <TextBox v-model=\"content\"\r\n                             textMode=\"multiline\"\r\n                             :rows=\"10\"/>\r\n                </div>\r\n                <div v-else=\"isLava\">\r\n                    <CodeEditor v-model=\"content\"\r\n                                theme=\"rock\"\r\n                                mode=\"text\"\r\n                                :editorHeight=\"200\" />\r\n                </div>\r\n            </TransitionVerticalCollapse>\r\n        </div>\r\n\r\n        <AttributeValuesContainer v-model=\"attributeValues\" :attributes=\"attributes\" isEditMode :numberOfColumns=\"2\" />\r\n    </fieldset>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { PropType, ref, watch, computed } from \"vue\";\r\n    import AttributeValuesContainer from \"@Obsidian/Controls/attributeValuesContainer\";\r\n    import CheckBox from \"@Obsidian/Controls/checkBox\";\r\n    import TextBox from \"@Obsidian/Controls/textBox\";\r\n    import Toggle from \"@Obsidian/Controls/toggle\";\r\n    import PersonPicker from \"@Obsidian/Controls/personPicker\";\r\n    import CategoryPicker from \"@Obsidian/Controls/categoryPicker\";\r\n    import CodeEditor from \"@Obsidian/Controls/codeEditor\";\r\n    import TransitionVerticalCollapse from \"@Obsidian/Controls/transitionVerticalCollapse\";\r\n    import RockLabel from \"@Obsidian/Controls/rockLabel\";\r\n    import { watchPropertyChanges } from \"@Obsidian/Utility/block\";\r\n    import { propertyRef, updateRefValue } from \"@Obsidian/Utility/component\";\r\n    import { EntityType } from \"@Obsidian/SystemGuids/entityType\";\r\n    import { SnippetBag } from \"@Obsidian/ViewModels/Blocks/Communication/SnippetDetail/snippetBag\";\r\n    import { SnippetDetailOptionsBag } from \"@Obsidian/ViewModels/Blocks/Communication/SnippetDetail/snippetDetailOptionsBag\";\r\n\r\n    const props = defineProps({\r\n        modelValue: {\r\n            type: Object as PropType<SnippetBag>,\r\n            required: true\r\n        },\r\n\r\n        options: {\r\n            type: Object as PropType<SnippetDetailOptionsBag>,\r\n            required: true\r\n        }\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"update:modelValue\", value: SnippetBag): void,\r\n        (e: \"propertyChanged\", value: string): void\r\n    }>();\r\n\r\n    // #region Values\r\n\r\n    const attributes = ref(props.modelValue.attributes ?? {});\r\n    const attributeValues = ref(props.modelValue.attributeValues ?? {});\r\n    const description = propertyRef(props.modelValue.description ?? \"\", \"Description\");\r\n    const isActive = propertyRef(props.modelValue.isActive ?? false, \"IsActive\");\r\n    const content = propertyRef(props.modelValue.content ?? \"\", \"Content\");\r\n    const name = propertyRef(props.modelValue.name ?? \"\", \"Name\");\r\n    const isShared = ref(props.modelValue.ownerPersonAlias == null);\r\n    const isLava = ref(props.modelValue.content?.includes(\"{\") ?? false);\r\n    const isAuthorizedToEdit = ref(props.options.isAuthorizedToEdit);\r\n    const isPersonalAllowed = ref(props.options.isPersonalAllowed);\r\n    const ownerPersonAlias = propertyRef(props.modelValue.ownerPersonAlias ?? undefined, \"OwnerPersonAlias\");\r\n    const category = propertyRef(props.modelValue.category ?? null, \"Category\");\r\n    const entityTypeGuid = EntityType.Snippet;\r\n\r\n    console.log(ownerPersonAlias);\r\n\r\n    // The properties that are being edited. This should only contain\r\n    // objects returned by propertyRef().\r\n    const propRefs = [description, isActive, content, name, ownerPersonAlias, category];\r\n\r\n    // #endregion\r\n\r\n    // #region Computed Values\r\n    const ownerHelpText = computed((): string => {\r\n        const helpText = \"When an owner is provided only this person will be able to see the snippet.\";\r\n        return isAuthorizedToEdit ? helpText : helpText + \"To make the snippet public you will need edit access to the SMS snippet type.\";\r\n    });\r\n    // #endregion\r\n\r\n    // #region Functions\r\n\r\n    // #endregion\r\n\r\n    // #region Event Handlers\r\n\r\n    // #endregion\r\n\r\n    // Watch for parental changes in our model value and update all our values.\r\n    watch(() => props.modelValue, () => {\r\n        updateRefValue(attributes, props.modelValue.attributes ?? {});\r\n        updateRefValue(attributeValues, props.modelValue.attributeValues ?? {});\r\n        updateRefValue(description, props.modelValue.description ?? \"\");\r\n        updateRefValue(isActive, props.modelValue.isActive ?? false);\r\n        updateRefValue(content, props.modelValue.content ?? \"\");\r\n        updateRefValue(name, props.modelValue.name ?? \"\");\r\n        updateRefValue(ownerPersonAlias, props.modelValue.ownerPersonAlias ?? undefined);\r\n        updateRefValue(category, props.modelValue.category ?? null);\r\n    });\r\n\r\n    // Determines which values we want to track changes on (defined in the\r\n    // array) and then emit a new object defined as newValue.\r\n    watch([attributeValues, ...propRefs], () => {\r\n        const newValue: SnippetBag = {\r\n            ...props.modelValue,\r\n            attributeValues: attributeValues.value,\r\n            description: description.value,\r\n            isActive: isActive.value,\r\n            content: content.value,\r\n            name: name.value,\r\n            ownerPersonAlias: ownerPersonAlias.value,\r\n            category: category.value\r\n        };\r\n\r\n        emit(\"update:modelValue\", newValue);\r\n    });\r\n\r\n    // Watch for any changes to props that represent properties and then\r\n    // automatically emit which property changed.\r\n    watchPropertyChanges(propRefs, emit);\r\n</script>\r\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <fieldset>\r\n\r\n        <ValueDetailList :modelValue=\"topValues\" />\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <ValueDetailList :modelValue=\"leftSideValues\" />\r\n            </div>\r\n\r\n            <div class=\"col-md-6\">\r\n                <ValueDetailList :modelValue=\"rightSideValues\" />\r\n            </div>\r\n        </div>\r\n\r\n        <AttributeValuesContainer :modelValue=\"attributeValues\" :attributes=\"attributes\" :numberOfColumns=\"2\" />\r\n    </fieldset>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, PropType, ref } from \"vue\";\r\n    import AttributeValuesContainer from \"@Obsidian/Controls/attributeValuesContainer\";\r\n    import ValueDetailList from \"@Obsidian/Controls/valueDetailList\";\r\n    import { ValueDetailListItemBuilder } from \"@Obsidian/Core/Controls/valueDetailListItemBuilder\";\r\n    import { ValueDetailListItem } from \"@Obsidian/Types/Controls/valueDetailListItem\";\r\n    import { SnippetBag } from \"@Obsidian/ViewModels/Blocks/Communication/SnippetDetail/snippetBag\";\r\n    import { SnippetDetailOptionsBag } from \"@Obsidian/ViewModels/Blocks/Communication/SnippetDetail/snippetDetailOptionsBag\";\r\n\r\n    const props = defineProps({\r\n        modelValue: {\r\n            type: Object as PropType<SnippetBag | null>,\r\n            required: false\r\n        },\r\n\r\n        options: {\r\n            type: Object as PropType<SnippetDetailOptionsBag>,\r\n            required: true\r\n        }\r\n    });\r\n\r\n    // #region Values\r\n\r\n    const attributes = ref(props.modelValue?.attributes ?? {});\r\n    const attributeValues = ref(props.modelValue?.attributeValues ?? {});\r\n\r\n    // #endregion\r\n\r\n    // #region Computed Values\r\n\r\n    /** The values to display full-width at the top of the block. */\r\n    const topValues = computed((): ValueDetailListItem[] => {\r\n        const valueBuilder = new ValueDetailListItemBuilder();\r\n\r\n        if (!props.modelValue) {\r\n            return valueBuilder.build();\r\n        }\r\n\r\n        if (props.modelValue.description) {\r\n            valueBuilder.addTextValue(\"Description\", props.modelValue.description);\r\n        }\r\n\r\n        return valueBuilder.build();\r\n    });\r\n\r\n    /** The values to display at half-width on the left side of the block. */\r\n    const leftSideValues = computed((): ValueDetailListItem[] => {\r\n        const valueBuilder = new ValueDetailListItemBuilder();\r\n\r\n        if (!props.modelValue) {\r\n            return valueBuilder.build();\r\n        }\r\n\r\n        return valueBuilder.build();\r\n    });\r\n\r\n    /** The values to display at half-width on the left side of the block. */\r\n    const rightSideValues = computed((): ValueDetailListItem[] => {\r\n        const valueBuilder = new ValueDetailListItemBuilder();\r\n\r\n        if (!props.modelValue) {\r\n            return valueBuilder.build();\r\n        }\r\n\r\n        return valueBuilder.build();\r\n    });\r\n\r\n    // #endregion\r\n\r\n    // #region Functions\r\n\r\n    // #endregion\r\n\r\n    // #region Event Handlers\r\n\r\n    // #endregion\r\n</script>\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nexport const enum NavigationUrlKey {\r\n    ParentPage = \"ParentPage\"\r\n}\r\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <NotificationBox v-if=\"blockError\" alertType=\"warning\" v-html=\"blockError\" />\r\n\r\n    <NotificationBox v-if=\"errorMessage\" alertType=\"danger\" v-html=\"errorMessage\" />\r\n\r\n    <DetailBlock v-if=\"!blockError\"\r\n                 v-model:mode=\"panelMode\"\r\n                 :name=\"panelName\"\r\n                 :labels=\"blockLabels\"\r\n                 :entityKey=\"entityKey\"\r\n                 :entityTypeGuid=\"entityTypeGuid\"\r\n                 :entityTypeName=\"entityTypeName\"\r\n                 :isAuditHidden=\"false\"\r\n                 :isBadgesVisible=\"true\"\r\n                 :isDeleteVisible=\"isEditable\"\r\n                 :isEditVisible=\"isEditable\"\r\n                 :isFollowVisible=\"false\"\r\n                 :isSecurityHidden=\"false\"\r\n                 @cancelEdit=\"onCancelEdit\"\r\n                 @delete=\"onDelete\"\r\n                 @edit=\"onEdit\"\r\n                 @save=\"onSave\">\r\n        <template #view>\r\n            <ViewPanel :modelValue=\"snippetViewBag\" :options=\"options\" />\r\n        </template>\r\n\r\n        <template #edit>\r\n            <EditPanel v-model=\"snippetEditBag\" :options=\"options\" @propertyChanged=\"onPropertyChanged\" />\r\n        </template>\r\n    </DetailBlock>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, ref } from \"vue\";\r\n    import NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\n    import { EntityType } from \"@Obsidian/SystemGuids/entityType\";\r\n    import DetailBlock from \"@Obsidian/Templates/detailBlock\";\r\n    import { DetailPanelMode } from \"@Obsidian/Enums/Controls/detailPanelMode\";\r\n    import { PanelAction } from \"@Obsidian/Types/Controls/panelAction\";\r\n    import EditPanel from \"./SnippetDetail/editPanel.partial.obs\";\r\n    import ViewPanel from \"./SnippetDetail/viewPanel.partial.obs\";\r\n    import { getSecurityGrant, provideSecurityGrant, refreshDetailAttributes, useConfigurationValues, useInvokeBlockAction } from \"@Obsidian/Utility/block\";\r\n    import { debounce } from \"@Obsidian/Utility/util\";\r\n    import { NavigationUrlKey } from \"./SnippetDetail/types.partial\";\r\n    import { DetailBlockBox } from \"@Obsidian/ViewModels/Blocks/detailBlockBox\";\r\n    import { SnippetBag } from \"@Obsidian/ViewModels/Blocks/Communication/SnippetDetail/snippetBag\";\r\n    import { SnippetDetailOptionsBag } from \"@Obsidian/ViewModels/Blocks/Communication/SnippetDetail/snippetDetailOptionsBag\";\r\n\r\n    const config = useConfigurationValues<DetailBlockBox<SnippetBag, SnippetDetailOptionsBag>>();\r\n    const invokeBlockAction = useInvokeBlockAction();\r\n    const securityGrant = getSecurityGrant(config.securityGrantToken);\r\n\r\n    // #region Values\r\n\r\n    const blockError = ref(\"\");\r\n    const errorMessage = ref(\"\");\r\n\r\n    const snippetViewBag = ref(config.entity);\r\n    const snippetEditBag = ref<SnippetBag>({} as SnippetBag);\r\n\r\n    const entityTypeGuid = EntityType.Snippet;\r\n\r\n    const panelMode = ref<DetailPanelMode>(DetailPanelMode.View);\r\n\r\n    // The properties that are being edited in the UI. This is used to\r\n    // inform the server which incoming values have valid data in them.\r\n    const validProperties = [\r\n        \"attributeValues\",\r\n        \"category\",\r\n        \"description\",\r\n        \"isActive\",\r\n        \"content\",\r\n        \"name\",\r\n        \"order\",\r\n        \"ownerPersonAlias\"\r\n    ];\r\n\r\n    const refreshAttributesDebounce = debounce(() => refreshDetailAttributes(snippetEditBag, validProperties, invokeBlockAction), undefined, true);\r\n\r\n    // #endregion\r\n\r\n    // #region Computed Values\r\n\r\n    /**\r\n     * The entity name to display in the block panel.\r\n     */\r\n    const panelName = computed((): string => {\r\n        return snippetViewBag.value?.name ?? \"\";\r\n    });\r\n\r\n    const entityTypeName = computed((): string => {\r\n        return snippetViewBag.value?.name ?? \"New Snippet\";\r\n    });\r\n\r\n    /**\r\n     * The identifier key value for this entity.\r\n     */\r\n    const entityKey = computed((): string => {\r\n        return snippetViewBag.value?.idKey ?? \"\";\r\n    });\r\n\r\n    /**\r\n     * Additional labels to display in the block panel.\r\n     */\r\n    const blockLabels = computed((): PanelAction[] | undefined => {\r\n        const labels: PanelAction[] = [];\r\n\r\n        if (panelMode.value !== DetailPanelMode.View) {\r\n            return undefined;\r\n        }\r\n\r\n        if (snippetViewBag.value?.isActive === true) {\r\n            labels.push({\r\n                iconCssClass: \"fa fa-lightbulb\",\r\n                title: \"Active\",\r\n                type: \"success\"\r\n            });\r\n        }\r\n        else {\r\n            labels.push({\r\n                iconCssClass: \"far fa-lightbulb\",\r\n                title: \"Inactive\",\r\n                type: \"danger\"\r\n            });\r\n        }\r\n\r\n        return labels;\r\n    });\r\n\r\n    const isEditable = computed((): boolean => {\r\n        return config.isEditable === true;\r\n    });\r\n\r\n    const options = computed((): SnippetDetailOptionsBag => {\r\n        return config.options ?? { isAuthorizedToEdit: false, isPersonalAllowed: false };\r\n    });\r\n\r\n    // #endregion\r\n\r\n    // #region Functions\r\n\r\n    // #endregion\r\n\r\n    // #region Event Handlers\r\n\r\n    /**\r\n     * Event handler for the Cancel button being clicked while in Edit mode.\r\n     * Handles redirect to parent page if creating a new entity.\r\n     *\r\n     * @returns true if the panel should leave edit mode; false if it should stay in edit mode; or a string containing a redirect URL.\r\n     */\r\n    async function onCancelEdit(): Promise<boolean | string> {\r\n        if (!snippetEditBag.value?.idKey) {\r\n            if (config.navigationUrls?.[NavigationUrlKey.ParentPage]) {\r\n                return config.navigationUrls[NavigationUrlKey.ParentPage];\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Event handler for the Delete button being clicked. Sends the\r\n     * delete request to the server and then redirects to the target page.\r\n     *\r\n     * @returns false if it should stay on the page; or a string containing a redirect URL.\r\n     */\r\n    async function onDelete(): Promise<false | string> {\r\n        errorMessage.value = \"\";\r\n\r\n        const result = await invokeBlockAction<string>(\"Delete\", {\r\n            key: snippetViewBag.value?.idKey\r\n        });\r\n\r\n        if (result.isSuccess && result.data) {\r\n            return result.data;\r\n        }\r\n        else {\r\n            errorMessage.value = result.errorMessage ?? \"Unknown error while trying to delete snippet.\";\r\n\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Event handler for the Edit button being clicked. Request the edit\r\n     * details from the server and then enter edit mode.\r\n     *\r\n     * @returns true if the panel should enter edit mode; otherwise false.\r\n     */\r\n    async function onEdit(): Promise<boolean> {\r\n        const result = await invokeBlockAction<DetailBlockBox<SnippetBag, SnippetDetailOptionsBag>>(\"Edit\", {\r\n            key: snippetViewBag.value?.idKey\r\n        });\r\n\r\n        if (result.isSuccess && result.data && result.data.entity) {\r\n            snippetEditBag.value = result.data.entity;\r\n\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Event handler for when a value has changed that has an associated\r\n     * C# property name. This is used to detect changes to values that\r\n     * might cause qualified attributes to either show up or not show up.\r\n     *\r\n     * @param propertyName The name of the C# property that was changed.\r\n     */\r\n    function onPropertyChanged(propertyName: string): void {\r\n        // If we don't have any qualified attribute properties or this property\r\n        // is not one of them then do nothing.\r\n        if (!config.qualifiedAttributeProperties || !config.qualifiedAttributeProperties.some(n => n.toLowerCase() === propertyName.toLowerCase())) {\r\n            return;\r\n        }\r\n\r\n        refreshAttributesDebounce();\r\n    }\r\n\r\n    /**\r\n     * Event handler for the panel's Save event. Send the data to the server\r\n     * to be saved and then leave edit mode or redirect to target page.\r\n     *\r\n     * @returns true if the panel should leave edit mode; false if it should stay in edit mode; or a string containing a redirect URL.\r\n     */\r\n    async function onSave(): Promise<boolean | string> {\r\n        errorMessage.value = \"\";\r\n\r\n        const data: DetailBlockBox<SnippetBag, SnippetDetailOptionsBag> = {\r\n            entity: snippetEditBag.value,\r\n            isEditable: true,\r\n            validProperties: validProperties\r\n        };\r\n\r\n        const result = await invokeBlockAction<SnippetBag | string>(\"Save\", {\r\n            box: data\r\n        });\r\n\r\n        if (result.isSuccess && result.data) {\r\n            if (result.statusCode === 200 && typeof result.data === \"object\") {\r\n                snippetViewBag.value = result.data;\r\n\r\n                return true;\r\n            }\r\n            else if (result.statusCode === 201 && typeof result.data === \"string\") {\r\n                return result.data;\r\n            }\r\n        }\r\n\r\n        errorMessage.value = result.errorMessage ?? \"Unknown error while trying to save snippet.\";\r\n\r\n        return false;\r\n    }\r\n\r\n    // #endregion\r\n\r\n    provideSecurityGrant(securityGrant);\r\n\r\n    // Handle any initial error conditions or the need to go into edit mode.\r\n    if (config.errorMessage) {\r\n        blockError.value = config.errorMessage;\r\n    }\r\n    else if (!config.entity) {\r\n        blockError.value = \"The specified snippet could not be viewed.\";\r\n    }\r\n    else if (!config.entity.idKey) {\r\n        snippetEditBag.value = config.entity;\r\n        panelMode.value = DetailPanelMode.Add;\r\n    }\r\n</script>\r\n"],"names":["attributes","ref","_props$modelValue$att","props","modelValue","attributeValues","_props$modelValue$att2","description","propertyRef","_props$modelValue$des","isActive","_props$modelValue$isA","content","_props$modelValue$con","name","_props$modelValue$nam","isShared","ownerPersonAlias","isLava","_props$modelValue$con2","_props$modelValue$con3","includes","isAuthorizedToEdit","options","isPersonalAllowed","_props$modelValue$own","undefined","category","_props$modelValue$cat","entityTypeGuid","EntityType","Snippet","console","log","propRefs","ownerHelpText","computed","helpText","watch","_props$modelValue$att3","_props$modelValue$att4","_props$modelValue$des2","_props$modelValue$isA2","_props$modelValue$con4","_props$modelValue$nam2","_props$modelValue$own2","_props$modelValue$cat2","updateRefValue","newValue","_objectSpread","value","emit","watchPropertyChanges","_props$modelValue","_props$modelValue2","topValues","valueBuilder","ValueDetailListItemBuilder","build","addTextValue","leftSideValues","rightSideValues","NavigationUrlKey","config","useConfigurationValues","invokeBlockAction","useInvokeBlockAction","securityGrant","getSecurityGrant","securityGrantToken","blockError","errorMessage","snippetViewBag","entity","snippetEditBag","panelMode","DetailPanelMode","View","validProperties","refreshAttributesDebounce","debounce","refreshDetailAttributes","panelName","_snippetViewBag$value","_snippetViewBag$value2","entityTypeName","_snippetViewBag$value3","_snippetViewBag$value4","entityKey","_snippetViewBag$value5","_snippetViewBag$value6","idKey","blockLabels","_snippetViewBag$value7","labels","push","iconCssClass","title","type","isEditable","_config$options","onCancelEdit","_onCancelEdit","apply","arguments","_asyncToGenerator","_snippetEditBag$value","_config$navigationUrl","navigationUrls","ParentPage","onDelete","_onDelete","_snippetViewBag$value8","result","key","isSuccess","data","_result$errorMessage","onEdit","_onEdit","_snippetViewBag$value9","onPropertyChanged","propertyName","qualifiedAttributeProperties","some","n","toLowerCase","onSave","_onSave","_result$errorMessage2","box","statusCode","provideSecurityGrant","Add"],"mappings":"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"}