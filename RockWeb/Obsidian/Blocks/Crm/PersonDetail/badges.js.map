{"version":3,"file":"badges.js","sources":["../../../src/Crm/PersonDetail/badges.ts"],"sourcesContent":["// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { computed, defineComponent, nextTick, ref } from \"vue\";\r\nimport NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\nimport EntityTagList from \"@Obsidian/Controls/entityTagList\";\r\nimport { EntityType } from \"@Obsidian/SystemGuids/entityType\";\r\nimport { BadgesConfigurationBox } from \"@Obsidian/ViewModels/Blocks/Crm/PersonDetail/Badges/badgesConfigurationBox\";\r\nimport { onConfigurationValuesChanged, useConfigurationValues, useReloadBlock } from \"@Obsidian/Utility/block\";\r\nimport { ControlLazyMode } from \"@Obsidian/Enums/Controls/controlLazyMode\";\r\nimport { tooltip } from \"@Obsidian/Utility/tooltip\";\r\nimport { popover } from \"@Obsidian/Utility/popover\";\r\n\r\nexport default defineComponent({\r\n    name: \"Crm.PersonDetail.Badges\",\r\n\r\n    components: {\r\n        NotificationBox,\r\n        EntityTagList\r\n    },\r\n\r\n    setup() {\r\n        const config = useConfigurationValues<BadgesConfigurationBox>();\r\n\r\n        // #region Values\r\n\r\n        const containerRef = ref<HTMLElement | null>(null);\r\n\r\n        // #endregion\r\n\r\n        // #region Computed Values\r\n\r\n        const topLeftBadges = computed((): string => {\r\n            return config.topLeftBadges?.map(b => b.html ?? \"\").join(\"\") ?? \"\";\r\n        });\r\n\r\n        const topMiddleBadges = computed((): string => {\r\n            return config.topMiddleBadges?.map(b => b.html ?? \"\").join(\"\") ?? \"\";\r\n        });\r\n\r\n        const topRightBadges = computed((): string => {\r\n            return config.topRightBadges?.map(b => b.html ?? \"\").join(\"\") ?? \"\";\r\n        });\r\n\r\n        const bottomLeftBadges = computed((): string => {\r\n            return config.bottomLeftBadges?.map(b => b.html ?? \"\").join(\"\") ?? \"\";\r\n        });\r\n\r\n        const bottomRightBadges = computed((): string => {\r\n            return config.bottomRightBadges?.map(b => b.html ?? \"\").join(\"\") ?? \"\";\r\n        });\r\n\r\n        // #endregion\r\n\r\n        // #region Functions\r\n\r\n        // #endregion\r\n\r\n        // #region Event Handlers\r\n\r\n        // #endregion\r\n\r\n        const script =\r\n            [\r\n                ...config.topLeftBadges ?? [],\r\n                ...config.topMiddleBadges ?? [],\r\n                ...config.topRightBadges ?? [],\r\n                ...config.bottomLeftBadges ?? [],\r\n                ...config.bottomRightBadges ?? []\r\n            ]\r\n                .map(b => b.javaScript ?? \"\").join(\"\");\r\n\r\n        if (script !== \"\") {\r\n            // Add the script on the next tick to ensure the HTML has been rendered.\r\n            nextTick(() => {\r\n                const scriptNode = document.createElement(\"script\");\r\n                scriptNode.type = \"text/javascript\";\r\n                scriptNode.appendChild(document.createTextNode(script));\r\n                document.body.appendChild(scriptNode);\r\n            });\r\n        }\r\n\r\n        nextTick(() => {\r\n            if (!containerRef.value) {\r\n                return;\r\n            }\r\n\r\n            tooltip(Array.from(containerRef.value.querySelectorAll(\".rockbadge[data-toggle=\\\"tooltip\\\"]\")), { html: true, sanitize: false });\r\n            popover(Array.from(containerRef.value.querySelectorAll(\".rockbadge[data-toggle=\\\"popover\\\"]\")));\r\n        });\r\n\r\n        onConfigurationValuesChanged(useReloadBlock());\r\n\r\n        return {\r\n            bottomLeftBadges,\r\n            bottomRightBadges,\r\n            containerRef,\r\n            entityKey: config.personKey,\r\n            entityTypeGuid: EntityType.Person,\r\n            lazyMode: ControlLazyMode.Eager,\r\n            topLeftBadges,\r\n            topMiddleBadges,\r\n            topRightBadges\r\n        };\r\n    },\r\n\r\n    template: `\r\n<div ref=\"containerRef\" class=\"card card-badges\">\r\n    <div class=\"card-badge-top\">\r\n        <div class=\"rockbadge-container\" v-html=\"topLeftBadges\"></div>\r\n\r\n        <div class=\"rockbadge-container\" v-html=\"topMiddleBadges\"></div>\r\n\r\n        <div class=\"rockbadge-container\" v-html=\"topRightBadges\"></div>\r\n    </div>\r\n\r\n    <div class=\"card-badge-bottom\">\r\n        <div class=\"rockbadge-container rockbadge-container-xs\" v-html=\"bottomLeftBadges\"></div>\r\n\r\n        <div class=\"rockbadge-container rockbadge-container-xs\">\r\n            <EntityTagList :entityTypeGuid=\"entityTypeGuid\"\r\n                :entityKey=\"entityKey\"\r\n                :lazyMode=\"lazyMode\" />\r\n         </div>\r\n\r\n        <div class=\"rockbadge-container rockbadge-container-xs\" v-html=\"bottomRightBadges\"></div>\r\n   </div>\r\n</div>\r\n`\r\n});\r\n"],"names":["defineComponent","name","components","NotificationBox","EntityTagList","setup","_config$topLeftBadges3","_config$topMiddleBadg3","_config$topRightBadge3","_config$bottomLeftBad3","_config$bottomRightBa3","config","useConfigurationValues","containerRef","ref","topLeftBadges","computed","_config$topLeftBadges","_config$topLeftBadges2","map","b","_b$html","html","join","topMiddleBadges","_config$topMiddleBadg","_config$topMiddleBadg2","_b$html2","topRightBadges","_config$topRightBadge","_config$topRightBadge2","_b$html3","bottomLeftBadges","_config$bottomLeftBad","_config$bottomLeftBad2","_b$html4","bottomRightBadges","_config$bottomRightBa","_config$bottomRightBa2","_b$html5","script","_b$javaScript","javaScript","nextTick","scriptNode","document","createElement","type","appendChild","createTextNode","body","value","tooltip","Array","from","querySelectorAll","sanitize","popover","onConfigurationValuesChanged","useReloadBlock","entityKey","personKey","entityTypeGuid","EntityType","Person","lazyMode","ControlLazyMode","Eager","template"],"mappings":"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"}