{"version":3,"file":"mediaFolderDetail.js","sources":["../../src/Cms/MediaFolderDetail/editPanel.partial.ts","../../src/Cms/MediaFolderDetail/viewPanel.partial.ts","../../src/Cms/MediaFolderDetail/types.partial.ts","../../src/Cms/mediaFolderDetail.ts"],"sourcesContent":["// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { computed, defineComponent, PropType, ref, watch } from \"vue\";\r\nimport AttributeValuesContainer from \"@Obsidian/Controls/attributeValuesContainer\";\r\nimport TextBox from \"@Obsidian/Controls/textBox\";\r\nimport Switch from \"@Obsidian/Controls/switch\";\r\nimport DropDownList from \"@Obsidian/Controls/dropDownList\";\r\nimport RadioButtonList from \"@Obsidian/Controls/radioButtonList\";\r\nimport TransitionVerticalCollapse from \"@Obsidian/Controls/transitionVerticalCollapse\";\r\nimport WorkflowTypePicker from \"@Obsidian/Controls/workflowTypePicker\";\r\nimport { watchPropertyChanges } from \"@Obsidian/Utility/block\";\r\nimport { propertyRef, updateRefValue } from \"@Obsidian/Utility/component\";\r\nimport { MediaFolderBag } from \"@Obsidian/ViewModels/Blocks/Cms/MediaFolderDetail/mediaFolderBag\";\r\nimport { MediaFolderDetailOptionsBag } from \"@Obsidian/ViewModels/Blocks/Cms/MediaFolderDetail/mediaFolderDetailOptionsBag\";\r\nimport { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\n\r\nexport default defineComponent({\r\n    name: \"Cms.MediaFolderDetail.EditPanel\",\r\n\r\n    props: {\r\n        modelValue: {\r\n            type: Object as PropType<MediaFolderBag>,\r\n            required: true\r\n        },\r\n\r\n        options: {\r\n            type: Object as PropType<MediaFolderDetailOptionsBag>,\r\n            required: true\r\n        }\r\n    },\r\n\r\n    components: {\r\n        AttributeValuesContainer,\r\n        TextBox,\r\n        Switch,\r\n        TransitionVerticalCollapse,\r\n        DropDownList,\r\n        RadioButtonList,\r\n        WorkflowTypePicker\r\n    },\r\n\r\n    emits: {\r\n        \"update:modelValue\": (_value: MediaFolderBag) => true,\r\n        \"propertyChanged\": (_value: string) => true\r\n    },\r\n\r\n    setup(props, { emit }) {\r\n        // #region Values\r\n\r\n        const attributes = ref(props.modelValue.attributes ?? {});\r\n        const attributeValues = ref(props.modelValue.attributeValues ?? {});\r\n        const description = propertyRef(props.modelValue.description ?? \"\", \"Description\");\r\n        const name = propertyRef(props.modelValue.name ?? \"\", \"Name\");\r\n        const isContentChannelSyncEnabled = propertyRef(props.modelValue.isContentChannelSyncEnabled ?? false, \"IsContentChannelSyncEnabled\");\r\n        const contentChannelValue = propertyRef(props.modelValue.contentChannel?.value ?? \"\", \"ContentChannelId\");\r\n        const contentChannelOptions = ref<ListItemBag[]>(props.options.contentChannels ?? []);\r\n        const contentChannelAttributes = ref<Record<string, ListItemBag[]>>(props.options.contentChannelAttributes ?? {});\r\n        const contentChannelAttributeValue = propertyRef(props.modelValue.contentChannelAttribute?.value ?? \"\", \"ContentChannelAttributeId\");\r\n        const contentChannelItemStatus = propertyRef(props.modelValue.contentChannelItemStatus ?? \"\", \"ContentChannelItemStatus\");\r\n        const workflowType = propertyRef(props.modelValue.workflowType ?? {}, \"WorkflowTypeId\");\r\n\r\n        // The properties that are being edited. This should only contain\r\n        // objects returned by propertyRef().\r\n        const propRefs = [description, name, isContentChannelSyncEnabled, contentChannelValue, contentChannelAttributeValue, contentChannelItemStatus, workflowType];\r\n\r\n        // #endregion\r\n\r\n        // #region Computed Values\r\n        const contentChannelItemAttributes = computed((): ListItemBag[] => contentChannelAttributes.value[contentChannelValue.value]);\r\n        // #endregion\r\n\r\n        // #region Functions\r\n\r\n        // #endregion\r\n\r\n        // #region Event Handlers\r\n\r\n        // #endregion\r\n\r\n        // Watch for parental changes in our model value and update all our values.\r\n        watch(() => props.modelValue, () => {\r\n            updateRefValue(attributes, props.modelValue.attributes ?? {});\r\n            updateRefValue(attributeValues, props.modelValue.attributeValues ?? {});\r\n            updateRefValue(description, props.modelValue.description ?? \"\");\r\n            updateRefValue(name, props.modelValue.name ?? \"\");\r\n            updateRefValue(isContentChannelSyncEnabled, props.modelValue.isContentChannelSyncEnabled ?? false);\r\n            updateRefValue(contentChannelValue, props.modelValue.contentChannel?.value ?? \"\");\r\n            updateRefValue(contentChannelAttributeValue, props.modelValue.contentChannelAttribute?.value ?? \"\");\r\n            updateRefValue(contentChannelItemStatus, props.modelValue.contentChannelItemStatus ?? \"\");\r\n            updateRefValue(workflowType, props.modelValue.workflowType ?? {});\r\n        });\r\n\r\n        // Determines which values we want to track changes on (defined in the\r\n        // array) and then emit a new object defined as newValue.\r\n        watch([attributeValues, ...propRefs], () => {\r\n            const newValue: MediaFolderBag = {\r\n                ...props.modelValue,\r\n                attributeValues: attributeValues.value,\r\n                description: description.value,\r\n                name: name.value,\r\n                isContentChannelSyncEnabled: isContentChannelSyncEnabled.value,\r\n                contentChannel: { value: contentChannelValue.value },\r\n                contentChannelItemStatus: contentChannelItemStatus.value,\r\n                contentChannelAttribute: { value: contentChannelAttributeValue.value },\r\n                workflowType: workflowType.value\r\n            };\r\n\r\n            emit(\"update:modelValue\", newValue);\r\n        });\r\n\r\n        // Watch for any changes to props that represent properties and then\r\n        // automatically emit which property changed.\r\n        watchPropertyChanges(propRefs, emit);\r\n\r\n        return {\r\n            attributes,\r\n            attributeValues,\r\n            description,\r\n            name,\r\n            isContentChannelSyncEnabled,\r\n            channelStatuses: [\r\n                { text: \"Pending Approval\", value: \"Pending Approval\" },\r\n                { text: \"Approved\", value: \"Approved\" },\r\n                { text: \"Denied\", value: \"Denied\" }\r\n            ] as ListItemBag[],\r\n            contentChannelOptions,\r\n            contentChannelItemAttributes,\r\n            contentChannelValue,\r\n            contentChannelAttributeValue,\r\n            contentChannelItemStatus,\r\n            workflowType\r\n        };\r\n    },\r\n\r\n    template: `\r\n<fieldset>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <TextBox v-model=\"name\"\r\n                label=\"Name\"\r\n                rules=\"required\" />\r\n        </div>\r\n    </div>\r\n    <TextBox v-model=\"description\"\r\n        label=\"Description\"\r\n        textMode=\"multiline\" />\r\n    <WorkflowTypePicker v-model=\"workflowType\"\r\n        label=\"WorkFlow\" />\r\n    <div class=\"mt-3\">\r\n        <div class=\"mb-3 galleryContent-reflectionToggle\">\r\n            <Switch v-model=\"isContentChannelSyncEnabled\" text=\"Enable Content Channel Sync\" />\r\n        </div>\r\n        <TransitionVerticalCollapse>\r\n            <div v-if=\"isContentChannelSyncEnabled\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <DropDownList v-model=\"contentChannelValue\"\r\n                            label=\"Content Channel\"\r\n                            :items=\"contentChannelOptions\"\r\n                            rules=\"required\" />\r\n                        <DropDownList v-model=\"contentChannelAttributeValue\"\r\n                                      label=\"Media File Attribute\"                                     \r\n                                      :items=\"contentChannelItemAttributes\"\r\n                                      rules=\"required\" />\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <RadioButtonList v-model=\"contentChannelItemStatus\"\r\n                                         label=\"Content Channel Item Status\"\r\n                                         :items=\"channelStatuses\"\r\n                                         horizontal\r\n                                         rules=\"required\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </TransitionVerticalCollapse>\r\n    </div>\r\n\r\n    <AttributeValuesContainer v-model=\"attributeValues\" :attributes=\"attributes\" isEditMode :numberOfColumns=\"2\" />\r\n</fieldset>\r\n`\r\n});\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { computed, defineComponent, PropType, ref } from \"vue\";\r\nimport AttributeValuesContainer from \"@Obsidian/Controls/attributeValuesContainer\";\r\nimport ValueDetailList from \"@Obsidian/Controls/valueDetailList\";\r\nimport { ValueDetailListItemBuilder } from \"@Obsidian/Core/Controls/valueDetailListItemBuilder\";\r\nimport { ValueDetailListItem } from \"@Obsidian/Types/Controls/valueDetailListItem\";\r\nimport { MediaFolderBag } from \"@Obsidian/ViewModels/Blocks/Cms/MediaFolderDetail/mediaFolderBag\";\r\nimport { MediaFolderDetailOptionsBag } from \"@Obsidian/ViewModels/Blocks/Cms/MediaFolderDetail/mediaFolderDetailOptionsBag\";\r\n\r\nexport default defineComponent({\r\n    name: \"Cms.MediaFolderDetail.ViewPanel\",\r\n\r\n    props: {\r\n        modelValue: {\r\n            type: Object as PropType<MediaFolderBag>,\r\n            required: false\r\n        },\r\n\r\n        options: {\r\n            type: Object as PropType<MediaFolderDetailOptionsBag>,\r\n            required: true\r\n        }\r\n    },\r\n\r\n    components: {\r\n        AttributeValuesContainer,\r\n        ValueDetailList\r\n    },\r\n\r\n    setup(props) {\r\n        // #region Values\r\n\r\n        const attributes = ref(props.modelValue?.attributes ?? {});\r\n        const attributeValues = ref(props.modelValue?.attributeValues ?? {});\r\n\r\n        // #endregion\r\n\r\n        // #region Computed Values\r\n\r\n        /** The values to display full-width at the top of the block. */\r\n        const topValues = computed((): ValueDetailListItem[] => {\r\n            const valueBuilder = new ValueDetailListItemBuilder();\r\n\r\n            if (!props.modelValue) {\r\n                return valueBuilder.build();\r\n            }\r\n\r\n            if (props.modelValue.description) {\r\n                valueBuilder.addTextValue(\"Description\", props.modelValue.description);\r\n            }\r\n\r\n            return valueBuilder.build();\r\n        });\r\n\r\n        /** The values to display at half-width on the left side of the block. */\r\n        const leftSideValues = computed((): ValueDetailListItem[] => {\r\n            const valueBuilder = new ValueDetailListItemBuilder();\r\n\r\n            if (!props.modelValue) {\r\n                return valueBuilder.build();\r\n            }\r\n\r\n            if (props.modelValue.mediaAccount?.value) {\r\n                valueBuilder.addTextValue(\"Account\", props.modelValue.mediaAccount.text ?? \"\");\r\n            }\r\n\r\n            if (props.modelValue.contentChannel?.value) {\r\n                valueBuilder.addTextValue(\"Content Channel\", props.modelValue.contentChannel.text ?? \"\");\r\n            }\r\n\r\n            if (props.modelValue.contentChannelAttribute?.value) {\r\n                valueBuilder.addTextValue(\"Content Channel Attribute\", props.modelValue.contentChannelAttribute.text ?? \"\");\r\n            }\r\n\r\n            if (props.modelValue.contentChannelItemStatus) {\r\n                valueBuilder.addTextValue(\"Content Channel Item Status\", props.modelValue.contentChannelItemStatus ?? \"\");\r\n            }\r\n\r\n            return valueBuilder.build();\r\n        });\r\n\r\n        /** The values to display at half-width on the left side of the block. */\r\n        const rightSideValues = computed((): ValueDetailListItem[] => {\r\n            const valueBuilder = new ValueDetailListItemBuilder();\r\n\r\n            if (!props.modelValue) {\r\n                return valueBuilder.build();\r\n            }\r\n\r\n            return valueBuilder.build();\r\n        });\r\n\r\n        // #endregion\r\n\r\n        // #region Functions\r\n\r\n        // #endregion\r\n\r\n        // #region Event Handlers\r\n\r\n        // #endregion\r\n\r\n        return {\r\n            attributes,\r\n            attributeValues,\r\n            leftSideValues,\r\n            rightSideValues,\r\n            topValues\r\n        };\r\n    },\r\n\r\n    template: `\r\n<fieldset>\r\n\r\n    <ValueDetailList :modelValue=\"topValues\" />\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <ValueDetailList :modelValue=\"leftSideValues\" />\r\n        </div>\r\n\r\n        <div class=\"col-md-6\">\r\n            <ValueDetailList :modelValue=\"rightSideValues\" />\r\n        </div>\r\n    </div>\r\n\r\n    <AttributeValuesContainer :modelValue=\"attributeValues\" :attributes=\"attributes\" :numberOfColumns=\"2\" />\r\n</fieldset>\r\n`\r\n});\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nexport const enum NavigationUrlKey {\r\n    ParentPage = \"ParentPage\"\r\n}\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { computed, defineComponent, ref } from \"vue\";\r\nimport NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\nimport { EntityType } from \"@Obsidian/SystemGuids/entityType\";\r\nimport DetailBlock from \"@Obsidian/Templates/detailBlock\";\r\nimport { DetailPanelMode } from \"@Obsidian/Enums/Controls/detailPanelMode\";\r\nimport { PanelAction } from \"@Obsidian/Types/Controls/panelAction\";\r\nimport EditPanel from \"./MediaFolderDetail/editPanel.partial\";\r\nimport ViewPanel from \"./MediaFolderDetail/viewPanel.partial\";\r\nimport { getSecurityGrant, provideSecurityGrant, refreshDetailAttributes, useConfigurationValues, useInvokeBlockAction } from \"@Obsidian/Utility/block\";\r\nimport { debounce } from \"@Obsidian/Utility/util\";\r\nimport { NavigationUrlKey } from \"./MediaFolderDetail/types.partial\";\r\nimport { DetailBlockBox } from \"@Obsidian/ViewModels/Blocks/detailBlockBox\";\r\nimport { MediaFolderBag } from \"@Obsidian/ViewModels/Blocks/Cms/MediaFolderDetail/mediaFolderBag\";\r\nimport { MediaFolderDetailOptionsBag } from \"@Obsidian/ViewModels/Blocks/Cms/MediaFolderDetail/mediaFolderDetailOptionsBag\";\r\n\r\nexport default defineComponent({\r\n    name: \"Cms.MediaFolderDetail\",\r\n\r\n    components: {\r\n        NotificationBox,\r\n        EditPanel,\r\n        DetailBlock,\r\n        ViewPanel\r\n    },\r\n\r\n    setup() {\r\n        const config = useConfigurationValues<DetailBlockBox<MediaFolderBag, MediaFolderDetailOptionsBag>>();\r\n        const invokeBlockAction = useInvokeBlockAction();\r\n        const securityGrant = getSecurityGrant(config.securityGrantToken);\r\n\r\n        // #region Values\r\n\r\n        const blockError = ref(\"\");\r\n        const errorMessage = ref(\"\");\r\n\r\n        const mediaFolderViewBag = ref(config.entity);\r\n        const mediaFolderEditBag = ref<MediaFolderBag | null>(null);\r\n\r\n        const panelMode = ref<DetailPanelMode>(DetailPanelMode.View);\r\n\r\n        // The properties that are being edited in the UI. This is used to\r\n        // inform the server which incoming values have valid data in them.\r\n        const validProperties = [\r\n            \"attributeValues\",\r\n            \"contentChannel\",\r\n            \"contentChannelAttribute\",\r\n            \"description\",\r\n            \"isContentChannelSyncEnabled\",\r\n            \"isPublic\",\r\n            \"name\",\r\n            \"workflowType\",\r\n            \"contentChannelItemStatus\"\r\n        ];\r\n\r\n        const refreshAttributesDebounce = debounce(() => refreshDetailAttributes(mediaFolderEditBag, validProperties, invokeBlockAction), undefined, true);\r\n\r\n        // #endregion\r\n\r\n        // #region Computed Values\r\n\r\n        /**\r\n         * The entity name to display in the block panel.\r\n         */\r\n        const panelName = computed((): string => {\r\n            return mediaFolderViewBag.value?.name ?? \"\";\r\n        });\r\n\r\n        /**\r\n         * The identifier key value for this entity.\r\n         */\r\n        const entityKey = computed((): string => {\r\n            return mediaFolderViewBag.value?.idKey ?? \"\";\r\n        });\r\n\r\n        /**\r\n         * Additional labels to display in the block panel.\r\n         */\r\n        const blockLabels = computed((): PanelAction[] | null => {\r\n            const labels: PanelAction[] = [];\r\n\r\n            if (panelMode.value !== DetailPanelMode.View) {\r\n                return null;\r\n            }\r\n\r\n            if (mediaFolderViewBag.value?.isContentChannelSyncEnabled) {\r\n                labels.push({\r\n                    iconCssClass: \"fa fa-exchange\",\r\n                    type: \"info\"\r\n                });\r\n            }\r\n\r\n            return labels;\r\n        });\r\n\r\n        const isEditable = computed((): boolean => {\r\n            return config.isEditable === true;\r\n        });\r\n\r\n        const options = computed((): MediaFolderDetailOptionsBag => {\r\n            return config.options ?? {};\r\n        });\r\n\r\n        // #endregion\r\n\r\n        // #region Functions\r\n\r\n        // #endregion\r\n\r\n        // #region Event Handlers\r\n\r\n        /**\r\n         * Event handler for the Cancel button being clicked while in Edit mode.\r\n         * Handles redirect to parent page if creating a new entity.\r\n         *\r\n         * @returns true if the panel should leave edit mode; false if it should stay in edit mode; or a string containing a redirect URL.\r\n         */\r\n        const onCancelEdit = async (): Promise<boolean | string> => {\r\n            if (!mediaFolderEditBag.value?.idKey) {\r\n                if (config.navigationUrls?.[NavigationUrlKey.ParentPage]) {\r\n                    return config.navigationUrls[NavigationUrlKey.ParentPage];\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        };\r\n\r\n        /**\r\n         * Event handler for the Delete button being clicked. Sends the\r\n         * delete request to the server and then redirects to the target page.\r\n         *\r\n         * @returns false if it should stay on the page; or a string containing a redirect URL.\r\n         */\r\n        const onDelete = async (): Promise<false | string> => {\r\n            errorMessage.value = \"\";\r\n\r\n            const result = await invokeBlockAction<string>(\"Delete\", {\r\n                key: mediaFolderViewBag.value?.idKey\r\n            });\r\n\r\n            if (result.isSuccess && result.data) {\r\n                return result.data;\r\n            }\r\n            else {\r\n                errorMessage.value = result.errorMessage ?? \"Unknown error while trying to delete media folder.\";\r\n\r\n                return false;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Event handler for the Edit button being clicked. Request the edit\r\n         * details from the server and then enter edit mode.\r\n         *\r\n         * @returns true if the panel should enter edit mode; otherwise false.\r\n         */\r\n        const onEdit = async (): Promise<boolean> => {\r\n            const result = await invokeBlockAction<DetailBlockBox<MediaFolderBag, MediaFolderDetailOptionsBag>>(\"Edit\", {\r\n                key: mediaFolderViewBag.value?.idKey\r\n            });\r\n\r\n            if (result.isSuccess && result.data && result.data.entity) {\r\n                mediaFolderEditBag.value = result.data.entity;\r\n\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Event handler for when a value has changed that has an associated\r\n         * C# property name. This is used to detect changes to values that\r\n         * might cause qualified attributes to either show up or not show up.\r\n         *\r\n         * @param propertyName The name of the C# property that was changed.\r\n         */\r\n        const onPropertyChanged = (propertyName: string): void => {\r\n            // If we don't have any qualified attribute properties or this property\r\n            // is not one of them then do nothing.\r\n            if (!config.qualifiedAttributeProperties || !config.qualifiedAttributeProperties.some(n => n.toLowerCase() === propertyName.toLowerCase())) {\r\n                return;\r\n            }\r\n\r\n            refreshAttributesDebounce();\r\n        };\r\n\r\n        /**\r\n         * Event handler for the panel's Save event. Send the data to the server\r\n         * to be saved and then leave edit mode or redirect to target page.\r\n         *\r\n         * @returns true if the panel should leave edit mode; false if it should stay in edit mode; or a string containing a redirect URL.\r\n         */\r\n        const onSave = async (): Promise<boolean | string> => {\r\n            errorMessage.value = \"\";\r\n\r\n            const data: DetailBlockBox<MediaFolderBag, MediaFolderDetailOptionsBag> = {\r\n                entity: mediaFolderEditBag.value,\r\n                isEditable: true,\r\n                validProperties: validProperties\r\n            };\r\n\r\n            const result = await invokeBlockAction<MediaFolderBag | string>(\"Save\", {\r\n                box: data\r\n            });\r\n\r\n            if (result.isSuccess && result.data) {\r\n                if (result.statusCode === 200 && typeof result.data === \"object\") {\r\n                    mediaFolderViewBag.value = result.data;\r\n\r\n                    return true;\r\n                }\r\n                else if (result.statusCode === 201 && typeof result.data === \"string\") {\r\n                    return result.data;\r\n                }\r\n            }\r\n\r\n            errorMessage.value = result.errorMessage ?? \"Unknown error while trying to save media folder.\";\r\n\r\n            return false;\r\n        };\r\n\r\n        // #endregion\r\n\r\n        provideSecurityGrant(securityGrant);\r\n\r\n        // Handle any initial error conditions or the need to go into edit mode.\r\n        if (config.errorMessage) {\r\n            blockError.value = config.errorMessage;\r\n        }\r\n        else if (!config.entity) {\r\n            blockError.value = \"The specified media folder could not be viewed.\";\r\n        }\r\n        else if (!config.entity.idKey) {\r\n            mediaFolderEditBag.value = config.entity;\r\n            panelMode.value = DetailPanelMode.Add;\r\n        }\r\n\r\n        return {\r\n            mediaFolderViewBag,\r\n            mediaFolderEditBag,\r\n            blockError,\r\n            blockLabels,\r\n            entityKey,\r\n            entityTypeGuid: EntityType.MediaFolder,\r\n            errorMessage,\r\n            isEditable,\r\n            onCancelEdit,\r\n            onDelete,\r\n            onEdit,\r\n            onPropertyChanged,\r\n            onSave,\r\n            options,\r\n            panelMode,\r\n            panelName\r\n        };\r\n    },\r\n\r\n    template: `\r\n<NotificationBox v-if=\"blockError\" alertType=\"warning\" v-text=\"blockError\" />\r\n\r\n<NotificationBox v-if=\"errorMessage\" alertType=\"danger\" v-text=\"errorMessage\" />\r\n\r\n<DetailBlock v-if=\"!blockError\"\r\n    v-model:mode=\"panelMode\"\r\n    :name=\"panelName\"\r\n    :labels=\"blockLabels\"\r\n    :entityKey=\"entityKey\"\r\n    :entityTypeGuid=\"entityTypeGuid\"\r\n    entityTypeName=\"MediaFolder\"\r\n    :isAuditHidden=\"false\"\r\n    :isBadgesVisible=\"false\"\r\n    :isDeleteVisible=\"isEditable\"\r\n    :isEditVisible=\"isEditable\"\r\n    :isFollowVisible=\"true\"\r\n    :isSecurityHidden=\"false\"\r\n    @cancelEdit=\"onCancelEdit\"\r\n    @delete=\"onDelete\"\r\n    @edit=\"onEdit\"\r\n    @save=\"onSave\">\r\n    <template #view>\r\n        <ViewPanel :modelValue=\"mediaFolderViewBag\" :options=\"options\" />\r\n    </template>\r\n\r\n    <template #edit>\r\n        <EditPanel v-model=\"mediaFolderEditBag\" :options=\"options\" @propertyChanged=\"onPropertyChanged\" />\r\n    </template>\r\n</DetailBlock>\r\n`\r\n});\r\n"],"names":["defineComponent","name","props","modelValue","type","Object","required","options","components","AttributeValuesContainer","TextBox","Switch","TransitionVerticalCollapse","DropDownList","RadioButtonList","WorkflowTypePicker","emits","_value","setup","_ref","_props$modelValue$att","_props$modelValue$att2","_props$modelValue$des","_props$modelValue$nam","_props$modelValue$isC","_props$modelValue$con","_props$modelValue$con2","_props$options$conten","_props$options$conten2","_props$modelValue$con3","_props$modelValue$con4","_props$modelValue$con5","_props$modelValue$wor","emit","attributes","ref","attributeValues","description","propertyRef","isContentChannelSyncEnabled","contentChannelValue","contentChannel","value","contentChannelOptions","contentChannels","contentChannelAttributes","contentChannelAttributeValue","contentChannelAttribute","contentChannelItemStatus","workflowType","propRefs","contentChannelItemAttributes","computed","watch","_props$modelValue$att3","_props$modelValue$att4","_props$modelValue$des2","_props$modelValue$nam2","_props$modelValue$isC2","_props$modelValue$con6","_props$modelValue$con7","_props$modelValue$con8","_props$modelValue$con9","_props$modelValue$con10","_props$modelValue$wor2","updateRefValue","newValue","_objectSpread","watchPropertyChanges","channelStatuses","text","template","ValueDetailList","_props$modelValue","_props$modelValue2","topValues","valueBuilder","ValueDetailListItemBuilder","build","addTextValue","leftSideValues","_props$modelValue$med","mediaAccount","_props$modelValue$med2","rightSideValues","NavigationUrlKey","NotificationBox","EditPanel","DetailBlock","ViewPanel","config","useConfigurationValues","invokeBlockAction","useInvokeBlockAction","securityGrant","getSecurityGrant","securityGrantToken","blockError","errorMessage","mediaFolderViewBag","entity","mediaFolderEditBag","panelMode","DetailPanelMode","View","validProperties","refreshAttributesDebounce","debounce","refreshDetailAttributes","undefined","panelName","_mediaFolderViewBag$v","_mediaFolderViewBag$v2","entityKey","_mediaFolderViewBag$v3","_mediaFolderViewBag$v4","idKey","blockLabels","_mediaFolderViewBag$v5","labels","push","iconCssClass","isEditable","_config$options","onCancelEdit","_asyncToGenerator","_mediaFolderEditBag$v","_config$navigationUrl","navigationUrls","ParentPage","apply","arguments","onDelete","_ref2","_mediaFolderViewBag$v6","result","key","isSuccess","data","_result$errorMessage","onEdit","_ref3","_mediaFolderViewBag$v7","onPropertyChanged","propertyName","qualifiedAttributeProperties","some","n","toLowerCase","onSave","_ref4","_result$errorMessage2","box","statusCode","provideSecurityGrant","Add","entityTypeGuid","EntityType","MediaFolder"],"mappings":"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"}