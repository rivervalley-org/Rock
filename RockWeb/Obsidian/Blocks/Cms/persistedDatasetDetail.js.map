{"version":3,"file":"persistedDatasetDetail.js","sources":["../../src/Cms/PersistedDatasetDetail/editPanel.partial.ts","../../src/Cms/PersistedDatasetDetail/viewPanel.partial.ts","../../src/Cms/PersistedDatasetDetail/types.partial.ts","../../src/Cms/persistedDatasetDetail.ts"],"sourcesContent":["// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { defineComponent, PropType, ref, watch } from \"vue\";\r\nimport CheckBox from \"@Obsidian/Controls/checkBox\";\r\nimport TextBox from \"@Obsidian/Controls/textBox\";\r\nimport CodeEditor from \"@Obsidian/Controls/codeEditor\";\r\nimport EntityTypePicker from \"@Obsidian/Controls/entityTypePicker\";\r\nimport LavaCommandPicker from \"@Obsidian/Controls/lavaCommandPicker\";\r\nimport NumberBox from \"@Obsidian/Controls/numberBox\";\r\nimport DatePicker from \"@Obsidian/Controls/datePicker.obs\";\r\nimport { watchPropertyChanges } from \"@Obsidian/Utility/block\";\r\nimport { propertyRef, updateRefValue } from \"@Obsidian/Utility/component\";\r\nimport { PersistedDatasetBag } from \"@Obsidian/ViewModels/Blocks/Cms/PersistedDatasetDetail/persistedDatasetBag\";\r\nimport { PersistedDatasetDetailOptionsBag } from \"@Obsidian/ViewModels/Blocks/Cms/PersistedDatasetDetail/persistedDatasetDetailOptionsBag\";\r\nimport { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\n\r\nexport default defineComponent({\r\n    name: \"Cms.PersistedDatasetDetail.EditPanel\",\r\n\r\n    props: {\r\n        modelValue: {\r\n            type: Object as PropType<PersistedDatasetBag>,\r\n            required: true\r\n        },\r\n\r\n        options: {\r\n            type: Object as PropType<PersistedDatasetDetailOptionsBag>,\r\n            required: true\r\n        }\r\n    },\r\n\r\n    components: {\r\n        CheckBox,\r\n        TextBox,\r\n        CodeEditor,\r\n        EntityTypePicker,\r\n        LavaCommandPicker,\r\n        NumberBox,\r\n        DatePicker\r\n    },\r\n\r\n    emits: {\r\n        \"update:modelValue\": (_value: PersistedDatasetBag) => true,\r\n        \"propertyChanged\": (_value: string) => true\r\n    },\r\n\r\n    setup(props, { emit }) {\r\n        // #region Values\r\n\r\n        const description = propertyRef(props.modelValue.description ?? \"\", \"Description\");\r\n        const isActive = propertyRef(props.modelValue.isActive ?? false, \"IsActive\");\r\n        const name = propertyRef(props.modelValue.name ?? \"\", \"Name\");\r\n        const accessKey = propertyRef(props.modelValue.accessKey ?? \"\", \"AccessKey\");\r\n        const buildScript = propertyRef(props.modelValue.buildScript ?? \"\", \"BuildScript\");\r\n        const entityType = propertyRef(props.modelValue.entityType ?? {}, \"EntityTypeId\");\r\n        const enabledLavaCommands = ref<ListItemBag[]>(props.modelValue.enabledLavaCommands ?? []);\r\n        const allowManualRefresh = propertyRef(props.modelValue.allowManualRefresh ?? false, \"AllowManualRefresh\");\r\n        const refreshInterval = propertyRef(props.modelValue.refreshIntervalHours, \"RefreshIntervalMinutes\");\r\n        const memoryCacheDuration = propertyRef(props.modelValue.memoryCacheDurationHours, \"MemoryCacheDurationMS\");\r\n        const expiresOn = propertyRef(props.modelValue.expireDateTime ?? \"\", \"ExpireDateTime\");\r\n\r\n        // The properties that are being edited. This should only contain\r\n        // objects returned by propertyRef().\r\n        const propRefs = [description, isActive, name, accessKey, buildScript, entityType, allowManualRefresh, refreshInterval, memoryCacheDuration, expiresOn];\r\n\r\n        // #endregion\r\n\r\n        // #region Computed Values\r\n\r\n        // #endregion\r\n\r\n        // #region Functions\r\n\r\n        // #endregion\r\n\r\n        // #region Event Handlers\r\n\r\n        // #endregion\r\n\r\n        // Watch for parental changes in our model value and update all our values.\r\n        watch(() => props.modelValue, () => {\r\n            updateRefValue(description, props.modelValue.description ?? \"\");\r\n            updateRefValue(isActive, props.modelValue.isActive ?? false);\r\n            updateRefValue(name, props.modelValue.name ?? \"\");\r\n            updateRefValue(accessKey, props.modelValue.accessKey ?? \"\");\r\n            updateRefValue(buildScript, props.modelValue.buildScript ?? \"\");\r\n            updateRefValue(entityType, props.modelValue.entityType ?? {});\r\n            updateRefValue(enabledLavaCommands, props.modelValue.enabledLavaCommands ?? []);\r\n            updateRefValue(allowManualRefresh, props.modelValue.allowManualRefresh ?? false);\r\n            updateRefValue(refreshInterval, props.modelValue.refreshIntervalHours);\r\n            updateRefValue(memoryCacheDuration, props.modelValue.memoryCacheDurationHours);\r\n            updateRefValue(expiresOn, props.modelValue.expireDateTime ?? \"\");\r\n        });\r\n\r\n        // Determines which values we want to track changes on (defined in the\r\n        // array) and then emit a new object defined as newValue.\r\n        watch([...propRefs], () => {\r\n            const newValue: PersistedDatasetBag = {\r\n                ...props.modelValue,\r\n                description: description.value,\r\n                isActive: isActive.value,\r\n                name: name.value,\r\n                accessKey: accessKey.value,\r\n                buildScript: buildScript.value,\r\n                entityType: entityType.value,\r\n                enabledLavaCommands: enabledLavaCommands.value,\r\n                allowManualRefresh: allowManualRefresh.value,\r\n                refreshIntervalHours: refreshInterval.value,\r\n                memoryCacheDurationHours: memoryCacheDuration.value,\r\n                expireDateTime: expiresOn.value\r\n            };\r\n\r\n            emit(\"update:modelValue\", newValue);\r\n        });\r\n\r\n        // Watch for any changes to props that represent properties and then\r\n        // automatically emit which property changed.\r\n        watchPropertyChanges(propRefs, emit);\r\n\r\n        return {\r\n            description,\r\n            isActive,\r\n            name,\r\n            accessKey,\r\n            buildScript,\r\n            entityType,\r\n            enabledLavaCommands,\r\n            allowManualRefresh,\r\n            refreshInterval,\r\n            memoryCacheDuration,\r\n            expiresOn\r\n        };\r\n    },\r\n\r\n    template: `\r\n<fieldset>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <TextBox v-model=\"name\"\r\n                label=\"Name\"\r\n                rules=\"required\" />\r\n\r\n            <TextBox v-model=\"accessKey\"\r\n                label=\"Access Key\"\r\n                rules=\"required\"\r\n                help=\"The key to use to uniquely identify this dataset. This will be the key to use when using the PersistedDataset lava filter.\" />\r\n        </div>\r\n\r\n        <div class=\"col-md-6\">\r\n            <CheckBox v-model=\"isActive\"\r\n                help=\"Set this to false to have the PersistedDataset lava filter return null for this dataset, and to exclude this dataset when rebuilding.\"\r\n                label=\"Active\" />\r\n        </div>\r\n    </div>\r\n\r\n    <TextBox v-model=\"description\"\r\n        label=\"Description\"\r\n        textMode=\"multiline\" />\r\n\r\n    <CodeEditor v-model=\"buildScript\"\r\n        label=\"Build Script\"\r\n        help=\"Lava Template to use for building JSON that will be used as the cached dataset object.\"\r\n        theme=\"rock\"\r\n        mode=\"text\"\r\n        :editorHeight=\"200\" />\r\n\r\n    <LavaCommandPicker v-model=\"enabledLavaCommands\"\r\n        :multiple=\"true\"\r\n        label=\"Enabled Lava Commands\" />\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-2\">\r\n            <NumberBox v-model=\"refreshInterval\"\r\n                label=\"Refresh Interval\"\r\n                help=\"How often the dataset should be updated by the Update Persisted Dataset job.\"\r\n                :decimalCount=\"0\"\r\n                rules=\"required|gte:0\">\r\n                <template #append>\r\n                    <span class=\"input-group-addon\">Hour(s)</span>\r\n                </template>\r\n            </NumberBox>\r\n\r\n            <NumberBox v-model=\"memoryCacheDuration\"\r\n                label=\"Memory Cache Duration\"\r\n                help=\"How long the persisted object should be cached in memory. This is a sliding timeline, so each time the object is read the counter will reset. Leave blank to not cache the object in memory which will mean it will be deserialized into the object on each request (still fast).\"\r\n                :decimalCount=\"0\">\r\n                <template #append>\r\n                    <span class=\"input-group-addon\">Hour(s)</span>\r\n                </template>\r\n            </NumberBox>\r\n\r\n            <DatePicker v-model=\"expiresOn\"\r\n                label=\"Expires on\"\r\n                help=\"Set this to consider the dataset inactive after the specified date. This will mean that its value is no longer updated by the refresh job and that it will return empty when requested through Lava.\"\r\n                :displayCurrentOption=\"false\"\r\n                :isCurrentDateOffset=\"false\" />\r\n        </div>\r\n\r\n        <div class=\"col-md-4 col-md-offset-6\">\r\n            <EntityTypePicker v-model=\"entityType\"\r\n                label=\"Entity Type\"\r\n                help=\"Set this to indicate which EntityType the JSON object should be associated with. This will be used by the PersistedDataset Lava Filter when entity related options such as 'AppendFollowing' are specified.'\"\r\n                :multiple=\"false\"\r\n                :includeGlobalOption=\"false\" />\r\n\r\n            <CheckBox v-model=\"allowManualRefresh\"\r\n                help=\"Determines if the persisted dataset can be manually refreshed in the Persisted Dataset list.\"\r\n                label=\"Allow Manual Refresh\" />\r\n        </div>\r\n    </div>\r\n\r\n</fieldset>\r\n`\r\n});\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { computed, defineComponent, PropType, ref } from \"vue\";\r\nimport ValueDetailList from \"@Obsidian/Controls/valueDetailList\";\r\nimport { ValueDetailListItemBuilder } from \"@Obsidian/Core/Controls/valueDetailListItemBuilder\";\r\nimport { ValueDetailListItem } from \"@Obsidian/Types/Controls/valueDetailListItem\";\r\nimport { PersistedDatasetBag } from \"@Obsidian/ViewModels/Blocks/Cms/PersistedDatasetDetail/persistedDatasetBag\";\r\nimport { PersistedDatasetDetailOptionsBag } from \"@Obsidian/ViewModels/Blocks/Cms/PersistedDatasetDetail/persistedDatasetDetailOptionsBag\";\r\nimport { RockDateTime } from \"@Obsidian/Utility/rockDateTime\";\r\n\r\nexport default defineComponent({\r\n    name: \"Cms.PersistedDatasetDetail.ViewPanel\",\r\n\r\n    props: {\r\n        modelValue: {\r\n            type: Object as PropType<PersistedDatasetBag>,\r\n            required: false\r\n        },\r\n\r\n        options: {\r\n            type: Object as PropType<PersistedDatasetDetailOptionsBag>,\r\n            required: true\r\n        }\r\n    },\r\n\r\n    components: {\r\n        ValueDetailList\r\n    },\r\n\r\n    setup(props) {\r\n        // #region Values\r\n\r\n\r\n        // #endregion\r\n\r\n        // #region Computed Values\r\n\r\n        /** The values to display full-width at the top of the block. */\r\n        const topValues = computed((): ValueDetailListItem[] => {\r\n            const valueBuilder = new ValueDetailListItemBuilder();\r\n\r\n            if (!props.modelValue) {\r\n                return valueBuilder.build();\r\n            }\r\n\r\n            if (props.modelValue.name) {\r\n                valueBuilder.addTextValue(\"Name\", props.modelValue.name);\r\n            }\r\n\r\n            if (props.modelValue.accessKey) {\r\n                valueBuilder.addTextValue(\"Access Key\", props.modelValue.accessKey);\r\n            }\r\n\r\n            if (props.modelValue.description) {\r\n                valueBuilder.addTextValue(\"Description\", props.modelValue.description);\r\n            }\r\n\r\n            if (props.modelValue.enabledLavaCommands) {\r\n                valueBuilder.addTextValue(\"Enabled Lava Commands\", props.modelValue.enabledLavaCommands.map(c => c.text).join(\", \"));\r\n            }\r\n\r\n            if (props.modelValue.refreshIntervalHours) {\r\n                valueBuilder.addTextValue(\"Refresh Interval\", `${props.modelValue.refreshIntervalHours} hour(s)`);\r\n            }\r\n\r\n            if (props.modelValue.memoryCacheDurationHours) {\r\n                valueBuilder.addTextValue(\"Memory Cache\", `${props.modelValue.memoryCacheDurationHours} hour(s)`);\r\n            }\r\n\r\n            if (props.modelValue.expireDateTime) {\r\n                const date = RockDateTime.parseISO(props.modelValue.expireDateTime);\r\n                if (date) {\r\n                    valueBuilder.addTextValue(\"Expires On\", date.toString());\r\n                }\r\n            }\r\n\r\n            if (props.modelValue.entityType?.text) {\r\n                valueBuilder.addTextValue(\"Entity Type\", props.modelValue.entityType.text);\r\n            }\r\n\r\n            return valueBuilder.build();\r\n        });\r\n\r\n        /** The values to display at half-width on the left side of the block. */\r\n        const leftSideValues = computed((): ValueDetailListItem[] => {\r\n            const valueBuilder = new ValueDetailListItemBuilder();\r\n\r\n            if (!props.modelValue) {\r\n                return valueBuilder.build();\r\n            }\r\n\r\n            return valueBuilder.build();\r\n        });\r\n\r\n        /** The values to display at half-width on the left side of the block. */\r\n        const rightSideValues = computed((): ValueDetailListItem[] => {\r\n            const valueBuilder = new ValueDetailListItemBuilder();\r\n\r\n            if (!props.modelValue) {\r\n                return valueBuilder.build();\r\n            }\r\n\r\n            return valueBuilder.build();\r\n        });\r\n\r\n        // #endregion\r\n\r\n        // #region Functions\r\n\r\n        // #endregion\r\n\r\n        // #region Event Handlers\r\n\r\n        // #endregion\r\n\r\n        return {\r\n            leftSideValues,\r\n            rightSideValues,\r\n            topValues\r\n        };\r\n    },\r\n\r\n    template: `\r\n<fieldset>\r\n\r\n    <ValueDetailList :modelValue=\"topValues\" />\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <ValueDetailList :modelValue=\"leftSideValues\" />\r\n        </div>\r\n\r\n        <div class=\"col-md-6\">\r\n            <ValueDetailList :modelValue=\"rightSideValues\" />\r\n        </div>\r\n    </div>\r\n</fieldset>\r\n`\r\n});\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nexport const enum NavigationUrlKey {\r\n    ParentPage = \"ParentPage\"\r\n}\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { computed, defineComponent, ref } from \"vue\";\r\nimport NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\nimport { EntityType } from \"@Obsidian/SystemGuids/entityType\";\r\nimport DetailBlock from \"@Obsidian/Templates/detailBlock\";\r\nimport { DetailPanelMode } from \"@Obsidian/Enums/Controls/detailPanelMode\";\r\nimport { PanelAction } from \"@Obsidian/Types/Controls/panelAction\";\r\nimport EditPanel from \"./PersistedDatasetDetail/editPanel.partial\";\r\nimport ViewPanel from \"./PersistedDatasetDetail/viewPanel.partial\";\r\nimport { getSecurityGrant, provideSecurityGrant, useConfigurationValues, useInvokeBlockAction } from \"@Obsidian/Utility/block\";\r\nimport { NavigationUrlKey } from \"./PersistedDatasetDetail/types.partial\";\r\nimport { DetailBlockBox } from \"@Obsidian/ViewModels/Blocks/detailBlockBox\";\r\nimport { PersistedDatasetBag } from \"@Obsidian/ViewModels/Blocks/Cms/PersistedDatasetDetail/persistedDatasetBag\";\r\nimport { PersistedDatasetDetailOptionsBag } from \"@Obsidian/ViewModels/Blocks/Cms/PersistedDatasetDetail/persistedDatasetDetailOptionsBag\";\r\n\r\nexport default defineComponent({\r\n    name: \"Cms.PersistedDatasetDetail\",\r\n\r\n    components: {\r\n        NotificationBox,\r\n        EditPanel,\r\n        DetailBlock,\r\n        ViewPanel\r\n    },\r\n\r\n    setup() {\r\n        const config = useConfigurationValues<DetailBlockBox<PersistedDatasetBag, PersistedDatasetDetailOptionsBag>>();\r\n        const invokeBlockAction = useInvokeBlockAction();\r\n        const securityGrant = getSecurityGrant(config.securityGrantToken);\r\n\r\n        // #region Values\r\n\r\n        const blockError = ref(\"\");\r\n        const errorMessage = ref(\"\");\r\n\r\n        const persistedDatasetViewBag = ref(config.entity);\r\n        const persistedDatasetEditBag = ref<PersistedDatasetBag | null>(null);\r\n\r\n        const panelMode = ref<DetailPanelMode>(DetailPanelMode.View);\r\n\r\n        // The properties that are being edited in the UI. This is used to\r\n        // inform the server which incoming values have valid data in them.\r\n        const validProperties = [\r\n            \"accessKey\",\r\n            \"allowManualRefresh\",\r\n            \"buildScript\",\r\n            \"description\",\r\n            \"enabledLavaCommands\",\r\n            \"entityType\",\r\n            \"expireDateTime\",\r\n            \"isActive\",\r\n            \"memoryCacheDurationHours\",\r\n            \"name\",\r\n            \"refreshIntervalHours\"\r\n        ];\r\n\r\n        // #endregion\r\n\r\n        // #region Computed Values\r\n\r\n        /**\r\n         * The entity name to display in the block panel.\r\n         */\r\n        const panelName = computed((): string => {\r\n            return persistedDatasetViewBag.value?.name ?? \"\";\r\n        });\r\n\r\n        /**\r\n         * The identifier key value for this entity.\r\n         */\r\n        const entityKey = computed((): string => {\r\n            return persistedDatasetViewBag.value?.idKey ?? \"\";\r\n        });\r\n\r\n        /**\r\n         * Additional labels to display in the block panel.\r\n         */\r\n        const blockLabels = computed((): PanelAction[] | null => {\r\n            const labels: PanelAction[] = [];\r\n\r\n            if (panelMode.value !== DetailPanelMode.View) {\r\n                return null;\r\n            }\r\n\r\n            if (persistedDatasetViewBag.value?.isActive === true) {\r\n                labels.push({\r\n                    iconCssClass: \"fa fa-lightbulb\",\r\n                    title: \"Active\",\r\n                    type: \"success\"\r\n                });\r\n            }\r\n            else {\r\n                labels.push({\r\n                    iconCssClass: \"far fa-lightbulb\",\r\n                    title: \"Inactive\",\r\n                    type: \"danger\"\r\n                });\r\n            }\r\n\r\n            return labels;\r\n        });\r\n\r\n        const isEditable = computed((): boolean => {\r\n            return config.isEditable === true;\r\n        });\r\n\r\n        const options = computed((): PersistedDatasetDetailOptionsBag => {\r\n            return config.options ?? {};\r\n        });\r\n\r\n        // #endregion\r\n\r\n        // #region Functions\r\n\r\n        // #endregion\r\n\r\n        // #region Event Handlers\r\n\r\n        /**\r\n         * Event handler for the Cancel button being clicked while in Edit mode.\r\n         * Handles redirect to parent page if creating a new entity.\r\n         *\r\n         * @returns true if the panel should leave edit mode; false if it should stay in edit mode; or a string containing a redirect URL.\r\n         */\r\n        const onCancelEdit = async (): Promise<boolean | string> => {\r\n            if (!persistedDatasetEditBag.value?.idKey) {\r\n                if (config.navigationUrls?.[NavigationUrlKey.ParentPage]) {\r\n                    return config.navigationUrls[NavigationUrlKey.ParentPage];\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        };\r\n\r\n        /**\r\n         * Event handler for the Delete button being clicked. Sends the\r\n         * delete request to the server and then redirects to the target page.\r\n         *\r\n         * @returns false if it should stay on the page; or a string containing a redirect URL.\r\n         */\r\n        const onDelete = async (): Promise<false | string> => {\r\n            errorMessage.value = \"\";\r\n\r\n            const result = await invokeBlockAction<string>(\"Delete\", {\r\n                key: persistedDatasetViewBag.value?.idKey\r\n            });\r\n\r\n            if (result.isSuccess && result.data) {\r\n                return result.data;\r\n            }\r\n            else {\r\n                errorMessage.value = result.errorMessage ?? \"Unknown error while trying to delete persisted dataset.\";\r\n\r\n                return false;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Event handler for the Edit button being clicked. Request the edit\r\n         * details from the server and then enter edit mode.\r\n         *\r\n         * @returns true if the panel should leave edit mode; false if it should stay in edit mode; or a string containing a redirect URL.\r\n         */\r\n        const onEdit = async (): Promise<boolean> => {\r\n            const result = await invokeBlockAction<DetailBlockBox<PersistedDatasetBag, PersistedDatasetDetailOptionsBag>>(\"Edit\", {\r\n                key: persistedDatasetViewBag.value?.idKey\r\n            });\r\n\r\n            if (result.isSuccess && result.data && result.data.entity) {\r\n                persistedDatasetEditBag.value = result.data.entity;\r\n\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Event handler for the panel's Save event. Send the data to the server\r\n         * to be saved and then leave edit mode or redirect to target page.\r\n         *\r\n         * @returns true if the panel should leave edit mode; false if it should stay in edit mode; or a string containing a redirect URL.\r\n         */\r\n        const onSave = async (): Promise<boolean | string> => {\r\n            errorMessage.value = \"\";\r\n\r\n            const data: DetailBlockBox<PersistedDatasetBag, PersistedDatasetDetailOptionsBag> = {\r\n                entity: persistedDatasetEditBag.value,\r\n                isEditable: true,\r\n                validProperties: validProperties\r\n            };\r\n\r\n            const result = await invokeBlockAction<PersistedDatasetBag | string>(\"Save\", {\r\n                box: data\r\n            });\r\n\r\n            if (result.isSuccess && result.data) {\r\n                if (result.statusCode === 200 && typeof result.data === \"object\") {\r\n                    persistedDatasetViewBag.value = result.data;\r\n\r\n                    return true;\r\n                }\r\n                else if (result.statusCode === 201 && typeof result.data === \"string\") {\r\n                    return result.data;\r\n                }\r\n            }\r\n\r\n            errorMessage.value = result.errorMessage ?? \"Unknown error while trying to save persisted dataset.\";\r\n\r\n            return false;\r\n        };\r\n\r\n        /**\r\n         * Event handler for when a value has changed that has an associated\r\n         * C# property name. This is used to detect changes to values that\r\n         * might cause qualified attributes to either show up or not show up.\r\n         *\r\n         * @param propertyName The name of the C# property that was changed.\r\n         */\r\n        const onPropertyChanged = (propertyName: string): void => {\r\n            // If we don't have any qualified attribute properties or this property\r\n            // is not one of them then do nothing.\r\n            if (!config.qualifiedAttributeProperties || !config.qualifiedAttributeProperties.some(n => n.toLowerCase() === propertyName.toLowerCase())) {\r\n                return;\r\n            }\r\n        };\r\n\r\n        // #endregion\r\n\r\n        provideSecurityGrant(securityGrant);\r\n\r\n        // Handle any initial error conditions or the need to go into edit mode.\r\n        if (config.errorMessage) {\r\n            blockError.value = config.errorMessage;\r\n        }\r\n        else if (!config.entity) {\r\n            blockError.value = \"The specified persisted dataset could not be viewed.\";\r\n        }\r\n        else if (!config.entity.idKey) {\r\n            persistedDatasetEditBag.value = config.entity;\r\n            panelMode.value = DetailPanelMode.Add;\r\n        }\r\n\r\n        return {\r\n            persistedDatasetViewBag,\r\n            persistedDatasetEditBag,\r\n            blockError,\r\n            blockLabels,\r\n            entityKey,\r\n            entityTypeGuid: EntityType.PersistedDataset,\r\n            errorMessage,\r\n            isEditable,\r\n            onCancelEdit,\r\n            onDelete,\r\n            onEdit,\r\n            onPropertyChanged,\r\n            onSave,\r\n            options,\r\n            panelMode,\r\n            panelName\r\n        };\r\n    },\r\n\r\n    template: `\r\n<NotificationBox v-if=\"blockError\" alertType=\"warning\" v-text=\"blockError\" />\r\n\r\n<NotificationBox v-if=\"errorMessage\" alertType=\"danger\" v-text=\"errorMessage\" />\r\n\r\n<DetailBlock v-if=\"!blockError\"\r\n    v-model:mode=\"panelMode\"\r\n    :name=\"panelName\"\r\n    :labels=\"blockLabels\"\r\n    :entityKey=\"entityKey\"\r\n    :entityTypeGuid=\"entityTypeGuid\"\r\n    entityTypeName=\"PersistedDataset\"\r\n    :isAuditHidden=\"false\"\r\n    :isBadgesVisible=\"true\"\r\n    :isDeleteVisible=\"isEditable\"\r\n    :isEditVisible=\"isEditable\"\r\n    :isFollowVisible=\"false\"\r\n    :isSecurityHidden=\"false\"\r\n    @cancelEdit=\"onCancelEdit\"\r\n    @delete=\"onDelete\"\r\n    @edit=\"onEdit\"\r\n    @save=\"onSave\">\r\n    <template #view>\r\n        <ViewPanel :modelValue=\"persistedDatasetViewBag\" :options=\"options\" />\r\n    </template>\r\n\r\n    <template #edit>\r\n        <EditPanel v-model=\"persistedDatasetEditBag\" :options=\"options\" @propertyChanged=\"onPropertyChanged\" />\r\n    </template>\r\n</DetailBlock>\r\n`\r\n});\r\n"],"names":["defineComponent","name","props","modelValue","type","Object","required","options","components","CheckBox","TextBox","CodeEditor","EntityTypePicker","LavaCommandPicker","NumberBox","DatePicker","emits","_value","setup","_ref","_props$modelValue$des","_props$modelValue$isA","_props$modelValue$nam","_props$modelValue$acc","_props$modelValue$bui","_props$modelValue$ent","_props$modelValue$ena","_props$modelValue$all","_props$modelValue$exp","emit","description","propertyRef","isActive","accessKey","buildScript","entityType","enabledLavaCommands","ref","allowManualRefresh","refreshInterval","refreshIntervalHours","memoryCacheDuration","memoryCacheDurationHours","expiresOn","expireDateTime","propRefs","watch","_props$modelValue$des2","_props$modelValue$isA2","_props$modelValue$nam2","_props$modelValue$acc2","_props$modelValue$bui2","_props$modelValue$ent2","_props$modelValue$ena2","_props$modelValue$all2","_props$modelValue$exp2","updateRefValue","newValue","_objectSpread","value","watchPropertyChanges","template","ValueDetailList","topValues","computed","valueBuilder","ValueDetailListItemBuilder","build","addTextValue","map","c","text","join","concat","date","RockDateTime","parseISO","toString","leftSideValues","rightSideValues","NavigationUrlKey","NotificationBox","EditPanel","DetailBlock","ViewPanel","config","useConfigurationValues","invokeBlockAction","useInvokeBlockAction","securityGrant","getSecurityGrant","securityGrantToken","blockError","errorMessage","persistedDatasetViewBag","entity","persistedDatasetEditBag","panelMode","DetailPanelMode","View","validProperties","panelName","_persistedDatasetView","_persistedDatasetView2","entityKey","_persistedDatasetView3","_persistedDatasetView4","idKey","blockLabels","_persistedDatasetView5","labels","push","iconCssClass","title","isEditable","_config$options","onCancelEdit","_asyncToGenerator","_persistedDatasetEdit","_config$navigationUrl","navigationUrls","ParentPage","apply","arguments","onDelete","_ref2","_persistedDatasetView6","result","key","isSuccess","data","_result$errorMessage","onEdit","_ref3","_persistedDatasetView7","onSave","_ref4","_result$errorMessage2","box","statusCode","onPropertyChanged","propertyName","qualifiedAttributeProperties","some","n","toLowerCase","provideSecurityGrant","Add","entityTypeGuid","EntityType","PersistedDataset"],"mappings":"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"}