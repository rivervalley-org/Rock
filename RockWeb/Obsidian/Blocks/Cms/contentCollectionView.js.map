{"version":3,"file":"contentCollectionView.js","sources":["../../src/Cms/ContentCollectionView/filtersContainer.partial.ts","../../src/Cms/ContentCollectionView/types.partial.ts","../../src/Cms/contentCollectionView.ts"],"sourcesContent":["// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { computed, defineComponent, PropType, ref, watch } from \"vue\";\r\nimport CheckBoxList from \"@Obsidian/Controls/checkBoxList\";\r\nimport DropDownList from \"@Obsidian/Controls/dropDownList\";\r\nimport RadioButtonList from \"@Obsidian/Controls/radioButtonList\";\r\nimport SectionContainer from \"@Obsidian/Controls/sectionContainer\";\r\nimport { SearchFilterBag } from \"@Obsidian/ViewModels/Blocks/Cms/ContentCollectionView/searchFilterBag\";\r\nimport { ContentCollectionFilterControl } from \"@Obsidian/Enums/Cms/contentCollectionFilterControl\";\r\nimport { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\nimport { updateRefValue } from \"@Obsidian/Utility/component\";\r\n\r\n\r\nexport const Filter = defineComponent({\r\n    name: \"Cms.ContentCollectionView.Filter\",\r\n\r\n    components: {\r\n        CheckBoxList,\r\n        DropDownList,\r\n        RadioButtonList,\r\n    },\r\n\r\n    props: {\r\n        modelValue: {\r\n            type: Object as PropType<string>,\r\n            required: true\r\n        },\r\n\r\n        filter: {\r\n            type: Object as PropType<SearchFilterBag>,\r\n            required: true\r\n        }\r\n    },\r\n\r\n    emits: {\r\n        \"update:modelValue\": (_value: string) => true\r\n    },\r\n\r\n    setup(props, { emit }) {\r\n        const singleValue = ref(props.modelValue);\r\n        const multipleValue = ref(props.modelValue.split(\",\"));\r\n\r\n        const filterClass = computed((): string => {\r\n            const filterSlugName = props.filter.label?.replace(/[^a-zA-Z0-9 ]/g, \"\").replace(/ /g, \"-\").toLowerCase() ?? \"\";\r\n\r\n            return `filter filter-${filterSlugName}`;\r\n        });\r\n\r\n        const headerMarkup = computed((): string => {\r\n            return props.filter.headerMarkup ?? \"\";\r\n        });\r\n\r\n        const items = computed((): ListItemBag[] => {\r\n            // If this is goind to render as radio items then we need an All option.\r\n            if (isPills.value && !isMultiSelect.value) {\r\n                const radioItems = [...(props.filter.items ?? [])];\r\n\r\n                radioItems.splice(0, 0, {\r\n                    value: \"\",\r\n                    text: \"All\"\r\n                });\r\n\r\n                return radioItems;\r\n            }\r\n\r\n            return props.filter.items ?? [];\r\n        });\r\n\r\n        const isMultiSelect = computed((): boolean => {\r\n            return props.filter.isMultipleSelection;\r\n        });\r\n\r\n        const isDropDownList = computed((): boolean => {\r\n            return props.filter.control === ContentCollectionFilterControl.Dropdown;\r\n        });\r\n\r\n        const isPills = computed((): boolean => {\r\n            return props.filter.control === ContentCollectionFilterControl.Pills;\r\n        });\r\n\r\n        const isBoolean = computed((): boolean => {\r\n            return props.filter.control === ContentCollectionFilterControl.Boolean;\r\n        });\r\n\r\n        const label = computed((): string => {\r\n            return props.filter.label ?? \"\";\r\n        });\r\n\r\n        watch(() => props.modelValue, () => {\r\n            singleValue.value = props.modelValue;\r\n            multipleValue.value = props.modelValue.split(\",\");\r\n        });\r\n\r\n        watch(singleValue, () => {\r\n            if (props.modelValue !== singleValue.value) {\r\n                emit(\"update:modelValue\", singleValue.value);\r\n            }\r\n        });\r\n\r\n        watch(multipleValue, () => {\r\n            if (props.modelValue !== multipleValue.value.join(\",\")) {\r\n                emit(\"update:modelValue\", multipleValue.value.join(\",\"));\r\n            }\r\n        });\r\n\r\n        return {\r\n            filterClass,\r\n            headerMarkup,\r\n            isBoolean,\r\n            isDropDownList,\r\n            isPills,\r\n            isMultiSelect,\r\n            items,\r\n            label,\r\n            multipleValue,\r\n            singleValue\r\n        };\r\n    },\r\n\r\n    template: `\r\n<div :class=\"filterClass\">\r\n    <div v-if=\"headerMarkup\" class=\"filter-header\" v-html=\"headerMarkup\"></div>\r\n\r\n    <CheckBoxList v-if=\"isPills && isMultiSelect\"\r\n        :label=\"label\"\r\n        v-model=\"multipleValue\"\r\n        :items=\"items\"\r\n        horizontal />\r\n\r\n    <RadioButtonList v-if=\"isPills && !isMultiSelect\"\r\n        :label=\"label\"\r\n        v-model=\"singleValue\"\r\n        :items=\"items\"\r\n        horizontal />\r\n\r\n    <DropDownList v-if=\"isDropDownList && isMultiSelect\"\r\n        :label=\"label\"\r\n        v-model=\"multipleValue\"\r\n        :items=\"items\"\r\n        multiple />\r\n\r\n    <DropDownList v-if=\"isDropDownList && !isMultiSelect\"\r\n        :label=\"label\"\r\n        v-model=\"singleValue\"\r\n        :items=\"items\" />\r\n</div>\r\n    `\r\n});\r\n\r\nexport default defineComponent({\r\n    name: \"CMS.ContentCollectionView.FilterContainer\",\r\n\r\n    components: {\r\n        Filter,\r\n        SectionContainer\r\n    },\r\n\r\n    props: {\r\n        filters: {\r\n            type: Array as PropType<SearchFilterBag[]>,\r\n            required: true\r\n        },\r\n\r\n        filterValues: {\r\n            type: Object as PropType<Record<string, string>>,\r\n            required: true\r\n        }\r\n    },\r\n\r\n    emits: {\r\n        \"update:filterValues\": (_value: Record<string, string>) => true\r\n    },\r\n\r\n    setup(props, { emit }) {\r\n        const filterValues = ref<Record<string, string>>(props.filterValues);\r\n\r\n        const getFilterValue = (filter: SearchFilterBag): string => {\r\n            return filterValues.value[(filter.label ?? \"\").toLowerCase()] ?? \"\";\r\n        };\r\n\r\n        const setFilterValue = (filter: SearchFilterBag, value: string): void => {\r\n            const newValues = {...filterValues.value};\r\n            newValues[(filter.label ?? \"\").toLowerCase()] = value;\r\n            filterValues.value = newValues;\r\n\r\n            emit(\"update:filterValues\", newValues);\r\n        };\r\n\r\n        watch(() => props.filterValues, () => {\r\n            updateRefValue(filterValues, props.filterValues);\r\n        });\r\n\r\n        return {\r\n            getFilterValue,\r\n            setFilterValue\r\n        };\r\n    },\r\n\r\n    template: `\r\n<div class=\"collectionsearch-filters\">\r\n    <h4 class=\"title\">Filter By</h4>\r\n\r\n    <Filter v-for=\"item in filters\"\r\n        :key=\"item.sourceKey\"\r\n        :modelValue=\"getFilterValue(item)\"\r\n        @update:modelValue=\"setFilterValue(item, $event)\"\r\n        :filter=\"item\" />\r\n</div>\r\n`\r\n});\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nexport const enum SortOrdersKey {\r\n    Relevance = \"relevance\",\r\n    Newest = \"newest\",\r\n    Oldest = \"oldest\",\r\n    Trending = \"trending\",\r\n    Alphabetical = \"alphabetical\"\r\n}\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { defineComponent, onMounted, ref, shallowRef, watch } from \"vue\";\r\nimport NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\nimport DropDownList from \"@Obsidian/Controls/dropDownList\";\r\nimport TextBox from \"@Obsidian/Controls/textBox\";\r\nimport { dispatchBlockEvent, getSecurityGrant, provideSecurityGrant, useBlockGuid, useConfigurationValues, useInvokeBlockAction } from \"@Obsidian/Utility/block\";\r\nimport { debounce } from \"@Obsidian/Utility/util\";\r\nimport { SearchOrder } from \"@Obsidian/Enums/Blocks/Cms/ContentCollectionView/searchOrder\";\r\nimport { ContentCollectionInitializationBox } from \"@Obsidian/ViewModels/Blocks/Cms/ContentCollectionView/contentCollectionInitializationBox\";\r\nimport { SearchResultBag } from \"@Obsidian/ViewModels/Blocks/Cms/ContentCollectionView/searchResultBag\";\r\nimport { SearchQueryBag } from \"@Obsidian/ViewModels/Blocks/Cms/ContentCollectionView/searchQueryBag\";\r\nimport FiltersContainer from \"./ContentCollectionView/filtersContainer.partial\";\r\nimport { Guid } from \"@Obsidian/Types\";\r\nimport { toNumber } from \"@Obsidian/Utility/numberUtils\";\r\nimport { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\nimport { emptyGuid } from \"@Obsidian/Utility/guid\";\r\nimport { SortOrdersKey } from \"./ContentCollectionView/types.partial\";\r\n\r\n\r\n/**\r\n * Parses the window query string into the initial filter values that will be used.\r\n *\r\n * @param filterNames The names of the filters that are known by this block instance.\r\n *\r\n * @returns An object that contains the query string values that match a filter.\r\n */\r\nfunction getQueryStringFilterValues(filterNames: string[]): Record<string, string> {\r\n    const params: Record<string, string> = {};\r\n\r\n    for (const entry of new URLSearchParams(window.location.search).entries()) {\r\n        if (filterNames.some(n => n.toLowerCase() === entry[0].toLowerCase()) && entry[1] !== \"\") {\r\n            params[entry[0].toLowerCase()] = entry[1];\r\n        }\r\n    }\r\n\r\n    return params;\r\n}\r\n\r\n/**\r\n * Updates the window query string to match the search parameters.\r\n *\r\n * @param query The full-text query that was performed.\r\n * @param sortOrder The current sorting order applied to the results.\r\n * @param filterValues The values of the various filters.\r\n * @param filterNames The names of all known filters, this is used to include any additional query string parameters that we don't understand.\r\n */\r\nfunction updateUrl(query: string, sortOrder: string, filterValues: Record<string, string>, filterNames: string[]): void {\r\n    const qs: string[][] = [];\r\n\r\n    // Add in the query text.\r\n    if (query) {\r\n        qs.push([\"q\", query]);\r\n    }\r\n\r\n    // Add in the sort order if it isn't default.\r\n    if (sortOrder != SearchOrder.Relevance.toString()) {\r\n        qs.push([\"s\", sortOrder.toString()]);\r\n    }\r\n\r\n    // Add in all the filter values if they are not blank.\r\n    for (const key in filterValues) {\r\n        if (filterValues[key]) {\r\n            qs.push([key, filterValues[key]]);\r\n        }\r\n    }\r\n\r\n    // Add in any query string parameters not related to us.\r\n    for (const entry of new URLSearchParams(window.location.search).entries()) {\r\n        const entryName = entry[0].toLowerCase();\r\n\r\n        // Skip our special query string parameters.\r\n        if (entryName === \"q\" || entryName === \"s\") {\r\n            continue;\r\n        }\r\n\r\n        if (!filterNames.some(n => n.toLowerCase() === entryName)) {\r\n            qs.push([entry[0].toLowerCase(), entry[1]]);\r\n        }\r\n    }\r\n\r\n    // Update the URL in the window.\r\n    if (qs.length > 0) {\r\n        const querystring = qs.map(q => `${q[0]}=${q[1]}`).join(\"&\");\r\n        window.history.replaceState(null, \"\", `${window.location.pathname}?${querystring}`);\r\n    }\r\n    else {\r\n        window.history.replaceState(null, \"\", window.location.pathname);\r\n    }\r\n}\r\n\r\n/**\r\n * Updates the results element with additional data from the search result bag.\r\n *\r\n * @param resultsContainerElement The element that will contain all results.\r\n * @param results The results that were returned by the server.\r\n * @param seeMore The callback to use when the js-more element is clicked.\r\n */\r\nfunction updateResults(resultsContainerElement: HTMLElement, results: SearchResultBag, seeMore: ((sourceGuid: Guid) => void)): void {\r\n    for (const resultSource of results.resultSources ?? []) {\r\n        const sourceGuid = resultSource.sourceGuid;\r\n\r\n        if (!sourceGuid) {\r\n            continue;\r\n        }\r\n\r\n        let sourceContainerElement = resultsContainerElement.querySelector<HTMLDivElement>(`.result-source-${sourceGuid.toLowerCase()}`);\r\n\r\n        if (!sourceContainerElement) {\r\n            sourceContainerElement = document.createElement(\"div\");\r\n            sourceContainerElement.classList.add(\"results\", `result-source-${sourceGuid.toLowerCase()}`);\r\n            sourceContainerElement.innerHTML = resultSource.template ?? \"\";\r\n\r\n            const newSeeMoreElement = sourceContainerElement.querySelector(\".js-more\");\r\n            if (newSeeMoreElement) {\r\n                newSeeMoreElement.addEventListener(\"click\", (e) => {\r\n                    e.preventDefault();\r\n                    seeMore(sourceGuid);\r\n                });\r\n            }\r\n\r\n            resultsContainerElement.append(sourceContainerElement);\r\n        }\r\n\r\n        const resultItemsElement = sourceContainerElement.querySelector(\".result-items\");\r\n\r\n        if (!resultItemsElement) {\r\n            continue;\r\n        }\r\n\r\n        // Add each item from the results to the result container.\r\n        for (const item of resultSource.results ?? []) {\r\n            const itemElement = document.createElement(\"div\");\r\n            itemElement.innerHTML = item;\r\n\r\n            for (const innerElement of Array.from(itemElement.children)) {\r\n                innerElement.remove();\r\n                resultItemsElement.append(innerElement);\r\n            }\r\n\r\n            const resultItemCount = toNumber(sourceContainerElement.dataset[\"resultItemCount\"]) + 1;\r\n            sourceContainerElement.dataset[\"resultItemCount\"] = resultItemCount.toString();\r\n        }\r\n\r\n        // If there are no more results to load then hide the see more element.\r\n        const seeMoreElement = sourceContainerElement.querySelector(\".js-more\");\r\n        if (seeMoreElement && !resultSource.hasMore) {\r\n            seeMoreElement.classList.add(\"hidden\");\r\n        }\r\n\r\n        // If there are no results then add a \"no-results\" class to the source.\r\n        if (!toNumber(sourceContainerElement.dataset[\"resultItemCount\"])) {\r\n            sourceContainerElement.classList.add(\"no-results\");\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Gets the sort order items that can be selected by the person.\r\n *\r\n * @param allowed The allowed item names.\r\n *\r\n * @returns A list of items that can be selected.\r\n */\r\nfunction getSortOrderItems(allowed: string[], trendingTerm: string): ListItemBag[] {\r\n    /** The sort order items that can be selected by the person. */\r\n    const sortOrderItems: ListItemBag[] = [];\r\n\r\n    if (allowed.includes(SortOrdersKey.Relevance)) {\r\n        sortOrderItems.push({\r\n            value: SearchOrder.Relevance.toString(),\r\n            text: \"Relevance\"\r\n        });\r\n    }\r\n\r\n    if (allowed.includes(SortOrdersKey.Newest)) {\r\n        sortOrderItems.push({\r\n            value: SearchOrder.Newest.toString(),\r\n            text: \"Newest\"\r\n        });\r\n    }\r\n\r\n    if (allowed.includes(SortOrdersKey.Oldest)) {\r\n        sortOrderItems.push({\r\n            value: SearchOrder.Oldest.toString(),\r\n            text: \"Oldest\"\r\n        });\r\n    }\r\n\r\n    if (allowed.includes(SortOrdersKey.Trending)) {\r\n        sortOrderItems.push({\r\n            value: SearchOrder.Trending.toString(),\r\n            text: trendingTerm\r\n        });\r\n    }\r\n\r\n    if (allowed.includes(SortOrdersKey.Alphabetical)) {\r\n        sortOrderItems.push({\r\n            value: SearchOrder.Alphabetical.toString(),\r\n            text: \"Alphabetical\"\r\n        });\r\n    }\r\n\r\n    return sortOrderItems;\r\n}\r\n\r\nexport default defineComponent({\r\n    name: \"Cms.ContentCollectionView\",\r\n\r\n    components: {\r\n        NotificationBox,\r\n        DropDownList,\r\n        FiltersContainer,\r\n        TextBox\r\n    },\r\n\r\n    setup() {\r\n        const config = useConfigurationValues<ContentCollectionInitializationBox>();\r\n        const invokeBlockAction = useInvokeBlockAction();\r\n        const blockGuid = useBlockGuid() ?? emptyGuid;\r\n        const securityGrant = getSecurityGrant(config.securityGrantToken);\r\n\r\n        // #region Values\r\n\r\n        const urlSearchParams = new URLSearchParams(window.location.search);\r\n\r\n        const blockError = ref(config.errorMessage);\r\n        const filters = config.filters ?? [];\r\n        const searchContainerElement = shallowRef<HTMLElement | null>(null);\r\n        const searchResultContainerElement = shallowRef<HTMLElement | null>(null);\r\n        const query = ref(urlSearchParams.get(\"q\") || urlSearchParams.get(\"Q\") || \"\");\r\n        const filterValues = ref<Record<string, string>>(getQueryStringFilterValues(filters.map(f => f.label ?? \"\")));\r\n        const sortOrder = ref(urlSearchParams.get(\"s\") || urlSearchParams.get(\"S\") || SearchOrder.Relevance.toString());\r\n        const sortOrderItems = getSortOrderItems(config.enabledSortOrders ?? [], config.trendingTerm ?? \"Trending\");\r\n        const totalResultsCount = ref(config.initialResults?.totalResultCount ?? 0);\r\n\r\n        // #endregion\r\n\r\n        // #region Computed Values\r\n\r\n        // #endregion\r\n\r\n        // #region Functions\r\n\r\n        /**\r\n         * Call the block action to perform the search and then update\r\n         * the DOM with the results of the search.\r\n         *\r\n         * @param sourceGuid The unique identifier of the source we are loading more results for.\r\n         * @param offset The offset into the source's results to load from.\r\n         */\r\n        const performSearch = async (sourceGuid?: Guid, offset?: number): Promise<void> => {\r\n            // Update the URL to match this search.\r\n            updateUrl(query.value, sortOrder.value, filterValues.value, filters.map(f => f.label ?? \"\"));\r\n\r\n            const queryBag: SearchQueryBag = {\r\n                text: query.value,\r\n                filters: filterValues.value,\r\n                sourceGuid: sourceGuid,\r\n                offset: offset,\r\n                order: toNumber(sortOrder.value) as SearchOrder\r\n            };\r\n\r\n            const data = {\r\n                query: queryBag\r\n            };\r\n\r\n            const result = await invokeBlockAction<SearchResultBag>(\"Search\", data);\r\n\r\n            if (result.isSuccess && result.data != null) {\r\n                totalResultsCount.value = result.data.totalResultCount;\r\n                processResults(result.data, !offset, sourceGuid);\r\n            }\r\n            else {\r\n                console.error(result.errorMessage || \"Unable to complete the search request.\");\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Process the results received from the search request by updating\r\n         * the DOM with the additional results.\r\n         *\r\n         * @param data The data that contains the search results.\r\n         * @param initialResults True if this call is for initial results being loaded.\r\n         * @param sourceGuid The unique identifier of the source we are loading additional results for.\r\n         */\r\n        const processResults = (data: SearchResultBag, initialResults: boolean, sourceGuid?: Guid): void => {\r\n            if (!searchResultContainerElement.value) {\r\n                return;\r\n            }\r\n\r\n            if (initialResults) {\r\n                searchResultContainerElement.value.innerHTML = \"\";\r\n            }\r\n\r\n            updateResults(searchResultContainerElement.value, data, onLoadMore);\r\n\r\n            if (initialResults) {\r\n                dispatchBlockEvent(\"content-collection-view-full-search\", blockGuid);\r\n            }\r\n            else if (sourceGuid) {\r\n                dispatchBlockEvent(\"content-collection-view-results-updated\", blockGuid, {\r\n                    sourceGuid\r\n                });\r\n            }\r\n        };\r\n\r\n        // #endregion\r\n\r\n        // #region Event Handlers\r\n\r\n        /**\r\n         * Called when a \"see more\" button has been clicked and the person\r\n         * wants to load more results for the source.\r\n         *\r\n         * @param sourceGuid\r\n         */\r\n        const onLoadMore = async (sourceGuid: Guid): Promise<void> => {\r\n            if (!searchResultContainerElement.value) {\r\n                return;\r\n            }\r\n\r\n            const sourceContainerElement = searchResultContainerElement.value.querySelector<HTMLDivElement>(`.result-source-${sourceGuid.toLowerCase()}`);\r\n            if (!sourceContainerElement) {\r\n                return;\r\n            }\r\n\r\n            const itemCount = toNumber(sourceContainerElement.dataset[\"resultItemCount\"]);\r\n            await performSearch(sourceGuid, itemCount);\r\n        };\r\n\r\n        /**\r\n         * Event handler for when the individual clicks the clear button in\r\n         * the query text box.\r\n         */\r\n        function onClearClick(): void {\r\n            query.value = \"\";\r\n\r\n            const inputElement = searchContainerElement.value?.querySelector(\"input\");\r\n\r\n            if (inputElement) {\r\n                inputElement.focus();\r\n            }\r\n        }\r\n\r\n        // #endregion\r\n\r\n        provideSecurityGrant(securityGrant);\r\n\r\n        const debounceSearch = debounce(performSearch, 450);\r\n\r\n        // Any time the query text changes, perform a new search on a 450ms\r\n        // delayed debounce timer.\r\n        watch(query, () => {\r\n            debounceSearch();\r\n        });\r\n\r\n        // If any of the other filter values change, perform a new search immediately.\r\n        watch([filterValues, sortOrder], () => {\r\n            performSearch();\r\n        });\r\n\r\n        onMounted(() => {\r\n            const inputElement = searchContainerElement.value?.querySelector(\"input\");\r\n\r\n            if (inputElement) {\r\n                inputElement.focus();\r\n            }\r\n\r\n            if (searchResultContainerElement.value) {\r\n                if (config.initialResults) {\r\n                    processResults(config.initialResults, true);\r\n                }\r\n                else if (config.preSearchContent) {\r\n                    searchResultContainerElement.value.innerHTML = config.preSearchContent;\r\n                }\r\n            }\r\n        });\r\n\r\n        return {\r\n            blockError,\r\n            filters,\r\n            filterValues,\r\n            query,\r\n            onClearClick,\r\n            searchContainerElement,\r\n            searchResultContainerElement,\r\n            showSort: config.showSort,\r\n            showFiltersPanel: config.showFiltersPanel,\r\n            showFullTextSearch: config.showFullTextSearch,\r\n            sortOrder,\r\n            sortOrderItems,\r\n            totalResultsCount\r\n        };\r\n    },\r\n\r\n    template: `\r\n<NotificationBox v-if=\"blockError\" alertType=\"warning\" v-text=\"blockError\" />\r\n\r\n<div v-if=\"!blockError\" class=\"collectionsearch\">\r\n    <div v-if=\"showFullTextSearch\" class=\"collectionsearch-fulltext\">\r\n        <div ref=\"searchContainerElement\" class=\"content\">\r\n            <div class=\"search-fulltext\">\r\n                <TextBox v-model=\"query\" placeholder=\"What can we help you find?\">\r\n                    <template #inputGroupPrepend>\r\n                        <div class=\"input-group-addon\">\r\n                            <i class=\"fa fa-search\"></i>\r\n                        </div>\r\n                    </template>\r\n                    <template #inputGroupAppend>\r\n                        <div v-if=\"query\" class=\"input-group-addon\">\r\n                            <i class=\"fa fa-times clickable\" @click=\"onClearClick\"></i>\r\n                        </div>\r\n                    </template>\r\n                </TextBox>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <FiltersContainer v-if=\"showFiltersPanel\" :filters=\"filters\" v-model:filterValues=\"filterValues\" />\r\n\r\n    <div class=\"collectionsearch-results\">\r\n        <div class=\"results-header\">\r\n            <div class=\"results-count\">\r\n                Results <span class=\"results-count-number\">{{ totalResultsCount }}</span>\r\n            </div>\r\n\r\n            <div v-if=\"showSort\" class=\"results-order\">\r\n                <DropDownList v-model=\"sortOrder\" :items=\"sortOrderItems\" :showBlankItem=\"false\" />\r\n            </div>\r\n        </div>\r\n\r\n        <div ref=\"searchResultContainerElement\">\r\n        </div>\r\n    </div>\r\n</div>\r\n`\r\n});\r\n"],"names":["Filter","defineComponent","name","components","CheckBoxList","DropDownList","RadioButtonList","props","modelValue","type","Object","required","filter","emits","_value","setup","_ref","emit","singleValue","ref","multipleValue","split","filterClass","computed","_props$filter$label$r","_props$filter$label","filterSlugName","label","replace","toLowerCase","concat","headerMarkup","_props$filter$headerM","items","_props$filter$items2","isPills","value","isMultiSelect","_props$filter$items","radioItems","splice","text","isMultipleSelection","isDropDownList","control","ContentCollectionFilterControl","Dropdown","Pills","isBoolean","Boolean","_props$filter$label2","watch","join","template","SectionContainer","filters","Array","filterValues","_ref2","getFilterValue","_filterValues$value$t","_filter$label","setFilterValue","_filter$label2","newValues","_objectSpread","updateRefValue","SortOrdersKey","getQueryStringFilterValues","filterNames","params","_iterator","_createForOfIteratorHelper","URLSearchParams","window","location","search","entries","_step","_loop","entry","some","n","s","done","err","e","f","updateUrl","query","sortOrder","qs","push","SearchOrder","Relevance","toString","key","_iterator2","_step2","_loop2","entryName","_ret","length","querystring","map","q","history","replaceState","pathname","updateResults","resultsContainerElement","results","seeMore","_results$resultSource","_iterator3","resultSources","_step3","_loop3","_resultSource$results","resultSource","sourceGuid","sourceContainerElement","querySelector","_resultSource$templat","document","createElement","classList","add","innerHTML","newSeeMoreElement","addEventListener","preventDefault","append","resultItemsElement","_iterator4","_step4","item","itemElement","_i","_Array$from","from","children","innerElement","remove","resultItemCount","toNumber","dataset","seeMoreElement","hasMore","_ret2","getSortOrderItems","allowed","trendingTerm","sortOrderItems","includes","Newest","Oldest","Trending","Alphabetical","NotificationBox","FiltersContainer","TextBox","_useBlockGuid","_config$filters","_config$enabledSortOr","_config$trendingTerm","_config$initialResult","_config$initialResult2","config","useConfigurationValues","invokeBlockAction","useInvokeBlockAction","blockGuid","useBlockGuid","emptyGuid","securityGrant","getSecurityGrant","securityGrantToken","urlSearchParams","blockError","errorMessage","searchContainerElement","shallowRef","searchResultContainerElement","get","_f$label","enabledSortOrders","totalResultsCount","initialResults","totalResultCount","performSearch","_asyncToGenerator","offset","_f$label2","queryBag","order","data","result","isSuccess","processResults","console","error","_x","_x2","apply","arguments","onLoadMore","dispatchBlockEvent","itemCount","_x3","onClearClick","_searchContainerEleme","inputElement","focus","provideSecurityGrant","debounceSearch","debounce","onMounted","_searchContainerEleme2","preSearchContent","showSort","showFiltersPanel","showFullTextSearch"],"mappings":"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"}