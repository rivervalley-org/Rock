{"version":3,"file":"contentCollectionDetail.js","sources":["../../src/Cms/ContentCollectionDetail/customKeySource.partial.obs","../../src/Cms/ContentCollectionDetail/source.partial.ts","../../src/Cms/ContentCollectionDetail/contentSources.partial.ts","../../src/Cms/ContentCollectionDetail/editPanel.partial.ts","../../src/Cms/ContentCollectionDetail/searchFilter.partial.ts","../../src/Cms/ContentCollectionDetail/attributeSearchFilter.partial.ts","../../src/Cms/ContentCollectionDetail/customFieldSearchFilter.partial.obs","../../src/Cms/ContentCollectionDetail/searchFilters.partial.ts","../../src/Cms/ContentCollectionDetail/viewPanel.partial.ts","../../src/Cms/ContentCollectionDetail/types.partial.ts","../../src/Cms/contentCollectionDetail.ts"],"sourcesContent":["<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <tr v-if=\"!isEditMode\">\r\n        <td>{{ key }}</td>\r\n        <td>{{ title }}</td>\r\n        <td><i class=\"fa fa-check\"></i></td>\r\n        <td class=\"grid-columncommand\" align=\"center\">\r\n            <a class=\"btn btn-default btn-sm\" @click=\"onEditClick\">\r\n                <i class=\"fa fa-pencil\"></i>\r\n            </a>\r\n        </td>\r\n        <td class=\"grid-columncommand\" align=\"center\">\r\n            <a class=\"btn btn-danger btn-sm\" @click=\"onRemoveClick\">\r\n                <i class=\"fa fa-times\"></i>\r\n            </a>\r\n        </td>\r\n    </tr>\r\n\r\n    <tr v-else>\r\n        <td colspan=\"3\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-4\">\r\n                    <TextBox v-model=\"key\"\r\n                             label=\"Key\"\r\n                             rules=\"required\"\r\n                             help=\"The key in the index to use for this custom value.\" />\r\n                </div>\r\n\r\n                <div class=\"col-md-4\">\r\n                    <TextBox v-model=\"title\"\r\n                             label=\"Title\"\r\n                             rules=\"required\"\r\n                             help=\"The title of the custom value, this is used if filtering is enabled.\" />\r\n                </div>\r\n\r\n                <div class=\"col-md-4\">\r\n                    <CheckBox v-model=\"isMultiple\"\r\n                              label=\"Multiple Values\"\r\n                              help=\"If enabled, then the content will be split by a comma as a multi-value field.\" />\r\n                </div>\r\n            </div>\r\n\r\n            <CodeEditor v-model=\"template\"\r\n                        mode=\"lava\"\r\n                        rules=\"required\"\r\n                        label=\"Template\" />\r\n        </td>\r\n\r\n        <td class=\"grid-columncommand\" align=\"center\">\r\n            <a class=\"btn btn-success btn-sm\" :class=\"{disabled: isSaveDisabled}\" @click=\"onAcceptClick\">\r\n                <i class=\"fa fa-check\"></i>\r\n            </a>\r\n        </td>\r\n\r\n        <td class=\"grid-columncommand\" align=\"center\">\r\n            <a class=\"btn btn-default btn-sm\" @click=\"onCancelClick\">\r\n                <i class=\"fa fa-minus\"></i>\r\n            </a>\r\n        </td>\r\n    </tr>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import CheckBox from \"@Obsidian/Controls/checkBox\";\r\n    import CodeEditor from \"@Obsidian/Controls/codeEditor\";\r\n    import TextBox from \"@Obsidian/Controls/textBox\";\r\n    import { ContentCollectionCustomFieldBag } from \"@Obsidian/ViewModels/Cms/contentCollectionCustomFieldBag\";\r\n    import { useFormState } from \"@Obsidian/Utility/form\";\r\n    import { newGuid } from \"@Obsidian/Utility/guid\";\r\n    import { computed, PropType, ref, watch } from \"vue\";\r\n\r\n    const props = defineProps({\r\n        modelValue: {\r\n            type: Object as PropType<ContentCollectionCustomFieldBag>,\r\n            required: false\r\n        },\r\n\r\n        editMode: {\r\n            type: Boolean as PropType<boolean>,\r\n            required: true\r\n        }\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"update:modelValue\", value: ContentCollectionCustomFieldBag): void,\r\n        (e: \"update:editMode\", value: boolean): void,\r\n        (e: \"remove\"): void\r\n    }>();\r\n\r\n    let validationId = newGuid();\r\n    const formState = useFormState();\r\n    const key = ref(props.modelValue?.key ?? \"\");\r\n    const title = ref(props.modelValue?.title ?? \"\");\r\n    const isMultiple = ref(props.modelValue?.isMultiple ?? false);\r\n    const template = ref(props.modelValue?.template ?? \"\");\r\n    const isEditMode = ref(props.editMode);\r\n\r\n    const isSaveDisabled = computed((): boolean => {\r\n        return !key.value || !title.value || !template.value;\r\n    });\r\n\r\n    /**\r\n     * Updates the custom validation error. If we are in edit mode then do\r\n     * not allow the form to be saved.\r\n     */\r\n    function updateValidation(): void {\r\n        if (isEditMode.value) {\r\n            formState?.setError(validationId, \"Custom Value\", \"must not be in edit mode.\");\r\n        }\r\n        else {\r\n            formState?.setError(validationId, \"Custom Value\", \"\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Event Handler for when the edit button is clicked. Switch into edit\r\n     * mode.\r\n     */\r\n    function onEditClick(): void {\r\n        isEditMode.value = true;\r\n        emit(\"update:editMode\", isEditMode.value);\r\n    }\r\n\r\n    /**\r\n     * Event Handler for when the remove button is clicked. Emit an event to\r\n     * the parent component that we should be removed.\r\n     */\r\n    function onRemoveClick(): void {\r\n        emit(\"remove\");\r\n    }\r\n\r\n    /**\r\n     * Event Handler for when the Accept Changes button is clicked. Update\r\n     * the model to match what they entered.\r\n     */\r\n    function onAcceptClick(): void {\r\n        emit(\"update:modelValue\", {\r\n            key: key.value.replace(/ /g, \"\"),\r\n            title: title.value,\r\n            isMultiple: isMultiple.value,\r\n            template: template.value\r\n        });\r\n        isEditMode.value = false;\r\n        emit(\"update:editMode\", isEditMode.value);\r\n    }\r\n\r\n    /**\r\n     * Event Handler for when the cancel button is clicked while in edit mode.\r\n     */\r\n    function onCancelClick(): void {\r\n        key.value = props.modelValue?.key ?? \"\";\r\n        title.value = props.modelValue?.title ?? \"\";\r\n        isMultiple.value = props.modelValue?.isMultiple ?? false;\r\n        template.value = props.modelValue?.template ?? \"\";\r\n        isEditMode.value = false;\r\n        emit(\"update:editMode\", isEditMode.value);\r\n    }\r\n\r\n    watch(() => props.modelValue, () => {\r\n        key.value = props.modelValue?.key ?? \"\";\r\n        title.value = props.modelValue?.title ?? \"\";\r\n        isMultiple.value = props.modelValue?.isMultiple ?? false;\r\n        template.value = props.modelValue?.template ?? \"\";\r\n    });\r\n\r\n    watch(() => props.editMode, () => {\r\n        isEditMode.value = props.editMode;\r\n    });\r\n\r\n    watch(isEditMode, () => {\r\n        updateValidation();\r\n    });\r\n\r\n    updateValidation();\r\n</script>\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { computed, defineComponent,  PropType } from \"vue\";\r\nimport RockButton from \"@Obsidian/Controls/rockButton\";\r\nimport { ContentSourceBag } from \"@Obsidian/ViewModels/Blocks/Cms/ContentCollectionDetail/contentSourceBag\";\r\n\r\n/**\r\n * Calculates the brightness of the given CSS color string.\r\n * \r\n * @param color The CSS color string to be calculated.\r\n * \r\n * @returns A number between 0 and 1, or undefined if the brightness could not be determined.\r\n */\r\nfunction calculateColorBrightness(color: string | undefined | null): number | undefined {\r\n    if (!color) {\r\n        return undefined;\r\n    }\r\n\r\n    // Create a node that we will use to parse the color specified into a\r\n    // standard format we can use.\r\n    const node = document.createElement(\"div\");\r\n    try {\r\n        // Set the color and mark it to never display. Then add it to the body\r\n        // so we can compute the style.\r\n        node.setAttribute(\"style\", `color: ${color} !important; display: none !important;`);\r\n        document.body.appendChild(node);\r\n\r\n        // Compute the color style. This always returns in one of two formats\r\n        // no matter what the input format above was:\r\n        // rgb(r,g,b)\r\n        // rgba(r,g,b,a)\r\n        const computedColor = window.getComputedStyle(node).color;\r\n        const rgbaMatch = computedColor.match(/rgba?\\((.*)\\)/);\r\n        if (!rgbaMatch) {\r\n            return undefined;\r\n        }\r\n\r\n        const rgba = rgbaMatch[1].split(\",\").map(Number);\r\n\r\n        // Calculate the brightness of the color.\r\n        const brightness = Math.round(((rgba[0] * 299) + (rgba[1] * 587) + (rgba[2] * 114)) / 1000);\r\n\r\n        // Our brightness is 0-255, make it 0-1.\r\n        return Math.min(255, brightness) / 255;\r\n    }\r\n    finally {\r\n        node.remove();\r\n    }\r\n}\r\n\r\nexport default defineComponent({\r\n    name: \"Cms.ContentCollectionDetail.Source\",\r\n\r\n    components: {\r\n        RockButton\r\n    },\r\n\r\n    props: {\r\n        modelValue: {\r\n            type: Object as PropType<ContentSourceBag>,\r\n            required: true\r\n        }\r\n    },\r\n\r\n    emits: {\r\n        \"edit\": (_value: ContentSourceBag) => true,\r\n        \"delete\": (_value: ContentSourceBag) => true\r\n    },\r\n\r\n    setup(props, { emit }) {\r\n        // #region Computed Values\r\n\r\n        const barStyle = computed((): Record<string, string> => {\r\n            return {\r\n                backgroundColor: props.modelValue.color || \"#eeeeee\"\r\n            };\r\n        });\r\n\r\n        const iconStyle = computed((): Record<string, string> => {\r\n            return {\r\n                backgroundColor: props.modelValue.color || \"#eeeeee\",\r\n                color: (calculateColorBrightness(props.modelValue.color || \"#eeeeee\") ?? 0) > 0.5 ? \"black\" : \"white\"\r\n            };\r\n        });\r\n\r\n        const iconCssClass = computed((): string => {\r\n            return props.modelValue.iconCssClass ?? \"\";\r\n        });\r\n\r\n        const name = computed((): string => {\r\n            return props.modelValue.name ?? \"\";\r\n        });\r\n\r\n        const includes = computed((): string => {\r\n            if (!props.modelValue.attributes || props.modelValue.attributes.length === 0) {\r\n                return \"\";\r\n            }\r\n\r\n            const attributeNames = props.modelValue.attributes.map(a => a.text ?? \"\");\r\n\r\n            return `Includes: ${attributeNames.join(\", \")}`;\r\n        });\r\n\r\n        const itemCount = computed((): number => {\r\n            return props.modelValue.itemCount;\r\n        });\r\n\r\n        // #endregion\r\n\r\n        // #region Event Handlers\r\n\r\n        const onEditClick = (): void => {\r\n            emit(\"edit\", props.modelValue);\r\n        };\r\n\r\n        const onDeleteClick = (): void => {\r\n            emit(\"delete\", props.modelValue);\r\n        };\r\n\r\n        // #endregion\r\n\r\n        return {\r\n            barStyle,\r\n            iconCssClass,\r\n            iconStyle,\r\n            includes,\r\n            itemCount,\r\n            name,\r\n            onDeleteClick,\r\n            onEditClick\r\n        };\r\n    },\r\n\r\n    template: `\r\n<div class=\"collection-source\">\r\n    <div class=\"bar\" :style=\"barStyle\"></div>\r\n    <div class=\"icon\" :style=\"iconStyle\">\r\n        <i v-if=\"iconCssClass\" :class=\"iconCssClass\"></i>\r\n    </div>\r\n    <div class=\"title\">\r\n        <div class=\"text\">{{ name }}</div>\r\n        <div v-if=\"includes\" class=\"secondary-text\">{{ includes }}</div>\r\n    </div>\r\n    <div class=\"actions\">\r\n        <span class=\"item-count badge badge-default\">{{ itemCount }}</span>\r\n        <span class=\"reorder-handle btn btn-default btn-sm\"><i class=\"fa fa-bars\"></i></span>\r\n        <RockButton btnSize=\"sm\" @click=\"onEditClick\"><i class=\"fa fa-pencil\"></i></RockButton>\r\n        <RockButton btnSize=\"sm\" @click=\"onDeleteClick\"><i class=\"fa fa-times\"></i></RockButton>\r\n    </div>\r\n</div>\r\n`\r\n});\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { computed, defineComponent, onBeforeUnmount, PropType, ref, watch } from \"vue\";\r\nimport CheckBoxList from \"@Obsidian/Controls/checkBoxList\";\r\nimport CustomKeySource from \"./customKeySource.partial.obs\";\r\nimport DropDownList from \"@Obsidian/Controls/dropDownList\";\r\nimport Modal from \"@Obsidian/Controls/modal\";\r\nimport NumberBox from \"@Obsidian/Controls/numberBox\";\r\nimport Panel from \"@Obsidian/Controls/panel\";\r\nimport RockButton from \"@Obsidian/Controls/rockButton\";\r\nimport SectionHeader from \"@Obsidian/Controls/sectionHeader\";\r\nimport { DragReorder, useDragReorder } from \"@Obsidian/Directives/dragDrop\";\r\nimport { AvailableContentSourceBag } from \"@Obsidian/ViewModels/Blocks/Cms/ContentCollectionDetail/availableContentSourceBag\";\r\nimport { ContentCollectionBag } from \"@Obsidian/ViewModels/Blocks/Cms/ContentCollectionDetail/contentCollectionBag\";\r\nimport { ContentCollectionDetailOptionsBag } from \"@Obsidian/ViewModels/Blocks/Cms/ContentCollectionDetail/contentCollectionDetailOptionsBag\";\r\nimport { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\nimport { useInvokeBlockAction } from \"@Obsidian/Utility/block\";\r\nimport { alert, confirmDelete } from \"@Obsidian/Utility/dialogs\";\r\nimport { DetailBlockBox } from \"@Obsidian/ViewModels/Blocks/detailBlockBox\";\r\nimport { ContentSourceBag } from \"@Obsidian/ViewModels/Blocks/Cms/ContentCollectionDetail/contentSourceBag\";\r\nimport { EntityType } from \"@Obsidian/SystemGuids/entityType\";\r\nimport { updateRefValue } from \"@Obsidian/Utility/component\";\r\nimport { areEqual } from \"@Obsidian/Utility/guid\";\r\nimport Source from \"./source.partial\";\r\nimport { ContentCollectionCustomFieldBag } from \"@Obsidian/ViewModels/Cms/contentCollectionCustomFieldBag\";\r\n\r\nexport default defineComponent({\r\n    name: \"Cms.ContentCollectionDetail.ContentSources\",\r\n\r\n    components: {\r\n        CheckBoxList,\r\n        CustomKeySource,\r\n        DropDownList,\r\n        Modal,\r\n        NumberBox,\r\n        Panel,\r\n        RockButton,\r\n        SectionHeader,\r\n        Source\r\n    },\r\n\r\n    props: {\r\n        /** The collection that contains the sources to display. */\r\n        modelValue: {\r\n            type: Object as PropType<ContentCollectionBag>,\r\n            required: true\r\n        }\r\n    },\r\n\r\n    directives: {\r\n        DragReorder\r\n    },\r\n\r\n    emits: {\r\n        \"update:modelValue\": (_value: ContentCollectionBag) => true\r\n    },\r\n\r\n    setup(props, { emit }) {\r\n        // #region Values\r\n\r\n        const invokeBlockAction = useInvokeBlockAction();\r\n\r\n        const collectionSources = ref(props.modelValue.sources ?? []);\r\n\r\n        // Values related to editing sources.\r\n        const isAddSourceOpen = ref(false);\r\n        const addSourceMenuRef = ref<HTMLElement | null>(null);\r\n        const sourceEditBag = ref<ContentSourceBag | null>(null);\r\n        const isSourceModalOpen = ref(false);\r\n        const sourceSelectedEntity = ref(\"\");\r\n        const sourceSelectedEntityAttributes = ref<string[]>([]);\r\n        const sourceEntityItems = ref<ListItemBag[]>([]);\r\n        const sourceEntityAttributeTable = ref<Record<string, ListItemBag[]>>({});\r\n        const sourceSelectedEntityOccurrences = ref<number | null>(null);\r\n        const sourceCustomFields = ref<ContentCollectionCustomFieldBag[]>([]);\r\n        const sourceNewCustomField = ref<ContentCollectionCustomFieldBag | null>(null);\r\n\r\n        // #endregion\r\n\r\n        // #region Computed Values\r\n\r\n        const addSourceDropdownClass = computed((): string => {\r\n            return isAddSourceOpen.value ? \"dropdown clearfix open\" : \"dropdown clearfix\";\r\n        });\r\n\r\n        const sourceModalTitle = computed((): string => {\r\n            return isAddingSource.value ? \"Add Content Source\" : \"Edit Content Source\";\r\n        });\r\n\r\n        const isAddingSource = computed((): boolean => {\r\n            return !sourceEditBag.value?.guid;\r\n        });\r\n\r\n        const isSourceModalCalendar = computed((): boolean => {\r\n            return areEqual(sourceEditBag.value?.entityTypeGuid, EntityType.EventCalendar);\r\n        });\r\n\r\n        const sourceModalEntityTitle = computed((): string => {\r\n            if (areEqual(sourceEditBag.value?.entityTypeGuid, EntityType.ContentChannel)) {\r\n                return \"Content Channel\";\r\n            }\r\n            else {\r\n                return \"Event Calendar\";\r\n            }\r\n        });\r\n\r\n        const sourceModalEntityName = computed((): string => {\r\n            return sourceEditBag.value?.name ?? \"\";\r\n        });\r\n\r\n        const sourceEntityAttributeItems = computed((): ListItemBag[] => {\r\n            return (sourceEntityAttributeTable.value[sourceSelectedEntity.value] ?? [])\r\n                .map(li => {\r\n                    return {\r\n                        value: li.value,\r\n                        text: li.category ? `${li.text} (${li.category})` : li.text\r\n                    };\r\n                });\r\n        });\r\n\r\n        // #endregion\r\n\r\n        // #region Functions\r\n\r\n        // #endregion\r\n\r\n        // #region Event Handlers\r\n\r\n        /**\r\n         * Event handler for when the person clicks outside the add source popup.\r\n         *\r\n         * @param event The event that is being processed.\r\n         */\r\n        const onAddSourceWindowClick = (event: Event): void => {\r\n            if (!(event.target instanceof HTMLElement) || !isAddSourceOpen.value) {\r\n                return;\r\n            }\r\n\r\n            const menu = event.target?.closest(\".dropdown-menu\");\r\n\r\n            // If they didn't click inside the menu popup then close the popup.\r\n            if (menu !== addSourceMenuRef.value) {\r\n                isAddSourceOpen.value = false;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Event handler for toggling the add source popup.\r\n         */\r\n        const onAddSourceClick = (): void => {\r\n            isAddSourceOpen.value = !isAddSourceOpen.value;\r\n        };\r\n\r\n        /**\r\n         * Event handler for when the Add Calendar popup action is clicked.\r\n         */\r\n        const onAddCalendarSource = async (): Promise<void> => {\r\n            isAddSourceOpen.value = false;\r\n\r\n            // Get the event calendars that can be selected.\r\n            const result = await invokeBlockAction<AvailableContentSourceBag[]>(\"GetAvailableEventCalendars\");\r\n\r\n            if (!result || !result.data) {\r\n                alert(result.errorMessage || \"Unable to get list of event calendars.\");\r\n                return;\r\n            }\r\n\r\n            // Set initial values to unselected.\r\n            sourceSelectedEntity.value = \"\";\r\n            sourceSelectedEntityAttributes.value = [];\r\n            sourceSelectedEntityOccurrences.value = null;\r\n\r\n            // Filter out any entities that are already a source.\r\n            sourceEntityItems.value = result.data\r\n                .filter(e => !collectionSources.value.some(s => areEqual(s.entityGuid, e.guid)))\r\n                .map(e => ({\r\n                    value: e.guid,\r\n                    text: e.name\r\n                }));\r\n\r\n            sourceEntityAttributeTable.value = result.data.reduce((table, c) => {\r\n                table[c.guid ?? \"\"] = c.attributes ?? [];\r\n                return table;\r\n            }, {} as Record<string, ListItemBag[]>);\r\n\r\n            sourceEditBag.value = {\r\n                entityTypeGuid: EntityType.EventCalendar,\r\n                occurrencesToShow: 0,\r\n                itemCount: 0\r\n            };\r\n\r\n            sourceCustomFields.value = [];\r\n            sourceNewCustomField.value = null;\r\n\r\n            isSourceModalOpen.value = true;\r\n        };\r\n\r\n        /**\r\n         * Event handler for when the Add Content Channel popup action is clicked.\r\n         */\r\n        const onAddContentChannelSource = async (): Promise<void> => {\r\n            isAddSourceOpen.value = false;\r\n\r\n            // Get the content channels that can be selected.\r\n            const result = await invokeBlockAction<AvailableContentSourceBag[]>(\"GetAvailableContentChannels\");\r\n\r\n            if (!result || !result.data) {\r\n                alert(result.errorMessage || \"Unable to get list of content channels.\");\r\n                return;\r\n            }\r\n\r\n            // Set initial values to unselected.\r\n            sourceSelectedEntity.value = \"\";\r\n            sourceSelectedEntityAttributes.value = [];\r\n            sourceSelectedEntityOccurrences.value = null;\r\n\r\n            sourceEntityItems.value = result.data.map(c => ({\r\n                value: c.guid,\r\n                text: c.name\r\n            }));\r\n\r\n            // Filter out any entities that are already a source.\r\n            sourceEntityItems.value = result.data\r\n                .filter(e => !collectionSources.value.some(s => areEqual(s.entityGuid, e.guid)))\r\n                .map(e => ({\r\n                    value: e.guid,\r\n                    text: e.name\r\n                }));\r\n\r\n            sourceEntityAttributeTable.value = result.data.reduce((table, c) => {\r\n                table[c.guid ?? \"\"] = c.attributes ?? [];\r\n                return table;\r\n            }, {} as Record<string, ListItemBag[]>);\r\n\r\n            sourceEditBag.value = {\r\n                entityTypeGuid: EntityType.ContentChannel,\r\n                occurrencesToShow: 0,\r\n                itemCount: 0\r\n            };\r\n\r\n            sourceCustomFields.value = [];\r\n            sourceNewCustomField.value = null;\r\n\r\n            isSourceModalOpen.value = true;\r\n        };\r\n\r\n        const onSourceSave = async (): Promise<void> => {\r\n            if (!sourceEditBag.value) {\r\n                return;\r\n            }\r\n\r\n            const bag: ContentSourceBag = {\r\n                guid: sourceEditBag.value?.guid,\r\n                entityTypeGuid: sourceEditBag.value.entityTypeGuid,\r\n                entityGuid: sourceSelectedEntity.value,\r\n                attributes: sourceSelectedEntityAttributes.value.map(a => ({ value: a })),\r\n                occurrencesToShow: sourceSelectedEntityOccurrences.value ?? 0,\r\n                customFields: sourceCustomFields.value,\r\n                itemCount: 0\r\n            };\r\n\r\n            const data = {\r\n                key: props.modelValue?.idKey,\r\n                bag\r\n            };\r\n\r\n            const result = await invokeBlockAction<DetailBlockBox<ContentCollectionBag, ContentCollectionDetailOptionsBag>>(\"SaveCollectionSource\", data);\r\n\r\n            if (!result || !result.isSuccess || !result.data?.entity) {\r\n                alert(result.errorMessage || \"Unable to save source.\");\r\n                return;\r\n            }\r\n\r\n            emit(\"update:modelValue\", result.data.entity);\r\n            isSourceModalOpen.value = false;\r\n        };\r\n\r\n        /**\r\n         * Event handler for when the person wants to delete the specified\r\n         * source from the collection.\r\n         *\r\n         * @param source The source that should be deleted from the collection.\r\n         */\r\n        const onDeleteSource = async (source: ContentSourceBag): Promise<void> => {\r\n            if (!(await confirmDelete(\"Collection Source\"))) {\r\n                return;\r\n            }\r\n\r\n            const data = {\r\n                key: props.modelValue?.idKey,\r\n                sourceGuid: source.guid\r\n            };\r\n\r\n            const result = await invokeBlockAction<DetailBlockBox<ContentCollectionBag, ContentCollectionDetailOptionsBag>>(\"DeleteCollectionSource\", data);\r\n\r\n            if (!result || !result.isSuccess || !result.data?.entity) {\r\n                alert(result.errorMessage || \"Unable to delete the collection source.\");\r\n                return;\r\n            }\r\n\r\n            emit(\"update:modelValue\", result.data.entity);\r\n        };\r\n\r\n        /**\r\n         * Event handler for when the person attempts to edit a collection source.\r\n         *\r\n         * @param source The source that should be edited.\r\n         */\r\n        const onEditSource = async (source: ContentSourceBag): Promise<void> => {\r\n            let availableContent: AvailableContentSourceBag[];\r\n\r\n            if (areEqual(source.entityTypeGuid, EntityType.ContentChannel)) {\r\n                // Get the content channel data so we have the updated list of\r\n                // available attributes.\r\n                const result = await invokeBlockAction<AvailableContentSourceBag[]>(\"GetAvailableContentChannels\");\r\n\r\n                if (!result || !result.data) {\r\n                    alert(result.errorMessage || \"Unable to get list of content channels.\");\r\n                    return;\r\n                }\r\n\r\n                availableContent = result.data;\r\n            }\r\n            else if (areEqual(source.entityTypeGuid, EntityType.EventCalendar)) {\r\n                // Get the event calendar data so we have the updated list of\r\n                // available attributes.\r\n                const result = await invokeBlockAction<AvailableContentSourceBag[]>(\"GetAvailableEventCalendars\");\r\n\r\n                if (!result || !result.data) {\r\n                    alert(result.errorMessage || \"Unable to get list of event calendars.\");\r\n                    return;\r\n                }\r\n\r\n                availableContent = result.data;\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n\r\n            // Set initial selections in the UI.\r\n            sourceSelectedEntity.value = source.entityGuid ?? \"\";\r\n            sourceSelectedEntityAttributes.value = source.attributes?.map(v => v.value ?? \"\") ?? [];\r\n            sourceSelectedEntityOccurrences.value = source.occurrencesToShow > 0 ? source.occurrencesToShow : null;\r\n\r\n            sourceEntityAttributeTable.value = availableContent.reduce((table, c) => {\r\n                table[c.guid ?? \"\"] = c.attributes ?? [];\r\n                return table;\r\n            }, {} as Record<string, ListItemBag[]>);\r\n\r\n            sourceEditBag.value = source;\r\n            sourceCustomFields.value = source.customFields ? [...source.customFields] : [];\r\n            sourceNewCustomField.value = null;\r\n\r\n            isSourceModalOpen.value = true;\r\n        };\r\n\r\n        /**\r\n         * Event Handler for when the sources have been re-ordered by the person\r\n         * via a drag and drop action.\r\n         *\r\n         * @param value The value that was moved in the list.\r\n         * @param beforeValue The value it was placed before or null if end of list.\r\n         */\r\n        const onSourceReorder = async (value: ContentSourceBag, beforeValue: ContentSourceBag | null): Promise<void> => {\r\n            const data = {\r\n                key: props.modelValue.idKey,\r\n                guid: value.guid,\r\n                beforeGuid: beforeValue?.guid ?? null\r\n            };\r\n\r\n            const result = await invokeBlockAction(\"ReorderSource\", data);\r\n\r\n            if (!result.isSuccess) {\r\n                alert(result.errorMessage || \"Unable to re-order sources, you might need to reload the page.\");\r\n                return;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Event Handler for when a new custom field has been requested to\r\n         * added by the individual.\r\n         */\r\n        function onAddCustomFieldClick(): void {\r\n            if (sourceNewCustomField.value === null) {\r\n                sourceNewCustomField.value = {\r\n                    isMultiple: false\r\n                };\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Event Handler for when the save button on a new custom field is\r\n         * clicked. Add it to the list and remove the new custom field UI.\r\n         *\r\n         * @param field The field that should be saved.\r\n         */\r\n        function onNewCustomFieldSave(field: ContentCollectionCustomFieldBag): void {\r\n            sourceCustomFields.value.push(field);\r\n            sourceNewCustomField.value = null;\r\n        }\r\n\r\n        /**\r\n         * Event Handler for when the cancel button is clicked on the new\r\n         * custom field UI. This triggers it to revert to non-edit mode.\r\n         *\r\n         * @param value The new value of the add custom field editor.\r\n         */\r\n        function onNewCustomFieldEditModeChanged(value: boolean): void {\r\n            if (!value) {\r\n                sourceNewCustomField.value = null;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Event Handler for when the remove button of a custom field row\r\n         * is clicked.\r\n         *\r\n         * @param index The custom field row index to be removed.\r\n         */\r\n        function onCustomFieldRemove(index: number): void {\r\n            sourceCustomFields.value.splice(index, 1);\r\n        }\r\n\r\n        // #endregion\r\n\r\n        const reorderDragOptions = useDragReorder(collectionSources, onSourceReorder);\r\n\r\n        watch(() => props.modelValue, () => {\r\n            updateRefValue(collectionSources, props.modelValue?.sources ?? []);\r\n        });\r\n\r\n        // Watch for when our add source popup is open or closed and add/remove\r\n        // the event handler to auto-close.\r\n        watch(isAddSourceOpen, () => {\r\n            if (isAddSourceOpen.value) {\r\n                window.addEventListener(\"click\", onAddSourceWindowClick);\r\n            }\r\n            else {\r\n                window.removeEventListener(\"click\", onAddSourceWindowClick);\r\n            }\r\n        });\r\n\r\n        // Ensure our click handler is cleaned up.\r\n        onBeforeUnmount(() => {\r\n            window.removeEventListener(\"click\", onAddSourceWindowClick);\r\n        });\r\n\r\n        return {\r\n            addSourceDropdownClass,\r\n            addSourceMenuRef,\r\n            isAddingSource,\r\n            isSourceModalCalendar,\r\n            isSourceModalOpen,\r\n            collectionSources,\r\n            onAddCalendarSource,\r\n            onAddContentChannelSource,\r\n            onAddCustomFieldClick,\r\n            onAddSourceClick,\r\n            onCustomFieldRemove,\r\n            onNewCustomFieldEditModeChanged,\r\n            onNewCustomFieldSave,\r\n            onSourceSave,\r\n            onDeleteSource,\r\n            onEditSource,\r\n            reorderDragOptions,\r\n            sourceCustomFields,\r\n            sourceEntityAttributeItems,\r\n            sourceEntityItems,\r\n            sourceModalEntityName,\r\n            sourceModalTitle,\r\n            sourceModalEntityTitle,\r\n            sourceNewCustomField,\r\n            sourceSelectedEntity,\r\n            sourceSelectedEntityAttributes,\r\n            sourceSelectedEntityOccurrences\r\n        };\r\n    },\r\n\r\n    template: `\r\n<Panel title=\"Sources\">\r\n    <SectionHeader title=\"Content Sources\" description=\"Content for this collection will be pulled from the following sources within Rock.\">\r\n        <template #actions>\r\n            <div :class=\"addSourceDropdownClass\">\r\n                <button type=\"button\" class=\"btn btn-default btn-sm dropdown-toggle\" @click.prevent.stop=\"onAddSourceClick\">\r\n                    <i class=\"fa fa-plus\"></i> <span class=\"caret\"></span>\r\n                </button>\r\n\r\n                <ul ref=\"addSourceMenuRef\" class=\"dropdown-menu dropdown-menu-right\">\r\n                    <li><a href=\"#\" @click.prevent=\"onAddContentChannelSource\">Add Content Channel</a></li>\r\n                    <li><a href=\"#\" @click.prevent=\"onAddCalendarSource\">Add Calendar</a></li>\r\n                </ul>\r\n            </div>\r\n        </template>\r\n    </SectionHeader>\r\n\r\n    <div class=\"collection-content-sources\" v-drag-reorder=\"reorderDragOptions\">\r\n        <Source v-for=\"source in collectionSources\" :key=\"source.guid\" v-model=\"source\" @delete=\"onDeleteSource\" @edit=\"onEditSource\" />\r\n    </div>\r\n</Panel>\r\n\r\n<Modal v-model=\"isSourceModalOpen\"\r\n    :title=\"sourceModalTitle\"\r\n    class=\"content-source-modal\"\r\n    saveText=\"Save\"\r\n    @save=\"onSourceSave\">\r\n    <h1 v-if=\"!isAddingSource\">{{ sourceModalEntityName }}</h1>\r\n    <div v-else class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <DropDownList v-if=\"isAddingSource\"\r\n                v-model=\"sourceSelectedEntity\"\r\n                :label=\"sourceModalEntityTitle\"\r\n                :items=\"sourceEntityItems\"\r\n                rules=\"required\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\" v-if=\"sourceSelectedEntity\">\r\n        <div class=\"col-md-6\">\r\n            <CheckBoxList v-model=\"sourceSelectedEntityAttributes\"\r\n                label=\"Attributes to Include\"\r\n                help=\"Determines which attributes should be added to the collection index for search and retrieval.\"\r\n                :items=\"sourceEntityAttributeItems\" />\r\n        </div>\r\n\r\n        <div class=\"col-md-6\">\r\n            <NumberBox v-if=\"isSourceModalCalendar\"\r\n                v-model=\"sourceSelectedEntityOccurrences\"\r\n                label=\"Number of Future Occurrences to Show\"\r\n                rules=\"gte:1\" />\r\n        </div>\r\n    </div>\r\n\r\n    <SectionHeader title=\"Custom Values\"\r\n                   description=\"Most of the content you provide for the collection will be based on the attributes mentioned above. Additionally, you can provide properties below that can be used for filtering or to provide more information.\" />\r\n\r\n    <table class=\"grid-table table table-condensed table-light\">\r\n        <thead>\r\n            <tr>\r\n                <th>Key</th>\r\n                <th>Title</th>\r\n                <th>Multiple</th>\r\n                <th class=\"grid-columncommand\"></th>\r\n                <th class=\"grid-columncommand\"></th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n            <CustomKeySource v-for=\"(customField, index) in sourceCustomFields\"\r\n                v-model=\"sourceCustomFields[index]\"\r\n                v-model:editMode=\"sourceCustomFieldEditMode\"\r\n                @remove=\"onCustomFieldRemove(index)\" />\r\n\r\n            <CustomKeySource v-if=\"sourceNewCustomField\"\r\n                :modelValue=\"sourceNewCustomField\"\r\n                editMode\r\n                @update:modelValue=\"onNewCustomFieldSave\"\r\n                @update:editMode=\"onNewCustomFieldEditModeChanged\" />\r\n\r\n            <tr v-else-if=\"!sourceCustomFields.length\">\r\n                <td colspan=\"5\">No custom fields defined.</td>\r\n            </tr>\r\n        </tbody>\r\n\r\n        <tfoot>\r\n            <tr>\r\n                <td class=\"grid-actions\" colspan=\"6\">\r\n                    <a class=\"btn btn-grid-action btn-add btn-default btn-sm\" accesskey=\"n\" title=\"Alt+N\" href=\"#\" @click.prevent=\"onAddCustomFieldClick\">\r\n                        <i class=\"fa fa-plus-circle fa-fw\"></i>\r\n                    </a>\r\n                </td>\r\n            </tr>\r\n        </tfoot>\r\n    </table>\r\n\r\n    <div style=\"margin-bottom: 40px;\"></div>\r\n</Modal>\r\n`\r\n});\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { computed, defineComponent, PropType, ref, watch } from \"vue\";\r\nimport AttributeValuesContainer from \"@Obsidian/Controls/attributeValuesContainer\";\r\nimport CheckBox from \"@Obsidian/Controls/checkBox\";\r\nimport CheckBoxList from \"@Obsidian/Controls/checkBoxList\";\r\nimport NumberBox from \"@Obsidian/Controls/numberBox\";\r\nimport TextBox from \"@Obsidian/Controls/textBox\";\r\nimport { watchPropertyChanges } from \"@Obsidian/Utility/block\";\r\nimport { propertyRef, updateRefValue } from \"@Obsidian/Utility/component\";\r\nimport { ContentCollectionBag } from \"@Obsidian/ViewModels/Blocks/Cms/ContentCollectionDetail/contentCollectionBag\";\r\nimport { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\n\r\n/** The items that can be selected from the personalization checkbox list. */\r\nconst enablePersonalizationItems: ListItemBag[] = [\r\n    {\r\n        value: \"segments\",\r\n        text: \"Segments\"\r\n    },\r\n    {\r\n        value: \"requestFilters\",\r\n        text: \"Request Filters\"\r\n    }\r\n];\r\n\r\nexport default defineComponent({\r\n    name: \"Cms.ContentCollectionDetail.EditPanel\",\r\n\r\n    components: {\r\n        AttributeValuesContainer,\r\n        CheckBox,\r\n        CheckBoxList,\r\n        NumberBox,\r\n        TextBox\r\n    },\r\n\r\n    props: {\r\n        /** The content collection that is being edited. */\r\n        modelValue: {\r\n            type: Object as PropType<ContentCollectionBag>,\r\n            required: true\r\n        }\r\n    },\r\n\r\n    emits: {\r\n        \"update:modelValue\": (_value: ContentCollectionBag) => true,\r\n        \"propertyChanged\": (_value: string) => true\r\n    },\r\n\r\n    setup(props, { emit }) {\r\n        // #region Values\r\n\r\n        const attributes = ref(props.modelValue.attributes ?? {});\r\n        const attributeValues = ref(props.modelValue.attributeValues ?? {});\r\n        const description = propertyRef(props.modelValue.description ?? \"\", \"Description\");\r\n        const name = propertyRef(props.modelValue.name ?? \"\", \"Name\");\r\n        const collectionKey = propertyRef(props.modelValue.collectionKey ?? \"\", \"CollectionKey\");\r\n        const trendingEnabled = propertyRef(props.modelValue.trendingEnabled, \"TrendingEnabled\");\r\n        const trendingWindowDay = propertyRef(props.modelValue.trendingWindowDay, \"TrendingWindowDay\");\r\n        const trendingMaxItems = propertyRef(props.modelValue.trendingMaxItems, \"TrendingMaxItems\");\r\n        const trendingGravity = propertyRef(props.modelValue.trendingGravity, \"TrendingGravity\");\r\n        const enableSegments = propertyRef(props.modelValue.enableSegments, \"EnableSegments\");\r\n        const enableRequestFilters = propertyRef(props.modelValue.enableRequestFilters, \"EnableRequestFilters\");\r\n\r\n        // Set some sane defaults if this is a new collection.\r\n        if (!props.modelValue.idKey) {\r\n            trendingWindowDay.value = 30;\r\n            trendingMaxItems.value = 10;\r\n            trendingGravity.value = 1.1;\r\n        }\r\n\r\n        // The properties that are being edited. This should only contain\r\n        // objects returned by propertyRef().\r\n        const propRefs = [description, name, collectionKey, trendingEnabled, trendingWindowDay, trendingMaxItems, trendingGravity, enableSegments, enableRequestFilters];\r\n\r\n        // #endregion\r\n\r\n        // #region Computed Values\r\n\r\n        // Handles the checkbox list selection for the personalization options.\r\n        // Dynamically constructs the selected values from the individual values\r\n        // and automatically sets those individual values on update.\r\n        const enablePersonalization = computed({\r\n            get(): string[] {\r\n                const values: string[] = [];\r\n\r\n                if (enableSegments.value) {\r\n                    values.push(\"segments\");\r\n                }\r\n\r\n                if (enableRequestFilters.value) {\r\n                    values.push(\"requestFilters\");\r\n                }\r\n\r\n                return values;\r\n            },\r\n            set(values: string[]) {\r\n                enableSegments.value = values.includes(\"segments\");\r\n                enableRequestFilters.value = values.includes(\"requestFilters\");\r\n            }\r\n        });\r\n\r\n        // #endregion\r\n\r\n        // #region Functions\r\n\r\n        // #endregion\r\n\r\n        // #region Event Handlers\r\n\r\n        // #endregion\r\n\r\n        // Watch for parental changes in our model value and update all our values.\r\n        watch(() => props.modelValue, () => {\r\n            updateRefValue(attributes, props.modelValue.attributes ?? {});\r\n            updateRefValue(attributeValues, props.modelValue.attributeValues ?? {});\r\n            updateRefValue(description, props.modelValue.description ?? \"\");\r\n            updateRefValue(name, props.modelValue.name ?? \"\");\r\n            updateRefValue(collectionKey, props.modelValue.collectionKey ?? \"\");\r\n            updateRefValue(trendingEnabled, props.modelValue.trendingEnabled);\r\n            updateRefValue(trendingWindowDay, props.modelValue.trendingWindowDay);\r\n            updateRefValue(trendingMaxItems, props.modelValue.trendingMaxItems);\r\n            updateRefValue(trendingGravity, props.modelValue.trendingGravity);\r\n            updateRefValue(enableSegments, props.modelValue.enableSegments);\r\n            updateRefValue(enableRequestFilters, props.modelValue.enableRequestFilters);\r\n        });\r\n\r\n        // Determines which values we want to track changes on (defined in the\r\n        // array) and then emit a new object defined as newValue.\r\n        watch([attributeValues, ...propRefs], () => {\r\n            const newValue: ContentCollectionBag = {\r\n                ...props.modelValue,\r\n                attributeValues: attributeValues.value,\r\n                description: description.value,\r\n                name: name.value,\r\n                collectionKey: collectionKey.value,\r\n                trendingEnabled: trendingEnabled.value,\r\n                trendingWindowDay: trendingWindowDay.value,\r\n                trendingMaxItems: trendingMaxItems.value,\r\n                trendingGravity: trendingGravity.value,\r\n                enableSegments: enableSegments.value,\r\n                enableRequestFilters: enableRequestFilters.value\r\n            };\r\n\r\n            emit(\"update:modelValue\", newValue);\r\n        });\r\n\r\n        // Watch for any changes to props that represent properties and then\r\n        // automatically emit which property changed.\r\n        watchPropertyChanges(propRefs, emit);\r\n\r\n        return {\r\n            attributes,\r\n            attributeValues,\r\n            description,\r\n            enablePersonalization,\r\n            enablePersonalizationItems,\r\n            name,\r\n            collectionKey,\r\n            trendingEnabled,\r\n            trendingWindowDay,\r\n            trendingMaxItems,\r\n            trendingGravity\r\n        };\r\n    },\r\n\r\n    template: `\r\n<fieldset>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <TextBox v-model=\"name\"\r\n                label=\"Name\"\r\n                rules=\"required\" />\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <TextBox v-model=\"description\"\r\n        label=\"Description\"\r\n        textMode=\"multiline\" />\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <TextBox v-model=\"collectionKey\"\r\n                label=\"Key\"\r\n                help=\"The unique key that will identify this collection.\"\r\n                rules=\"required\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <CheckBox v-model=\"trendingEnabled\"\r\n                label=\"Enable Trending\"\r\n                help=\"Determines if trending metrics should be calculated on each run of the collection update job.\" />\r\n\r\n            <div v-if=\"trendingEnabled\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <NumberBox v-model=\"trendingWindowDay\"\r\n                            label=\"Trending Window\"\r\n                            help=\"Determines how many days of interactions to look at to determine trending items.\"\r\n                            :decimalCount=\"0\"\r\n                            rules=\"required|gte:0\">\r\n                            <template #append>\r\n                                <span class=\"input-group-addon\">Days</span>\r\n                            </template>\r\n                        </NumberBox>\r\n                    </div>\r\n\r\n                    <div class=\"col-md-6\">\r\n                        <NumberBox v-model=\"trendingMaxItems\"\r\n                            label=\"Trending Item Count\"\r\n                            help=\"The number of items to mark as trending.\"\r\n                            :decimalCount=\"0\"\r\n                            rules=\"required|gte:0\" />\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <NumberBox v-model=\"trendingGravity\"\r\n                            label=\"Trending Gravity\"\r\n                            help=\"Gravity helps apply more weight to items that are newer. Selecting the correct gravity value can be a bit of trial and error, but we recommend that you start with the default value.\"\r\n                            rules=\"required|gte:0\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-6\">\r\n            <CheckBoxList v-model=\"enablePersonalization\"\r\n                label=\"Enable Personalization\"\r\n                help=\"Determines which personalization features are enabled.\"\r\n                :items=\"enablePersonalizationItems\" />\r\n        </div>\r\n    </div>\r\n\r\n    <AttributeValuesContainer v-model=\"attributeValues\" :attributes=\"attributes\" isEditMode :numberOfColumns=\"2\" />\r\n</fieldset>\r\n`\r\n});\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { defineComponent, PropType } from \"vue\";\r\nimport RockButton from \"@Obsidian/Controls/rockButton\";\r\nimport { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\n\r\nexport default defineComponent({\r\n    name: \"Cms.ContentCollectionDetail.SearchFilter\",\r\n\r\n    components: {\r\n        RockButton\r\n    },\r\n\r\n    props: {\r\n        /** True if the filter is enabled for use. */\r\n        isEnabled: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        },\r\n        \r\n        /** True if the sources are in an inconsistent state which prevents editing. */\r\n        isInconsistent: {\r\n            type: Boolean as PropType<boolean>,\r\n            default: false\r\n        },\r\n\r\n        /** The title of the filter (attribute name). */\r\n        title: {\r\n            type: String as PropType<string>,\r\n            required: true\r\n        },\r\n\r\n        /** The subtitle of the filter (field type). */\r\n        subtitle: {\r\n            type: String as PropType<string>,\r\n            required: false\r\n        },\r\n\r\n        /** The description of the filter. */\r\n        description: {\r\n            type: String as PropType<string>,\r\n            required: false\r\n        },\r\n\r\n        /** The value pairs to display showing the details of this filter. */\r\n        values: {\r\n            type: Array as PropType<ListItemBag[]>,\r\n            required: false\r\n        },\r\n    },\r\n\r\n    emits: {\r\n        \"edit\": () => true\r\n    },\r\n\r\n    setup(props, { emit }) {\r\n        const onEditClick = (): void => {\r\n            emit(\"edit\");\r\n        };\r\n\r\n        return {\r\n            onEditClick\r\n        };\r\n    },\r\n\r\n    template: `\r\n<div class=\"search-filter-row\">\r\n    <div class=\"search-filter-icon\">\r\n        <i v-if=\"isEnabled\" class=\"fa fa-check-square\" style=\"color: var(--brand-color);\"></i>\r\n        <i v-else class=\"fa fa-check-square-o\" style=\"color: #c3c2c2;\"></i>\r\n    </div>\r\n\r\n    <div class=\"search-filter-content\">\r\n        <div class=\"search-filter-title\">\r\n            <span class=\"title\">{{ title }}</span>\r\n            <template v-if=\"subtitle\">&nbsp;<span class=\"subtitle text-sm text-muted\">{{ subtitle }}</span></template>\r\n        </div>\r\n        <div v-if=\"description\" class=\"search-filter-description\">{{ description }}</div>\r\n\r\n        <fieldset v-if=\"!isInconsistent\">\r\n            <dl v-for=\"value in values\">\r\n                <dt>{{ value.text }}</dt>\r\n                <dd>{{ value.value }}</dd>\r\n            </dl>\r\n        </fieldset>\r\n        <div v-else class=\"text-danger margin-t-md margin-b-md\">\r\n            The field type configuration of the attribute is not consistent for all sources. Please resolve the inconsistency or rename the attribute key to be unique.\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"search-filter-actions\">\r\n        <RockButton v-if=\"!isInconsistent\" btnSize=\"sm\" @click=\"onEditClick\"><i class=\"fa fa-pencil\"></i></RockButton>\r\n    </div>\r\n</div>\r\n`\r\n});\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { computed, defineComponent, PropType } from \"vue\";\r\nimport { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\nimport { ContentCollectionFilterControl } from \"@Obsidian/Enums/Cms/contentCollectionFilterControl\";\r\nimport { AttributeFilterBag } from \"@Obsidian/ViewModels/Blocks/Cms/ContentCollectionDetail/attributeFilterBag\";\r\nimport { areEqual } from \"@Obsidian/Utility/guid\";\r\nimport { FieldType } from \"@Obsidian/SystemGuids/fieldType\";\r\nimport SearchFilter from \"./searchFilter.partial\";\r\n\r\nexport default defineComponent({\r\n    name: \"Cms.ContentCollectionDetail.AttributeSearchFilter\",\r\n\r\n    components: {\r\n        SearchFilter\r\n    },\r\n\r\n    props: {\r\n        /** The attribute filter to be displayed. */\r\n        modelValue: {\r\n            type: Object as PropType<AttributeFilterBag>,\r\n            required: true\r\n        }\r\n    },\r\n\r\n    emits: {\r\n        edit: (_value: AttributeFilterBag) => true\r\n    },\r\n\r\n    setup(props, { emit }) {\r\n        // #region Computed Values\r\n\r\n        const isEnabled = computed((): boolean => {\r\n            return props.modelValue.isEnabled;\r\n        });\r\n\r\n        const isInconsistent = computed((): boolean => {\r\n            return props.modelValue.isInconsistent;\r\n        });\r\n\r\n        const title = computed((): string => {\r\n            return props.modelValue.attributeName ?? \"\";\r\n        });\r\n\r\n        const subtitle = computed((): string => {\r\n            return `(${props.modelValue.fieldTypeName})`;\r\n        });\r\n\r\n        const description = computed((): string => {\r\n            return `Sources Using: ${props.modelValue.sourceNames?.join(\", \")}`;\r\n        });\r\n\r\n        const values = computed((): ListItemBag[] => {\r\n            const values: ListItemBag[] = [\r\n                {\r\n                    text: \"Filter Label\",\r\n                    value: props.modelValue.filterLabel\r\n                }\r\n            ];\r\n\r\n            // Special handling for booleans. They only have a filter control\r\n            // and its value is always Boolean.\r\n            if (areEqual(props.modelValue.fieldTypeGuid, FieldType.Boolean)) {\r\n                values.push({text: \"Filter Control\", value: \"Boolean\"});\r\n            }\r\n            else {\r\n                values.push({\r\n                    text: \"Filter Control\",\r\n                    value: props.modelValue.filterControl === ContentCollectionFilterControl.Dropdown ? \"Dropdown\" : \"Pills\"\r\n                });\r\n\r\n                values.push({\r\n                    text: \"Filter Mode\",\r\n                    value: props.modelValue.isMultipleSelection ? \"Multi-Select\" : \"Single-Select\"\r\n                });\r\n            }\r\n\r\n            return values;\r\n        });\r\n\r\n        // #endregion\r\n\r\n        // #region Event Handlers\r\n\r\n        /** Event handler for the edit event of the SearchFilter control. */\r\n        const onEdit = (): void => {\r\n            emit(\"edit\", props.modelValue);\r\n        };\r\n\r\n        // #endregion\r\n\r\n        return {\r\n            description,\r\n            isEnabled,\r\n            isInconsistent,\r\n            onEdit,\r\n            subtitle,\r\n            title,\r\n            values\r\n        };\r\n    },\r\n\r\n    template: `\r\n<SearchFilter :isEnabled=\"isEnabled\"\r\n    :isInconsistent=\"isInconsistent\"\r\n    :title=\"title\"\r\n    :subtitle=\"subtitle\"\r\n    :description=\"description\"\r\n    :values=\"values\"\r\n    @edit=\"onEdit\" />\r\n`\r\n});\r\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <SearchFilter :isEnabled=\"isEnabled\"\r\n                  :title=\"title\"\r\n                  :description=\"description\"\r\n                  :values=\"values\"\r\n                  @edit=\"onEdit\" />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n    import { computed, PropType } from \"vue\";\r\n    import { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\n    import { ContentCollectionFilterControl } from \"@Obsidian/Enums/Cms/contentCollectionFilterControl\";\r\n    import { CustomFieldFilterBag } from \"@Obsidian/ViewModels/Blocks/Cms/ContentCollectionDetail/customFieldFilterBag\";\r\n    import SearchFilter from \"./searchFilter.partial\";\r\n\r\n    const props = defineProps({\r\n        /** The custom field filter to be displayed. */\r\n        modelValue: {\r\n            type: Object as PropType<CustomFieldFilterBag>,\r\n            required: true\r\n        }\r\n    });\r\n\r\n    const emit = defineEmits<{\r\n        (e: \"edit\", value: CustomFieldFilterBag): void\r\n    }>();\r\n\r\n    // #region Computed Values\r\n\r\n    const isEnabled = computed((): boolean => {\r\n        return props.modelValue.isEnabled;\r\n    });\r\n\r\n    const title = computed((): string => {\r\n        return props.modelValue.title ?? \"\";\r\n    });\r\n\r\n    const description = computed((): string => {\r\n        return `Sources Using: ${props.modelValue.sourceNames?.join(\", \")}`;\r\n    });\r\n\r\n    const values = computed((): ListItemBag[] => {\r\n        const values: ListItemBag[] = [\r\n            {\r\n                text: \"Filter Label\",\r\n                value: props.modelValue.filterLabel\r\n            }\r\n        ];\r\n\r\n        values.push({\r\n            text: \"Filter Control\",\r\n            value: props.modelValue.filterControl === ContentCollectionFilterControl.Dropdown ? \"Dropdown\" : \"Pills\"\r\n        });\r\n\r\n        values.push({\r\n            text: \"Filter Mode\",\r\n            value: props.modelValue.isMultipleSelection ? \"Multi-Select\" : \"Single-Select\"\r\n        });\r\n\r\n        return values;\r\n    });\r\n\r\n    // #endregion\r\n\r\n    // #region Event Handlers\r\n\r\n    /** Event handler for the edit event of the SearchFilter control. */\r\n    function onEdit(): void {\r\n        emit(\"edit\", props.modelValue);\r\n    }\r\n\r\n    // #endregion\r\n</script>\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { computed, defineComponent, PropType, ref } from \"vue\";\r\nimport InlineSwitch from \"@Obsidian/Controls/inlineSwitch\";\r\nimport Modal from \"@Obsidian/Controls/modal\";\r\nimport Panel from \"@Obsidian/Controls/panel\";\r\nimport RadioButtonList from \"@Obsidian/Controls/radioButtonList\";\r\nimport RockButton from \"@Obsidian/Controls/rockButton\";\r\nimport SectionHeader from \"@Obsidian/Controls/sectionHeader\";\r\nimport TextBox from \"@Obsidian/Controls/textBox\";\r\nimport { ContentCollectionBag } from \"@Obsidian/ViewModels/Blocks/Cms/ContentCollectionDetail/contentCollectionBag\";\r\nimport { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\nimport { ContentCollectionFilterControl } from \"@Obsidian/Enums/Cms/contentCollectionFilterControl\";\r\nimport { AttributeFilterBag } from \"@Obsidian/ViewModels/Blocks/Cms/ContentCollectionDetail/attributeFilterBag\";\r\nimport SearchFilter from \"./searchFilter.partial\";\r\nimport AttributeSearchFilter from \"./attributeSearchFilter.partial\";\r\nimport CustomFieldSearchFilter from \"./customFieldSearchFilter.partial.obs\";\r\nimport { areEqual } from \"@Obsidian/Utility/guid\";\r\nimport { FieldType } from \"@Obsidian/SystemGuids/fieldType\";\r\nimport { FilterSettingsBag } from \"@Obsidian/ViewModels/Blocks/Cms/ContentCollectionDetail/filterSettingsBag\";\r\nimport { useInvokeBlockAction } from \"@Obsidian/Utility/block\";\r\nimport { DetailBlockBox } from \"@Obsidian/ViewModels/Blocks/detailBlockBox\";\r\nimport { ContentCollectionDetailOptionsBag } from \"@Obsidian/ViewModels/Blocks/Cms/ContentCollectionDetail/contentCollectionDetailOptionsBag\";\r\nimport { alert } from \"@Obsidian/Utility/dialogs\";\r\nimport { toNumberOrNull } from \"@Obsidian/Utility/numberUtils\";\r\nimport { CustomFieldFilterBag } from \"@Obsidian/ViewModels/Blocks/Cms/ContentCollectionDetail/customFieldFilterBag\";\r\n\r\n/**\r\n * The items available for selection in the filter type radio button list.\r\n */\r\nconst editFilterTypeItems: ListItemBag[] = [\r\n    {\r\n        \"value\": \"0\",\r\n        \"text\": \"Single-Select\"\r\n    },\r\n    {\r\n        \"value\": \"1\",\r\n        \"text\": \"Multi-Select\"\r\n    }\r\n];\r\n\r\n/**\r\n * The items availalbe for selection in the filter control radio button list\r\n * when the field type is not a boolean.\r\n */\r\nconst editFilterControlStandardItems: ListItemBag[] = [\r\n    {\r\n        \"value\": ContentCollectionFilterControl.Pills.toString(),\r\n        \"text\": \"Pills\"\r\n    },\r\n    {\r\n        \"value\": ContentCollectionFilterControl.Dropdown.toString(),\r\n        \"text\": \"Dropdown\"\r\n    }\r\n];\r\n\r\n/**\r\n * The items availalbe for selection in the filter control radio button list\r\n * when the field type is a boolean.\r\n */\r\nconst editFilterControlBooleanItems: ListItemBag[] = [\r\n    {\r\n        \"value\": ContentCollectionFilterControl.Boolean.toString(),\r\n        \"text\": \"Boolean\"\r\n    }\r\n];\r\n\r\nexport default defineComponent({\r\n    name: \"Cms.ContentCollectionDetail.SearchFilters\",\r\n\r\n    components: {\r\n        AttributeSearchFilter,\r\n        CustomFieldSearchFilter,\r\n        InlineSwitch,\r\n        Modal,\r\n        Panel,\r\n        RadioButtonList,\r\n        RockButton,\r\n        SearchFilter,\r\n        SectionHeader,\r\n        TextBox\r\n    },\r\n\r\n    props: {\r\n        /** The content collection that contains the search filters to display and edit. */\r\n        modelValue: {\r\n            type: Object as PropType<ContentCollectionBag>,\r\n            required: true\r\n        }\r\n    },\r\n\r\n    emits: {\r\n        \"update:modelValue\": (_value: ContentCollectionBag) => true\r\n    },\r\n\r\n    setup(props, { emit }) {\r\n        console.log(\"setup\");\r\n        // #region Values\r\n\r\n        const invokeBlockAction = useInvokeBlockAction();\r\n\r\n        const editFilterKey = ref(\"\");\r\n        const editFilterName = ref(\"\");\r\n        const editFilterControl = ref(\"\");\r\n        const editFilterControlItems = ref<ListItemBag[]>([]);\r\n        const editFilterEnabled = ref(false);\r\n        const editFilterLabel = ref(\"\");\r\n        const editFilterType = ref(\"\");\r\n        const editShowFilterType = ref(false);\r\n        const isEditModalOpen = ref(false);\r\n        const isEditFullTextSearch = ref(false);\r\n        const isEditAttributeFilter = ref(false);\r\n\r\n        // #endregion\r\n\r\n        // #region Computed Values\r\n\r\n        const fullTextSearchEnabled = computed((): boolean => {\r\n            return props.modelValue.filterSettings?.fullTextSearchEnabled ?? false;\r\n        });\r\n\r\n        const yearSearchEnabled = computed((): boolean => {\r\n            return props.modelValue.filterSettings?.yearSearchEnabled ?? false;\r\n        });\r\n\r\n        const yearSearchLabel = computed((): string => {\r\n            return props.modelValue.filterSettings?.yearSearchLabel || \"Year\";\r\n        });\r\n\r\n        const yearSearchFilterControl = computed((): ContentCollectionFilterControl => {\r\n            return props.modelValue.filterSettings?.yearSearchFilterControl ?? ContentCollectionFilterControl.Pills;\r\n        });\r\n\r\n        const yearSearchFilterIsMultipleSelection = computed((): boolean => {\r\n            return props.modelValue.filterSettings?.yearSearchFilterIsMultipleSelection ?? false;\r\n        });\r\n\r\n        const yearSearchValues = computed((): ListItemBag[] => {\r\n            return [\r\n                {\r\n                    text: \"Filter Label\",\r\n                    value: yearSearchLabel.value\r\n                },\r\n                {\r\n                    text: \"Filter Control\",\r\n                    value: yearSearchFilterControl.value === ContentCollectionFilterControl.Dropdown ? \"Dropdown\" : \"Pills\"\r\n                },\r\n                {\r\n                    text: \"Filter Mode\",\r\n                    value: yearSearchFilterIsMultipleSelection.value ? \"Multi-Select\" : \"Single-Select\"\r\n                }\r\n            ];\r\n        });\r\n\r\n        const attributeFilters = computed((): AttributeFilterBag[] => {\r\n            return props.modelValue.filterSettings?.attributeFilters ?? [];\r\n        });\r\n\r\n        const customFieldFilters = computed((): CustomFieldFilterBag[] => {\r\n            return props.modelValue.filterSettings?.customFieldFilters ?? [];\r\n        });\r\n\r\n        // #endregion\r\n\r\n        // #region Functions\r\n\r\n        // #endregion\r\n\r\n        // #region Event Handlers\r\n\r\n        /**\r\n         * Event handler for when the person clicks the edit button on one of\r\n         * the attribute search filters.\r\n         *\r\n         * @param filter The attribute filter that should be edited.\r\n         */\r\n        const onEditAttributeFilter = (filter: AttributeFilterBag): void => {\r\n            if (!filter.attributeKey) {\r\n                return;\r\n            }\r\n\r\n            // Initialize the standard values that should be edited.\r\n            editFilterKey.value = filter.attributeKey;\r\n            editFilterName.value = filter.attributeName ?? \"\";\r\n            editFilterEnabled.value = filter.isEnabled;\r\n            editFilterLabel.value = filter.filterLabel ?? filter.attributeName ?? \"\";\r\n\r\n            // Special logic for Boolean field types since they are hard coded\r\n            // to a Boolean control and don't show a filter type.\r\n            if (areEqual(filter.fieldTypeGuid, FieldType.Boolean)) {\r\n                editFilterControl.value = ContentCollectionFilterControl.Boolean.toString();\r\n                editFilterControlItems.value = editFilterControlBooleanItems;\r\n                editFilterType.value = \"0\";\r\n                editShowFilterType.value = false;\r\n            }\r\n            else {\r\n                editFilterControl.value = filter.filterControl.toString();\r\n                editFilterControlItems.value = editFilterControlStandardItems;\r\n                editFilterType.value = filter.isMultipleSelection ? \"1\" : \"0\";\r\n                editShowFilterType.value = true;\r\n            }\r\n\r\n            isEditFullTextSearch.value = false;\r\n            isEditAttributeFilter.value = true;\r\n            isEditModalOpen.value = true;\r\n        };\r\n\r\n        /**\r\n         * Event handler for when the person clicks the edit button on one of\r\n         * the custom field search filters.\r\n         *\r\n         * @param filter The custom field filter that should be edited.\r\n         */\r\n        const onEditCustomFieldFilter = (filter: CustomFieldFilterBag): void => {\r\n            if (!filter.key) {\r\n                return;\r\n            }\r\n\r\n            // Initialize the standard values that should be edited.\r\n            editFilterKey.value = filter.key;\r\n            editFilterName.value = filter.title ?? \"\";\r\n            editFilterEnabled.value = filter.isEnabled;\r\n            editFilterLabel.value = filter.filterLabel ?? filter.title ?? \"\";\r\n\r\n            editFilterControl.value = filter.filterControl.toString();\r\n            editFilterControlItems.value = editFilterControlStandardItems;\r\n            editFilterType.value = filter.isMultipleSelection ? \"1\" : \"0\";\r\n            editShowFilterType.value = true;\r\n\r\n            isEditFullTextSearch.value = false;\r\n            isEditAttributeFilter.value = false;\r\n            isEditModalOpen.value = true;\r\n        };\r\n\r\n        /**\r\n         * Event handler for when the person clicks the edit button on the\r\n         * full text search filter.\r\n         */\r\n        const onEditFullTextSearch = (): void => {\r\n            editFilterKey.value = \"\";\r\n            editFilterName.value = \"Full Text Search\";\r\n            editFilterEnabled.value = fullTextSearchEnabled.value;\r\n            editShowFilterType.value = false;\r\n\r\n            isEditFullTextSearch.value = true;\r\n            isEditModalOpen.value = true;\r\n        };\r\n\r\n        /**\r\n         * Event handler for when the person clicks the edit button on the\r\n         * year search filter.\r\n         */\r\n        const onEditYearFilter = (): void => {\r\n            editFilterKey.value = \"\";\r\n            editFilterName.value = \"Year\";\r\n            editFilterEnabled.value = yearSearchEnabled.value;\r\n            editFilterLabel.value = yearSearchLabel.value;\r\n            editFilterControl.value = yearSearchFilterControl.value.toString();\r\n            editFilterControlItems.value = editFilterControlStandardItems;\r\n            editFilterType.value = yearSearchFilterIsMultipleSelection.value ? \"1\" : \"0\";\r\n            editShowFilterType.value = true;\r\n\r\n            isEditFullTextSearch.value = false;\r\n            isEditModalOpen.value = true;\r\n        };\r\n\r\n        /**\r\n         * Event handler for when the person clicks the save button on the\r\n         * modal while editing a search filter.\r\n         */\r\n        const onModalSave = async (): Promise<void> => {\r\n            if (!props.modelValue.filterSettings) {\r\n                return;\r\n            }\r\n\r\n            // Create a new bag so we don't modify the live data.\r\n            const bag: FilterSettingsBag = {\r\n                ...props.modelValue.filterSettings\r\n            };\r\n\r\n            let validProperties: string[];\r\n\r\n            if (isEditFullTextSearch.value) {\r\n                // Update just the full text search filter settings.\r\n                bag.fullTextSearchEnabled = editFilterEnabled.value;\r\n                validProperties = [\"fullTextSearchEnabled\"];\r\n            }\r\n            else if (!editFilterKey.value) {\r\n                // Update just the year search filter settings.\r\n                bag.yearSearchEnabled = editFilterEnabled.value;\r\n                bag.yearSearchFilterControl = toNumberOrNull(editFilterControl.value) as ContentCollectionFilterControl ?? ContentCollectionFilterControl.Pills;\r\n                bag.yearSearchFilterIsMultipleSelection = editFilterType.value === \"1\";\r\n                bag.yearSearchLabel = editFilterLabel.value;\r\n                validProperties = [\"yearSearchEnabled\", \"yearSearchFilterControl\", \"yearSearchFilterIsMultipleSelection\", \"yearSearchLabel\"];\r\n            }\r\n            else if (isEditAttributeFilter.value) {\r\n                // Update the attribute search filter settings.\r\n\r\n                // Create a new array so we don't modify the live data.\r\n                bag.attributeFilters = [...(bag.attributeFilters ?? [])];\r\n\r\n                // Find the specific attribute filter that is currently\r\n                // being edited in the modal.\r\n                const filterIndex = bag.attributeFilters.findIndex(f => f.attributeKey === editFilterKey.value);\r\n\r\n                if (filterIndex === -1) {\r\n                    return;\r\n                }\r\n\r\n                // Make a copy of the filter so we don't modify the live data.\r\n                const filter = {\r\n                    ...bag.attributeFilters[filterIndex]\r\n                };\r\n\r\n                filter.isEnabled = editFilterEnabled.value;\r\n                filter.filterLabel = editFilterLabel.value;\r\n\r\n                // More special logic around the Boolean field type.\r\n                if (areEqual(filter.fieldTypeGuid, FieldType.Boolean)) {\r\n                    filter.filterControl = ContentCollectionFilterControl.Boolean;\r\n                    filter.isMultipleSelection = false;\r\n                }\r\n                else {\r\n                    filter.filterControl = toNumberOrNull(editFilterControl.value) as ContentCollectionFilterControl ?? ContentCollectionFilterControl.Pills;\r\n                    filter.isMultipleSelection = editFilterType.value === \"1\";\r\n                }\r\n\r\n                bag.attributeFilters.splice(filterIndex, 1, filter);\r\n\r\n                validProperties = [\"attributeFilters\"];\r\n            }\r\n            else {\r\n                // Update the custom field search filter settings.\r\n\r\n                // Create a new array so we don't modify the live data.\r\n                bag.customFieldFilters = [...(bag.customFieldFilters ?? [])];\r\n\r\n                // Find the specific field filter that is currently\r\n                // being edited in the modal.\r\n                const filterIndex = bag.customFieldFilters.findIndex(f => f.key === editFilterKey.value);\r\n\r\n                if (filterIndex === -1) {\r\n                    return;\r\n                }\r\n\r\n                // Make a copy of the filter so we don't modify the live data.\r\n                const filter = {\r\n                    ...bag.customFieldFilters[filterIndex]\r\n                };\r\n\r\n                filter.isEnabled = editFilterEnabled.value;\r\n                filter.filterLabel = editFilterLabel.value;\r\n                filter.filterControl = toNumberOrNull(editFilterControl.value) as ContentCollectionFilterControl ?? ContentCollectionFilterControl.Pills;\r\n                filter.isMultipleSelection = editFilterType.value === \"1\";\r\n\r\n                bag.customFieldFilters.splice(filterIndex, 1, filter);\r\n\r\n                validProperties = [\"customFieldFilters\"];\r\n            }\r\n\r\n            const box: DetailBlockBox<FilterSettingsBag, undefined> = {\r\n                entity: bag,\r\n                validProperties,\r\n                isEditable: true\r\n            };\r\n            const data = {\r\n                key: props.modelValue.idKey,\r\n                box\r\n            };\r\n\r\n            const result = await invokeBlockAction<DetailBlockBox<ContentCollectionBag, ContentCollectionDetailOptionsBag>>(\"SaveFilterSettings\", data);\r\n\r\n            if (!result.isSuccess || !result.data?.entity) {\r\n                alert(result.errorMessage || \"Unable to save filter settings.\");\r\n                return;\r\n            }\r\n\r\n            emit(\"update:modelValue\", result.data.entity);\r\n            isEditModalOpen.value = false;\r\n        };\r\n\r\n        // #endregion\r\n\r\n        return {\r\n            attributeFilters,\r\n            customFieldFilters,\r\n            editFilterControl,\r\n            editFilterControlItems,\r\n            editFilterEnabled,\r\n            editFilterLabel,\r\n            editFilterName,\r\n            editFilterType,\r\n            editFilterTypeItems,\r\n            editShowFilterType,\r\n            fullTextSearchEnabled,\r\n            isEditFullTextSearch,\r\n            isEditModalOpen,\r\n            onEditAttributeFilter,\r\n            onEditCustomFieldFilter,\r\n            onEditFullTextSearch,\r\n            onEditYearFilter,\r\n            onModalSave,\r\n            yearSearchEnabled,\r\n            yearSearchValues\r\n        };\r\n    },\r\n\r\n    template: `\r\n<Panel title=\"Search Filters\">\r\n    <SectionHeader title=\"Search Filters\"\r\n        description=\"The configuration below allows you to set various ways your collection can be filtered.\" />\r\n\r\n    <SearchFilter :isEnabled=\"fullTextSearchEnabled\"\r\n        title=\"Full Text Search\"\r\n        description=\"Uses the content field of the content channel item or description of an Event Item.\"\r\n        @edit=\"onEditFullTextSearch\" />\r\n\r\n    <SearchFilter :isEnabled=\"yearSearchEnabled\"\r\n        title=\"Year\"\r\n        description=\"Uses the content channel item's start date to determine the year of the content.\"\r\n        :values=\"yearSearchValues\"\r\n        @edit=\"onEditYearFilter\" />\r\n\r\n    <SectionHeader title=\"Attribute Filters\"\r\n        description=\"The settings below allow you to provide filters for attributes that you have configured to add to your content collection.\"\r\n        class=\"margin-t-lg\" />\r\n\r\n    <AttributeSearchFilter v-for=\"attribute in attributeFilters\"\r\n        :modelValue=\"attribute\"\r\n        @edit=\"onEditAttributeFilter\" />\r\n\r\n    <SectionHeader title=\"Custom Field Filters\"\r\n        description=\"The settings below allow you to provide filters for custom fields that you have configured on your content collection.\"\r\n        class=\"margin-t-lg\" />\r\n\r\n    <CustomFieldSearchFilter v-for=\"customField in customFieldFilters\"\r\n        :modelValue=\"customField\"\r\n        @edit=\"onEditCustomFieldFilter\" />\r\n</Panel>\r\n\r\n<Modal v-model=\"isEditModalOpen\"\r\n    title=\"Edit Search Filter\"\r\n    class=\"search-filter-modal\"\r\n    saveText=\"Save\"\r\n    @save=\"onModalSave\">\r\n    <h1>{{ editFilterName }}</h1>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <InlineSwitch v-model=\"editFilterEnabled\"\r\n                label=\"Enable Filter\" />\r\n\r\n            <TextBox v-if=\"!isEditFullTextSearch\"\r\n                v-model=\"editFilterLabel\"\r\n                label=\"Filter Label\"\r\n                rules=\"required\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div v-if=\"!isEditFullTextSearch\" class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <RadioButtonList v-model=\"editFilterControl\"\r\n                label=\"Filter Control\"\r\n                horizontal\r\n                :items=\"editFilterControlItems\" />\r\n        </div>\r\n\r\n        <div class=\"col-md-6\">\r\n            <RadioButtonList v-if=\"editShowFilterType\"\r\n                v-model=\"editFilterType\"\r\n                label=\"Filter Type\"\r\n                horizontal\r\n                :items=\"editFilterTypeItems\" />\r\n        </div>\r\n    </div>\r\n</Modal>\r\n`\r\n});\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { computed, defineComponent, PropType, ref } from \"vue\";\r\nimport AttributeValuesContainer from \"@Obsidian/Controls/attributeValuesContainer\";\r\nimport ValueDetailList from \"@Obsidian/Controls/valueDetailList\";\r\nimport { ValueDetailListItemBuilder } from \"@Obsidian/Core/Controls/valueDetailListItemBuilder\";\r\nimport { ValueDetailListItem } from \"@Obsidian/Types/Controls/valueDetailListItem\";\r\nimport { ContentCollectionBag } from \"@Obsidian/ViewModels/Blocks/Cms/ContentCollectionDetail/contentCollectionBag\";\r\nimport { ContentCollectionDetailOptionsBag } from \"@Obsidian/ViewModels/Blocks/Cms/ContentCollectionDetail/contentCollectionDetailOptionsBag\";\r\nimport { pluralConditional } from \"@Obsidian/Utility/stringUtils\";\r\n\r\nexport default defineComponent({\r\n    name: \"Cms.ContentCollectionDetail.ViewPanel\",\r\n\r\n    props: {\r\n        modelValue: {\r\n            type: Object as PropType<ContentCollectionBag>,\r\n            required: false\r\n        },\r\n\r\n        options: {\r\n            type: Object as PropType<ContentCollectionDetailOptionsBag>,\r\n            required: true\r\n        }\r\n    },\r\n\r\n    components: {\r\n        AttributeValuesContainer,\r\n        ValueDetailList\r\n    },\r\n\r\n    setup(props) {\r\n        // #region Values\r\n\r\n        const attributes = ref(props.modelValue?.attributes ?? {});\r\n        const attributeValues = ref(props.modelValue?.attributeValues ?? {});\r\n\r\n        // #endregion\r\n\r\n        // #region Computed Values\r\n\r\n        /** The values to display full-width at the top of the block. */\r\n        const topValues = computed((): ValueDetailListItem[] => {\r\n            const valueBuilder = new ValueDetailListItemBuilder();\r\n\r\n            if (!props.modelValue) {\r\n                return valueBuilder.build();\r\n            }\r\n\r\n            if (props.modelValue.description) {\r\n                valueBuilder.addTextValue(\"Description\", props.modelValue.description);\r\n            }\r\n\r\n            return valueBuilder.build();\r\n        });\r\n\r\n        /** The values to display at half-width on the left side of the block. */\r\n        const leftSideValues = computed((): ValueDetailListItem[] => {\r\n            const valueBuilder = new ValueDetailListItemBuilder();\r\n\r\n            if (!props.modelValue) {\r\n                return valueBuilder.build();\r\n            }\r\n\r\n            valueBuilder.addTextValue(\"Collection Key\", props.modelValue.collectionKey ?? \"\");\r\n\r\n            const segmentsLabel = `<span class=\"label label-${props.modelValue.enableSegments ? \"success\" : \"default\"}\">Segments</span>`;\r\n            const requestFiltersLabel = `<span class=\"label label-${props.modelValue.enableRequestFilters ? \"success\" : \"default\"}\">Request Filters</span>`;\r\n            valueBuilder.addHtmlValue(\"Personalization\", `<div class=\"label-container\">${segmentsLabel}${requestFiltersLabel}</div>`);\r\n\r\n            return valueBuilder.build();\r\n        });\r\n\r\n        /** The values to display at half-width on the left side of the block. */\r\n        const rightSideValues = computed((): ValueDetailListItem[] => {\r\n            const valueBuilder = new ValueDetailListItemBuilder();\r\n\r\n            if (!props.modelValue) {\r\n                return valueBuilder.build();\r\n            }\r\n\r\n            if (props.modelValue.trendingEnabled) {\r\n                const label = `<span class=\"label label-success\">Enabled</span>`;\r\n                const days = `<span class=\"text-xs\"><i class=\"fa fa-calendar-alt\"></i> ${props.modelValue.trendingWindowDay} ${pluralConditional(props.modelValue.trendingWindowDay, \"day\", \"days\")}</span>`;\r\n                const items = `<span class=\"text-xs\"><i class=\"fa fa-file-alt\"></i> ${props.modelValue.trendingMaxItems} ${pluralConditional(props.modelValue.trendingMaxItems, \"item\", \"items\")}</span>`;\r\n                valueBuilder.addHtmlValue(\"Trending\", `<div class=\"content-collection-trending-state text-muted\">${label}${days}${items}</div>`);\r\n            }\r\n            else {\r\n                valueBuilder.addHtmlValue(\"Trending\", `<span class=\"label label-default\">Disabled</span>`);\r\n            }\r\n\r\n            return valueBuilder.build();\r\n        });\r\n\r\n        // #endregion\r\n\r\n        // #region Functions\r\n\r\n        // #endregion\r\n\r\n        // #region Event Handlers\r\n\r\n        // #endregion\r\n\r\n        return {\r\n            attributes,\r\n            attributeValues,\r\n            leftSideValues,\r\n            rightSideValues,\r\n            topValues\r\n        };\r\n    },\r\n\r\n    template: `\r\n<fieldset>\r\n    <ValueDetailList :modelValue=\"topValues\" />\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <ValueDetailList :modelValue=\"leftSideValues\" />\r\n        </div>\r\n\r\n        <div class=\"col-md-6\">\r\n            <ValueDetailList :modelValue=\"rightSideValues\" />\r\n        </div>\r\n    </div>\r\n\r\n    <AttributeValuesContainer :modelValue=\"attributeValues\" :attributes=\"attributes\" :numberOfColumns=\"2\" />\r\n</fieldset>\r\n`\r\n});\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nexport const enum NavigationUrlKey {\r\n    ParentPage = \"ParentPage\"\r\n}\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { computed, defineComponent, ref } from \"vue\";\r\nimport NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\nimport { EntityType } from \"@Obsidian/SystemGuids/entityType\";\r\nimport DetailBlock from \"@Obsidian/Templates/detailBlock\";\r\nimport { DetailPanelMode } from \"@Obsidian/Enums/Controls/detailPanelMode\";\r\nimport { PanelAction } from \"@Obsidian/Types/Controls/panelAction\";\r\nimport ContentSources from \"./ContentCollectionDetail/contentSources.partial\";\r\nimport EditPanel from \"./ContentCollectionDetail/editPanel.partial\";\r\nimport SearchFilters from \"./ContentCollectionDetail/searchFilters.partial\";\r\nimport ViewPanel from \"./ContentCollectionDetail/viewPanel.partial\";\r\nimport { getSecurityGrant, provideSecurityGrant, refreshDetailAttributes, useConfigurationValues, useInvokeBlockAction } from \"@Obsidian/Utility/block\";\r\nimport { debounce } from \"@Obsidian/Utility/util\";\r\nimport { NavigationUrlKey } from \"./ContentCollectionDetail/types.partial\";\r\nimport { DetailBlockBox } from \"@Obsidian/ViewModels/Blocks/detailBlockBox\";\r\nimport { ContentCollectionBag } from \"@Obsidian/ViewModels/Blocks/Cms/ContentCollectionDetail/contentCollectionBag\";\r\nimport { ContentCollectionDetailOptionsBag } from \"@Obsidian/ViewModels/Blocks/Cms/ContentCollectionDetail/contentCollectionDetailOptionsBag\";\r\nimport { alert } from \"@Obsidian/Utility/dialogs\";\r\n\r\nexport default defineComponent({\r\n    name: \"Cms.ContentCollectionView\",\r\n\r\n    components: {\r\n        NotificationBox,\r\n        ContentSources,\r\n        SearchFilters,\r\n        EditPanel,\r\n        DetailBlock,\r\n        ViewPanel\r\n    },\r\n\r\n    setup() {\r\n        const config = useConfigurationValues<DetailBlockBox<ContentCollectionBag, ContentCollectionDetailOptionsBag>>();\r\n        const invokeBlockAction = useInvokeBlockAction();\r\n        const securityGrant = getSecurityGrant(config.securityGrantToken);\r\n\r\n        // #region Values\r\n\r\n        const blockError = ref(\"\");\r\n        const errorMessage = ref(\"\");\r\n\r\n        const contentCollectionViewBag = ref(config.entity);\r\n        const contentCollectionEditBag = ref<ContentCollectionBag | null>(null);\r\n\r\n        const panelMode = ref<DetailPanelMode>(DetailPanelMode.View);\r\n\r\n        const isContentSourcesActive = ref(true);\r\n\r\n        // The properties that are being edited in the UI. This is used to\r\n        // inform the server which incoming values have valid data in them.\r\n        const validProperties = [\r\n            \"attributeValues\",\r\n            \"description\",\r\n            \"enableRequestFilters\",\r\n            \"enableSegments\",\r\n            \"filterSettings\",\r\n            \"lastIndexDateTime\",\r\n            \"lastIndexItemCount\",\r\n            \"collectionKey\",\r\n            \"name\",\r\n            \"trendingEnabled\",\r\n            \"trendingGravity\",\r\n            \"trendingMaxItems\",\r\n            \"trendingWindowDay\",\r\n        ];\r\n\r\n        const refreshAttributesDebounce = debounce(() => refreshDetailAttributes(contentCollectionEditBag, validProperties, invokeBlockAction), undefined, true);\r\n\r\n        const isIndexRebuilding = ref(false);\r\n\r\n        // #endregion\r\n\r\n        // #region Computed Values\r\n\r\n        /**\r\n         * The entity name to display in the block panel.\r\n         */\r\n        const panelName = computed((): string => {\r\n            return contentCollectionViewBag.value?.name ?? \"\";\r\n        });\r\n\r\n        /**\r\n         * The identifier key value for this entity.\r\n         */\r\n        const entityKey = computed((): string => {\r\n            return contentCollectionViewBag.value?.idKey ?? \"\";\r\n        });\r\n\r\n        /**\r\n         * Additional labels to display in the block panel.\r\n         */\r\n        const blockLabels = computed((): PanelAction[] | null => {\r\n            const labels: PanelAction[] = [];\r\n\r\n            if (panelMode.value !== DetailPanelMode.View) {\r\n                return null;\r\n            }\r\n\r\n            return labels;\r\n        });\r\n\r\n        const isEditable = computed((): boolean => {\r\n            return config.isEditable === true;\r\n        });\r\n\r\n        const options = computed((): ContentCollectionDetailOptionsBag => {\r\n            return config.options ?? {};\r\n        });\r\n\r\n        const isViewing = computed((): boolean => {\r\n            return panelMode.value === DetailPanelMode.View;\r\n        });\r\n\r\n        const contentSourcesNavClass = computed((): string => {\r\n            return isContentSourcesActive.value ? \"active\" : \"\";\r\n        });\r\n\r\n        const searchFiltersNavClass = computed((): string => {\r\n            return isContentSourcesActive.value ? \"\" : \"active\";\r\n        });\r\n\r\n        const footerSecondaryActions = computed((): PanelAction[] => {\r\n            const actions: PanelAction[] = [];\r\n\r\n            if (config.isEditable) {\r\n                actions.push({\r\n                    type: \"default\",\r\n                    title: \"Rebuild Index\",\r\n                    iconCssClass: !isIndexRebuilding.value ? \"fa fa-download\" : \"fa fa-cog fa-spin\",\r\n                    disabled: isIndexRebuilding.value,\r\n                    handler: onRebuildIndex\r\n                });\r\n            }\r\n\r\n            return actions;\r\n        });\r\n\r\n        // #endregion\r\n\r\n        // #region Functions\r\n\r\n        // #endregion\r\n\r\n        // #region Event Handlers\r\n\r\n        /**\r\n         * Event handler for the Cancel button being clicked while in Edit mode.\r\n         * Handles redirect to parent page if creating a new entity.\r\n         *\r\n         * @returns true if the panel should leave edit mode; false if it should stay in edit mode; or a string containing a redirect URL.\r\n         */\r\n        const onCancelEdit = async (): Promise<boolean | string> => {\r\n            if (!contentCollectionEditBag.value?.idKey) {\r\n                if (config.navigationUrls?.[NavigationUrlKey.ParentPage]) {\r\n                    return config.navigationUrls[NavigationUrlKey.ParentPage];\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        };\r\n\r\n        /**\r\n         * Event handler for the Delete button being clicked. Sends the\r\n         * delete request to the server and then redirects to the target page.\r\n         *\r\n         * @returns false if it should stay on the page; or a string containing a redirect URL.\r\n         */\r\n        const onDelete = async (): Promise<false | string> => {\r\n            errorMessage.value = \"\";\r\n\r\n            const result = await invokeBlockAction<string>(\"Delete\", {\r\n                key: contentCollectionViewBag.value?.idKey\r\n            });\r\n\r\n            if (result.isSuccess && result.data) {\r\n                return result.data;\r\n            }\r\n            else {\r\n                errorMessage.value = result.errorMessage ?? \"Unknown error while trying to delete content collection.\";\r\n\r\n                return false;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Event handler for the Edit button being clicked. Request the edit\r\n         * details from the server and then enter edit mode.\r\n         *\r\n         * @returns true if the panel should enter edit mode; otherwise false.\r\n         */\r\n        const onEdit = async (): Promise<boolean> => {\r\n            const result = await invokeBlockAction<DetailBlockBox<ContentCollectionBag, ContentCollectionDetailOptionsBag>>(\"Edit\", {\r\n                key: contentCollectionViewBag.value?.idKey\r\n            });\r\n\r\n            if (result.isSuccess && result.data && result.data.entity) {\r\n                contentCollectionEditBag.value = result.data.entity;\r\n\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Event handler for when a value has changed that has an associated\r\n         * C# property name. This is used to detect changes to values that\r\n         * might cause qualified attributes to either show up or not show up.\r\n         *\r\n         * @param propertyName The name of the C# property that was changed.\r\n         */\r\n        const onPropertyChanged = (propertyName: string): void => {\r\n            // If we don't have any qualified attribute properties or this property\r\n            // is not one of them then do nothing.\r\n            if (!config.qualifiedAttributeProperties || !config.qualifiedAttributeProperties.some(n => n.toLowerCase() === propertyName.toLowerCase())) {\r\n                return;\r\n            }\r\n\r\n            refreshAttributesDebounce();\r\n        };\r\n\r\n        /**\r\n         * Event handler for the panel's Save event. Send the data to the server\r\n         * to be saved and then leave edit mode or redirect to target page.\r\n         *\r\n         * @returns true if the panel should leave edit mode; false if it should stay in edit mode; or a string containing a redirect URL.\r\n         */\r\n        const onSave = async (): Promise<boolean | string> => {\r\n            errorMessage.value = \"\";\r\n\r\n            const data: DetailBlockBox<ContentCollectionBag, ContentCollectionDetailOptionsBag> = {\r\n                entity: contentCollectionEditBag.value,\r\n                isEditable: true,\r\n                validProperties: validProperties\r\n            };\r\n\r\n            const result = await invokeBlockAction<ContentCollectionBag | string>(\"Save\", {\r\n                box: data\r\n            });\r\n\r\n            if (result.isSuccess && result.data) {\r\n                if (result.statusCode === 200 && typeof result.data === \"object\") {\r\n                    contentCollectionViewBag.value = result.data;\r\n\r\n                    return true;\r\n                }\r\n                else if (result.statusCode === 201 && typeof result.data === \"string\") {\r\n                    return result.data;\r\n                }\r\n            }\r\n\r\n            errorMessage.value = result.errorMessage ?? \"Unknown error while trying to save content collection.\";\r\n\r\n            return false;\r\n        };\r\n\r\n        /**\r\n         * Event handler for the nav menu to switch to the Content Sources tab.\r\n         */\r\n        const onContentSourcesNav = (): void => {\r\n            isContentSourcesActive.value = true;\r\n        };\r\n\r\n        /**\r\n         * Event handler for the nav menu to switch to the Search Filters tab.\r\n         */\r\n        const onSearchFiltersNav = (): void => {\r\n            isContentSourcesActive.value = false;\r\n        };\r\n\r\n        /**\r\n         * Event handler for the footer action to request the document index\r\n         * to be rebuilt.\r\n         */\r\n        const onRebuildIndex = async (): Promise<void> => {\r\n            if (isIndexRebuilding.value) {\r\n                return;\r\n            }\r\n\r\n            isIndexRebuilding.value = true;\r\n\r\n            const result = await invokeBlockAction<string>(\"RebuildIndex\", {\r\n                key: contentCollectionViewBag.value?.idKey\r\n            });\r\n\r\n            isIndexRebuilding.value = false;\r\n\r\n            if (result.isSuccess && result.data) {\r\n                await alert(result.data);\r\n            }\r\n            else {\r\n                await alert(result.errorMessage || \"Unknown error while trying to rebuild the index.\");\r\n            }\r\n        };\r\n\r\n        // #endregion\r\n\r\n        provideSecurityGrant(securityGrant);\r\n\r\n        // Handle any initial error conditions or the need to go into edit mode.\r\n        if (config.errorMessage) {\r\n            blockError.value = config.errorMessage;\r\n        }\r\n        else if (!config.entity) {\r\n            blockError.value = \"The specified content collection could not be viewed.\";\r\n        }\r\n        else if (!config.entity.idKey) {\r\n            contentCollectionEditBag.value = config.entity;\r\n            panelMode.value = DetailPanelMode.Add;\r\n        }\r\n\r\n        return {\r\n            contentCollectionViewBag,\r\n            contentCollectionEditBag,\r\n            contentSourcesNavClass,\r\n            blockError,\r\n            blockLabels,\r\n            entityKey,\r\n            entityTypeGuid: EntityType.ContentCollection,\r\n            errorMessage,\r\n            isContentSourcesActive,\r\n            isEditable,\r\n            isViewing,\r\n            onCancelEdit,\r\n            onContentSourcesNav,\r\n            onDelete,\r\n            onEdit,\r\n            onPropertyChanged,\r\n            onSave,\r\n            onSearchFiltersNav,\r\n            options,\r\n            panelMode,\r\n            panelName,\r\n            searchFiltersNavClass,\r\n            footerSecondaryActions\r\n        };\r\n    },\r\n\r\n    template: `\r\n<NotificationBox v-if=\"blockError\" alertType=\"warning\" v-text=\"blockError\" />\r\n\r\n<NotificationBox v-if=\"errorMessage\" alertType=\"danger\" v-text=\"errorMessage\" />\r\n\r\n<v-style>\r\n    .content-collection-detail .label-container > .label + .label {\r\n        margin-left: 8px;\r\n    }\r\n    .content-collection-detail .content-collection-trending-state > span + span {\r\n        margin-left: 8px;\r\n    }\r\n\r\n    .content-collection-detail .collection-source {\r\n        display: flex;\r\n        min-height: 64px;\r\n        border-radius: 8px;\r\n        border: 1px solid #c4c4c4;\r\n        overflow: clip;\r\n        align-items: center;\r\n    }\r\n\r\n    .content-collection-detail .collection-source + .collection-source {\r\n        margin-top: 16px;\r\n    }\r\n\r\n    .content-collection-detail .collection-source > .bar {\r\n        width: 8px;\r\n        align-self: stretch;\r\n    }\r\n\r\n    .content-collection-detail .collection-source > .icon {\r\n        margin: 0px 8px;\r\n        width: 34px;\r\n        height: 34px;\r\n        border-radius: 17px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n\r\n    .content-collection-detail .collection-source > .title {\r\n        flex: 1 0 0;\r\n    }\r\n\r\n    .content-collection-detail .collection-source > .title > .text {\r\n        font-weight: bold;\r\n    }\r\n\r\n    .content-collection-detail .collection-source > .title > .secondary-text {\r\n        color: #737475;\r\n        font-size: 0.8em;\r\n    }\r\n\r\n    /* Overrides to fix panel-body targets. */\r\n    .content-collection-detail .panel-body .collection-source > .actions {\r\n        margin: initial;\r\n        border: initial;\r\n    }\r\n\r\n    .content-collection-detail .collection-source > .actions > .item-count {\r\n        margin-right: 12px;\r\n    }\r\n\r\n    .content-collection-detail .search-filter-row {\r\n        display: flex;\r\n    }\r\n\r\n    .content-collection-detail .search-filter-row + .search-filter-row {\r\n        border-top: 1px solid #dfe0e1;\r\n        padding-top: 24px;\r\n    }\r\n\r\n    .content-collection-detail .search-filter-icon {\r\n        width: 48px;\r\n        text-align: center;\r\n        font-size: 20px;\r\n    }\r\n\r\n    .content-collection-detail .search-filter-content {\r\n        flex: 1 0 0;\r\n    }\r\n\r\n    .content-collection-detail .search-filter-title > .title {\r\n        font-weight: bold;\r\n    }\r\n\r\n    .content-collection-detail .search-filter-description {\r\n    }\r\n\r\n    .content-collection-detail .search-filter-content > fieldset {\r\n        margin-top: 24px;\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n    }\r\n\r\n    .content-collection-detail .search-filter-content > fieldset > dl {\r\n        flex: 1 0 33.33%;\r\n    }\r\n</v-style>\r\n\r\n<div v-if=\"!blockError\">\r\n    <DetailBlock v-model:mode=\"panelMode\"\r\n        :name=\"panelName\"\r\n        :labels=\"blockLabels\"\r\n        :entityKey=\"entityKey\"\r\n        :entityTypeGuid=\"entityTypeGuid\"\r\n        entityTypeName=\"ContentCollection\"\r\n        :isAuditHidden=\"false\"\r\n        :isBadgesVisible=\"true\"\r\n        :isDeleteVisible=\"isEditable\"\r\n        :isEditVisible=\"isEditable\"\r\n        :isFollowVisible=\"false\"\r\n        :isSecurityHidden=\"true\"\r\n        :footerSecondaryActions=\"footerSecondaryActions\"\r\n        @cancelEdit=\"onCancelEdit\"\r\n        @delete=\"onDelete\"\r\n        @edit=\"onEdit\"\r\n        @save=\"onSave\">\r\n        <template #view>\r\n            <ViewPanel :modelValue=\"contentCollectionViewBag\" :options=\"options\" />\r\n        </template>\r\n\r\n        <template #edit>\r\n            <EditPanel v-model=\"contentCollectionEditBag\" :options=\"options\" @propertyChanged=\"onPropertyChanged\" />\r\n        </template>\r\n    </DetailBlock>\r\n\r\n    <div v-if=\"isViewing\">\r\n        <ul class=\"nav nav-pills nav-sm margin-b-md\">\r\n            <li :class=\"contentSourcesNavClass\" role=\"presentation\"><a href=\"#\" @click.prevent=\"onContentSourcesNav\">Content Sources</a></li>\r\n            <li :class=\"searchFiltersNavClass\" role=\"presentation\"><a href=\"#\" @click.prevent=\"onSearchFiltersNav\">Search Filters</a></li>\r\n        </ul>\r\n\r\n        <ContentSources v-if=\"isContentSourcesActive\" v-model=\"contentCollectionViewBag\" />\r\n        <SearchFilters v-else v-model=\"contentCollectionViewBag\" />\r\n    </div>\r\n</div>\r\n`\r\n});\r\n"],"names":["validationId","newGuid","formState","useFormState","key","ref","_props$modelValue$key","_props$modelValue","props","modelValue","title","_props$modelValue$tit","_props$modelValue2","isMultiple","_props$modelValue$isM","_props$modelValue3","template","_props$modelValue$tem","_props$modelValue4","isEditMode","editMode","isSaveDisabled","computed","value","updateValidation","setError","onEditClick","emit","onRemoveClick","onAcceptClick","replace","onCancelClick","_props$modelValue$key2","_props$modelValue5","_props$modelValue$tit2","_props$modelValue6","_props$modelValue$isM2","_props$modelValue7","_props$modelValue$tem2","_props$modelValue8","watch","_props$modelValue$key3","_props$modelValue9","_props$modelValue$tit3","_props$modelValue10","_props$modelValue$isM3","_props$modelValue11","_props$modelValue$tem3","_props$modelValue12","calculateColorBrightness","color","undefined","node","document","createElement","setAttribute","concat","body","appendChild","computedColor","window","getComputedStyle","rgbaMatch","match","rgba","split","map","Number","brightness","Math","round","min","remove","defineComponent","name","components","RockButton","type","Object","required","emits","_value","setup","_ref","barStyle","backgroundColor","iconStyle","_calculateColorBright","iconCssClass","_props$modelValue$ico","_props$modelValue$nam","includes","attributes","length","attributeNames","a","_a$text","text","join","itemCount","onDeleteClick","CheckBoxList","CustomKeySource","DropDownList","Modal","NumberBox","Panel","SectionHeader","Source","directives","DragReorder","_props$modelValue$sou","invokeBlockAction","useInvokeBlockAction","collectionSources","sources","isAddSourceOpen","addSourceMenuRef","sourceEditBag","isSourceModalOpen","sourceSelectedEntity","sourceSelectedEntityAttributes","sourceEntityItems","sourceEntityAttributeTable","sourceSelectedEntityOccurrences","sourceCustomFields","sourceNewCustomField","addSourceDropdownClass","sourceModalTitle","isAddingSource","_sourceEditBag$value","guid","isSourceModalCalendar","_sourceEditBag$value2","areEqual","entityTypeGuid","EntityType","EventCalendar","sourceModalEntityTitle","_sourceEditBag$value3","ContentChannel","sourceModalEntityName","_sourceEditBag$value$","_sourceEditBag$value4","sourceEntityAttributeItems","_sourceEntityAttribut","li","category","onAddSourceWindowClick","event","_event$target","target","HTMLElement","menu","closest","onAddSourceClick","onAddCalendarSource","_ref2","_asyncToGenerator","result","data","alert","errorMessage","filter","e","some","s","entityGuid","reduce","table","c","_c$guid","_c$attributes","occurrencesToShow","apply","arguments","onAddContentChannelSource","_ref3","_c$guid2","_c$attributes2","onSourceSave","_ref4","_sourceEditBag$value5","_sourceSelectedEntity","_result$data","bag","customFields","idKey","isSuccess","entity","onDeleteSource","_ref5","source","_result$data2","confirmDelete","sourceGuid","_x","onEditSource","_ref6","_source$entityGuid","_source$attributes$ma","_source$attributes","availableContent","v","_v$value","_c$guid3","_c$attributes3","_x2","onSourceReorder","_ref7","beforeValue","_beforeValue$guid","beforeGuid","_x3","_x4","onAddCustomFieldClick","onNewCustomFieldSave","field","push","onNewCustomFieldEditModeChanged","onCustomFieldRemove","index","splice","reorderDragOptions","useDragReorder","_props$modelValue$sou2","updateRefValue","addEventListener","removeEventListener","onBeforeUnmount","enablePersonalizationItems","AttributeValuesContainer","CheckBox","TextBox","_props$modelValue$att","_props$modelValue$att2","_props$modelValue$des","_props$modelValue$col","attributeValues","description","propertyRef","collectionKey","trendingEnabled","trendingWindowDay","trendingMaxItems","trendingGravity","enableSegments","enableRequestFilters","propRefs","enablePersonalization","get","values","set","_props$modelValue$att3","_props$modelValue$att4","_props$modelValue$des2","_props$modelValue$nam2","_props$modelValue$col2","newValue","_objectSpread","watchPropertyChanges","isEnabled","Boolean","default","isInconsistent","String","subtitle","Array","edit","SearchFilter","attributeName","fieldTypeName","sourceNames","filterLabel","fieldTypeGuid","FieldType","filterControl","ContentCollectionFilterControl","Dropdown","isMultipleSelection","onEdit","editFilterTypeItems","editFilterControlStandardItems","Pills","toString","editFilterControlBooleanItems","AttributeSearchFilter","CustomFieldSearchFilter","InlineSwitch","RadioButtonList","console","log","editFilterKey","editFilterName","editFilterControl","editFilterControlItems","editFilterEnabled","editFilterLabel","editFilterType","editShowFilterType","isEditModalOpen","isEditFullTextSearch","isEditAttributeFilter","fullTextSearchEnabled","_props$modelValue$fil","_props$modelValue$fil2","filterSettings","yearSearchEnabled","_props$modelValue$fil3","_props$modelValue$fil4","yearSearchLabel","_props$modelValue$fil5","yearSearchFilterControl","_props$modelValue$fil6","_props$modelValue$fil7","yearSearchFilterIsMultipleSelection","_props$modelValue$fil8","_props$modelValue$fil9","yearSearchValues","attributeFilters","_props$modelValue$fil10","_props$modelValue$fil11","customFieldFilters","_props$modelValue$fil12","_props$modelValue$fil13","onEditAttributeFilter","_filter$attributeName","_filter$filterLabel","attributeKey","onEditCustomFieldFilter","_filter$title","_filter$filterLabel2","onEditFullTextSearch","onEditYearFilter","onModalSave","validProperties","toNumberOrNull","_bag$attributeFilters","filterIndex","findIndex","f","_bag$customFieldFilte","box","isEditable","options","ValueDetailList","topValues","valueBuilder","ValueDetailListItemBuilder","build","addTextValue","leftSideValues","segmentsLabel","requestFiltersLabel","addHtmlValue","rightSideValues","label","days","pluralConditional","items","NavigationUrlKey","NotificationBox","ContentSources","SearchFilters","EditPanel","DetailBlock","ViewPanel","config","useConfigurationValues","securityGrant","getSecurityGrant","securityGrantToken","blockError","contentCollectionViewBag","contentCollectionEditBag","panelMode","DetailPanelMode","View","isContentSourcesActive","refreshAttributesDebounce","debounce","refreshDetailAttributes","isIndexRebuilding","panelName","_contentCollectionVie","_contentCollectionVie2","entityKey","_contentCollectionVie3","_contentCollectionVie4","blockLabels","labels","_config$options","isViewing","contentSourcesNavClass","searchFiltersNavClass","footerSecondaryActions","actions","disabled","handler","onRebuildIndex","onCancelEdit","_contentCollectionEdi","_config$navigationUrl","navigationUrls","ParentPage","onDelete","_contentCollectionVie5","_result$errorMessage","_contentCollectionVie6","onPropertyChanged","propertyName","qualifiedAttributeProperties","n","toLowerCase","onSave","_result$errorMessage2","statusCode","onContentSourcesNav","onSearchFiltersNav","_contentCollectionVie7","provideSecurityGrant","Add","ContentCollection"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAyFI,IAAIA,YAAY,GAAGC,OAAO,EAAE,CAAA;UAC5B,IAAMC,SAAS,GAAGC,YAAY,EAAE,CAAA;UAChC,IAAMC,GAAG,GAAGC,GAAG,CAAA,CAAAC,qBAAA,GAAAC,CAAAA,iBAAA,GAACC,KAAK,CAACC,UAAU,cAAAF,iBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAhBA,iBAAA,CAAkBH,GAAG,MAAA,IAAA,IAAAE,qBAAA,KAAAA,KAAAA,CAAAA,GAAAA,qBAAA,GAAI,EAAE,CAAC,CAAA;UAC5C,IAAMI,KAAK,GAAGL,GAAG,CAAA,CAAAM,qBAAA,GAAAC,CAAAA,kBAAA,GAACJ,KAAK,CAACC,UAAU,cAAAG,kBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAhBA,kBAAA,CAAkBF,KAAK,MAAA,IAAA,IAAAC,qBAAA,KAAAA,KAAAA,CAAAA,GAAAA,qBAAA,GAAI,EAAE,CAAC,CAAA;UAChD,IAAME,UAAU,GAAGR,GAAG,CAAA,CAAAS,qBAAA,GAAAC,CAAAA,kBAAA,GAACP,KAAK,CAACC,UAAU,cAAAM,kBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAhBA,kBAAA,CAAkBF,UAAU,MAAA,IAAA,IAAAC,qBAAA,KAAAA,KAAAA,CAAAA,GAAAA,qBAAA,GAAI,KAAK,CAAC,CAAA;UAC7D,IAAME,QAAQ,GAAGX,GAAG,CAAA,CAAAY,qBAAA,GAAAC,CAAAA,kBAAA,GAACV,KAAK,CAACC,UAAU,cAAAS,kBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAhBA,kBAAA,CAAkBF,QAAQ,MAAA,IAAA,IAAAC,qBAAA,KAAAA,KAAAA,CAAAA,GAAAA,qBAAA,GAAI,EAAE,CAAC,CAAA;MACtD,IAAA,IAAME,UAAU,GAAGd,GAAG,CAACG,KAAK,CAACY,QAAQ,CAAC,CAAA;MAEtC,IAAA,IAAMC,cAAc,GAAGC,QAAQ,CAAC,MAAe;MAC3C,MAAA,OAAO,CAAClB,GAAG,CAACmB,KAAK,IAAI,CAACb,KAAK,CAACa,KAAK,IAAI,CAACP,QAAQ,CAACO,KAAK,CAAA;MACxD,KAAC,CAAC,CAAA;UAMF,SAASC,gBAAgBA,GAAS;YAC9B,IAAIL,UAAU,CAACI,KAAK,EAAE;MAClBrB,QAAAA,SAAS,KAATA,IAAAA,IAAAA,SAAS,KAATA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,SAAS,CAAEuB,QAAQ,CAACzB,YAAY,EAAE,cAAc,EAAE,2BAA2B,CAAC,CAAA;MAClF,OAAC,MACI;MACDE,QAAAA,SAAS,KAATA,IAAAA,IAAAA,SAAS,KAATA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,SAAS,CAAEuB,QAAQ,CAACzB,YAAY,EAAE,cAAc,EAAE,EAAE,CAAC,CAAA;MACzD,OAAA;MACJ,KAAA;UAMA,SAAS0B,WAAWA,GAAS;YACzBP,UAAU,CAACI,KAAK,GAAG,IAAI,CAAA;MACvBI,MAAAA,IAAI,CAAC,iBAAiB,EAAER,UAAU,CAACI,KAAK,CAAC,CAAA;MAC7C,KAAA;UAMA,SAASK,aAAaA,GAAS;YAC3BD,IAAI,CAAC,QAAQ,CAAC,CAAA;MAClB,KAAA;UAMA,SAASE,aAAaA,GAAS;YAC3BF,IAAI,CAAC,mBAAmB,EAAE;cACtBvB,GAAG,EAAEA,GAAG,CAACmB,KAAK,CAACO,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;cAChCpB,KAAK,EAAEA,KAAK,CAACa,KAAK;cAClBV,UAAU,EAAEA,UAAU,CAACU,KAAK;cAC5BP,QAAQ,EAAEA,QAAQ,CAACO,KAAAA;MACvB,OAAC,CAAC,CAAA;YACFJ,UAAU,CAACI,KAAK,GAAG,KAAK,CAAA;MACxBI,MAAAA,IAAI,CAAC,iBAAiB,EAAER,UAAU,CAACI,KAAK,CAAC,CAAA;MAC7C,KAAA;UAKA,SAASQ,aAAaA,GAAS;MAAA,MAAA,IAAAC,sBAAA,EAAAC,kBAAA,EAAAC,sBAAA,EAAAC,kBAAA,EAAAC,sBAAA,EAAAC,kBAAA,EAAAC,sBAAA,EAAAC,kBAAA,CAAA;YAC3BnC,GAAG,CAACmB,KAAK,GAAAS,CAAAA,sBAAA,IAAAC,kBAAA,GAAGzB,KAAK,CAACC,UAAU,cAAAwB,kBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAhBA,kBAAA,CAAkB7B,GAAG,cAAA4B,sBAAA,KAAA,KAAA,CAAA,GAAAA,sBAAA,GAAI,EAAE,CAAA;YACvCtB,KAAK,CAACa,KAAK,GAAAW,CAAAA,sBAAA,IAAAC,kBAAA,GAAG3B,KAAK,CAACC,UAAU,cAAA0B,kBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAhBA,kBAAA,CAAkBzB,KAAK,cAAAwB,sBAAA,KAAA,KAAA,CAAA,GAAAA,sBAAA,GAAI,EAAE,CAAA;YAC3CrB,UAAU,CAACU,KAAK,GAAAa,CAAAA,sBAAA,IAAAC,kBAAA,GAAG7B,KAAK,CAACC,UAAU,cAAA4B,kBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAhBA,kBAAA,CAAkBxB,UAAU,cAAAuB,sBAAA,KAAA,KAAA,CAAA,GAAAA,sBAAA,GAAI,KAAK,CAAA;YACxDpB,QAAQ,CAACO,KAAK,GAAAe,CAAAA,sBAAA,IAAAC,kBAAA,GAAG/B,KAAK,CAACC,UAAU,cAAA8B,kBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAhBA,kBAAA,CAAkBvB,QAAQ,cAAAsB,sBAAA,KAAA,KAAA,CAAA,GAAAA,sBAAA,GAAI,EAAE,CAAA;YACjDnB,UAAU,CAACI,KAAK,GAAG,KAAK,CAAA;MACxBI,MAAAA,IAAI,CAAC,iBAAiB,EAAER,UAAU,CAACI,KAAK,CAAC,CAAA;MAC7C,KAAA;MAEAiB,IAAAA,KAAK,CAAC,MAAMhC,KAAK,CAACC,UAAU,EAAE,MAAM;MAAA,MAAA,IAAAgC,sBAAA,EAAAC,kBAAA,EAAAC,sBAAA,EAAAC,mBAAA,EAAAC,sBAAA,EAAAC,mBAAA,EAAAC,sBAAA,EAAAC,mBAAA,CAAA;YAChC5C,GAAG,CAACmB,KAAK,GAAAkB,CAAAA,sBAAA,IAAAC,kBAAA,GAAGlC,KAAK,CAACC,UAAU,cAAAiC,kBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAhBA,kBAAA,CAAkBtC,GAAG,cAAAqC,sBAAA,KAAA,KAAA,CAAA,GAAAA,sBAAA,GAAI,EAAE,CAAA;YACvC/B,KAAK,CAACa,KAAK,GAAAoB,CAAAA,sBAAA,IAAAC,mBAAA,GAAGpC,KAAK,CAACC,UAAU,cAAAmC,mBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAhBA,mBAAA,CAAkBlC,KAAK,cAAAiC,sBAAA,KAAA,KAAA,CAAA,GAAAA,sBAAA,GAAI,EAAE,CAAA;YAC3C9B,UAAU,CAACU,KAAK,GAAAsB,CAAAA,sBAAA,IAAAC,mBAAA,GAAGtC,KAAK,CAACC,UAAU,cAAAqC,mBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAhBA,mBAAA,CAAkBjC,UAAU,cAAAgC,sBAAA,KAAA,KAAA,CAAA,GAAAA,sBAAA,GAAI,KAAK,CAAA;YACxD7B,QAAQ,CAACO,KAAK,GAAAwB,CAAAA,sBAAA,IAAAC,mBAAA,GAAGxC,KAAK,CAACC,UAAU,cAAAuC,mBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAhBA,mBAAA,CAAkBhC,QAAQ,cAAA+B,sBAAA,KAAA,KAAA,CAAA,GAAAA,sBAAA,GAAI,EAAE,CAAA;MACrD,KAAC,CAAC,CAAA;MAEFP,IAAAA,KAAK,CAAC,MAAMhC,KAAK,CAACY,QAAQ,EAAE,MAAM;MAC9BD,MAAAA,UAAU,CAACI,KAAK,GAAGf,KAAK,CAACY,QAAQ,CAAA;MACrC,KAAC,CAAC,CAAA;UAEFoB,KAAK,CAACrB,UAAU,EAAE,MAAM;MACpBK,MAAAA,gBAAgB,EAAE,CAAA;MACtB,KAAC,CAAC,CAAA;MAEFA,IAAAA,gBAAgB,EAAE,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCjJtB,SAASyB,wBAAwBA,CAACC,KAAgC,EAAsB;QACpF,IAAI,CAACA,KAAK,EAAE;MACR,IAAA,OAAOC,SAAS,CAAA;MACpB,GAAA;MAIA,EAAA,IAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC,CAAA;QAC1C,IAAI;UAGAF,IAAI,CAACG,YAAY,CAAC,OAAO,YAAAC,MAAA,CAAYN,KAAK,EAAyC,wCAAA,CAAA,CAAA,CAAA;MACnFG,IAAAA,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC,CAAA;UAM/B,IAAMO,aAAa,GAAGC,MAAM,CAACC,gBAAgB,CAACT,IAAI,CAAC,CAACF,KAAK,CAAA;MACzD,IAAA,IAAMY,SAAS,GAAGH,aAAa,CAACI,KAAK,CAAC,eAAe,CAAC,CAAA;UACtD,IAAI,CAACD,SAAS,EAAE;MACZ,MAAA,OAAOX,SAAS,CAAA;MACpB,KAAA;MAEA,IAAA,IAAMa,IAAI,GAAGF,SAAS,CAAC,CAAC,CAAC,CAACG,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC,CAAA;MAGhD,IAAA,IAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAAC,CAAEN,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,GAAKA,IAAI,CAAC,CAAC,CAAC,GAAG,GAAI,GAAIA,IAAI,CAAC,CAAC,CAAC,GAAG,GAAI,IAAI,IAAI,CAAC,CAAA;UAG3F,OAAOK,IAAI,CAACE,GAAG,CAAC,GAAG,EAAEH,UAAU,CAAC,GAAG,GAAG,CAAA;MAC1C,GAAC,SACO;UACJhB,IAAI,CAACoB,MAAM,EAAE,CAAA;MACjB,GAAA;MACJ,CAAA;AAEA,mBAAeC,eAAe,CAAC;MAC3BC,EAAAA,IAAI,EAAE,oCAAoC;MAE1CC,EAAAA,UAAU,EAAE;MACRC,IAAAA,UAAAA;SACH;MAEDpE,EAAAA,KAAK,EAAE;MACHC,IAAAA,UAAU,EAAE;MACRoE,MAAAA,IAAI,EAAEC,MAAoC;MAC1CC,MAAAA,QAAQ,EAAE,IAAA;MACd,KAAA;SACH;MAEDC,EAAAA,KAAK,EAAE;UACH,MAAM,EAAGC,MAAwB,IAAK,IAAI;UAC1C,QAAQ,EAAGA,MAAwB,IAAK,IAAA;SAC3C;MAEDC,EAAAA,KAAKA,CAAC1E,KAAK,EAAA2E,IAAA,EAAY;MAAA,IAAA,IAARxD,IAAI,GAAAwD,IAAA,CAAJxD,IAAI,CAAA;MAGf,IAAA,IAAMyD,QAAQ,GAAG9D,QAAQ,CAAC,MAA8B;YACpD,OAAO;MACH+D,QAAAA,eAAe,EAAE7E,KAAK,CAACC,UAAU,CAACyC,KAAK,IAAI,SAAA;aAC9C,CAAA;MACL,KAAC,CAAC,CAAA;MAEF,IAAA,IAAMoC,SAAS,GAAGhE,QAAQ,CAAC,MAA8B;MAAA,MAAA,IAAAiE,qBAAA,CAAA;YACrD,OAAO;MACHF,QAAAA,eAAe,EAAE7E,KAAK,CAACC,UAAU,CAACyC,KAAK,IAAI,SAAS;cACpDA,KAAK,EAAE,CAAAqC,CAAAA,qBAAA,GAACtC,wBAAwB,CAACzC,KAAK,CAACC,UAAU,CAACyC,KAAK,IAAI,SAAS,CAAC,MAAA,IAAA,IAAAqC,qBAAA,KAAA,KAAA,CAAA,GAAAA,qBAAA,GAAI,CAAC,IAAI,GAAG,GAAG,OAAO,GAAG,OAAA;aACjG,CAAA;MACL,KAAC,CAAC,CAAA;MAEF,IAAA,IAAMC,YAAY,GAAGlE,QAAQ,CAAC,MAAc;MAAA,MAAA,IAAAmE,qBAAA,CAAA;MACxC,MAAA,OAAA,CAAAA,qBAAA,GAAOjF,KAAK,CAACC,UAAU,CAAC+E,YAAY,MAAA,IAAA,IAAAC,qBAAA,KAAA,KAAA,CAAA,GAAAA,qBAAA,GAAI,EAAE,CAAA;MAC9C,KAAC,CAAC,CAAA;MAEF,IAAA,IAAMf,IAAI,GAAGpD,QAAQ,CAAC,MAAc;MAAA,MAAA,IAAAoE,qBAAA,CAAA;MAChC,MAAA,OAAA,CAAAA,qBAAA,GAAOlF,KAAK,CAACC,UAAU,CAACiE,IAAI,MAAA,IAAA,IAAAgB,qBAAA,KAAA,KAAA,CAAA,GAAAA,qBAAA,GAAI,EAAE,CAAA;MACtC,KAAC,CAAC,CAAA;MAEF,IAAA,IAAMC,QAAQ,GAAGrE,QAAQ,CAAC,MAAc;MACpC,MAAA,IAAI,CAACd,KAAK,CAACC,UAAU,CAACmF,UAAU,IAAIpF,KAAK,CAACC,UAAU,CAACmF,UAAU,CAACC,MAAM,KAAK,CAAC,EAAE;MAC1E,QAAA,OAAO,EAAE,CAAA;MACb,OAAA;YAEA,IAAMC,cAAc,GAAGtF,KAAK,CAACC,UAAU,CAACmF,UAAU,CAAC1B,GAAG,CAAC6B,CAAC,IAAA;MAAA,QAAA,IAAAC,OAAA,CAAA;cAAA,OAAAA,CAAAA,OAAA,GAAID,CAAC,CAACE,IAAI,cAAAD,OAAA,KAAA,KAAA,CAAA,GAAAA,OAAA,GAAI,EAAE,CAAA;aAAC,CAAA,CAAA;MAEzE,MAAA,OAAA,YAAA,CAAAxC,MAAA,CAAoBsC,cAAc,CAACI,IAAI,CAAC,IAAI,CAAC,CAAA,CAAA;MACjD,KAAC,CAAC,CAAA;MAEF,IAAA,IAAMC,SAAS,GAAG7E,QAAQ,CAAC,MAAc;MACrC,MAAA,OAAOd,KAAK,CAACC,UAAU,CAAC0F,SAAS,CAAA;MACrC,KAAC,CAAC,CAAA;UAMF,IAAMzE,WAAW,GAAGA,MAAY;MAC5BC,MAAAA,IAAI,CAAC,MAAM,EAAEnB,KAAK,CAACC,UAAU,CAAC,CAAA;WACjC,CAAA;UAED,IAAM2F,aAAa,GAAGA,MAAY;MAC9BzE,MAAAA,IAAI,CAAC,QAAQ,EAAEnB,KAAK,CAACC,UAAU,CAAC,CAAA;WACnC,CAAA;UAID,OAAO;YACH2E,QAAQ;YACRI,YAAY;YACZF,SAAS;YACTK,QAAQ;YACRQ,SAAS;YACTzB,IAAI;YACJ0B,aAAa;MACb1E,MAAAA,WAAAA;WACH,CAAA;SACJ;QAEDV,QAAQ,EAAA,yyBAAA;MAkBZ,CAAC,CAAC;;AC7HF,2BAAeyD,eAAe,CAAC;MAC3BC,EAAAA,IAAI,EAAE,4CAA4C;MAElDC,EAAAA,UAAU,EAAE;UACR0B,YAAY;2BACZC,QAAe;UACfC,YAAY;UACZC,KAAK;UACLC,SAAS;UACTC,KAAK;UACL9B,UAAU;UACV+B,aAAa;MACbC,IAAAA,MAAAA;SACH;MAEDpG,EAAAA,KAAK,EAAE;MAEHC,IAAAA,UAAU,EAAE;MACRoE,MAAAA,IAAI,EAAEC,MAAwC;MAC9CC,MAAAA,QAAQ,EAAE,IAAA;MACd,KAAA;SACH;MAED8B,EAAAA,UAAU,EAAE;MACRC,IAAAA,WAAAA;SACH;MAED9B,EAAAA,KAAK,EAAE;UACH,mBAAmB,EAAGC,MAA4B,IAAK,IAAA;SAC1D;MAEDC,EAAAA,KAAKA,CAAC1E,KAAK,EAAA2E,IAAA,EAAY;MAAA,IAAA,IAAA4B,qBAAA,CAAA;MAAA,IAAA,IAARpF,IAAI,GAAAwD,IAAA,CAAJxD,IAAI,CAAA;UAGf,IAAMqF,iBAAiB,GAAGC,oBAAoB,EAAE,CAAA;MAEhD,IAAA,IAAMC,iBAAiB,GAAG7G,GAAG,CAAA0G,CAAAA,qBAAA,GAACvG,KAAK,CAACC,UAAU,CAAC0G,OAAO,MAAAJ,IAAAA,IAAAA,qBAAA,cAAAA,qBAAA,GAAI,EAAE,CAAC,CAAA;MAG7D,IAAA,IAAMK,eAAe,GAAG/G,GAAG,CAAC,KAAK,CAAC,CAAA;MAClC,IAAA,IAAMgH,gBAAgB,GAAGhH,GAAG,CAAqB,IAAI,CAAC,CAAA;MACtD,IAAA,IAAMiH,aAAa,GAAGjH,GAAG,CAA0B,IAAI,CAAC,CAAA;MACxD,IAAA,IAAMkH,iBAAiB,GAAGlH,GAAG,CAAC,KAAK,CAAC,CAAA;MACpC,IAAA,IAAMmH,oBAAoB,GAAGnH,GAAG,CAAC,EAAE,CAAC,CAAA;MACpC,IAAA,IAAMoH,8BAA8B,GAAGpH,GAAG,CAAW,EAAE,CAAC,CAAA;MACxD,IAAA,IAAMqH,iBAAiB,GAAGrH,GAAG,CAAgB,EAAE,CAAC,CAAA;MAChD,IAAA,IAAMsH,0BAA0B,GAAGtH,GAAG,CAAgC,EAAE,CAAC,CAAA;MACzE,IAAA,IAAMuH,+BAA+B,GAAGvH,GAAG,CAAgB,IAAI,CAAC,CAAA;MAChE,IAAA,IAAMwH,kBAAkB,GAAGxH,GAAG,CAAoC,EAAE,CAAC,CAAA;MACrE,IAAA,IAAMyH,oBAAoB,GAAGzH,GAAG,CAAyC,IAAI,CAAC,CAAA;MAM9E,IAAA,IAAM0H,sBAAsB,GAAGzG,QAAQ,CAAC,MAAc;MAClD,MAAA,OAAO8F,eAAe,CAAC7F,KAAK,GAAG,wBAAwB,GAAG,mBAAmB,CAAA;MACjF,KAAC,CAAC,CAAA;MAEF,IAAA,IAAMyG,gBAAgB,GAAG1G,QAAQ,CAAC,MAAc;MAC5C,MAAA,OAAO2G,cAAc,CAAC1G,KAAK,GAAG,oBAAoB,GAAG,qBAAqB,CAAA;MAC9E,KAAC,CAAC,CAAA;MAEF,IAAA,IAAM0G,cAAc,GAAG3G,QAAQ,CAAC,MAAe;MAAA,MAAA,IAAA4G,oBAAA,CAAA;YAC3C,OAAO,EAAA,CAAAA,oBAAA,GAACZ,aAAa,CAAC/F,KAAK,MAAA,IAAA,IAAA2G,oBAAA,KAAA,KAAA,CAAA,IAAnBA,oBAAA,CAAqBC,IAAI,CAAA,CAAA;MACrC,KAAC,CAAC,CAAA;MAEF,IAAA,IAAMC,qBAAqB,GAAG9G,QAAQ,CAAC,MAAe;MAAA,MAAA,IAAA+G,qBAAA,CAAA;MAClD,MAAA,OAAOC,QAAQ,CAAAD,CAAAA,qBAAA,GAACf,aAAa,CAAC/F,KAAK,MAAA,IAAA,IAAA8G,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAnBA,qBAAA,CAAqBE,cAAc,EAAEC,UAAU,CAACC,aAAa,CAAC,CAAA;MAClF,KAAC,CAAC,CAAA;MAEF,IAAA,IAAMC,sBAAsB,GAAGpH,QAAQ,CAAC,MAAc;MAAA,MAAA,IAAAqH,qBAAA,CAAA;MAClD,MAAA,IAAIL,QAAQ,CAAAK,CAAAA,qBAAA,GAACrB,aAAa,CAAC/F,KAAK,MAAAoH,IAAAA,IAAAA,qBAAA,KAAnBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,qBAAA,CAAqBJ,cAAc,EAAEC,UAAU,CAACI,cAAc,CAAC,EAAE;MAC1E,QAAA,OAAO,iBAAiB,CAAA;MAC5B,OAAC,MACI;MACD,QAAA,OAAO,gBAAgB,CAAA;MAC3B,OAAA;MACJ,KAAC,CAAC,CAAA;MAEF,IAAA,IAAMC,qBAAqB,GAAGvH,QAAQ,CAAC,MAAc;YAAA,IAAAwH,qBAAA,EAAAC,qBAAA,CAAA;MACjD,MAAA,OAAA,CAAAD,qBAAA,GAAAC,CAAAA,qBAAA,GAAOzB,aAAa,CAAC/F,KAAK,MAAAwH,IAAAA,IAAAA,qBAAA,KAAnBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,qBAAA,CAAqBrE,IAAI,MAAA,IAAA,IAAAoE,qBAAA,KAAAA,KAAAA,CAAAA,GAAAA,qBAAA,GAAI,EAAE,CAAA;MAC1C,KAAC,CAAC,CAAA;MAEF,IAAA,IAAME,0BAA0B,GAAG1H,QAAQ,CAAC,MAAqB;MAAA,MAAA,IAAA2H,qBAAA,CAAA;YAC7D,OAAO,CAAA,CAAAA,qBAAA,GAACtB,0BAA0B,CAACpG,KAAK,CAACiG,oBAAoB,CAACjG,KAAK,CAAC,MAAA0H,IAAAA,IAAAA,qBAAA,cAAAA,qBAAA,GAAI,EAAE,EACrE/E,GAAG,CAACgF,EAAE,IAAI;cACP,OAAO;gBACH3H,KAAK,EAAE2H,EAAE,CAAC3H,KAAK;MACf0E,UAAAA,IAAI,EAAEiD,EAAE,CAACC,QAAQ,GAAA3F,EAAAA,CAAAA,MAAA,CAAM0F,EAAE,CAACjD,IAAI,EAAA,IAAA,CAAA,CAAAzC,MAAA,CAAK0F,EAAE,CAACC,QAAQ,EAAA,GAAA,CAAA,GAAMD,EAAE,CAACjD,IAAAA;eAC1D,CAAA;MACL,OAAC,CAAC,CAAA;MACV,KAAC,CAAC,CAAA;UAeF,IAAMmD,sBAAsB,GAAIC,KAAY,IAAW;MAAA,MAAA,IAAAC,aAAA,CAAA;MACnD,MAAA,IAAI,EAAED,KAAK,CAACE,MAAM,YAAYC,WAAW,CAAC,IAAI,CAACpC,eAAe,CAAC7F,KAAK,EAAE;MAClE,QAAA,OAAA;MACJ,OAAA;MAEA,MAAA,IAAMkI,IAAI,GAAA,CAAAH,aAAA,GAAGD,KAAK,CAACE,MAAM,MAAAD,IAAAA,IAAAA,aAAA,uBAAZA,aAAA,CAAcI,OAAO,CAAC,gBAAgB,CAAC,CAAA;MAGpD,MAAA,IAAID,IAAI,KAAKpC,gBAAgB,CAAC9F,KAAK,EAAE;cACjC6F,eAAe,CAAC7F,KAAK,GAAG,KAAK,CAAA;MACjC,OAAA;WACH,CAAA;UAKD,IAAMoI,gBAAgB,GAAGA,MAAY;MACjCvC,MAAAA,eAAe,CAAC7F,KAAK,GAAG,CAAC6F,eAAe,CAAC7F,KAAK,CAAA;WACjD,CAAA;MAKD,IAAA,IAAMqI,mBAAmB,GAAA,YAAA;MAAA,MAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAA2B;cACnD1C,eAAe,CAAC7F,KAAK,GAAG,KAAK,CAAA;MAG7B,QAAA,IAAMwI,MAAM,GAAA,MAAS/C,iBAAiB,CAA8B,4BAA4B,CAAC,CAAA;MAEjG,QAAA,IAAI,CAAC+C,MAAM,IAAI,CAACA,MAAM,CAACC,IAAI,EAAE;MACzBC,UAAAA,KAAK,CAACF,MAAM,CAACG,YAAY,IAAI,wCAAwC,CAAC,CAAA;MACtE,UAAA,OAAA;MACJ,SAAA;cAGA1C,oBAAoB,CAACjG,KAAK,GAAG,EAAE,CAAA;cAC/BkG,8BAA8B,CAAClG,KAAK,GAAG,EAAE,CAAA;cACzCqG,+BAA+B,CAACrG,KAAK,GAAG,IAAI,CAAA;MAG5CmG,QAAAA,iBAAiB,CAACnG,KAAK,GAAGwI,MAAM,CAACC,IAAI,CAChCG,MAAM,CAACC,CAAC,IAAI,CAAClD,iBAAiB,CAAC3F,KAAK,CAAC8I,IAAI,CAACC,CAAC,IAAIhC,QAAQ,CAACgC,CAAC,CAACC,UAAU,EAAEH,CAAC,CAACjC,IAAI,CAAC,CAAC,CAAC,CAC/EjE,GAAG,CAACkG,CAAC,KAAK;gBACP7I,KAAK,EAAE6I,CAAC,CAACjC,IAAI;gBACblC,IAAI,EAAEmE,CAAC,CAAC1F,IAAAA;MACZ,SAAC,CAAC,CAAC,CAAA;MAEPiD,QAAAA,0BAA0B,CAACpG,KAAK,GAAGwI,MAAM,CAACC,IAAI,CAACQ,MAAM,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAK;gBAAA,IAAAC,OAAA,EAAAC,aAAA,CAAA;gBAChEH,KAAK,CAAA,CAAAE,OAAA,GAACD,CAAC,CAACvC,IAAI,MAAAwC,IAAAA,IAAAA,OAAA,KAAAA,KAAAA,CAAAA,GAAAA,OAAA,GAAI,EAAE,CAAC,GAAAC,CAAAA,aAAA,GAAGF,CAAC,CAAC9E,UAAU,cAAAgF,aAAA,KAAA,KAAA,CAAA,GAAAA,aAAA,GAAI,EAAE,CAAA;MACxC,UAAA,OAAOH,KAAK,CAAA;eACf,EAAE,EAAE,CAAkC,CAAA;cAEvCnD,aAAa,CAAC/F,KAAK,GAAG;gBAClBgH,cAAc,EAAEC,UAAU,CAACC,aAAa;MACxCoC,UAAAA,iBAAiB,EAAE,CAAC;MACpB1E,UAAAA,SAAS,EAAE,CAAA;eACd,CAAA;cAED0B,kBAAkB,CAACtG,KAAK,GAAG,EAAE,CAAA;cAC7BuG,oBAAoB,CAACvG,KAAK,GAAG,IAAI,CAAA;cAEjCgG,iBAAiB,CAAChG,KAAK,GAAG,IAAI,CAAA;aACjC,CAAA,CAAA;MAAA,MAAA,OAAA,SAvCKqI,mBAAmBA,GAAA;MAAA,QAAA,OAAAC,KAAA,CAAAiB,KAAA,CAAA,IAAA,EAAAC,SAAA,CAAA,CAAA;MAAA,OAAA,CAAA;WAuCxB,EAAA,CAAA;MAKD,IAAA,IAAMC,yBAAyB,GAAA,YAAA;MAAA,MAAA,IAAAC,KAAA,GAAAnB,iBAAA,CAAG,aAA2B;cACzD1C,eAAe,CAAC7F,KAAK,GAAG,KAAK,CAAA;MAG7B,QAAA,IAAMwI,MAAM,GAAA,MAAS/C,iBAAiB,CAA8B,6BAA6B,CAAC,CAAA;MAElG,QAAA,IAAI,CAAC+C,MAAM,IAAI,CAACA,MAAM,CAACC,IAAI,EAAE;MACzBC,UAAAA,KAAK,CAACF,MAAM,CAACG,YAAY,IAAI,yCAAyC,CAAC,CAAA;MACvE,UAAA,OAAA;MACJ,SAAA;cAGA1C,oBAAoB,CAACjG,KAAK,GAAG,EAAE,CAAA;cAC/BkG,8BAA8B,CAAClG,KAAK,GAAG,EAAE,CAAA;cACzCqG,+BAA+B,CAACrG,KAAK,GAAG,IAAI,CAAA;cAE5CmG,iBAAiB,CAACnG,KAAK,GAAGwI,MAAM,CAACC,IAAI,CAAC9F,GAAG,CAACwG,CAAC,KAAK;gBAC5CnJ,KAAK,EAAEmJ,CAAC,CAACvC,IAAI;gBACblC,IAAI,EAAEyE,CAAC,CAAChG,IAAAA;MACZ,SAAC,CAAC,CAAC,CAAA;MAGHgD,QAAAA,iBAAiB,CAACnG,KAAK,GAAGwI,MAAM,CAACC,IAAI,CAChCG,MAAM,CAACC,CAAC,IAAI,CAAClD,iBAAiB,CAAC3F,KAAK,CAAC8I,IAAI,CAACC,CAAC,IAAIhC,QAAQ,CAACgC,CAAC,CAACC,UAAU,EAAEH,CAAC,CAACjC,IAAI,CAAC,CAAC,CAAC,CAC/EjE,GAAG,CAACkG,CAAC,KAAK;gBACP7I,KAAK,EAAE6I,CAAC,CAACjC,IAAI;gBACblC,IAAI,EAAEmE,CAAC,CAAC1F,IAAAA;MACZ,SAAC,CAAC,CAAC,CAAA;MAEPiD,QAAAA,0BAA0B,CAACpG,KAAK,GAAGwI,MAAM,CAACC,IAAI,CAACQ,MAAM,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAK;gBAAA,IAAAQ,QAAA,EAAAC,cAAA,CAAA;gBAChEV,KAAK,CAAA,CAAAS,QAAA,GAACR,CAAC,CAACvC,IAAI,MAAA+C,IAAAA,IAAAA,QAAA,KAAAA,KAAAA,CAAAA,GAAAA,QAAA,GAAI,EAAE,CAAC,GAAAC,CAAAA,cAAA,GAAGT,CAAC,CAAC9E,UAAU,cAAAuF,cAAA,KAAA,KAAA,CAAA,GAAAA,cAAA,GAAI,EAAE,CAAA;MACxC,UAAA,OAAOV,KAAK,CAAA;eACf,EAAE,EAAE,CAAkC,CAAA;cAEvCnD,aAAa,CAAC/F,KAAK,GAAG;gBAClBgH,cAAc,EAAEC,UAAU,CAACI,cAAc;MACzCiC,UAAAA,iBAAiB,EAAE,CAAC;MACpB1E,UAAAA,SAAS,EAAE,CAAA;eACd,CAAA;cAED0B,kBAAkB,CAACtG,KAAK,GAAG,EAAE,CAAA;cAC7BuG,oBAAoB,CAACvG,KAAK,GAAG,IAAI,CAAA;cAEjCgG,iBAAiB,CAAChG,KAAK,GAAG,IAAI,CAAA;aACjC,CAAA,CAAA;MAAA,MAAA,OAAA,SA5CKyJ,yBAAyBA,GAAA;MAAA,QAAA,OAAAC,KAAA,CAAAH,KAAA,CAAA,IAAA,EAAAC,SAAA,CAAA,CAAA;MAAA,OAAA,CAAA;WA4C9B,EAAA,CAAA;MAED,IAAA,IAAMK,YAAY,GAAA,YAAA;MAAA,MAAA,IAAAC,KAAA,GAAAvB,iBAAA,CAAG,aAA2B;MAAA,QAAA,IAAAwB,qBAAA,EAAAC,qBAAA,EAAAhL,iBAAA,EAAAiL,YAAA,CAAA;MAC5C,QAAA,IAAI,CAAClE,aAAa,CAAC/F,KAAK,EAAE;MACtB,UAAA,OAAA;MACJ,SAAA;MAEA,QAAA,IAAMkK,GAAqB,GAAG;gBAC1BtD,IAAI,EAAA,CAAAmD,qBAAA,GAAEhE,aAAa,CAAC/F,KAAK,MAAA,IAAA,IAAA+J,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAnBA,qBAAA,CAAqBnD,IAAI;MAC/BI,UAAAA,cAAc,EAAEjB,aAAa,CAAC/F,KAAK,CAACgH,cAAc;gBAClDgC,UAAU,EAAE/C,oBAAoB,CAACjG,KAAK;gBACtCqE,UAAU,EAAE6B,8BAA8B,CAAClG,KAAK,CAAC2C,GAAG,CAAC6B,CAAC,KAAK;MAAExE,YAAAA,KAAK,EAAEwE,CAAAA;MAAE,WAAC,CAAC,CAAC;gBACzE8E,iBAAiB,EAAA,CAAAU,qBAAA,GAAE3D,+BAA+B,CAACrG,KAAK,MAAA,IAAA,IAAAgK,qBAAA,KAAA,KAAA,CAAA,GAAAA,qBAAA,GAAI,CAAC;gBAC7DG,YAAY,EAAE7D,kBAAkB,CAACtG,KAAK;MACtC4E,UAAAA,SAAS,EAAE,CAAA;eACd,CAAA;MAED,QAAA,IAAM6D,IAAI,GAAG;gBACT5J,GAAG,EAAA,CAAAG,iBAAA,GAAEC,KAAK,CAACC,UAAU,MAAA,IAAA,IAAAF,iBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAhBA,iBAAA,CAAkBoL,KAAK;MAC5BF,UAAAA,GAAAA;eACH,CAAA;MAED,QAAA,IAAM1B,MAAM,GAAS/C,MAAAA,iBAAiB,CAA0E,sBAAsB,EAAEgD,IAAI,CAAC,CAAA;cAE7I,IAAI,CAACD,MAAM,IAAI,CAACA,MAAM,CAAC6B,SAAS,IAAI,EAAAJ,CAAAA,YAAA,GAACzB,MAAM,CAACC,IAAI,MAAAwB,IAAAA,IAAAA,YAAA,eAAXA,YAAA,CAAaK,MAAM,CAAE,EAAA;MACtD5B,UAAAA,KAAK,CAACF,MAAM,CAACG,YAAY,IAAI,wBAAwB,CAAC,CAAA;MACtD,UAAA,OAAA;MACJ,SAAA;cAEAvI,IAAI,CAAC,mBAAmB,EAAEoI,MAAM,CAACC,IAAI,CAAC6B,MAAM,CAAC,CAAA;cAC7CtE,iBAAiB,CAAChG,KAAK,GAAG,KAAK,CAAA;aAClC,CAAA,CAAA;MAAA,MAAA,OAAA,SA7BK6J,YAAYA,GAAA;MAAA,QAAA,OAAAC,KAAA,CAAAP,KAAA,CAAA,IAAA,EAAAC,SAAA,CAAA,CAAA;MAAA,OAAA,CAAA;WA6BjB,EAAA,CAAA;MAQD,IAAA,IAAMe,cAAc,GAAA,YAAA;MAAA,MAAA,IAAAC,KAAA,GAAAjC,iBAAA,CAAG,WAAOkC,MAAwB,EAAoB;cAAA,IAAApL,kBAAA,EAAAqL,aAAA,CAAA;MACtE,QAAA,IAAI,QAAQC,aAAa,CAAC,mBAAmB,CAAC,CAAC,EAAE;MAC7C,UAAA,OAAA;MACJ,SAAA;MAEA,QAAA,IAAMlC,IAAI,GAAG;gBACT5J,GAAG,EAAA,CAAAQ,kBAAA,GAAEJ,KAAK,CAACC,UAAU,MAAA,IAAA,IAAAG,kBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAhBA,kBAAA,CAAkB+K,KAAK;gBAC5BQ,UAAU,EAAEH,MAAM,CAAC7D,IAAAA;eACtB,CAAA;MAED,QAAA,IAAM4B,MAAM,GAAS/C,MAAAA,iBAAiB,CAA0E,wBAAwB,EAAEgD,IAAI,CAAC,CAAA;cAE/I,IAAI,CAACD,MAAM,IAAI,CAACA,MAAM,CAAC6B,SAAS,IAAI,EAAAK,CAAAA,aAAA,GAAClC,MAAM,CAACC,IAAI,MAAAiC,IAAAA,IAAAA,aAAA,eAAXA,aAAA,CAAaJ,MAAM,CAAE,EAAA;MACtD5B,UAAAA,KAAK,CAACF,MAAM,CAACG,YAAY,IAAI,yCAAyC,CAAC,CAAA;MACvE,UAAA,OAAA;MACJ,SAAA;cAEAvI,IAAI,CAAC,mBAAmB,EAAEoI,MAAM,CAACC,IAAI,CAAC6B,MAAM,CAAC,CAAA;aAChD,CAAA,CAAA;YAAA,OAlBKC,SAAAA,cAAcA,CAAAM,EAAA,EAAA;MAAA,QAAA,OAAAL,KAAA,CAAAjB,KAAA,CAAA,IAAA,EAAAC,SAAA,CAAA,CAAA;MAAA,OAAA,CAAA;WAkBnB,EAAA,CAAA;MAOD,IAAA,IAAMsB,YAAY,GAAA,YAAA;MAAA,MAAA,IAAAC,KAAA,GAAAxC,iBAAA,CAAG,WAAOkC,MAAwB,EAAoB;MAAA,QAAA,IAAAO,kBAAA,EAAAC,qBAAA,EAAAC,kBAAA,CAAA;MACpE,QAAA,IAAIC,gBAA6C,CAAA;cAEjD,IAAIpE,QAAQ,CAAC0D,MAAM,CAACzD,cAAc,EAAEC,UAAU,CAACI,cAAc,CAAC,EAAE;MAG5D,UAAA,IAAMmB,MAAM,GAAA,MAAS/C,iBAAiB,CAA8B,6BAA6B,CAAC,CAAA;MAElG,UAAA,IAAI,CAAC+C,MAAM,IAAI,CAACA,MAAM,CAACC,IAAI,EAAE;MACzBC,YAAAA,KAAK,CAACF,MAAM,CAACG,YAAY,IAAI,yCAAyC,CAAC,CAAA;MACvE,YAAA,OAAA;MACJ,WAAA;gBAEAwC,gBAAgB,GAAG3C,MAAM,CAACC,IAAI,CAAA;MAClC,SAAC,MACI,IAAI1B,QAAQ,CAAC0D,MAAM,CAACzD,cAAc,EAAEC,UAAU,CAACC,aAAa,CAAC,EAAE;MAGhE,UAAA,IAAMsB,OAAM,GAAA,MAAS/C,iBAAiB,CAA8B,4BAA4B,CAAC,CAAA;MAEjG,UAAA,IAAI,CAAC+C,OAAM,IAAI,CAACA,OAAM,CAACC,IAAI,EAAE;MACzBC,YAAAA,KAAK,CAACF,OAAM,CAACG,YAAY,IAAI,wCAAwC,CAAC,CAAA;MACtE,YAAA,OAAA;MACJ,WAAA;gBAEAwC,gBAAgB,GAAG3C,OAAM,CAACC,IAAI,CAAA;MAClC,SAAC,MACI;MACD,UAAA,OAAA;MACJ,SAAA;MAGAxC,QAAAA,oBAAoB,CAACjG,KAAK,GAAAgL,CAAAA,kBAAA,GAAGP,MAAM,CAACzB,UAAU,MAAAgC,IAAAA,IAAAA,kBAAA,KAAAA,KAAAA,CAAAA,GAAAA,kBAAA,GAAI,EAAE,CAAA;MACpD9E,QAAAA,8BAA8B,CAAClG,KAAK,GAAA,CAAAiL,qBAAA,GAAA,CAAAC,kBAAA,GAAGT,MAAM,CAACpG,UAAU,cAAA6G,kBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAjBA,kBAAA,CAAmBvI,GAAG,CAACyI,CAAC,IAAA;MAAA,UAAA,IAAAC,QAAA,CAAA;gBAAA,OAAAA,CAAAA,QAAA,GAAID,CAAC,CAACpL,KAAK,cAAAqL,QAAA,KAAA,KAAA,CAAA,GAAAA,QAAA,GAAI,EAAE,CAAA;MAAA,SAAA,CAAC,MAAAJ,IAAAA,IAAAA,qBAAA,KAAAA,KAAAA,CAAAA,GAAAA,qBAAA,GAAI,EAAE,CAAA;MACvF5E,QAAAA,+BAA+B,CAACrG,KAAK,GAAGyK,MAAM,CAACnB,iBAAiB,GAAG,CAAC,GAAGmB,MAAM,CAACnB,iBAAiB,GAAG,IAAI,CAAA;cAEtGlD,0BAA0B,CAACpG,KAAK,GAAGmL,gBAAgB,CAAClC,MAAM,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAK;gBAAA,IAAAmC,QAAA,EAAAC,cAAA,CAAA;gBACrErC,KAAK,CAAA,CAAAoC,QAAA,GAACnC,CAAC,CAACvC,IAAI,MAAA0E,IAAAA,IAAAA,QAAA,KAAAA,KAAAA,CAAAA,GAAAA,QAAA,GAAI,EAAE,CAAC,GAAAC,CAAAA,cAAA,GAAGpC,CAAC,CAAC9E,UAAU,cAAAkH,cAAA,KAAA,KAAA,CAAA,GAAAA,cAAA,GAAI,EAAE,CAAA;MACxC,UAAA,OAAOrC,KAAK,CAAA;eACf,EAAE,EAAE,CAAkC,CAAA;cAEvCnD,aAAa,CAAC/F,KAAK,GAAGyK,MAAM,CAAA;MAC5BnE,QAAAA,kBAAkB,CAACtG,KAAK,GAAGyK,MAAM,CAACN,YAAY,GAAG,CAAC,GAAGM,MAAM,CAACN,YAAY,CAAC,GAAG,EAAE,CAAA;cAC9E5D,oBAAoB,CAACvG,KAAK,GAAG,IAAI,CAAA;cAEjCgG,iBAAiB,CAAChG,KAAK,GAAG,IAAI,CAAA;aACjC,CAAA,CAAA;YAAA,OA9CK8K,SAAAA,YAAYA,CAAAU,GAAA,EAAA;MAAA,QAAA,OAAAT,KAAA,CAAAxB,KAAA,CAAA,IAAA,EAAAC,SAAA,CAAA,CAAA;MAAA,OAAA,CAAA;WA8CjB,EAAA,CAAA;MASD,IAAA,IAAMiC,eAAe,GAAA,YAAA;YAAA,IAAAC,KAAA,GAAAnD,iBAAA,CAAG,WAAOvI,KAAuB,EAAE2L,WAAoC,EAAoB;MAAA,QAAA,IAAAC,iBAAA,CAAA;MAC5G,QAAA,IAAMnD,IAAI,GAAG;MACT5J,UAAAA,GAAG,EAAEI,KAAK,CAACC,UAAU,CAACkL,KAAK;gBAC3BxD,IAAI,EAAE5G,KAAK,CAAC4G,IAAI;MAChBiF,UAAAA,UAAU,EAAAD,CAAAA,iBAAA,GAAED,WAAW,aAAXA,WAAW,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAXA,WAAW,CAAE/E,IAAI,MAAA,IAAA,IAAAgF,iBAAA,KAAA,KAAA,CAAA,GAAAA,iBAAA,GAAI,IAAA;eACpC,CAAA;MAED,QAAA,IAAMpD,MAAM,GAAS/C,MAAAA,iBAAiB,CAAC,eAAe,EAAEgD,IAAI,CAAC,CAAA;MAE7D,QAAA,IAAI,CAACD,MAAM,CAAC6B,SAAS,EAAE;MACnB3B,UAAAA,KAAK,CAACF,MAAM,CAACG,YAAY,IAAI,gEAAgE,CAAC,CAAA;MAC9F,UAAA,OAAA;MACJ,SAAA;aACH,CAAA,CAAA;MAAA,MAAA,OAAA,SAbK8C,eAAeA,CAAAK,GAAA,EAAAC,GAAA,EAAA;MAAA,QAAA,OAAAL,KAAA,CAAAnC,KAAA,CAAA,IAAA,EAAAC,SAAA,CAAA,CAAA;MAAA,OAAA,CAAA;WAapB,EAAA,CAAA;UAMD,SAASwC,qBAAqBA,GAAS;MACnC,MAAA,IAAIzF,oBAAoB,CAACvG,KAAK,KAAK,IAAI,EAAE;cACrCuG,oBAAoB,CAACvG,KAAK,GAAG;MACzBV,UAAAA,UAAU,EAAE,KAAA;eACf,CAAA;MACL,OAAA;MACJ,KAAA;UAQA,SAAS2M,oBAAoBA,CAACC,KAAsC,EAAQ;MACxE5F,MAAAA,kBAAkB,CAACtG,KAAK,CAACmM,IAAI,CAACD,KAAK,CAAC,CAAA;YACpC3F,oBAAoB,CAACvG,KAAK,GAAG,IAAI,CAAA;MACrC,KAAA;UAQA,SAASoM,+BAA+BA,CAACpM,KAAc,EAAQ;YAC3D,IAAI,CAACA,KAAK,EAAE;cACRuG,oBAAoB,CAACvG,KAAK,GAAG,IAAI,CAAA;MACrC,OAAA;MACJ,KAAA;UAQA,SAASqM,mBAAmBA,CAACC,KAAa,EAAQ;YAC9ChG,kBAAkB,CAACtG,KAAK,CAACuM,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC,CAAA;MAC7C,KAAA;MAIA,IAAA,IAAME,kBAAkB,GAAGC,cAAc,CAAC9G,iBAAiB,EAAE8F,eAAe,CAAC,CAAA;MAE7ExK,IAAAA,KAAK,CAAC,MAAMhC,KAAK,CAACC,UAAU,EAAE,MAAM;YAAA,IAAAwN,sBAAA,EAAAlN,kBAAA,CAAA;YAChCmN,cAAc,CAAChH,iBAAiB,EAAA+G,CAAAA,sBAAA,IAAAlN,kBAAA,GAAEP,KAAK,CAACC,UAAU,MAAA,IAAA,IAAAM,kBAAA,KAAhBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,kBAAA,CAAkBoG,OAAO,MAAA,IAAA,IAAA8G,sBAAA,KAAAA,KAAAA,CAAAA,GAAAA,sBAAA,GAAI,EAAE,CAAC,CAAA;MACtE,KAAC,CAAC,CAAA;UAIFzL,KAAK,CAAC4E,eAAe,EAAE,MAAM;YACzB,IAAIA,eAAe,CAAC7F,KAAK,EAAE;MACvBqC,QAAAA,MAAM,CAACuK,gBAAgB,CAAC,OAAO,EAAE/E,sBAAsB,CAAC,CAAA;MAC5D,OAAC,MACI;MACDxF,QAAAA,MAAM,CAACwK,mBAAmB,CAAC,OAAO,EAAEhF,sBAAsB,CAAC,CAAA;MAC/D,OAAA;MACJ,KAAC,CAAC,CAAA;MAGFiF,IAAAA,eAAe,CAAC,MAAM;MAClBzK,MAAAA,MAAM,CAACwK,mBAAmB,CAAC,OAAO,EAAEhF,sBAAsB,CAAC,CAAA;MAC/D,KAAC,CAAC,CAAA;UAEF,OAAO;YACHrB,sBAAsB;YACtBV,gBAAgB;YAChBY,cAAc;YACdG,qBAAqB;YACrBb,iBAAiB;YACjBL,iBAAiB;YACjB0C,mBAAmB;YACnBoB,yBAAyB;YACzBuC,qBAAqB;YACrB5D,gBAAgB;YAChBiE,mBAAmB;YACnBD,+BAA+B;YAC/BH,oBAAoB;YACpBpC,YAAY;YACZU,cAAc;YACdO,YAAY;YACZ0B,kBAAkB;YAClBlG,kBAAkB;YAClBmB,0BAA0B;YAC1BtB,iBAAiB;YACjBmB,qBAAqB;YACrBb,gBAAgB;YAChBU,sBAAsB;YACtBZ,oBAAoB;YACpBN,oBAAoB;YACpBC,8BAA8B;MAC9BG,MAAAA,+BAAAA;WACH,CAAA;SACJ;QAED5G,QAAQ,EAAA,spIAAA;MAmGZ,CAAC,CAAC;;MCnjBF,IAAMsN,0BAAyC,GAAG,CAC9C;MACI/M,EAAAA,KAAK,EAAE,UAAU;MACjB0E,EAAAA,IAAI,EAAE,UAAA;MACV,CAAC,EACD;MACI1E,EAAAA,KAAK,EAAE,gBAAgB;MACvB0E,EAAAA,IAAI,EAAE,iBAAA;MACV,CAAC,CACJ,CAAA;AAED,sBAAexB,eAAe,CAAC;MAC3BC,EAAAA,IAAI,EAAE,uCAAuC;MAE7CC,EAAAA,UAAU,EAAE;UACR4J,wBAAwB;UACxBC,QAAQ;UACRnI,YAAY;UACZI,SAAS;MACTgI,IAAAA,OAAAA;SACH;MAEDjO,EAAAA,KAAK,EAAE;MAEHC,IAAAA,UAAU,EAAE;MACRoE,MAAAA,IAAI,EAAEC,MAAwC;MAC9CC,MAAAA,QAAQ,EAAE,IAAA;MACd,KAAA;SACH;MAEDC,EAAAA,KAAK,EAAE;UACH,mBAAmB,EAAGC,MAA4B,IAAK,IAAI;UAC3D,iBAAiB,EAAGA,MAAc,IAAK,IAAA;SAC1C;MAEDC,EAAAA,KAAKA,CAAC1E,KAAK,EAAA2E,IAAA,EAAY;UAAA,IAAAuJ,qBAAA,EAAAC,sBAAA,EAAAC,qBAAA,EAAAlJ,qBAAA,EAAAmJ,qBAAA,CAAA;MAAA,IAAA,IAARlN,IAAI,GAAAwD,IAAA,CAAJxD,IAAI,CAAA;MAGf,IAAA,IAAMiE,UAAU,GAAGvF,GAAG,EAAAqO,qBAAA,GAAClO,KAAK,CAACC,UAAU,CAACmF,UAAU,cAAA8I,qBAAA,KAAA,KAAA,CAAA,GAAAA,qBAAA,GAAI,EAAE,CAAC,CAAA;MACzD,IAAA,IAAMI,eAAe,GAAGzO,GAAG,EAAAsO,sBAAA,GAACnO,KAAK,CAACC,UAAU,CAACqO,eAAe,cAAAH,sBAAA,KAAA,KAAA,CAAA,GAAAA,sBAAA,GAAI,EAAE,CAAC,CAAA;MACnE,IAAA,IAAMI,WAAW,GAAGC,WAAW,EAAAJ,qBAAA,GAACpO,KAAK,CAACC,UAAU,CAACsO,WAAW,MAAA,IAAA,IAAAH,qBAAA,KAAAA,KAAAA,CAAAA,GAAAA,qBAAA,GAAI,EAAE,EAAE,aAAa,CAAC,CAAA;MAClF,IAAA,IAAMlK,IAAI,GAAGsK,WAAW,EAAAtJ,qBAAA,GAAClF,KAAK,CAACC,UAAU,CAACiE,IAAI,MAAA,IAAA,IAAAgB,qBAAA,KAAAA,KAAAA,CAAAA,GAAAA,qBAAA,GAAI,EAAE,EAAE,MAAM,CAAC,CAAA;MAC7D,IAAA,IAAMuJ,aAAa,GAAGD,WAAW,EAAAH,qBAAA,GAACrO,KAAK,CAACC,UAAU,CAACwO,aAAa,MAAA,IAAA,IAAAJ,qBAAA,KAAAA,KAAAA,CAAAA,GAAAA,qBAAA,GAAI,EAAE,EAAE,eAAe,CAAC,CAAA;UACxF,IAAMK,eAAe,GAAGF,WAAW,CAACxO,KAAK,CAACC,UAAU,CAACyO,eAAe,EAAE,iBAAiB,CAAC,CAAA;UACxF,IAAMC,iBAAiB,GAAGH,WAAW,CAACxO,KAAK,CAACC,UAAU,CAAC0O,iBAAiB,EAAE,mBAAmB,CAAC,CAAA;UAC9F,IAAMC,gBAAgB,GAAGJ,WAAW,CAACxO,KAAK,CAACC,UAAU,CAAC2O,gBAAgB,EAAE,kBAAkB,CAAC,CAAA;UAC3F,IAAMC,eAAe,GAAGL,WAAW,CAACxO,KAAK,CAACC,UAAU,CAAC4O,eAAe,EAAE,iBAAiB,CAAC,CAAA;UACxF,IAAMC,cAAc,GAAGN,WAAW,CAACxO,KAAK,CAACC,UAAU,CAAC6O,cAAc,EAAE,gBAAgB,CAAC,CAAA;UACrF,IAAMC,oBAAoB,GAAGP,WAAW,CAACxO,KAAK,CAACC,UAAU,CAAC8O,oBAAoB,EAAE,sBAAsB,CAAC,CAAA;MAGvG,IAAA,IAAI,CAAC/O,KAAK,CAACC,UAAU,CAACkL,KAAK,EAAE;YACzBwD,iBAAiB,CAAC5N,KAAK,GAAG,EAAE,CAAA;YAC5B6N,gBAAgB,CAAC7N,KAAK,GAAG,EAAE,CAAA;YAC3B8N,eAAe,CAAC9N,KAAK,GAAG,GAAG,CAAA;MAC/B,KAAA;UAIA,IAAMiO,QAAQ,GAAG,CAACT,WAAW,EAAErK,IAAI,EAAEuK,aAAa,EAAEC,eAAe,EAAEC,iBAAiB,EAAEC,gBAAgB,EAAEC,eAAe,EAAEC,cAAc,EAAEC,oBAAoB,CAAC,CAAA;UAShK,IAAME,qBAAqB,GAAGnO,QAAQ,CAAC;MACnCoO,MAAAA,GAAGA,GAAa;cACZ,IAAMC,MAAgB,GAAG,EAAE,CAAA;cAE3B,IAAIL,cAAc,CAAC/N,KAAK,EAAE;MACtBoO,UAAAA,MAAM,CAACjC,IAAI,CAAC,UAAU,CAAC,CAAA;MAC3B,SAAA;cAEA,IAAI6B,oBAAoB,CAAChO,KAAK,EAAE;MAC5BoO,UAAAA,MAAM,CAACjC,IAAI,CAAC,gBAAgB,CAAC,CAAA;MACjC,SAAA;MAEA,QAAA,OAAOiC,MAAM,CAAA;aAChB;YACDC,GAAGA,CAACD,MAAgB,EAAE;cAClBL,cAAc,CAAC/N,KAAK,GAAGoO,MAAM,CAAChK,QAAQ,CAAC,UAAU,CAAC,CAAA;cAClD4J,oBAAoB,CAAChO,KAAK,GAAGoO,MAAM,CAAChK,QAAQ,CAAC,gBAAgB,CAAC,CAAA;MAClE,OAAA;MACJ,KAAC,CAAC,CAAA;MAaFnD,IAAAA,KAAK,CAAC,MAAMhC,KAAK,CAACC,UAAU,EAAE,MAAM;YAAA,IAAAoP,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,CAAA;MAChC/B,MAAAA,cAAc,CAACtI,UAAU,EAAA,CAAAiK,sBAAA,GAAErP,KAAK,CAACC,UAAU,CAACmF,UAAU,cAAAiK,sBAAA,KAAA,KAAA,CAAA,GAAAA,sBAAA,GAAI,EAAE,CAAC,CAAA;MAC7D3B,MAAAA,cAAc,CAACY,eAAe,EAAA,CAAAgB,sBAAA,GAAEtP,KAAK,CAACC,UAAU,CAACqO,eAAe,cAAAgB,sBAAA,KAAA,KAAA,CAAA,GAAAA,sBAAA,GAAI,EAAE,CAAC,CAAA;MACvE5B,MAAAA,cAAc,CAACa,WAAW,EAAA,CAAAgB,sBAAA,GAAEvP,KAAK,CAACC,UAAU,CAACsO,WAAW,cAAAgB,sBAAA,KAAA,KAAA,CAAA,GAAAA,sBAAA,GAAI,EAAE,CAAC,CAAA;MAC/D7B,MAAAA,cAAc,CAACxJ,IAAI,EAAA,CAAAsL,sBAAA,GAAExP,KAAK,CAACC,UAAU,CAACiE,IAAI,cAAAsL,sBAAA,KAAA,KAAA,CAAA,GAAAA,sBAAA,GAAI,EAAE,CAAC,CAAA;MACjD9B,MAAAA,cAAc,CAACe,aAAa,EAAA,CAAAgB,sBAAA,GAAEzP,KAAK,CAACC,UAAU,CAACwO,aAAa,cAAAgB,sBAAA,KAAA,KAAA,CAAA,GAAAA,sBAAA,GAAI,EAAE,CAAC,CAAA;YACnE/B,cAAc,CAACgB,eAAe,EAAE1O,KAAK,CAACC,UAAU,CAACyO,eAAe,CAAC,CAAA;YACjEhB,cAAc,CAACiB,iBAAiB,EAAE3O,KAAK,CAACC,UAAU,CAAC0O,iBAAiB,CAAC,CAAA;YACrEjB,cAAc,CAACkB,gBAAgB,EAAE5O,KAAK,CAACC,UAAU,CAAC2O,gBAAgB,CAAC,CAAA;YACnElB,cAAc,CAACmB,eAAe,EAAE7O,KAAK,CAACC,UAAU,CAAC4O,eAAe,CAAC,CAAA;YACjEnB,cAAc,CAACoB,cAAc,EAAE9O,KAAK,CAACC,UAAU,CAAC6O,cAAc,CAAC,CAAA;YAC/DpB,cAAc,CAACqB,oBAAoB,EAAE/O,KAAK,CAACC,UAAU,CAAC8O,oBAAoB,CAAC,CAAA;MAC/E,KAAC,CAAC,CAAA;UAIF/M,KAAK,CAAC,CAACsM,eAAe,EAAE,GAAGU,QAAQ,CAAC,EAAE,MAAM;YACxC,IAAMU,QAA8B,GAAAC,cAAA,CAAAA,cAAA,CAC7B3P,EAAAA,EAAAA,KAAK,CAACC,UAAU,CAAA,EAAA,EAAA,EAAA;cACnBqO,eAAe,EAAEA,eAAe,CAACvN,KAAK;cACtCwN,WAAW,EAAEA,WAAW,CAACxN,KAAK;cAC9BmD,IAAI,EAAEA,IAAI,CAACnD,KAAK;cAChB0N,aAAa,EAAEA,aAAa,CAAC1N,KAAK;cAClC2N,eAAe,EAAEA,eAAe,CAAC3N,KAAK;cACtC4N,iBAAiB,EAAEA,iBAAiB,CAAC5N,KAAK;cAC1C6N,gBAAgB,EAAEA,gBAAgB,CAAC7N,KAAK;cACxC8N,eAAe,EAAEA,eAAe,CAAC9N,KAAK;cACtC+N,cAAc,EAAEA,cAAc,CAAC/N,KAAK;cACpCgO,oBAAoB,EAAEA,oBAAoB,CAAChO,KAAAA;aAC9C,CAAA,CAAA;MAEDI,MAAAA,IAAI,CAAC,mBAAmB,EAAEuO,QAAQ,CAAC,CAAA;MACvC,KAAC,CAAC,CAAA;MAIFE,IAAAA,oBAAoB,CAACZ,QAAQ,EAAE7N,IAAI,CAAC,CAAA;UAEpC,OAAO;YACHiE,UAAU;YACVkJ,eAAe;YACfC,WAAW;YACXU,qBAAqB;YACrBnB,0BAA0B;YAC1B5J,IAAI;YACJuK,aAAa;YACbC,eAAe;YACfC,iBAAiB;YACjBC,gBAAgB;MAChBC,MAAAA,eAAAA;WACH,CAAA;SACJ;QAEDrO,QAAQ,EAAA,68FAAA;MA2EZ,CAAC,CAAC;;AC3OF,yBAAeyD,eAAe,CAAC;MAC3BC,EAAAA,IAAI,EAAE,0CAA0C;MAEhDC,EAAAA,UAAU,EAAE;MACRC,IAAAA,UAAAA;SACH;MAEDpE,EAAAA,KAAK,EAAE;MAEH6P,IAAAA,SAAS,EAAE;MACPxL,MAAAA,IAAI,EAAEyL,OAA4B;MAClCC,MAAAA,OAAO,EAAE,KAAA;WACZ;MAGDC,IAAAA,cAAc,EAAE;MACZ3L,MAAAA,IAAI,EAAEyL,OAA4B;MAClCC,MAAAA,OAAO,EAAE,KAAA;WACZ;MAGD7P,IAAAA,KAAK,EAAE;MACHmE,MAAAA,IAAI,EAAE4L,MAA0B;MAChC1L,MAAAA,QAAQ,EAAE,IAAA;WACb;MAGD2L,IAAAA,QAAQ,EAAE;MACN7L,MAAAA,IAAI,EAAE4L,MAA0B;MAChC1L,MAAAA,QAAQ,EAAE,KAAA;WACb;MAGDgK,IAAAA,WAAW,EAAE;MACTlK,MAAAA,IAAI,EAAE4L,MAA0B;MAChC1L,MAAAA,QAAQ,EAAE,KAAA;WACb;MAGD4K,IAAAA,MAAM,EAAE;MACJ9K,MAAAA,IAAI,EAAE8L,KAAgC;MACtC5L,MAAAA,QAAQ,EAAE,KAAA;MACd,KAAA;SACH;MAEDC,EAAAA,KAAK,EAAE;UACH,MAAM,EAAE4L,MAAM,IAAA;SACjB;MAED1L,EAAAA,KAAKA,CAAC1E,KAAK,EAAA2E,IAAA,EAAY;MAAA,IAAA,IAARxD,IAAI,GAAAwD,IAAA,CAAJxD,IAAI,CAAA;UACf,IAAMD,WAAW,GAAGA,MAAY;YAC5BC,IAAI,CAAC,MAAM,CAAC,CAAA;WACf,CAAA;UAED,OAAO;MACHD,MAAAA,WAAAA;WACH,CAAA;SACJ;QAEDV,QAAQ,EAAA,izCAAA;MA8BZ,CAAC,CAAC;;ACrFF,kCAAeyD,eAAe,CAAC;MAC3BC,EAAAA,IAAI,EAAE,mDAAmD;MAEzDC,EAAAA,UAAU,EAAE;MACRkM,IAAAA,YAAAA;SACH;MAEDrQ,EAAAA,KAAK,EAAE;MAEHC,IAAAA,UAAU,EAAE;MACRoE,MAAAA,IAAI,EAAEC,MAAsC;MAC5CC,MAAAA,QAAQ,EAAE,IAAA;MACd,KAAA;SACH;MAEDC,EAAAA,KAAK,EAAE;UACH4L,IAAI,EAAG3L,MAA0B,IAAK,IAAA;SACzC;MAEDC,EAAAA,KAAKA,CAAC1E,KAAK,EAAA2E,IAAA,EAAY;MAAA,IAAA,IAARxD,IAAI,GAAAwD,IAAA,CAAJxD,IAAI,CAAA;MAGf,IAAA,IAAM0O,SAAS,GAAG/O,QAAQ,CAAC,MAAe;MACtC,MAAA,OAAOd,KAAK,CAACC,UAAU,CAAC4P,SAAS,CAAA;MACrC,KAAC,CAAC,CAAA;MAEF,IAAA,IAAMG,cAAc,GAAGlP,QAAQ,CAAC,MAAe;MAC3C,MAAA,OAAOd,KAAK,CAACC,UAAU,CAAC+P,cAAc,CAAA;MAC1C,KAAC,CAAC,CAAA;MAEF,IAAA,IAAM9P,KAAK,GAAGY,QAAQ,CAAC,MAAc;MAAA,MAAA,IAAAoN,qBAAA,CAAA;MACjC,MAAA,OAAA,CAAAA,qBAAA,GAAOlO,KAAK,CAACC,UAAU,CAACqQ,aAAa,MAAA,IAAA,IAAApC,qBAAA,KAAA,KAAA,CAAA,GAAAA,qBAAA,GAAI,EAAE,CAAA;MAC/C,KAAC,CAAC,CAAA;MAEF,IAAA,IAAMgC,QAAQ,GAAGpP,QAAQ,CAAC,MAAc;MACpC,MAAA,OAAA,GAAA,CAAAkC,MAAA,CAAWhD,KAAK,CAACC,UAAU,CAACsQ,aAAa,EAAA,GAAA,CAAA,CAAA;MAC7C,KAAC,CAAC,CAAA;MAEF,IAAA,IAAMhC,WAAW,GAAGzN,QAAQ,CAAC,MAAc;MAAA,MAAA,IAAAyF,qBAAA,CAAA;MACvC,MAAA,OAAA,iBAAA,CAAAvD,MAAA,CAAAuD,CAAAA,qBAAA,GAAyBvG,KAAK,CAACC,UAAU,CAACuQ,WAAW,MAAA,IAAA,IAAAjK,qBAAA,KAA5BA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,qBAAA,CAA8Bb,IAAI,CAAC,IAAI,CAAC,CAAA,CAAA;MACrE,KAAC,CAAC,CAAA;MAEF,IAAA,IAAMyJ,MAAM,GAAGrO,QAAQ,CAAC,MAAqB;YACzC,IAAMqO,MAAqB,GAAG,CAC1B;MACI1J,QAAAA,IAAI,EAAE,cAAc;MACpB1E,QAAAA,KAAK,EAAEf,KAAK,CAACC,UAAU,CAACwQ,WAAAA;MAC5B,OAAC,CACJ,CAAA;MAID,MAAA,IAAI3I,QAAQ,CAAC9H,KAAK,CAACC,UAAU,CAACyQ,aAAa,EAAEC,SAAS,CAACb,OAAO,CAAC,EAAE;cAC7DX,MAAM,CAACjC,IAAI,CAAC;MAACzH,UAAAA,IAAI,EAAE,gBAAgB;MAAE1E,UAAAA,KAAK,EAAE,SAAA;MAAS,SAAC,CAAC,CAAA;MAC3D,OAAC,MACI;cACDoO,MAAM,CAACjC,IAAI,CAAC;MACRzH,UAAAA,IAAI,EAAE,gBAAgB;MACtB1E,UAAAA,KAAK,EAAEf,KAAK,CAACC,UAAU,CAAC2Q,aAAa,KAAKC,8BAA8B,CAACC,QAAQ,GAAG,UAAU,GAAG,OAAA;MACrG,SAAC,CAAC,CAAA;cAEF3B,MAAM,CAACjC,IAAI,CAAC;MACRzH,UAAAA,IAAI,EAAE,aAAa;gBACnB1E,KAAK,EAAEf,KAAK,CAACC,UAAU,CAAC8Q,mBAAmB,GAAG,cAAc,GAAG,eAAA;MACnE,SAAC,CAAC,CAAA;MACN,OAAA;MAEA,MAAA,OAAO5B,MAAM,CAAA;MACjB,KAAC,CAAC,CAAA;UAOF,IAAM6B,MAAM,GAAGA,MAAY;MACvB7P,MAAAA,IAAI,CAAC,MAAM,EAAEnB,KAAK,CAACC,UAAU,CAAC,CAAA;WACjC,CAAA;UAID,OAAO;YACHsO,WAAW;YACXsB,SAAS;YACTG,cAAc;YACdgB,MAAM;YACNd,QAAQ;YACRhQ,KAAK;MACLiP,MAAAA,MAAAA;WACH,CAAA;SACJ;QAED3O,QAAQ,EAAA,yNAAA;MASZ,CAAC,CAAC;;;;;;;;;;;;;;MChGE,IAAA,IAAMqP,SAAS,GAAG/O,QAAQ,CAAC,MAAe;MACtC,MAAA,OAAOd,KAAK,CAACC,UAAU,CAAC4P,SAAS,CAAA;MACrC,KAAC,CAAC,CAAA;MAEF,IAAA,IAAM3P,KAAK,GAAGY,QAAQ,CAAC,MAAc;MAAA,MAAA,IAAAX,qBAAA,CAAA;MACjC,MAAA,OAAA,CAAAA,qBAAA,GAAOH,KAAK,CAACC,UAAU,CAACC,KAAK,MAAA,IAAA,IAAAC,qBAAA,KAAA,KAAA,CAAA,GAAAA,qBAAA,GAAI,EAAE,CAAA;MACvC,KAAC,CAAC,CAAA;MAEF,IAAA,IAAMoO,WAAW,GAAGzN,QAAQ,CAAC,MAAc;MAAA,MAAA,IAAAyF,qBAAA,CAAA;MACvC,MAAA,OAAA,iBAAA,CAAAvD,MAAA,CAAAuD,CAAAA,qBAAA,GAAyBvG,KAAK,CAACC,UAAU,CAACuQ,WAAW,MAAA,IAAA,IAAAjK,qBAAA,KAA5BA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,qBAAA,CAA8Bb,IAAI,CAAC,IAAI,CAAC,CAAA,CAAA;MACrE,KAAC,CAAC,CAAA;MAEF,IAAA,IAAMyJ,MAAM,GAAGrO,QAAQ,CAAC,MAAqB;YACzC,IAAMqO,MAAqB,GAAG,CAC1B;MACI1J,QAAAA,IAAI,EAAE,cAAc;MACpB1E,QAAAA,KAAK,EAAEf,KAAK,CAACC,UAAU,CAACwQ,WAAAA;MAC5B,OAAC,CACJ,CAAA;YAEDtB,MAAM,CAACjC,IAAI,CAAC;MACRzH,QAAAA,IAAI,EAAE,gBAAgB;MACtB1E,QAAAA,KAAK,EAAEf,KAAK,CAACC,UAAU,CAAC2Q,aAAa,KAAKC,8BAA8B,CAACC,QAAQ,GAAG,UAAU,GAAG,OAAA;MACrG,OAAC,CAAC,CAAA;YAEF3B,MAAM,CAACjC,IAAI,CAAC;MACRzH,QAAAA,IAAI,EAAE,aAAa;cACnB1E,KAAK,EAAEf,KAAK,CAACC,UAAU,CAAC8Q,mBAAmB,GAAG,cAAc,GAAG,eAAA;MACnE,OAAC,CAAC,CAAA;MAEF,MAAA,OAAO5B,MAAM,CAAA;MACjB,KAAC,CAAC,CAAA;UAOF,SAAS6B,MAAMA,GAAS;MACpB7P,MAAAA,IAAI,CAAC,MAAM,EAAEnB,KAAK,CAACC,UAAU,CAAC,CAAA;MAClC,KAAA;;;;;;;;;;;;;;;MCzBJ,IAAMgR,mBAAkC,GAAG,CACvC;MACI,EAAA,OAAO,EAAE,GAAG;MACZ,EAAA,MAAM,EAAE,eAAA;MACZ,CAAC,EACD;MACI,EAAA,OAAO,EAAE,GAAG;MACZ,EAAA,MAAM,EAAE,cAAA;MACZ,CAAC,CACJ,CAAA;MAMD,IAAMC,8BAA6C,GAAG,CAClD;MACI,EAAA,OAAO,EAAEL,8BAA8B,CAACM,KAAK,CAACC,QAAQ,EAAE;MACxD,EAAA,MAAM,EAAE,OAAA;MACZ,CAAC,EACD;MACI,EAAA,OAAO,EAAEP,8BAA8B,CAACC,QAAQ,CAACM,QAAQ,EAAE;MAC3D,EAAA,MAAM,EAAE,UAAA;MACZ,CAAC,CACJ,CAAA;MAMD,IAAMC,6BAA4C,GAAG,CACjD;MACI,EAAA,OAAO,EAAER,8BAA8B,CAACf,OAAO,CAACsB,QAAQ,EAAE;MAC1D,EAAA,MAAM,EAAE,SAAA;MACZ,CAAC,CACJ,CAAA;AAED,0BAAenN,eAAe,CAAC;MAC3BC,EAAAA,IAAI,EAAE,2CAA2C;MAEjDC,EAAAA,UAAU,EAAE;UACRmN,qBAAqB;mCACrBC,MAAuB;UACvBC,YAAY;UACZxL,KAAK;UACLE,KAAK;UACLuL,eAAe;UACfrN,UAAU;UACViM,YAAY;UACZlK,aAAa;MACb8H,IAAAA,OAAAA;SACH;MAEDjO,EAAAA,KAAK,EAAE;MAEHC,IAAAA,UAAU,EAAE;MACRoE,MAAAA,IAAI,EAAEC,MAAwC;MAC9CC,MAAAA,QAAQ,EAAE,IAAA;MACd,KAAA;SACH;MAEDC,EAAAA,KAAK,EAAE;UACH,mBAAmB,EAAGC,MAA4B,IAAK,IAAA;SAC1D;MAEDC,EAAAA,KAAKA,CAAC1E,KAAK,EAAA2E,IAAA,EAAY;MAAA,IAAA,IAARxD,IAAI,GAAAwD,IAAA,CAAJxD,IAAI,CAAA;MACfuQ,IAAAA,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC,CAAA;UAGpB,IAAMnL,iBAAiB,GAAGC,oBAAoB,EAAE,CAAA;MAEhD,IAAA,IAAMmL,aAAa,GAAG/R,GAAG,CAAC,EAAE,CAAC,CAAA;MAC7B,IAAA,IAAMgS,cAAc,GAAGhS,GAAG,CAAC,EAAE,CAAC,CAAA;MAC9B,IAAA,IAAMiS,iBAAiB,GAAGjS,GAAG,CAAC,EAAE,CAAC,CAAA;MACjC,IAAA,IAAMkS,sBAAsB,GAAGlS,GAAG,CAAgB,EAAE,CAAC,CAAA;MACrD,IAAA,IAAMmS,iBAAiB,GAAGnS,GAAG,CAAC,KAAK,CAAC,CAAA;MACpC,IAAA,IAAMoS,eAAe,GAAGpS,GAAG,CAAC,EAAE,CAAC,CAAA;MAC/B,IAAA,IAAMqS,cAAc,GAAGrS,GAAG,CAAC,EAAE,CAAC,CAAA;MAC9B,IAAA,IAAMsS,kBAAkB,GAAGtS,GAAG,CAAC,KAAK,CAAC,CAAA;MACrC,IAAA,IAAMuS,eAAe,GAAGvS,GAAG,CAAC,KAAK,CAAC,CAAA;MAClC,IAAA,IAAMwS,oBAAoB,GAAGxS,GAAG,CAAC,KAAK,CAAC,CAAA;MACvC,IAAA,IAAMyS,qBAAqB,GAAGzS,GAAG,CAAC,KAAK,CAAC,CAAA;MAMxC,IAAA,IAAM0S,qBAAqB,GAAGzR,QAAQ,CAAC,MAAe;YAAA,IAAA0R,qBAAA,EAAAC,sBAAA,CAAA;YAClD,OAAAD,CAAAA,qBAAA,IAAAC,sBAAA,GAAOzS,KAAK,CAACC,UAAU,CAACyS,cAAc,MAAA,IAAA,IAAAD,sBAAA,KAA/BA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,sBAAA,CAAiCF,qBAAqB,MAAA,IAAA,IAAAC,qBAAA,KAAAA,KAAAA,CAAAA,GAAAA,qBAAA,GAAI,KAAK,CAAA;MAC1E,KAAC,CAAC,CAAA;MAEF,IAAA,IAAMG,iBAAiB,GAAG7R,QAAQ,CAAC,MAAe;YAAA,IAAA8R,sBAAA,EAAAC,sBAAA,CAAA;YAC9C,OAAAD,CAAAA,sBAAA,IAAAC,sBAAA,GAAO7S,KAAK,CAACC,UAAU,CAACyS,cAAc,MAAA,IAAA,IAAAG,sBAAA,KAA/BA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,sBAAA,CAAiCF,iBAAiB,MAAA,IAAA,IAAAC,sBAAA,KAAAA,KAAAA,CAAAA,GAAAA,sBAAA,GAAI,KAAK,CAAA;MACtE,KAAC,CAAC,CAAA;MAEF,IAAA,IAAME,eAAe,GAAGhS,QAAQ,CAAC,MAAc;MAAA,MAAA,IAAAiS,sBAAA,CAAA;MAC3C,MAAA,OAAO,CAAAA,CAAAA,sBAAA,GAAA/S,KAAK,CAACC,UAAU,CAACyS,cAAc,MAAA,IAAA,IAAAK,sBAAA,KAA/BA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,sBAAA,CAAiCD,eAAe,KAAI,MAAM,CAAA;MACrE,KAAC,CAAC,CAAA;MAEF,IAAA,IAAME,uBAAuB,GAAGlS,QAAQ,CAAC,MAAsC;YAAA,IAAAmS,sBAAA,EAAAC,sBAAA,CAAA;YAC3E,OAAAD,CAAAA,sBAAA,IAAAC,sBAAA,GAAOlT,KAAK,CAACC,UAAU,CAACyS,cAAc,MAAAQ,IAAAA,IAAAA,sBAAA,uBAA/BA,sBAAA,CAAiCF,uBAAuB,MAAAC,IAAAA,IAAAA,sBAAA,cAAAA,sBAAA,GAAIpC,8BAA8B,CAACM,KAAK,CAAA;MAC3G,KAAC,CAAC,CAAA;MAEF,IAAA,IAAMgC,mCAAmC,GAAGrS,QAAQ,CAAC,MAAe;YAAA,IAAAsS,sBAAA,EAAAC,sBAAA,CAAA;YAChE,OAAAD,CAAAA,sBAAA,IAAAC,sBAAA,GAAOrT,KAAK,CAACC,UAAU,CAACyS,cAAc,MAAA,IAAA,IAAAW,sBAAA,KAA/BA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,sBAAA,CAAiCF,mCAAmC,MAAA,IAAA,IAAAC,sBAAA,KAAAA,KAAAA,CAAAA,GAAAA,sBAAA,GAAI,KAAK,CAAA;MACxF,KAAC,CAAC,CAAA;MAEF,IAAA,IAAME,gBAAgB,GAAGxS,QAAQ,CAAC,MAAqB;MACnD,MAAA,OAAO,CACH;MACI2E,QAAAA,IAAI,EAAE,cAAc;cACpB1E,KAAK,EAAE+R,eAAe,CAAC/R,KAAAA;MAC3B,OAAC,EACD;MACI0E,QAAAA,IAAI,EAAE,gBAAgB;cACtB1E,KAAK,EAAEiS,uBAAuB,CAACjS,KAAK,KAAK8P,8BAA8B,CAACC,QAAQ,GAAG,UAAU,GAAG,OAAA;MACpG,OAAC,EACD;MACIrL,QAAAA,IAAI,EAAE,aAAa;MACnB1E,QAAAA,KAAK,EAAEoS,mCAAmC,CAACpS,KAAK,GAAG,cAAc,GAAG,eAAA;MACxE,OAAC,CACJ,CAAA;MACL,KAAC,CAAC,CAAA;MAEF,IAAA,IAAMwS,gBAAgB,GAAGzS,QAAQ,CAAC,MAA4B;YAAA,IAAA0S,uBAAA,EAAAC,uBAAA,CAAA;YAC1D,OAAAD,CAAAA,uBAAA,IAAAC,uBAAA,GAAOzT,KAAK,CAACC,UAAU,CAACyS,cAAc,MAAA,IAAA,IAAAe,uBAAA,KAA/BA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,uBAAA,CAAiCF,gBAAgB,MAAA,IAAA,IAAAC,uBAAA,KAAAA,KAAAA,CAAAA,GAAAA,uBAAA,GAAI,EAAE,CAAA;MAClE,KAAC,CAAC,CAAA;MAEF,IAAA,IAAME,kBAAkB,GAAG5S,QAAQ,CAAC,MAA8B;YAAA,IAAA6S,uBAAA,EAAAC,uBAAA,CAAA;YAC9D,OAAAD,CAAAA,uBAAA,IAAAC,uBAAA,GAAO5T,KAAK,CAACC,UAAU,CAACyS,cAAc,MAAA,IAAA,IAAAkB,uBAAA,KAA/BA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,uBAAA,CAAiCF,kBAAkB,MAAA,IAAA,IAAAC,uBAAA,KAAAA,KAAAA,CAAAA,GAAAA,uBAAA,GAAI,EAAE,CAAA;MACpE,KAAC,CAAC,CAAA;UAgBF,IAAME,qBAAqB,GAAIlK,MAA0B,IAAW;MAAA,MAAA,IAAAmK,qBAAA,EAAAzK,KAAA,EAAA0K,mBAAA,CAAA;MAChE,MAAA,IAAI,CAACpK,MAAM,CAACqK,YAAY,EAAE;MACtB,QAAA,OAAA;MACJ,OAAA;MAGApC,MAAAA,aAAa,CAAC7Q,KAAK,GAAG4I,MAAM,CAACqK,YAAY,CAAA;MACzCnC,MAAAA,cAAc,CAAC9Q,KAAK,GAAA+S,CAAAA,qBAAA,GAAGnK,MAAM,CAAC2G,aAAa,MAAAwD,IAAAA,IAAAA,qBAAA,KAAAA,KAAAA,CAAAA,GAAAA,qBAAA,GAAI,EAAE,CAAA;MACjD9B,MAAAA,iBAAiB,CAACjR,KAAK,GAAG4I,MAAM,CAACkG,SAAS,CAAA;YAC1CoC,eAAe,CAAClR,KAAK,GAAAsI,CAAAA,KAAA,IAAA0K,mBAAA,GAAGpK,MAAM,CAAC8G,WAAW,MAAA,IAAA,IAAAsD,mBAAA,KAAAA,KAAAA,CAAAA,GAAAA,mBAAA,GAAIpK,MAAM,CAAC2G,aAAa,cAAAjH,KAAA,KAAA,KAAA,CAAA,GAAAA,KAAA,GAAI,EAAE,CAAA;YAIxE,IAAIvB,QAAQ,CAAC6B,MAAM,CAAC+G,aAAa,EAAEC,SAAS,CAACb,OAAO,CAAC,EAAE;cACnDgC,iBAAiB,CAAC/Q,KAAK,GAAG8P,8BAA8B,CAACf,OAAO,CAACsB,QAAQ,EAAE,CAAA;cAC3EW,sBAAsB,CAAChR,KAAK,GAAGsQ,6BAA6B,CAAA;cAC5Da,cAAc,CAACnR,KAAK,GAAG,GAAG,CAAA;cAC1BoR,kBAAkB,CAACpR,KAAK,GAAG,KAAK,CAAA;MACpC,OAAC,MACI;cACD+Q,iBAAiB,CAAC/Q,KAAK,GAAG4I,MAAM,CAACiH,aAAa,CAACQ,QAAQ,EAAE,CAAA;cACzDW,sBAAsB,CAAChR,KAAK,GAAGmQ,8BAA8B,CAAA;cAC7DgB,cAAc,CAACnR,KAAK,GAAG4I,MAAM,CAACoH,mBAAmB,GAAG,GAAG,GAAG,GAAG,CAAA;cAC7DoB,kBAAkB,CAACpR,KAAK,GAAG,IAAI,CAAA;MACnC,OAAA;YAEAsR,oBAAoB,CAACtR,KAAK,GAAG,KAAK,CAAA;YAClCuR,qBAAqB,CAACvR,KAAK,GAAG,IAAI,CAAA;YAClCqR,eAAe,CAACrR,KAAK,GAAG,IAAI,CAAA;WAC/B,CAAA;UAQD,IAAMkT,uBAAuB,GAAItK,MAA4B,IAAW;MAAA,MAAA,IAAAuK,aAAA,EAAAzJ,KAAA,EAAA0J,oBAAA,CAAA;MACpE,MAAA,IAAI,CAACxK,MAAM,CAAC/J,GAAG,EAAE;MACb,QAAA,OAAA;MACJ,OAAA;MAGAgS,MAAAA,aAAa,CAAC7Q,KAAK,GAAG4I,MAAM,CAAC/J,GAAG,CAAA;MAChCiS,MAAAA,cAAc,CAAC9Q,KAAK,GAAAmT,CAAAA,aAAA,GAAGvK,MAAM,CAACzJ,KAAK,MAAAgU,IAAAA,IAAAA,aAAA,KAAAA,KAAAA,CAAAA,GAAAA,aAAA,GAAI,EAAE,CAAA;MACzClC,MAAAA,iBAAiB,CAACjR,KAAK,GAAG4I,MAAM,CAACkG,SAAS,CAAA;YAC1CoC,eAAe,CAAClR,KAAK,GAAA0J,CAAAA,KAAA,IAAA0J,oBAAA,GAAGxK,MAAM,CAAC8G,WAAW,MAAA,IAAA,IAAA0D,oBAAA,KAAAA,KAAAA,CAAAA,GAAAA,oBAAA,GAAIxK,MAAM,CAACzJ,KAAK,cAAAuK,KAAA,KAAA,KAAA,CAAA,GAAAA,KAAA,GAAI,EAAE,CAAA;YAEhEqH,iBAAiB,CAAC/Q,KAAK,GAAG4I,MAAM,CAACiH,aAAa,CAACQ,QAAQ,EAAE,CAAA;YACzDW,sBAAsB,CAAChR,KAAK,GAAGmQ,8BAA8B,CAAA;YAC7DgB,cAAc,CAACnR,KAAK,GAAG4I,MAAM,CAACoH,mBAAmB,GAAG,GAAG,GAAG,GAAG,CAAA;YAC7DoB,kBAAkB,CAACpR,KAAK,GAAG,IAAI,CAAA;YAE/BsR,oBAAoB,CAACtR,KAAK,GAAG,KAAK,CAAA;YAClCuR,qBAAqB,CAACvR,KAAK,GAAG,KAAK,CAAA;YACnCqR,eAAe,CAACrR,KAAK,GAAG,IAAI,CAAA;WAC/B,CAAA;UAMD,IAAMqT,oBAAoB,GAAGA,MAAY;YACrCxC,aAAa,CAAC7Q,KAAK,GAAG,EAAE,CAAA;YACxB8Q,cAAc,CAAC9Q,KAAK,GAAG,kBAAkB,CAAA;MACzCiR,MAAAA,iBAAiB,CAACjR,KAAK,GAAGwR,qBAAqB,CAACxR,KAAK,CAAA;YACrDoR,kBAAkB,CAACpR,KAAK,GAAG,KAAK,CAAA;YAEhCsR,oBAAoB,CAACtR,KAAK,GAAG,IAAI,CAAA;YACjCqR,eAAe,CAACrR,KAAK,GAAG,IAAI,CAAA;WAC/B,CAAA;UAMD,IAAMsT,gBAAgB,GAAGA,MAAY;YACjCzC,aAAa,CAAC7Q,KAAK,GAAG,EAAE,CAAA;YACxB8Q,cAAc,CAAC9Q,KAAK,GAAG,MAAM,CAAA;MAC7BiR,MAAAA,iBAAiB,CAACjR,KAAK,GAAG4R,iBAAiB,CAAC5R,KAAK,CAAA;MACjDkR,MAAAA,eAAe,CAAClR,KAAK,GAAG+R,eAAe,CAAC/R,KAAK,CAAA;YAC7C+Q,iBAAiB,CAAC/Q,KAAK,GAAGiS,uBAAuB,CAACjS,KAAK,CAACqQ,QAAQ,EAAE,CAAA;YAClEW,sBAAsB,CAAChR,KAAK,GAAGmQ,8BAA8B,CAAA;YAC7DgB,cAAc,CAACnR,KAAK,GAAGoS,mCAAmC,CAACpS,KAAK,GAAG,GAAG,GAAG,GAAG,CAAA;YAC5EoR,kBAAkB,CAACpR,KAAK,GAAG,IAAI,CAAA;YAE/BsR,oBAAoB,CAACtR,KAAK,GAAG,KAAK,CAAA;YAClCqR,eAAe,CAACrR,KAAK,GAAG,IAAI,CAAA;WAC/B,CAAA;MAMD,IAAA,IAAMuT,WAAW,GAAA,YAAA;MAAA,MAAA,IAAAzJ,KAAA,GAAAvB,iBAAA,CAAG,aAA2B;MAAA,QAAA,IAAA0B,YAAA,CAAA;MAC3C,QAAA,IAAI,CAAChL,KAAK,CAACC,UAAU,CAACyS,cAAc,EAAE;MAClC,UAAA,OAAA;MACJ,SAAA;cAGA,IAAMzH,GAAsB,GAAA0E,cAAA,CAAA,EAAA,EACrB3P,KAAK,CAACC,UAAU,CAACyS,cAAc,CACrC,CAAA;MAED,QAAA,IAAI6B,eAAyB,CAAA;cAE7B,IAAIlC,oBAAoB,CAACtR,KAAK,EAAE;MAE5BkK,UAAAA,GAAG,CAACsH,qBAAqB,GAAGP,iBAAiB,CAACjR,KAAK,CAAA;gBACnDwT,eAAe,GAAG,CAAC,uBAAuB,CAAC,CAAA;MAC/C,SAAC,MACI,IAAI,CAAC3C,aAAa,CAAC7Q,KAAK,EAAE;MAAA,UAAA,IAAAwK,KAAA,CAAA;MAE3BN,UAAAA,GAAG,CAAC0H,iBAAiB,GAAGX,iBAAiB,CAACjR,KAAK,CAAA;MAC/CkK,UAAAA,GAAG,CAAC+H,uBAAuB,GAAA,CAAAzH,KAAA,GAAGiJ,cAAc,CAAC1C,iBAAiB,CAAC/Q,KAAK,CAAC,cAAAwK,KAAA,KAAA,KAAA,CAAA,GAAAA,KAAA,GAAsCsF,8BAA8B,CAACM,KAAK,CAAA;MAC/IlG,UAAAA,GAAG,CAACkI,mCAAmC,GAAGjB,cAAc,CAACnR,KAAK,KAAK,GAAG,CAAA;MACtEkK,UAAAA,GAAG,CAAC6H,eAAe,GAAGb,eAAe,CAAClR,KAAK,CAAA;gBAC3CwT,eAAe,GAAG,CAAC,mBAAmB,EAAE,yBAAyB,EAAE,qCAAqC,EAAE,iBAAiB,CAAC,CAAA;MAChI,SAAC,MACI,IAAIjC,qBAAqB,CAACvR,KAAK,EAAE;MAAA,UAAA,IAAA0T,qBAAA,CAAA;MAIlCxJ,UAAAA,GAAG,CAACsI,gBAAgB,GAAG,CAAC,IAAA,CAAAkB,qBAAA,GAAIxJ,GAAG,CAACsI,gBAAgB,cAAAkB,qBAAA,KAAA,KAAA,CAAA,GAAAA,qBAAA,GAAI,EAAE,CAAC,CAAC,CAAA;MAIxD,UAAA,IAAMC,WAAW,GAAGzJ,GAAG,CAACsI,gBAAgB,CAACoB,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACZ,YAAY,KAAKpC,aAAa,CAAC7Q,KAAK,CAAC,CAAA;MAE/F,UAAA,IAAI2T,WAAW,KAAK,CAAC,CAAC,EAAE;MACpB,YAAA,OAAA;MACJ,WAAA;gBAGA,IAAM/K,MAAM,GAAAgG,cAAA,CACL1E,EAAAA,EAAAA,GAAG,CAACsI,gBAAgB,CAACmB,WAAW,CAAC,CACvC,CAAA;MAED/K,UAAAA,MAAM,CAACkG,SAAS,GAAGmC,iBAAiB,CAACjR,KAAK,CAAA;MAC1C4I,UAAAA,MAAM,CAAC8G,WAAW,GAAGwB,eAAe,CAAClR,KAAK,CAAA;gBAG1C,IAAI+G,QAAQ,CAAC6B,MAAM,CAAC+G,aAAa,EAAEC,SAAS,CAACb,OAAO,CAAC,EAAE;MACnDnG,YAAAA,MAAM,CAACiH,aAAa,GAAGC,8BAA8B,CAACf,OAAO,CAAA;kBAC7DnG,MAAM,CAACoH,mBAAmB,GAAG,KAAK,CAAA;MACtC,WAAC,MACI;MAAA,YAAA,IAAAjF,KAAA,CAAA;MACDnC,YAAAA,MAAM,CAACiH,aAAa,GAAA,CAAA9E,KAAA,GAAG0I,cAAc,CAAC1C,iBAAiB,CAAC/Q,KAAK,CAAC,cAAA+K,KAAA,KAAA,KAAA,CAAA,GAAAA,KAAA,GAAsC+E,8BAA8B,CAACM,KAAK,CAAA;MACxIxH,YAAAA,MAAM,CAACoH,mBAAmB,GAAGmB,cAAc,CAACnR,KAAK,KAAK,GAAG,CAAA;MAC7D,WAAA;gBAEAkK,GAAG,CAACsI,gBAAgB,CAACjG,MAAM,CAACoH,WAAW,EAAE,CAAC,EAAE/K,MAAM,CAAC,CAAA;gBAEnD4K,eAAe,GAAG,CAAC,kBAAkB,CAAC,CAAA;MAC1C,SAAC,MACI;gBAAA,IAAAM,qBAAA,EAAApI,KAAA,CAAA;MAIDxB,UAAAA,GAAG,CAACyI,kBAAkB,GAAG,CAAC,IAAA,CAAAmB,qBAAA,GAAI5J,GAAG,CAACyI,kBAAkB,cAAAmB,qBAAA,KAAA,KAAA,CAAA,GAAAA,qBAAA,GAAI,EAAE,CAAC,CAAC,CAAA;MAI5D,UAAA,IAAMH,YAAW,GAAGzJ,GAAG,CAACyI,kBAAkB,CAACiB,SAAS,CAACC,CAAC,IAAIA,CAAC,CAAChV,GAAG,KAAKgS,aAAa,CAAC7Q,KAAK,CAAC,CAAA;MAExF,UAAA,IAAI2T,YAAW,KAAK,CAAC,CAAC,EAAE;MACpB,YAAA,OAAA;MACJ,WAAA;gBAGA,IAAM/K,OAAM,GAAAgG,cAAA,CACL1E,EAAAA,EAAAA,GAAG,CAACyI,kBAAkB,CAACgB,YAAW,CAAC,CACzC,CAAA;MAED/K,UAAAA,OAAM,CAACkG,SAAS,GAAGmC,iBAAiB,CAACjR,KAAK,CAAA;MAC1C4I,UAAAA,OAAM,CAAC8G,WAAW,GAAGwB,eAAe,CAAClR,KAAK,CAAA;MAC1C4I,UAAAA,OAAM,CAACiH,aAAa,GAAA,CAAAnE,KAAA,GAAG+H,cAAc,CAAC1C,iBAAiB,CAAC/Q,KAAK,CAAC,cAAA0L,KAAA,KAAA,KAAA,CAAA,GAAAA,KAAA,GAAsCoE,8BAA8B,CAACM,KAAK,CAAA;MACxIxH,UAAAA,OAAM,CAACoH,mBAAmB,GAAGmB,cAAc,CAACnR,KAAK,KAAK,GAAG,CAAA;gBAEzDkK,GAAG,CAACyI,kBAAkB,CAACpG,MAAM,CAACoH,YAAW,EAAE,CAAC,EAAE/K,OAAM,CAAC,CAAA;gBAErD4K,eAAe,GAAG,CAAC,oBAAoB,CAAC,CAAA;MAC5C,SAAA;MAEA,QAAA,IAAMO,GAAiD,GAAG;MACtDzJ,UAAAA,MAAM,EAAEJ,GAAG;gBACXsJ,eAAe;MACfQ,UAAAA,UAAU,EAAE,IAAA;eACf,CAAA;MACD,QAAA,IAAMvL,IAAI,GAAG;MACT5J,UAAAA,GAAG,EAAEI,KAAK,CAACC,UAAU,CAACkL,KAAK;MAC3B2J,UAAAA,GAAAA;eACH,CAAA;MAED,QAAA,IAAMvL,MAAM,GAAS/C,MAAAA,iBAAiB,CAA0E,oBAAoB,EAAEgD,IAAI,CAAC,CAAA;MAE3I,QAAA,IAAI,CAACD,MAAM,CAAC6B,SAAS,IAAI,GAAAJ,YAAA,GAACzB,MAAM,CAACC,IAAI,MAAAwB,IAAAA,IAAAA,YAAA,eAAXA,YAAA,CAAaK,MAAM,CAAE,EAAA;MAC3C5B,UAAAA,KAAK,CAACF,MAAM,CAACG,YAAY,IAAI,iCAAiC,CAAC,CAAA;MAC/D,UAAA,OAAA;MACJ,SAAA;cAEAvI,IAAI,CAAC,mBAAmB,EAAEoI,MAAM,CAACC,IAAI,CAAC6B,MAAM,CAAC,CAAA;cAC7C+G,eAAe,CAACrR,KAAK,GAAG,KAAK,CAAA;aAChC,CAAA,CAAA;MAAA,MAAA,OAAA,SA7GKuT,WAAWA,GAAA;MAAA,QAAA,OAAAzJ,KAAA,CAAAP,KAAA,CAAA,IAAA,EAAAC,SAAA,CAAA,CAAA;MAAA,OAAA,CAAA;WA6GhB,EAAA,CAAA;UAID,OAAO;YACHgJ,gBAAgB;YAChBG,kBAAkB;YAClB5B,iBAAiB;YACjBC,sBAAsB;YACtBC,iBAAiB;YACjBC,eAAe;YACfJ,cAAc;YACdK,cAAc;YACdjB,mBAAmB;YACnBkB,kBAAkB;YAClBI,qBAAqB;YACrBF,oBAAoB;YACpBD,eAAe;YACfyB,qBAAqB;YACrBI,uBAAuB;YACvBG,oBAAoB;YACpBC,gBAAgB;YAChBC,WAAW;YACX3B,iBAAiB;MACjBW,MAAAA,gBAAAA;WACH,CAAA;SACJ;QAED9S,QAAQ,EAAA,2kFAAA;MAsEZ,CAAC,CAAC;;ACldF,sBAAeyD,eAAe,CAAC;MAC3BC,EAAAA,IAAI,EAAE,uCAAuC;MAE7ClE,EAAAA,KAAK,EAAE;MACHC,IAAAA,UAAU,EAAE;MACRoE,MAAAA,IAAI,EAAEC,MAAwC;MAC9CC,MAAAA,QAAQ,EAAE,KAAA;WACb;MAEDyQ,IAAAA,OAAO,EAAE;MACL3Q,MAAAA,IAAI,EAAEC,MAAqD;MAC3DC,MAAAA,QAAQ,EAAE,IAAA;MACd,KAAA;SACH;MAEDJ,EAAAA,UAAU,EAAE;UACR4J,wBAAwB;MACxBkH,IAAAA,eAAAA;SACH;QAEDvQ,KAAKA,CAAC1E,KAAK,EAAE;MAAA,IAAA,IAAAkO,qBAAA,EAAAnO,iBAAA,EAAAoO,sBAAA,EAAA/N,kBAAA,CAAA;UAGT,IAAMgF,UAAU,GAAGvF,GAAG,CAAAqO,CAAAA,qBAAA,IAAAnO,iBAAA,GAACC,KAAK,CAACC,UAAU,MAAA,IAAA,IAAAF,iBAAA,KAAhBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,iBAAA,CAAkBqF,UAAU,MAAA8I,IAAAA,IAAAA,qBAAA,cAAAA,qBAAA,GAAI,EAAE,CAAC,CAAA;UAC1D,IAAMI,eAAe,GAAGzO,GAAG,CAAAsO,CAAAA,sBAAA,IAAA/N,kBAAA,GAACJ,KAAK,CAACC,UAAU,MAAA,IAAA,IAAAG,kBAAA,KAAhBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,kBAAA,CAAkBkO,eAAe,MAAAH,IAAAA,IAAAA,sBAAA,cAAAA,sBAAA,GAAI,EAAE,CAAC,CAAA;MAOpE,IAAA,IAAM+G,SAAS,GAAGpU,QAAQ,CAAC,MAA6B;MACpD,MAAA,IAAMqU,YAAY,GAAG,IAAIC,0BAA0B,EAAE,CAAA;MAErD,MAAA,IAAI,CAACpV,KAAK,CAACC,UAAU,EAAE;cACnB,OAAOkV,YAAY,CAACE,KAAK,EAAE,CAAA;MAC/B,OAAA;MAEA,MAAA,IAAIrV,KAAK,CAACC,UAAU,CAACsO,WAAW,EAAE;cAC9B4G,YAAY,CAACG,YAAY,CAAC,aAAa,EAAEtV,KAAK,CAACC,UAAU,CAACsO,WAAW,CAAC,CAAA;MAC1E,OAAA;YAEA,OAAO4G,YAAY,CAACE,KAAK,EAAE,CAAA;MAC/B,KAAC,CAAC,CAAA;MAGF,IAAA,IAAME,cAAc,GAAGzU,QAAQ,CAAC,MAA6B;MAAA,MAAA,IAAAuN,qBAAA,CAAA;MACzD,MAAA,IAAM8G,YAAY,GAAG,IAAIC,0BAA0B,EAAE,CAAA;MAErD,MAAA,IAAI,CAACpV,KAAK,CAACC,UAAU,EAAE;cACnB,OAAOkV,YAAY,CAACE,KAAK,EAAE,CAAA;MAC/B,OAAA;MAEAF,MAAAA,YAAY,CAACG,YAAY,CAAC,gBAAgB,EAAAjH,CAAAA,qBAAA,GAAErO,KAAK,CAACC,UAAU,CAACwO,aAAa,MAAAJ,IAAAA,IAAAA,qBAAA,cAAAA,qBAAA,GAAI,EAAE,CAAC,CAAA;MAEjF,MAAA,IAAMmH,aAAa,GAAA,4BAAA,CAAAxS,MAAA,CAA+BhD,KAAK,CAACC,UAAU,CAAC6O,cAAc,GAAG,SAAS,GAAG,SAAS,EAAmB,oBAAA,CAAA,CAAA;MAC5H,MAAA,IAAM2G,mBAAmB,GAAA,4BAAA,CAAAzS,MAAA,CAA+BhD,KAAK,CAACC,UAAU,CAAC8O,oBAAoB,GAAG,SAAS,GAAG,SAAS,EAA0B,2BAAA,CAAA,CAAA;MAC/IoG,MAAAA,YAAY,CAACO,YAAY,CAAC,iBAAiB,EAAA1S,iCAAAA,CAAAA,MAAA,CAAkCwS,aAAa,CAAAxS,CAAAA,MAAA,CAAGyS,mBAAmB,EAAS,QAAA,CAAA,CAAA,CAAA;YAEzH,OAAON,YAAY,CAACE,KAAK,EAAE,CAAA;MAC/B,KAAC,CAAC,CAAA;MAGF,IAAA,IAAMM,eAAe,GAAG7U,QAAQ,CAAC,MAA6B;MAC1D,MAAA,IAAMqU,YAAY,GAAG,IAAIC,0BAA0B,EAAE,CAAA;MAErD,MAAA,IAAI,CAACpV,KAAK,CAACC,UAAU,EAAE;cACnB,OAAOkV,YAAY,CAACE,KAAK,EAAE,CAAA;MAC/B,OAAA;MAEA,MAAA,IAAIrV,KAAK,CAACC,UAAU,CAACyO,eAAe,EAAE;MAClC,QAAA,IAAMkH,KAAK,GAAqD,oDAAA,CAAA;cAChE,IAAMC,IAAI,GAAA7S,+DAAAA,CAAAA,MAAA,CAA+DhD,KAAK,CAACC,UAAU,CAAC0O,iBAAiB,EAAA,GAAA,CAAA,CAAA3L,MAAA,CAAI8S,iBAAiB,CAAC9V,KAAK,CAACC,UAAU,CAAC0O,iBAAiB,EAAE,KAAK,EAAE,MAAM,CAAC,EAAS,SAAA,CAAA,CAAA;cAC5L,IAAMoH,KAAK,GAAA/S,2DAAAA,CAAAA,MAAA,CAA2DhD,KAAK,CAACC,UAAU,CAAC2O,gBAAgB,EAAA,GAAA,CAAA,CAAA5L,MAAA,CAAI8S,iBAAiB,CAAC9V,KAAK,CAACC,UAAU,CAAC2O,gBAAgB,EAAE,MAAM,EAAE,OAAO,CAAC,EAAS,SAAA,CAAA,CAAA;MACzLuG,QAAAA,YAAY,CAACO,YAAY,CAAC,UAAU,EAAA,8DAAA,CAAA1S,MAAA,CAA+D4S,KAAK,CAAA5S,CAAAA,MAAA,CAAG6S,IAAI,CAAA,CAAA7S,MAAA,CAAG+S,KAAK,EAAS,QAAA,CAAA,CAAA,CAAA;MACpI,OAAC,MACI;MACDZ,QAAAA,YAAY,CAACO,YAAY,CAAC,UAAU,EAAsD,qDAAA,CAAA,CAAA;MAC9F,OAAA;YAEA,OAAOP,YAAY,CAACE,KAAK,EAAE,CAAA;MAC/B,KAAC,CAAC,CAAA;UAYF,OAAO;YACHjQ,UAAU;YACVkJ,eAAe;YACfiH,cAAc;YACdI,eAAe;MACfT,MAAAA,SAAAA;WACH,CAAA;SACJ;QAED1U,QAAQ,EAAA,odAAA;MAiBZ,CAAC,CAAC;;MChIgBwV,IAAAA,gBAAgB,aAAhBA,gBAAgB,EAAA;QAAhBA,gBAAgB,CAAA,YAAA,CAAA,GAAA,YAAA,CAAA;MAAA,EAAA,OAAhBA,gBAAgB,CAAA;MAAA,CAAA,CAAA,EAAA,CAAA;;ACkBlC,uDAAe/R,eAAe,CAAC;MAC3BC,EAAAA,IAAI,EAAE,2BAA2B;MAEjCC,EAAAA,UAAU,EAAE;UACR8R,eAAe;UACfC,cAAc;UACdC,aAAa;UACbC,SAAS;UACTC,WAAW;MACXC,IAAAA,SAAAA;SACH;MAED5R,EAAAA,KAAKA,GAAG;UACJ,IAAM6R,MAAM,GAAGC,sBAAsB,EAA2E,CAAA;UAChH,IAAMhQ,iBAAiB,GAAGC,oBAAoB,EAAE,CAAA;MAChD,IAAA,IAAMgQ,aAAa,GAAGC,gBAAgB,CAACH,MAAM,CAACI,kBAAkB,CAAC,CAAA;MAIjE,IAAA,IAAMC,UAAU,GAAG/W,GAAG,CAAC,EAAE,CAAC,CAAA;MAC1B,IAAA,IAAM6J,YAAY,GAAG7J,GAAG,CAAC,EAAE,CAAC,CAAA;MAE5B,IAAA,IAAMgX,wBAAwB,GAAGhX,GAAG,CAAC0W,MAAM,CAAClL,MAAM,CAAC,CAAA;MACnD,IAAA,IAAMyL,wBAAwB,GAAGjX,GAAG,CAA8B,IAAI,CAAC,CAAA;MAEvE,IAAA,IAAMkX,SAAS,GAAGlX,GAAG,CAAkBmX,eAAe,CAACC,IAAI,CAAC,CAAA;MAE5D,IAAA,IAAMC,sBAAsB,GAAGrX,GAAG,CAAC,IAAI,CAAC,CAAA;MAIxC,IAAA,IAAM0U,eAAe,GAAG,CACpB,iBAAiB,EACjB,aAAa,EACb,sBAAsB,EACtB,gBAAgB,EAChB,gBAAgB,EAChB,mBAAmB,EACnB,oBAAoB,EACpB,eAAe,EACf,MAAM,EACN,iBAAiB,EACjB,iBAAiB,EACjB,kBAAkB,EAClB,mBAAmB,CACtB,CAAA;MAED,IAAA,IAAM4C,yBAAyB,GAAGC,QAAQ,CAAC,MAAMC,uBAAuB,CAACP,wBAAwB,EAAEvC,eAAe,EAAE/N,iBAAiB,CAAC,EAAE7D,SAAS,EAAE,IAAI,CAAC,CAAA;MAExJ,IAAA,IAAM2U,iBAAiB,GAAGzX,GAAG,CAAC,KAAK,CAAC,CAAA;MASpC,IAAA,IAAM0X,SAAS,GAAGzW,QAAQ,CAAC,MAAc;YAAA,IAAA0W,qBAAA,EAAAC,sBAAA,CAAA;MACrC,MAAA,OAAA,CAAAD,qBAAA,GAAAC,CAAAA,sBAAA,GAAOZ,wBAAwB,CAAC9V,KAAK,MAAA0W,IAAAA,IAAAA,sBAAA,KAA9BA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,sBAAA,CAAgCvT,IAAI,MAAA,IAAA,IAAAsT,qBAAA,KAAAA,KAAAA,CAAAA,GAAAA,qBAAA,GAAI,EAAE,CAAA;MACrD,KAAC,CAAC,CAAA;MAKF,IAAA,IAAME,SAAS,GAAG5W,QAAQ,CAAC,MAAc;YAAA,IAAA6W,sBAAA,EAAAC,sBAAA,CAAA;MACrC,MAAA,OAAA,CAAAD,sBAAA,GAAAC,CAAAA,sBAAA,GAAOf,wBAAwB,CAAC9V,KAAK,MAAA6W,IAAAA,IAAAA,sBAAA,KAA9BA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,sBAAA,CAAgCzM,KAAK,MAAA,IAAA,IAAAwM,sBAAA,KAAAA,KAAAA,CAAAA,GAAAA,sBAAA,GAAI,EAAE,CAAA;MACtD,KAAC,CAAC,CAAA;MAKF,IAAA,IAAME,WAAW,GAAG/W,QAAQ,CAAC,MAA4B;YACrD,IAAMgX,MAAqB,GAAG,EAAE,CAAA;MAEhC,MAAA,IAAIf,SAAS,CAAChW,KAAK,KAAKiW,eAAe,CAACC,IAAI,EAAE;MAC1C,QAAA,OAAO,IAAI,CAAA;MACf,OAAA;MAEA,MAAA,OAAOa,MAAM,CAAA;MACjB,KAAC,CAAC,CAAA;MAEF,IAAA,IAAM/C,UAAU,GAAGjU,QAAQ,CAAC,MAAe;MACvC,MAAA,OAAOyV,MAAM,CAACxB,UAAU,KAAK,IAAI,CAAA;MACrC,KAAC,CAAC,CAAA;MAEF,IAAA,IAAMC,OAAO,GAAGlU,QAAQ,CAAC,MAAyC;MAAA,MAAA,IAAAiX,eAAA,CAAA;YAC9D,OAAAA,CAAAA,eAAA,GAAOxB,MAAM,CAACvB,OAAO,MAAA+C,IAAAA,IAAAA,eAAA,KAAAA,KAAAA,CAAAA,GAAAA,eAAA,GAAI,EAAE,CAAA;MAC/B,KAAC,CAAC,CAAA;MAEF,IAAA,IAAMC,SAAS,GAAGlX,QAAQ,CAAC,MAAe;MACtC,MAAA,OAAOiW,SAAS,CAAChW,KAAK,KAAKiW,eAAe,CAACC,IAAI,CAAA;MACnD,KAAC,CAAC,CAAA;MAEF,IAAA,IAAMgB,sBAAsB,GAAGnX,QAAQ,CAAC,MAAc;MAClD,MAAA,OAAOoW,sBAAsB,CAACnW,KAAK,GAAG,QAAQ,GAAG,EAAE,CAAA;MACvD,KAAC,CAAC,CAAA;MAEF,IAAA,IAAMmX,qBAAqB,GAAGpX,QAAQ,CAAC,MAAc;MACjD,MAAA,OAAOoW,sBAAsB,CAACnW,KAAK,GAAG,EAAE,GAAG,QAAQ,CAAA;MACvD,KAAC,CAAC,CAAA;MAEF,IAAA,IAAMoX,sBAAsB,GAAGrX,QAAQ,CAAC,MAAqB;YACzD,IAAMsX,OAAsB,GAAG,EAAE,CAAA;YAEjC,IAAI7B,MAAM,CAACxB,UAAU,EAAE;cACnBqD,OAAO,CAAClL,IAAI,CAAC;MACT7I,UAAAA,IAAI,EAAE,SAAS;MACfnE,UAAAA,KAAK,EAAE,eAAe;gBACtB8E,YAAY,EAAE,CAACsS,iBAAiB,CAACvW,KAAK,GAAG,gBAAgB,GAAG,mBAAmB;gBAC/EsX,QAAQ,EAAEf,iBAAiB,CAACvW,KAAK;MACjCuX,UAAAA,OAAO,EAAEC,cAAAA;MACb,SAAC,CAAC,CAAA;MACN,OAAA;MAEA,MAAA,OAAOH,OAAO,CAAA;MAClB,KAAC,CAAC,CAAA;MAgBF,IAAA,IAAMI,YAAY,GAAA,YAAA;MAAA,MAAA,IAAA7T,IAAA,GAAA2E,iBAAA,CAAG,aAAuC;MAAA,QAAA,IAAAmP,qBAAA,CAAA;MACxD,QAAA,IAAI,EAAAA,CAAAA,qBAAA,GAAC3B,wBAAwB,CAAC/V,KAAK,MAAA0X,IAAAA,IAAAA,qBAAA,KAA9BA,KAAAA,CAAAA,IAAAA,qBAAA,CAAgCtN,KAAK,CAAE,EAAA;MAAA,UAAA,IAAAuN,qBAAA,CAAA;MACxC,UAAA,IAAA,CAAAA,qBAAA,GAAInC,MAAM,CAACoC,cAAc,MAAAD,IAAAA,IAAAA,qBAAA,KAArBA,KAAAA,CAAAA,IAAAA,qBAAA,CAAwB1C,gBAAgB,CAAC4C,UAAU,CAAC,EAAE;MACtD,YAAA,OAAOrC,MAAM,CAACoC,cAAc,CAAC3C,gBAAgB,CAAC4C,UAAU,CAAC,CAAA;MAC7D,WAAA;MAEA,UAAA,OAAO,KAAK,CAAA;MAChB,SAAA;MAEA,QAAA,OAAO,IAAI,CAAA;aACd,CAAA,CAAA;MAAA,MAAA,OAAA,SAVKJ,YAAYA,GAAA;MAAA,QAAA,OAAA7T,IAAA,CAAA2F,KAAA,CAAA,IAAA,EAAAC,SAAA,CAAA,CAAA;MAAA,OAAA,CAAA;WAUjB,EAAA,CAAA;MAQD,IAAA,IAAMsO,QAAQ,GAAA,YAAA;MAAA,MAAA,IAAAxP,KAAA,GAAAC,iBAAA,CAAG,aAAqC;MAAA,QAAA,IAAAwP,sBAAA,CAAA;cAClDpP,YAAY,CAAC3I,KAAK,GAAG,EAAE,CAAA;MAEvB,QAAA,IAAMwI,MAAM,GAAA,MAAS/C,iBAAiB,CAAS,QAAQ,EAAE;gBACrD5G,GAAG,EAAA,CAAAkZ,sBAAA,GAAEjC,wBAAwB,CAAC9V,KAAK,MAAA+X,IAAAA,IAAAA,sBAAA,KAA9BA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,sBAAA,CAAgC3N,KAAAA;MACzC,SAAC,CAAC,CAAA;MAEF,QAAA,IAAI5B,MAAM,CAAC6B,SAAS,IAAI7B,MAAM,CAACC,IAAI,EAAE;gBACjC,OAAOD,MAAM,CAACC,IAAI,CAAA;MACtB,SAAC,MACI;MAAA,UAAA,IAAAuP,oBAAA,CAAA;MACDrP,UAAAA,YAAY,CAAC3I,KAAK,GAAAgY,CAAAA,oBAAA,GAAGxP,MAAM,CAACG,YAAY,MAAAqP,IAAAA,IAAAA,oBAAA,KAAAA,KAAAA,CAAAA,GAAAA,oBAAA,GAAI,0DAA0D,CAAA;MAEtG,UAAA,OAAO,KAAK,CAAA;MAChB,SAAA;aACH,CAAA,CAAA;MAAA,MAAA,OAAA,SAfKF,QAAQA,GAAA;MAAA,QAAA,OAAAxP,KAAA,CAAAiB,KAAA,CAAA,IAAA,EAAAC,SAAA,CAAA,CAAA;MAAA,OAAA,CAAA;WAeb,EAAA,CAAA;MAQD,IAAA,IAAMyG,MAAM,GAAA,YAAA;MAAA,MAAA,IAAAvG,KAAA,GAAAnB,iBAAA,CAAG,aAA8B;MAAA,QAAA,IAAA0P,sBAAA,CAAA;MACzC,QAAA,IAAMzP,MAAM,GAAA,MAAS/C,iBAAiB,CAA0E,MAAM,EAAE;gBACpH5G,GAAG,EAAA,CAAAoZ,sBAAA,GAAEnC,wBAAwB,CAAC9V,KAAK,MAAAiY,IAAAA,IAAAA,sBAAA,KAA9BA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,sBAAA,CAAgC7N,KAAAA;MACzC,SAAC,CAAC,CAAA;MAEF,QAAA,IAAI5B,MAAM,CAAC6B,SAAS,IAAI7B,MAAM,CAACC,IAAI,IAAID,MAAM,CAACC,IAAI,CAAC6B,MAAM,EAAE;MACvDyL,UAAAA,wBAAwB,CAAC/V,KAAK,GAAGwI,MAAM,CAACC,IAAI,CAAC6B,MAAM,CAAA;MAEnD,UAAA,OAAO,IAAI,CAAA;MACf,SAAC,MACI;MACD,UAAA,OAAO,KAAK,CAAA;MAChB,SAAA;aACH,CAAA,CAAA;MAAA,MAAA,OAAA,SAbK2F,MAAMA,GAAA;MAAA,QAAA,OAAAvG,KAAA,CAAAH,KAAA,CAAA,IAAA,EAAAC,SAAA,CAAA,CAAA;MAAA,OAAA,CAAA;WAaX,EAAA,CAAA;UASD,IAAM0O,iBAAiB,GAAIC,YAAoB,IAAW;YAGtD,IAAI,CAAC3C,MAAM,CAAC4C,4BAA4B,IAAI,CAAC5C,MAAM,CAAC4C,4BAA4B,CAACtP,IAAI,CAACuP,CAAC,IAAIA,CAAC,CAACC,WAAW,EAAE,KAAKH,YAAY,CAACG,WAAW,EAAE,CAAC,EAAE;MACxI,QAAA,OAAA;MACJ,OAAA;MAEAlC,MAAAA,yBAAyB,EAAE,CAAA;WAC9B,CAAA;MAQD,IAAA,IAAMmC,MAAM,GAAA,YAAA;MAAA,MAAA,IAAAzO,KAAA,GAAAvB,iBAAA,CAAG,aAAuC;MAAA,QAAA,IAAAiQ,qBAAA,CAAA;cAClD7P,YAAY,CAAC3I,KAAK,GAAG,EAAE,CAAA;MAEvB,QAAA,IAAMyI,IAA6E,GAAG;gBAClF6B,MAAM,EAAEyL,wBAAwB,CAAC/V,KAAK;MACtCgU,UAAAA,UAAU,EAAE,IAAI;MAChBR,UAAAA,eAAe,EAAEA,eAAAA;eACpB,CAAA;MAED,QAAA,IAAMhL,MAAM,GAAA,MAAS/C,iBAAiB,CAAgC,MAAM,EAAE;MAC1EsO,UAAAA,GAAG,EAAEtL,IAAAA;MACT,SAAC,CAAC,CAAA;MAEF,QAAA,IAAID,MAAM,CAAC6B,SAAS,IAAI7B,MAAM,CAACC,IAAI,EAAE;MACjC,UAAA,IAAID,MAAM,CAACiQ,UAAU,KAAK,GAAG,IAAI,OAAOjQ,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE;MAC9DqN,YAAAA,wBAAwB,CAAC9V,KAAK,GAAGwI,MAAM,CAACC,IAAI,CAAA;MAE5C,YAAA,OAAO,IAAI,CAAA;MACf,WAAC,MACI,IAAID,MAAM,CAACiQ,UAAU,KAAK,GAAG,IAAI,OAAOjQ,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE;kBACnE,OAAOD,MAAM,CAACC,IAAI,CAAA;MACtB,WAAA;MACJ,SAAA;MAEAE,QAAAA,YAAY,CAAC3I,KAAK,GAAAwY,CAAAA,qBAAA,GAAGhQ,MAAM,CAACG,YAAY,MAAA6P,IAAAA,IAAAA,qBAAA,KAAAA,KAAAA,CAAAA,GAAAA,qBAAA,GAAI,wDAAwD,CAAA;MAEpG,QAAA,OAAO,KAAK,CAAA;aACf,CAAA,CAAA;MAAA,MAAA,OAAA,SA3BKD,MAAMA,GAAA;MAAA,QAAA,OAAAzO,KAAA,CAAAP,KAAA,CAAA,IAAA,EAAAC,SAAA,CAAA,CAAA;MAAA,OAAA,CAAA;WA2BX,EAAA,CAAA;UAKD,IAAMkP,mBAAmB,GAAGA,MAAY;YACpCvC,sBAAsB,CAACnW,KAAK,GAAG,IAAI,CAAA;WACtC,CAAA;UAKD,IAAM2Y,kBAAkB,GAAGA,MAAY;YACnCxC,sBAAsB,CAACnW,KAAK,GAAG,KAAK,CAAA;WACvC,CAAA;MAMD,IAAA,IAAMwX,cAAc,GAAA,YAAA;MAAA,MAAA,IAAAhN,KAAA,GAAAjC,iBAAA,CAAG,aAA2B;MAAA,QAAA,IAAAqQ,sBAAA,CAAA;cAC9C,IAAIrC,iBAAiB,CAACvW,KAAK,EAAE;MACzB,UAAA,OAAA;MACJ,SAAA;cAEAuW,iBAAiB,CAACvW,KAAK,GAAG,IAAI,CAAA;MAE9B,QAAA,IAAMwI,MAAM,GAAA,MAAS/C,iBAAiB,CAAS,cAAc,EAAE;gBAC3D5G,GAAG,EAAA,CAAA+Z,sBAAA,GAAE9C,wBAAwB,CAAC9V,KAAK,MAAA4Y,IAAAA,IAAAA,sBAAA,KAA9BA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,sBAAA,CAAgCxO,KAAAA;MACzC,SAAC,CAAC,CAAA;cAEFmM,iBAAiB,CAACvW,KAAK,GAAG,KAAK,CAAA;MAE/B,QAAA,IAAIwI,MAAM,CAAC6B,SAAS,IAAI7B,MAAM,CAACC,IAAI,EAAE;MACjC,UAAA,MAAMC,KAAK,CAACF,MAAM,CAACC,IAAI,CAAC,CAAA;MAC5B,SAAC,MACI;MACD,UAAA,MAAMC,KAAK,CAACF,MAAM,CAACG,YAAY,IAAI,kDAAkD,CAAC,CAAA;MAC1F,SAAA;aACH,CAAA,CAAA;MAAA,MAAA,OAAA,SAnBK6O,cAAcA,GAAA;MAAA,QAAA,OAAAhN,KAAA,CAAAjB,KAAA,CAAA,IAAA,EAAAC,SAAA,CAAA,CAAA;MAAA,OAAA,CAAA;WAmBnB,EAAA,CAAA;UAIDqP,oBAAoB,CAACnD,aAAa,CAAC,CAAA;UAGnC,IAAIF,MAAM,CAAC7M,YAAY,EAAE;MACrBkN,MAAAA,UAAU,CAAC7V,KAAK,GAAGwV,MAAM,CAAC7M,YAAY,CAAA;MAC1C,KAAC,MACI,IAAI,CAAC6M,MAAM,CAAClL,MAAM,EAAE;YACrBuL,UAAU,CAAC7V,KAAK,GAAG,uDAAuD,CAAA;WAC7E,MACI,IAAI,CAACwV,MAAM,CAAClL,MAAM,CAACF,KAAK,EAAE;MAC3B2L,MAAAA,wBAAwB,CAAC/V,KAAK,GAAGwV,MAAM,CAAClL,MAAM,CAAA;MAC9C0L,MAAAA,SAAS,CAAChW,KAAK,GAAGiW,eAAe,CAAC6C,GAAG,CAAA;MACzC,KAAA;UAEA,OAAO;YACHhD,wBAAwB;YACxBC,wBAAwB;YACxBmB,sBAAsB;YACtBrB,UAAU;YACViB,WAAW;YACXH,SAAS;YACT3P,cAAc,EAAEC,UAAU,CAAC8R,iBAAiB;YAC5CpQ,YAAY;YACZwN,sBAAsB;YACtBnC,UAAU;YACViD,SAAS;YACTQ,YAAY;YACZiB,mBAAmB;YACnBZ,QAAQ;YACR7H,MAAM;YACNiI,iBAAiB;YACjBK,MAAM;YACNI,kBAAkB;YAClB1E,OAAO;YACP+B,SAAS;YACTQ,SAAS;YACTW,qBAAqB;MACrBC,MAAAA,sBAAAA;WACH,CAAA;SACJ;QAED3X,QAAQ,EAAA,grIAAA;MA2IZ,CAAC,EAAC;;;;;;;;"}