{"version":3,"file":"personalLinkSectionDetail.js","sources":["../../src/Cms/PersonalLinkSectionDetail/editPanel.partial.ts","../../src/Cms/PersonalLinkSectionDetail/viewPanel.partial.ts","../../src/Cms/PersonalLinkSectionDetail/types.partial.ts","../../src/Cms/personalLinkSectionDetail.ts"],"sourcesContent":["// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { defineComponent, PropType, ref, watch } from \"vue\";\r\nimport AttributeValuesContainer from \"@Obsidian/Controls/attributeValuesContainer\";\r\nimport TextBox from \"@Obsidian/Controls/textBox\";\r\nimport { watchPropertyChanges } from \"@Obsidian/Utility/block\";\r\nimport { propertyRef, updateRefValue } from \"@Obsidian/Utility/component\";\r\nimport { PersonalLinkSectionBag } from \"@Obsidian/ViewModels/Blocks/Cms/PersonalLinkSectionDetail/personalLinkSectionBag\";\r\nimport { PersonalLinkSectionDetailOptionsBag } from \"@Obsidian/ViewModels/Blocks/Cms/PersonalLinkSectionDetail/personalLinkSectionDetailOptionsBag\";\r\n\r\nexport default defineComponent({\r\n    name: \"Cms.PersonalLinkSectionDetail.EditPanel\",\r\n\r\n    props: {\r\n        modelValue: {\r\n            type: Object as PropType<PersonalLinkSectionBag>,\r\n            required: true\r\n        },\r\n\r\n        options: {\r\n            type: Object as PropType<PersonalLinkSectionDetailOptionsBag>,\r\n            required: true\r\n        }\r\n    },\r\n\r\n    components: {\r\n        AttributeValuesContainer,\r\n        TextBox\r\n    },\r\n\r\n    emits: {\r\n        \"update:modelValue\": (_value: PersonalLinkSectionBag) => true,\r\n        \"propertyChanged\": (_value: string) => true\r\n    },\r\n\r\n    setup(props, { emit }) {\r\n        // #region Values\r\n\r\n        const attributes = ref(props.modelValue.attributes ?? {});\r\n        const attributeValues = ref(props.modelValue.attributeValues ?? {});\r\n        const name = propertyRef(props.modelValue.name ?? \"\", \"Name\");\r\n\r\n        // The properties that are being edited. This should only contain\r\n        // objects returned by propertyRef().\r\n        const propRefs = [name];\r\n\r\n        // #endregion\r\n\r\n        // #region Computed Values\r\n\r\n        // #endregion\r\n\r\n        // #region Functions\r\n\r\n        // #endregion\r\n\r\n        // #region Event Handlers\r\n\r\n        // #endregion\r\n\r\n        // Watch for parental changes in our model value and update all our values.\r\n        watch(() => props.modelValue, () => {\r\n            updateRefValue(attributes, props.modelValue.attributes ?? {});\r\n            updateRefValue(attributeValues, props.modelValue.attributeValues ?? {});\r\n            updateRefValue(name, props.modelValue.name ?? \"\");\r\n        });\r\n\r\n        // Determines which values we want to track changes on (defined in the\r\n        // array) and then emit a new object defined as newValue.\r\n        watch([attributeValues, ...propRefs], () => {\r\n            const newValue: PersonalLinkSectionBag = {\r\n                ...props.modelValue,\r\n                attributeValues: attributeValues.value,\r\n                name: name.value\r\n            };\r\n\r\n            emit(\"update:modelValue\", newValue);\r\n        });\r\n\r\n        // Watch for any changes to props that represent properties and then\r\n        // automatically emit which property changed.\r\n        watchPropertyChanges(propRefs, emit);\r\n\r\n        return {\r\n            attributes,\r\n            attributeValues,\r\n            name\r\n        };\r\n    },\r\n\r\n    template: `\r\n<fieldset>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <TextBox v-model=\"name\"\r\n                label=\"Name\"\r\n                rules=\"required\" />\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <AttributeValuesContainer v-model=\"attributeValues\" :attributes=\"attributes\" isEditMode :numberOfColumns=\"2\" />\r\n</fieldset>\r\n`\r\n});\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { computed, defineComponent, PropType, ref } from \"vue\";\r\nimport AttributeValuesContainer from \"@Obsidian/Controls/attributeValuesContainer\";\r\nimport ValueDetailList from \"@Obsidian/Controls/valueDetailList\";\r\nimport { ValueDetailListItemBuilder } from \"@Obsidian/Core/Controls/valueDetailListItemBuilder\";\r\nimport { ValueDetailListItem } from \"@Obsidian/Types/Controls/valueDetailListItem\";\r\nimport { PersonalLinkSectionBag } from \"@Obsidian/ViewModels/Blocks/Cms/PersonalLinkSectionDetail/personalLinkSectionBag\";\r\nimport { PersonalLinkSectionDetailOptionsBag } from \"@Obsidian/ViewModels/Blocks/Cms/PersonalLinkSectionDetail/personalLinkSectionDetailOptionsBag\";\r\n\r\nexport default defineComponent({\r\n    name: \"Cms.PersonalLinkSectionDetail.ViewPanel\",\r\n\r\n    props: {\r\n        modelValue: {\r\n            type: Object as PropType<PersonalLinkSectionBag>,\r\n            required: false\r\n        },\r\n\r\n        options: {\r\n            type: Object as PropType<PersonalLinkSectionDetailOptionsBag>,\r\n            required: true\r\n        }\r\n    },\r\n\r\n    components: {\r\n        AttributeValuesContainer,\r\n        ValueDetailList\r\n    },\r\n\r\n    setup(props) {\r\n        // #region Values\r\n\r\n        const attributes = ref(props.modelValue?.attributes ?? {});\r\n        const attributeValues = ref(props.modelValue?.attributeValues ?? {});\r\n\r\n        // #endregion\r\n\r\n        // #region Computed Values\r\n\r\n        /** The values to display full-width at the top of the block. */\r\n        const topValues = computed((): ValueDetailListItem[] => {\r\n            const valueBuilder = new ValueDetailListItemBuilder();\r\n\r\n            if (!props.modelValue) {\r\n                return valueBuilder.build();\r\n            }\r\n\r\n            return valueBuilder.build();\r\n        });\r\n\r\n        /** The values to display at half-width on the left side of the block. */\r\n        const leftSideValues = computed((): ValueDetailListItem[] => {\r\n            const valueBuilder = new ValueDetailListItemBuilder();\r\n\r\n            if (!props.modelValue) {\r\n                return valueBuilder.build();\r\n            }\r\n\r\n            if (props.modelValue.name) {\r\n                valueBuilder.addTextValue(\"Name\", props.modelValue.name);\r\n            }\r\n\r\n            return valueBuilder.build();\r\n        });\r\n\r\n        /** The values to display at half-width on the left side of the block. */\r\n        const rightSideValues = computed((): ValueDetailListItem[] => {\r\n            const valueBuilder = new ValueDetailListItemBuilder();\r\n\r\n            if (!props.modelValue) {\r\n                return valueBuilder.build();\r\n            }\r\n\r\n            return valueBuilder.build();\r\n        });\r\n\r\n        // #endregion\r\n\r\n        // #region Functions\r\n\r\n        // #endregion\r\n\r\n        // #region Event Handlers\r\n\r\n        // #endregion\r\n\r\n        return {\r\n            attributes,\r\n            attributeValues,\r\n            leftSideValues,\r\n            rightSideValues,\r\n            topValues\r\n        };\r\n    },\r\n\r\n    template: `\r\n<fieldset>\r\n\r\n    <ValueDetailList :modelValue=\"topValues\" />\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <ValueDetailList :modelValue=\"leftSideValues\" />\r\n        </div>\r\n\r\n        <div class=\"col-md-6\">\r\n            <ValueDetailList :modelValue=\"rightSideValues\" />\r\n        </div>\r\n    </div>\r\n\r\n    <AttributeValuesContainer :modelValue=\"attributeValues\" :attributes=\"attributes\" :numberOfColumns=\"2\" />\r\n</fieldset>\r\n`\r\n});\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nexport const enum NavigationUrlKey {\r\n    ParentPage = \"ParentPage\"\r\n}\r\n","// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { computed, defineComponent, ref } from \"vue\";\r\nimport NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\nimport { EntityType } from \"@Obsidian/SystemGuids/entityType\";\r\nimport DetailBlock from \"@Obsidian/Templates/detailBlock\";\r\nimport { DetailPanelMode } from \"@Obsidian/Enums/Controls/detailPanelMode\";\r\nimport { PanelAction } from \"@Obsidian/Types/Controls/panelAction\";\r\nimport EditPanel from \"./PersonalLinkSectionDetail/editPanel.partial\";\r\nimport ViewPanel from \"./PersonalLinkSectionDetail/viewPanel.partial\";\r\nimport { getSecurityGrant, provideSecurityGrant, refreshDetailAttributes, useConfigurationValues, useInvokeBlockAction } from \"@Obsidian/Utility/block\";\r\nimport { debounce } from \"@Obsidian/Utility/util\";\r\nimport { NavigationUrlKey } from \"./PersonalLinkSectionDetail/types.partial\";\r\nimport { DetailBlockBox } from \"@Obsidian/ViewModels/Blocks/detailBlockBox\";\r\nimport { PersonalLinkSectionBag } from \"@Obsidian/ViewModels/Blocks/Cms/PersonalLinkSectionDetail/personalLinkSectionBag\";\r\nimport { PersonalLinkSectionDetailOptionsBag } from \"@Obsidian/ViewModels/Blocks/Cms/PersonalLinkSectionDetail/personalLinkSectionDetailOptionsBag\";\r\n\r\nexport default defineComponent({\r\n    name: \"Cms.PersonalLinkSectionDetail\",\r\n\r\n    components: {\r\n        NotificationBox,\r\n        EditPanel,\r\n        DetailBlock,\r\n        ViewPanel\r\n    },\r\n\r\n    setup() {\r\n        const config = useConfigurationValues<DetailBlockBox<PersonalLinkSectionBag, PersonalLinkSectionDetailOptionsBag>>();\r\n        const invokeBlockAction = useInvokeBlockAction();\r\n        const securityGrant = getSecurityGrant(config.securityGrantToken);\r\n\r\n        // #region Values\r\n\r\n        const blockError = ref(\"\");\r\n        const errorMessage = ref(\"\");\r\n\r\n        const personalLinkSectionViewBag = ref(config.entity);\r\n        const personalLinkSectionEditBag = ref<PersonalLinkSectionBag | null>(null);\r\n\r\n        const panelMode = ref<DetailPanelMode>(DetailPanelMode.View);\r\n\r\n        // The properties that are being edited in the UI. This is used to\r\n        // inform the server which incoming values have valid data in them.\r\n        const validProperties = [\r\n            \"attributeValues\",\r\n            \"name\"\r\n        ];\r\n\r\n        const refreshAttributesDebounce = debounce(() => refreshDetailAttributes(personalLinkSectionEditBag, validProperties, invokeBlockAction), undefined, true);\r\n\r\n        // #endregion\r\n\r\n        // #region Computed Values\r\n\r\n        /**\r\n         * The entity name to display in the block panel.\r\n         */\r\n        const panelName = computed((): string => {\r\n            return personalLinkSectionViewBag.value?.name ?? \"\";\r\n        });\r\n\r\n        /**\r\n         * The identifier key value for this entity.\r\n         */\r\n        const entityKey = computed((): string => {\r\n            return personalLinkSectionViewBag.value?.idKey ?? \"\";\r\n        });\r\n\r\n        /**\r\n         * Additional labels to display in the block panel.\r\n         */\r\n        const blockLabels = computed((): PanelAction[] | null => {\r\n            const labels: PanelAction[] = [];\r\n\r\n            if (panelMode.value !== DetailPanelMode.View) {\r\n                return null;\r\n            }\r\n\r\n            if (personalLinkSectionViewBag.value?.isShared) {\r\n                labels.push({\r\n                    title: \"Shared\",\r\n                    type: \"info\"\r\n                });\r\n            }\r\n\r\n            return labels;\r\n        });\r\n\r\n        const isEditable = computed((): boolean => {\r\n            return config.isEditable === true;\r\n        });\r\n\r\n        const options = computed((): PersonalLinkSectionDetailOptionsBag => {\r\n            return config.options ?? {};\r\n        });\r\n\r\n        // #endregion\r\n\r\n        // #region Functions\r\n\r\n        // #endregion\r\n\r\n        // #region Event Handlers\r\n\r\n        /**\r\n         * Event handler for the Cancel button being clicked while in Edit mode.\r\n         * Handles redirect to parent page if creating a new entity.\r\n         *\r\n         * @returns true if the panel should leave edit mode; false if it should stay in edit mode; or a string containing a redirect URL.\r\n         */\r\n        const onCancelEdit = async (): Promise<boolean | string> => {\r\n            if (!personalLinkSectionEditBag.value?.idKey) {\r\n                if (config.navigationUrls?.[NavigationUrlKey.ParentPage]) {\r\n                    return config.navigationUrls[NavigationUrlKey.ParentPage];\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        };\r\n\r\n        /**\r\n         * Event handler for the Delete button being clicked. Sends the\r\n         * delete request to the server and then redirects to the target page.\r\n         *\r\n         * @returns false if it should stay on the page; or a string containing a redirect URL.\r\n         */\r\n        const onDelete = async (): Promise<false | string> => {\r\n            errorMessage.value = \"\";\r\n\r\n            const result = await invokeBlockAction<string>(\"Delete\", {\r\n                key: personalLinkSectionViewBag.value?.idKey\r\n            });\r\n\r\n            if (result.isSuccess && result.data) {\r\n                return result.data;\r\n            }\r\n            else {\r\n                errorMessage.value = result.errorMessage ?? \"Unknown error while trying to delete personal link section.\";\r\n\r\n                return false;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Event handler for the Edit button being clicked. Request the edit\r\n         * details from the server and then enter edit mode.\r\n         *\r\n         * @returns true if the panel should enter edit mode; otherwise false.\r\n         */\r\n        const onEdit = async (): Promise<boolean> => {\r\n            const result = await invokeBlockAction<DetailBlockBox<PersonalLinkSectionBag, PersonalLinkSectionDetailOptionsBag>>(\"Edit\", {\r\n                key: personalLinkSectionViewBag.value?.idKey\r\n            });\r\n\r\n            if (result.isSuccess && result.data && result.data.entity) {\r\n                personalLinkSectionEditBag.value = result.data.entity;\r\n\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Event handler for when a value has changed that has an associated\r\n         * C# property name. This is used to detect changes to values that\r\n         * might cause qualified attributes to either show up or not show up.\r\n         *\r\n         * @param propertyName The name of the C# property that was changed.\r\n         */\r\n        const onPropertyChanged = (propertyName: string): void => {\r\n            // If we don't have any qualified attribute properties or this property\r\n            // is not one of them then do nothing.\r\n            if (!config.qualifiedAttributeProperties || !config.qualifiedAttributeProperties.some(n => n.toLowerCase() === propertyName.toLowerCase())) {\r\n                return;\r\n            }\r\n\r\n            refreshAttributesDebounce();\r\n        };\r\n\r\n        /**\r\n         * Event handler for the panel's Save event. Send the data to the server\r\n         * to be saved and then leave edit mode or redirect to target page.\r\n         *\r\n         * @returns true if the panel should leave edit mode; false if it should stay in edit mode; or a string containing a redirect URL.\r\n         */\r\n        const onSave = async (): Promise<boolean | string> => {\r\n            errorMessage.value = \"\";\r\n\r\n            const data: DetailBlockBox<PersonalLinkSectionBag, PersonalLinkSectionDetailOptionsBag> = {\r\n                entity: personalLinkSectionEditBag.value,\r\n                isEditable: true,\r\n                validProperties: validProperties\r\n            };\r\n\r\n            const result = await invokeBlockAction<PersonalLinkSectionBag | string>(\"Save\", {\r\n                box: data\r\n            });\r\n\r\n            if (result.isSuccess && result.data) {\r\n                if (result.statusCode === 200 && typeof result.data === \"object\") {\r\n                    personalLinkSectionViewBag.value = result.data;\r\n\r\n                    return true;\r\n                }\r\n                else if (result.statusCode === 201 && typeof result.data === \"string\") {\r\n                    return result.data;\r\n                }\r\n            }\r\n\r\n            errorMessage.value = result.errorMessage ?? \"Unknown error while trying to save personal link section.\";\r\n\r\n            return false;\r\n        };\r\n\r\n        // #endregion\r\n\r\n        provideSecurityGrant(securityGrant);\r\n\r\n        // Handle any initial error conditions or the need to go into edit mode.\r\n        if (config.errorMessage) {\r\n            blockError.value = config.errorMessage;\r\n        }\r\n        else if (!config.entity) {\r\n            blockError.value = \"The specified personal link section could not be viewed.\";\r\n        }\r\n        else if (!config.entity.idKey) {\r\n            personalLinkSectionEditBag.value = config.entity;\r\n            panelMode.value = DetailPanelMode.Add;\r\n        }\r\n\r\n        return {\r\n            personalLinkSectionViewBag,\r\n            personalLinkSectionEditBag,\r\n            blockError,\r\n            blockLabels,\r\n            entityKey,\r\n            entityTypeGuid: EntityType.PersonalLinkSection,\r\n            errorMessage,\r\n            isEditable,\r\n            onCancelEdit,\r\n            onDelete,\r\n            onEdit,\r\n            onPropertyChanged,\r\n            onSave,\r\n            options,\r\n            panelMode,\r\n            panelName\r\n        };\r\n    },\r\n\r\n    template: `\r\n<NotificationBox v-if=\"blockError\" alertType=\"warning\" v-text=\"blockError\" />\r\n\r\n<NotificationBox v-if=\"errorMessage\" alertType=\"danger\" v-text=\"errorMessage\" />\r\n\r\n<DetailBlock v-if=\"!blockError\"\r\n    v-model:mode=\"panelMode\"\r\n    :name=\"panelName\"\r\n    :labels=\"blockLabels\"\r\n    :entityKey=\"entityKey\"\r\n    :entityTypeGuid=\"entityTypeGuid\"\r\n    entityTypeName=\"PersonalLinkSection\"\r\n    :isAuditHidden=\"false\"\r\n    :isBadgesVisible=\"true\"\r\n    :isDeleteVisible=\"isEditable\"\r\n    :isEditVisible=\"isEditable\"\r\n    :isFollowVisible=\"false\"\r\n    :isSecurityHidden=\"false\"\r\n    @cancelEdit=\"onCancelEdit\"\r\n    @delete=\"onDelete\"\r\n    @edit=\"onEdit\"\r\n    @save=\"onSave\">\r\n    <template #view>\r\n        <ViewPanel :modelValue=\"personalLinkSectionViewBag\" :options=\"options\" />\r\n    </template>\r\n\r\n    <template #edit>\r\n        <EditPanel v-model=\"personalLinkSectionEditBag\" :options=\"options\" @propertyChanged=\"onPropertyChanged\" />\r\n    </template>\r\n</DetailBlock>\r\n`\r\n});\r\n"],"names":["defineComponent","name","props","modelValue","type","Object","required","options","components","AttributeValuesContainer","TextBox","emits","_value","setup","_ref","_props$modelValue$att","_props$modelValue$att2","_props$modelValue$nam","emit","attributes","ref","attributeValues","propertyRef","propRefs","watch","_props$modelValue$att3","_props$modelValue$att4","_props$modelValue$nam2","updateRefValue","newValue","_objectSpread","value","watchPropertyChanges","template","ValueDetailList","_props$modelValue","_props$modelValue2","topValues","computed","valueBuilder","ValueDetailListItemBuilder","build","leftSideValues","addTextValue","rightSideValues","NavigationUrlKey","NotificationBox","EditPanel","DetailBlock","ViewPanel","config","useConfigurationValues","invokeBlockAction","useInvokeBlockAction","securityGrant","getSecurityGrant","securityGrantToken","blockError","errorMessage","personalLinkSectionViewBag","entity","personalLinkSectionEditBag","panelMode","DetailPanelMode","View","validProperties","refreshAttributesDebounce","debounce","refreshDetailAttributes","undefined","panelName","_personalLinkSectionV","_personalLinkSectionV2","entityKey","_personalLinkSectionV3","_personalLinkSectionV4","idKey","blockLabels","_personalLinkSectionV5","labels","isShared","push","title","isEditable","_config$options","onCancelEdit","_asyncToGenerator","_personalLinkSectionE","_config$navigationUrl","navigationUrls","ParentPage","apply","arguments","onDelete","_ref2","_personalLinkSectionV6","result","key","isSuccess","data","_result$errorMessage","onEdit","_ref3","_personalLinkSectionV7","onPropertyChanged","propertyName","qualifiedAttributeProperties","some","n","toLowerCase","onSave","_ref4","_result$errorMessage2","box","statusCode","provideSecurityGrant","Add","entityTypeGuid","EntityType","PersonalLinkSection"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,sBAAeA,eAAe,CAAC;MAC3BC,EAAAA,IAAI,EAAE,yCAAyC;MAE/CC,EAAAA,KAAK,EAAE;MACHC,IAAAA,UAAU,EAAE;MACRC,MAAAA,IAAI,EAAEC,MAA0C;MAChDC,MAAAA,QAAQ,EAAE,IAAA;WACb;MAEDC,IAAAA,OAAO,EAAE;MACLH,MAAAA,IAAI,EAAEC,MAAuD;MAC7DC,MAAAA,QAAQ,EAAE,IAAA;MACd,KAAA;SACH;MAEDE,EAAAA,UAAU,EAAE;UACRC,wBAAwB;MACxBC,IAAAA,OAAAA;SACH;MAEDC,EAAAA,KAAK,EAAE;UACH,mBAAmB,EAAGC,MAA8B,IAAK,IAAI;UAC7D,iBAAiB,EAAGA,MAAc,IAAK,IAAA;SAC1C;MAEDC,EAAAA,KAAKA,CAACX,KAAK,EAAAY,IAAA,EAAY;MAAA,IAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,qBAAA,CAAA;MAAA,IAAA,IAARC,IAAI,GAAAJ,IAAA,CAAJI,IAAI,CAAA;MAGf,IAAA,IAAMC,UAAU,GAAGC,GAAG,EAAAL,qBAAA,GAACb,KAAK,CAACC,UAAU,CAACgB,UAAU,cAAAJ,qBAAA,KAAA,KAAA,CAAA,GAAAA,qBAAA,GAAI,EAAE,CAAC,CAAA;MACzD,IAAA,IAAMM,eAAe,GAAGD,GAAG,EAAAJ,sBAAA,GAACd,KAAK,CAACC,UAAU,CAACkB,eAAe,cAAAL,sBAAA,KAAA,KAAA,CAAA,GAAAA,sBAAA,GAAI,EAAE,CAAC,CAAA;MACnE,IAAA,IAAMf,IAAI,GAAGqB,WAAW,EAAAL,qBAAA,GAACf,KAAK,CAACC,UAAU,CAACF,IAAI,MAAA,IAAA,IAAAgB,qBAAA,KAAAA,KAAAA,CAAAA,GAAAA,qBAAA,GAAI,EAAE,EAAE,MAAM,CAAC,CAAA;MAI7D,IAAA,IAAMM,QAAQ,GAAG,CAACtB,IAAI,CAAC,CAAA;MAiBvBuB,IAAAA,KAAK,CAAC,MAAMtB,KAAK,CAACC,UAAU,EAAE,MAAM;MAAA,MAAA,IAAAsB,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,CAAA;MAChCC,MAAAA,cAAc,CAACT,UAAU,EAAA,CAAAM,sBAAA,GAAEvB,KAAK,CAACC,UAAU,CAACgB,UAAU,cAAAM,sBAAA,KAAA,KAAA,CAAA,GAAAA,sBAAA,GAAI,EAAE,CAAC,CAAA;MAC7DG,MAAAA,cAAc,CAACP,eAAe,EAAA,CAAAK,sBAAA,GAAExB,KAAK,CAACC,UAAU,CAACkB,eAAe,cAAAK,sBAAA,KAAA,KAAA,CAAA,GAAAA,sBAAA,GAAI,EAAE,CAAC,CAAA;MACvEE,MAAAA,cAAc,CAAC3B,IAAI,EAAA,CAAA0B,sBAAA,GAAEzB,KAAK,CAACC,UAAU,CAACF,IAAI,cAAA0B,sBAAA,KAAA,KAAA,CAAA,GAAAA,sBAAA,GAAI,EAAE,CAAC,CAAA;MACrD,KAAC,CAAC,CAAA;UAIFH,KAAK,CAAC,CAACH,eAAe,EAAE,GAAGE,QAAQ,CAAC,EAAE,MAAM;YACxC,IAAMM,QAAgC,GAAAC,cAAA,CAAAA,cAAA,CAC/B5B,EAAAA,EAAAA,KAAK,CAACC,UAAU,CAAA,EAAA,EAAA,EAAA;cACnBkB,eAAe,EAAEA,eAAe,CAACU,KAAK;cACtC9B,IAAI,EAAEA,IAAI,CAAC8B,KAAAA;aACd,CAAA,CAAA;MAEDb,MAAAA,IAAI,CAAC,mBAAmB,EAAEW,QAAQ,CAAC,CAAA;MACvC,KAAC,CAAC,CAAA;MAIFG,IAAAA,oBAAoB,CAACT,QAAQ,EAAEL,IAAI,CAAC,CAAA;UAEpC,OAAO;YACHC,UAAU;YACVE,eAAe;MACfpB,MAAAA,IAAAA;WACH,CAAA;SACJ;QAEDgC,QAAQ,EAAA,iWAAA;MAcZ,CAAC,CAAC;;AC9FF,sBAAejC,eAAe,CAAC;MAC3BC,EAAAA,IAAI,EAAE,yCAAyC;MAE/CC,EAAAA,KAAK,EAAE;MACHC,IAAAA,UAAU,EAAE;MACRC,MAAAA,IAAI,EAAEC,MAA0C;MAChDC,MAAAA,QAAQ,EAAE,KAAA;WACb;MAEDC,IAAAA,OAAO,EAAE;MACLH,MAAAA,IAAI,EAAEC,MAAuD;MAC7DC,MAAAA,QAAQ,EAAE,IAAA;MACd,KAAA;SACH;MAEDE,EAAAA,UAAU,EAAE;UACRC,wBAAwB;MACxByB,IAAAA,eAAAA;SACH;QAEDrB,KAAKA,CAACX,KAAK,EAAE;MAAA,IAAA,IAAAa,qBAAA,EAAAoB,iBAAA,EAAAnB,sBAAA,EAAAoB,kBAAA,CAAA;UAGT,IAAMjB,UAAU,GAAGC,GAAG,CAAAL,CAAAA,qBAAA,IAAAoB,iBAAA,GAACjC,KAAK,CAACC,UAAU,MAAA,IAAA,IAAAgC,iBAAA,KAAhBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,iBAAA,CAAkBhB,UAAU,MAAAJ,IAAAA,IAAAA,qBAAA,cAAAA,qBAAA,GAAI,EAAE,CAAC,CAAA;UAC1D,IAAMM,eAAe,GAAGD,GAAG,CAAAJ,CAAAA,sBAAA,IAAAoB,kBAAA,GAAClC,KAAK,CAACC,UAAU,MAAA,IAAA,IAAAiC,kBAAA,KAAhBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,kBAAA,CAAkBf,eAAe,MAAAL,IAAAA,IAAAA,sBAAA,cAAAA,sBAAA,GAAI,EAAE,CAAC,CAAA;MAOpE,IAAA,IAAMqB,SAAS,GAAGC,QAAQ,CAAC,MAA6B;MACpD,MAAA,IAAMC,YAAY,GAAG,IAAIC,0BAA0B,EAAE,CAAA;MAErD,MAAA,IAAI,CAACtC,KAAK,CAACC,UAAU,EAAE;cACnB,OAAOoC,YAAY,CAACE,KAAK,EAAE,CAAA;MAC/B,OAAA;YAEA,OAAOF,YAAY,CAACE,KAAK,EAAE,CAAA;MAC/B,KAAC,CAAC,CAAA;MAGF,IAAA,IAAMC,cAAc,GAAGJ,QAAQ,CAAC,MAA6B;MACzD,MAAA,IAAMC,YAAY,GAAG,IAAIC,0BAA0B,EAAE,CAAA;MAErD,MAAA,IAAI,CAACtC,KAAK,CAACC,UAAU,EAAE;cACnB,OAAOoC,YAAY,CAACE,KAAK,EAAE,CAAA;MAC/B,OAAA;MAEA,MAAA,IAAIvC,KAAK,CAACC,UAAU,CAACF,IAAI,EAAE;cACvBsC,YAAY,CAACI,YAAY,CAAC,MAAM,EAAEzC,KAAK,CAACC,UAAU,CAACF,IAAI,CAAC,CAAA;MAC5D,OAAA;YAEA,OAAOsC,YAAY,CAACE,KAAK,EAAE,CAAA;MAC/B,KAAC,CAAC,CAAA;MAGF,IAAA,IAAMG,eAAe,GAAGN,QAAQ,CAAC,MAA6B;MAC1D,MAAA,IAAMC,YAAY,GAAG,IAAIC,0BAA0B,EAAE,CAAA;MAErD,MAAA,IAAI,CAACtC,KAAK,CAACC,UAAU,EAAE;cACnB,OAAOoC,YAAY,CAACE,KAAK,EAAE,CAAA;MAC/B,OAAA;YAEA,OAAOF,YAAY,CAACE,KAAK,EAAE,CAAA;MAC/B,KAAC,CAAC,CAAA;UAYF,OAAO;YACHtB,UAAU;YACVE,eAAe;YACfqB,cAAc;YACdE,eAAe;MACfP,MAAAA,SAAAA;WACH,CAAA;SACJ;QAEDJ,QAAQ,EAAA,sdAAA;MAkBZ,CAAC,CAAC;;MChHgBY,IAAAA,gBAAgB,aAAhBA,gBAAgB,EAAA;QAAhBA,gBAAgB,CAAA,YAAA,CAAA,GAAA,YAAA,CAAA;MAAA,EAAA,OAAhBA,gBAAgB,CAAA;MAAA,CAAA,CAAA,EAAA,CAAA;;ACelC,yDAAe7C,eAAe,CAAC;MAC3BC,EAAAA,IAAI,EAAE,+BAA+B;MAErCO,EAAAA,UAAU,EAAE;UACRsC,eAAe;UACfC,SAAS;UACTC,WAAW;MACXC,IAAAA,SAAAA;SACH;MAEDpC,EAAAA,KAAKA,GAAG;UACJ,IAAMqC,MAAM,GAAGC,sBAAsB,EAA+E,CAAA;UACpH,IAAMC,iBAAiB,GAAGC,oBAAoB,EAAE,CAAA;MAChD,IAAA,IAAMC,aAAa,GAAGC,gBAAgB,CAACL,MAAM,CAACM,kBAAkB,CAAC,CAAA;MAIjE,IAAA,IAAMC,UAAU,GAAGrC,GAAG,CAAC,EAAE,CAAC,CAAA;MAC1B,IAAA,IAAMsC,YAAY,GAAGtC,GAAG,CAAC,EAAE,CAAC,CAAA;MAE5B,IAAA,IAAMuC,0BAA0B,GAAGvC,GAAG,CAAC8B,MAAM,CAACU,MAAM,CAAC,CAAA;MACrD,IAAA,IAAMC,0BAA0B,GAAGzC,GAAG,CAAgC,IAAI,CAAC,CAAA;MAE3E,IAAA,IAAM0C,SAAS,GAAG1C,GAAG,CAAkB2C,eAAe,CAACC,IAAI,CAAC,CAAA;MAI5D,IAAA,IAAMC,eAAe,GAAG,CACpB,iBAAiB,EACjB,MAAM,CACT,CAAA;MAED,IAAA,IAAMC,yBAAyB,GAAGC,QAAQ,CAAC,MAAMC,uBAAuB,CAACP,0BAA0B,EAAEI,eAAe,EAAEb,iBAAiB,CAAC,EAAEiB,SAAS,EAAE,IAAI,CAAC,CAAA;MAS1J,IAAA,IAAMC,SAAS,GAAGhC,QAAQ,CAAC,MAAc;YAAA,IAAAiC,qBAAA,EAAAC,sBAAA,CAAA;MACrC,MAAA,OAAA,CAAAD,qBAAA,GAAAC,CAAAA,sBAAA,GAAOb,0BAA0B,CAAC5B,KAAK,MAAAyC,IAAAA,IAAAA,sBAAA,KAAhCA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,sBAAA,CAAkCvE,IAAI,MAAA,IAAA,IAAAsE,qBAAA,KAAAA,KAAAA,CAAAA,GAAAA,qBAAA,GAAI,EAAE,CAAA;MACvD,KAAC,CAAC,CAAA;MAKF,IAAA,IAAME,SAAS,GAAGnC,QAAQ,CAAC,MAAc;YAAA,IAAAoC,sBAAA,EAAAC,sBAAA,CAAA;MACrC,MAAA,OAAA,CAAAD,sBAAA,GAAAC,CAAAA,sBAAA,GAAOhB,0BAA0B,CAAC5B,KAAK,MAAA4C,IAAAA,IAAAA,sBAAA,KAAhCA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,sBAAA,CAAkCC,KAAK,MAAA,IAAA,IAAAF,sBAAA,KAAAA,KAAAA,CAAAA,GAAAA,sBAAA,GAAI,EAAE,CAAA;MACxD,KAAC,CAAC,CAAA;MAKF,IAAA,IAAMG,WAAW,GAAGvC,QAAQ,CAAC,MAA4B;MAAA,MAAA,IAAAwC,sBAAA,CAAA;YACrD,IAAMC,MAAqB,GAAG,EAAE,CAAA;MAEhC,MAAA,IAAIjB,SAAS,CAAC/B,KAAK,KAAKgC,eAAe,CAACC,IAAI,EAAE;MAC1C,QAAA,OAAO,IAAI,CAAA;MACf,OAAA;YAEA,IAAAc,CAAAA,sBAAA,GAAInB,0BAA0B,CAAC5B,KAAK,MAAA+C,IAAAA,IAAAA,sBAAA,KAAhCA,KAAAA,CAAAA,IAAAA,sBAAA,CAAkCE,QAAQ,EAAE;cAC5CD,MAAM,CAACE,IAAI,CAAC;MACRC,UAAAA,KAAK,EAAE,QAAQ;MACf9E,UAAAA,IAAI,EAAE,MAAA;MACV,SAAC,CAAC,CAAA;MACN,OAAA;MAEA,MAAA,OAAO2E,MAAM,CAAA;MACjB,KAAC,CAAC,CAAA;MAEF,IAAA,IAAMI,UAAU,GAAG7C,QAAQ,CAAC,MAAe;MACvC,MAAA,OAAOY,MAAM,CAACiC,UAAU,KAAK,IAAI,CAAA;MACrC,KAAC,CAAC,CAAA;MAEF,IAAA,IAAM5E,OAAO,GAAG+B,QAAQ,CAAC,MAA2C;MAAA,MAAA,IAAA8C,eAAA,CAAA;YAChE,OAAAA,CAAAA,eAAA,GAAOlC,MAAM,CAAC3C,OAAO,MAAA6E,IAAAA,IAAAA,eAAA,KAAAA,KAAAA,CAAAA,GAAAA,eAAA,GAAI,EAAE,CAAA;MAC/B,KAAC,CAAC,CAAA;MAgBF,IAAA,IAAMC,YAAY,GAAA,YAAA;MAAA,MAAA,IAAAvE,IAAA,GAAAwE,iBAAA,CAAG,aAAuC;MAAA,QAAA,IAAAC,qBAAA,CAAA;MACxD,QAAA,IAAI,EAAAA,CAAAA,qBAAA,GAAC1B,0BAA0B,CAAC9B,KAAK,MAAAwD,IAAAA,IAAAA,qBAAA,KAAhCA,KAAAA,CAAAA,IAAAA,qBAAA,CAAkCX,KAAK,CAAE,EAAA;MAAA,UAAA,IAAAY,qBAAA,CAAA;MAC1C,UAAA,IAAA,CAAAA,qBAAA,GAAItC,MAAM,CAACuC,cAAc,MAAAD,IAAAA,IAAAA,qBAAA,KAArBA,KAAAA,CAAAA,IAAAA,qBAAA,CAAwB3C,gBAAgB,CAAC6C,UAAU,CAAC,EAAE;MACtD,YAAA,OAAOxC,MAAM,CAACuC,cAAc,CAAC5C,gBAAgB,CAAC6C,UAAU,CAAC,CAAA;MAC7D,WAAA;MAEA,UAAA,OAAO,KAAK,CAAA;MAChB,SAAA;MAEA,QAAA,OAAO,IAAI,CAAA;aACd,CAAA,CAAA;MAAA,MAAA,OAAA,SAVKL,YAAYA,GAAA;MAAA,QAAA,OAAAvE,IAAA,CAAA6E,KAAA,CAAA,IAAA,EAAAC,SAAA,CAAA,CAAA;MAAA,OAAA,CAAA;WAUjB,EAAA,CAAA;MAQD,IAAA,IAAMC,QAAQ,GAAA,YAAA;MAAA,MAAA,IAAAC,KAAA,GAAAR,iBAAA,CAAG,aAAqC;MAAA,QAAA,IAAAS,sBAAA,CAAA;cAClDrC,YAAY,CAAC3B,KAAK,GAAG,EAAE,CAAA;MAEvB,QAAA,IAAMiE,MAAM,GAAA,MAAS5C,iBAAiB,CAAS,QAAQ,EAAE;gBACrD6C,GAAG,EAAA,CAAAF,sBAAA,GAAEpC,0BAA0B,CAAC5B,KAAK,MAAAgE,IAAAA,IAAAA,sBAAA,KAAhCA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,sBAAA,CAAkCnB,KAAAA;MAC3C,SAAC,CAAC,CAAA;MAEF,QAAA,IAAIoB,MAAM,CAACE,SAAS,IAAIF,MAAM,CAACG,IAAI,EAAE;gBACjC,OAAOH,MAAM,CAACG,IAAI,CAAA;MACtB,SAAC,MACI;MAAA,UAAA,IAAAC,oBAAA,CAAA;MACD1C,UAAAA,YAAY,CAAC3B,KAAK,GAAAqE,CAAAA,oBAAA,GAAGJ,MAAM,CAACtC,YAAY,MAAA0C,IAAAA,IAAAA,oBAAA,KAAAA,KAAAA,CAAAA,GAAAA,oBAAA,GAAI,6DAA6D,CAAA;MAEzG,UAAA,OAAO,KAAK,CAAA;MAChB,SAAA;aACH,CAAA,CAAA;MAAA,MAAA,OAAA,SAfKP,QAAQA,GAAA;MAAA,QAAA,OAAAC,KAAA,CAAAH,KAAA,CAAA,IAAA,EAAAC,SAAA,CAAA,CAAA;MAAA,OAAA,CAAA;WAeb,EAAA,CAAA;MAQD,IAAA,IAAMS,MAAM,GAAA,YAAA;MAAA,MAAA,IAAAC,KAAA,GAAAhB,iBAAA,CAAG,aAA8B;MAAA,QAAA,IAAAiB,sBAAA,CAAA;MACzC,QAAA,IAAMP,MAAM,GAAA,MAAS5C,iBAAiB,CAA8E,MAAM,EAAE;gBACxH6C,GAAG,EAAA,CAAAM,sBAAA,GAAE5C,0BAA0B,CAAC5B,KAAK,MAAAwE,IAAAA,IAAAA,sBAAA,KAAhCA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,sBAAA,CAAkC3B,KAAAA;MAC3C,SAAC,CAAC,CAAA;MAEF,QAAA,IAAIoB,MAAM,CAACE,SAAS,IAAIF,MAAM,CAACG,IAAI,IAAIH,MAAM,CAACG,IAAI,CAACvC,MAAM,EAAE;MACvDC,UAAAA,0BAA0B,CAAC9B,KAAK,GAAGiE,MAAM,CAACG,IAAI,CAACvC,MAAM,CAAA;MAErD,UAAA,OAAO,IAAI,CAAA;MACf,SAAC,MACI;MACD,UAAA,OAAO,KAAK,CAAA;MAChB,SAAA;aACH,CAAA,CAAA;MAAA,MAAA,OAAA,SAbKyC,MAAMA,GAAA;MAAA,QAAA,OAAAC,KAAA,CAAAX,KAAA,CAAA,IAAA,EAAAC,SAAA,CAAA,CAAA;MAAA,OAAA,CAAA;WAaX,EAAA,CAAA;UASD,IAAMY,iBAAiB,GAAIC,YAAoB,IAAW;YAGtD,IAAI,CAACvD,MAAM,CAACwD,4BAA4B,IAAI,CAACxD,MAAM,CAACwD,4BAA4B,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,WAAW,EAAE,KAAKJ,YAAY,CAACI,WAAW,EAAE,CAAC,EAAE;MACxI,QAAA,OAAA;MACJ,OAAA;MAEA3C,MAAAA,yBAAyB,EAAE,CAAA;WAC9B,CAAA;MAQD,IAAA,IAAM4C,MAAM,GAAA,YAAA;MAAA,MAAA,IAAAC,KAAA,GAAAzB,iBAAA,CAAG,aAAuC;MAAA,QAAA,IAAA0B,qBAAA,CAAA;cAClDtD,YAAY,CAAC3B,KAAK,GAAG,EAAE,CAAA;MAEvB,QAAA,IAAMoE,IAAiF,GAAG;gBACtFvC,MAAM,EAAEC,0BAA0B,CAAC9B,KAAK;MACxCoD,UAAAA,UAAU,EAAE,IAAI;MAChBlB,UAAAA,eAAe,EAAEA,eAAAA;eACpB,CAAA;MAED,QAAA,IAAM+B,MAAM,GAAA,MAAS5C,iBAAiB,CAAkC,MAAM,EAAE;MAC5E6D,UAAAA,GAAG,EAAEd,IAAAA;MACT,SAAC,CAAC,CAAA;MAEF,QAAA,IAAIH,MAAM,CAACE,SAAS,IAAIF,MAAM,CAACG,IAAI,EAAE;MACjC,UAAA,IAAIH,MAAM,CAACkB,UAAU,KAAK,GAAG,IAAI,OAAOlB,MAAM,CAACG,IAAI,KAAK,QAAQ,EAAE;MAC9DxC,YAAAA,0BAA0B,CAAC5B,KAAK,GAAGiE,MAAM,CAACG,IAAI,CAAA;MAE9C,YAAA,OAAO,IAAI,CAAA;MACf,WAAC,MACI,IAAIH,MAAM,CAACkB,UAAU,KAAK,GAAG,IAAI,OAAOlB,MAAM,CAACG,IAAI,KAAK,QAAQ,EAAE;kBACnE,OAAOH,MAAM,CAACG,IAAI,CAAA;MACtB,WAAA;MACJ,SAAA;MAEAzC,QAAAA,YAAY,CAAC3B,KAAK,GAAAiF,CAAAA,qBAAA,GAAGhB,MAAM,CAACtC,YAAY,MAAAsD,IAAAA,IAAAA,qBAAA,KAAAA,KAAAA,CAAAA,GAAAA,qBAAA,GAAI,2DAA2D,CAAA;MAEvG,QAAA,OAAO,KAAK,CAAA;aACf,CAAA,CAAA;MAAA,MAAA,OAAA,SA3BKF,MAAMA,GAAA;MAAA,QAAA,OAAAC,KAAA,CAAApB,KAAA,CAAA,IAAA,EAAAC,SAAA,CAAA,CAAA;MAAA,OAAA,CAAA;WA2BX,EAAA,CAAA;UAIDuB,oBAAoB,CAAC7D,aAAa,CAAC,CAAA;UAGnC,IAAIJ,MAAM,CAACQ,YAAY,EAAE;MACrBD,MAAAA,UAAU,CAAC1B,KAAK,GAAGmB,MAAM,CAACQ,YAAY,CAAA;MAC1C,KAAC,MACI,IAAI,CAACR,MAAM,CAACU,MAAM,EAAE;YACrBH,UAAU,CAAC1B,KAAK,GAAG,0DAA0D,CAAA;WAChF,MACI,IAAI,CAACmB,MAAM,CAACU,MAAM,CAACgB,KAAK,EAAE;MAC3Bf,MAAAA,0BAA0B,CAAC9B,KAAK,GAAGmB,MAAM,CAACU,MAAM,CAAA;MAChDE,MAAAA,SAAS,CAAC/B,KAAK,GAAGgC,eAAe,CAACqD,GAAG,CAAA;MACzC,KAAA;UAEA,OAAO;YACHzD,0BAA0B;YAC1BE,0BAA0B;YAC1BJ,UAAU;YACVoB,WAAW;YACXJ,SAAS;YACT4C,cAAc,EAAEC,UAAU,CAACC,mBAAmB;YAC9C7D,YAAY;YACZyB,UAAU;YACVE,YAAY;YACZQ,QAAQ;YACRQ,MAAM;YACNG,iBAAiB;YACjBM,MAAM;YACNvG,OAAO;YACPuD,SAAS;MACTQ,MAAAA,SAAAA;WACH,CAAA;SACJ;QAEDrC,QAAQ,EAAA,ggCAAA;MA+BZ,CAAC,EAAC;;;;;;;;"}