{"version":3,"file":"liveExperience.obs.js","sources":["../../../src/Event/InteractiveExperiences/LiveExperience/util.partial.ts","../../../src/Event/InteractiveExperiences/LiveExperience/actionShortAnswer.partial.obs","../../../../Rock.JavaScript.Obsidian/node_modules/style-inject/dist/style-inject.es.js","../../../src/Event/InteractiveExperiences/LiveExperience/actionPoll.partial.obs","../../../src/Event/InteractiveExperiences/liveExperience.obs"],"sourcesContent":["// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { ITopic } from \"@Obsidian/Utility/realTime\";\r\nimport { ActionRenderConfigurationBag } from \"@Obsidian/ViewModels/Event/InteractiveExperiences/actionRenderConfigurationBag\";\r\nimport { PropType } from \"vue\";\r\nimport { IParticipantTopic } from \"../types.partial\";\r\n\r\ntype ActionPropsType = {\r\n    /** The identifier of the event. This should be used when sending responses. */\r\n    eventId: {\r\n        type: PropType<string>,\r\n        required: true\r\n    },\r\n\r\n    /** The identifier of the action. This should be used when sending responses. */\r\n    actionId: {\r\n        type: PropType<string>,\r\n        required: true\r\n    },\r\n\r\n    /** The configuration to use when rendering this action. */\r\n    renderConfiguration: {\r\n        type: PropType<ActionRenderConfigurationBag>,\r\n        required: true\r\n    },\r\n\r\n    /** The RealTime topic proxy to use when communicating with the server. */\r\n    realTimeTopic: {\r\n        type: PropType<ITopic<IParticipantTopic>>,\r\n        required: true\r\n    }\r\n};\r\n\r\n/** The properties that will be passed to every action component. */\r\nexport const actionProps: ActionPropsType = {\r\n    eventId: {\r\n        type: String as PropType<string>,\r\n        required: true\r\n    },\r\n\r\n    actionId: {\r\n        type: String as PropType<string>,\r\n        required: true\r\n    },\r\n\r\n    renderConfiguration: {\r\n        type: Object as PropType<ActionRenderConfigurationBag>,\r\n        required: true\r\n    },\r\n\r\n    realTimeTopic: {\r\n        type: Object as PropType<ITopic<IParticipantTopic>>,\r\n        required: true\r\n    }\r\n};\r\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <div class=\"experience-action experience-action-type-5ffe1f8f-5f0b-4b34-9c3f-1706d9093210\" :class=\"additionalActionClasses\">\r\n        <div class=\"question\">\r\n            {{ questionText }}\r\n        </div>\r\n\r\n        <div class=\"answer\">\r\n            <div class=\"form-group\">\r\n                <input v-model=\"answerText\" class=\"form-control\" type=\"text\" :disabled=\"isAnswerDisabled\" />\r\n            </div>\r\n        </div>\r\n\r\n        <NotificationBox v-if=\"errorMessage\" alertType=\"warning\">\r\n            {{ errorMessage }}\r\n        </NotificationBox>\r\n\r\n        <div class=\"submit\">\r\n            <RockButton :btnType=\"BtnType.Primary\"\r\n                        :disabled=\"isButtonDisabled\"\r\n                        @click=\"onSubmitClick\">\r\n                Submit\r\n            </RockButton>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<!-- Cannot use scoped here otherwise it becomes very difficult to override by custom CSS. -->\r\n<style>\r\n.experience-action-type-5ffe1f8f-5f0b-4b34-9c3f-1706d9093210 .question::before,\r\n.experience-action-type-5ffe1f8f-5f0b-4b34-9c3f-1706d9093210 .answer::before {\r\n    display: block;\r\n    margin-bottom: 4px;\r\n    font-size: 3em;\r\n    font-weight: 700;\r\n    line-height: 1.2;\r\n    content: 'Q:';\r\n}\r\n\r\n.experience-action-type-5ffe1f8f-5f0b-4b34-9c3f-1706d9093210 .answer::before {\r\n    content: 'A:';\r\n}\r\n\r\n.experience-action-type-5ffe1f8f-5f0b-4b34-9c3f-1706d9093210 .answer,\r\n.experience-action-type-5ffe1f8f-5f0b-4b34-9c3f-1706d9093210 .submit {\r\n    margin-top: 18px;\r\n}\r\n</style>\r\n\r\n<script setup lang=\"ts\">\r\n    import NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\n    import RockButton from \"@Obsidian/Controls/rockButton\";\r\n    import { BtnType } from \"@Obsidian/Enums/Controls/btnType\";\r\n    import { computed, ref, watch } from \"vue\";\r\n    import { actionProps } from \"./util.partial\";\r\n\r\n    const props = defineProps(actionProps);\r\n\r\n    // #region Values\r\n\r\n    const answerText = ref(\"\");\r\n    const isAnswerSubmitted = ref(false);\r\n    const errorMessage = ref(\"\");\r\n\r\n    // #endregion\r\n\r\n    // #region Computed Values\r\n\r\n    const additionalActionClasses = computed((): string => {\r\n        return `experience-action-${props.renderConfiguration.actionId}`;\r\n    });\r\n\r\n    const questionText = computed((): string => {\r\n        return props.renderConfiguration.configurationValues?.[\"question\"] ?? \"\";\r\n    });\r\n\r\n    const isButtonDisabled = computed((): boolean => {\r\n        return !answerText.value;\r\n    });\r\n\r\n    const isAnswerDisabled = computed((): boolean => {\r\n        return isAnswerSubmitted.value && !props.renderConfiguration.isMultipleSubmissionAllowed;\r\n    });\r\n\r\n    // #endregion\r\n\r\n    // #region Functions\r\n\r\n    // #endregion\r\n\r\n    // #region Event Handlers\r\n\r\n    async function onSubmitClick(): Promise<void> {\r\n        let result: number;\r\n\r\n        try {\r\n            result = await props.realTimeTopic.server.postResponse(props.eventId, props.actionId, answerText.value);\r\n        }\r\n        catch (error) {\r\n            result = 400;\r\n            console.error(error);\r\n        }\r\n\r\n        if (result === 200) {\r\n            answerText.value = \"\";\r\n            errorMessage.value = \"\";\r\n            isAnswerSubmitted.value = true;\r\n        }\r\n        else if (result === 409) {\r\n            answerText.value = \"\";\r\n            errorMessage.value = \"Multiple answers are not allowed and you have previously submitted an answer.\";\r\n            isAnswerSubmitted.value = true;\r\n        }\r\n        else {\r\n            errorMessage.value = \"Unable to submit your answer.\";\r\n        }\r\n    }\r\n\r\n    // #endregion\r\n\r\n    watch(() => props.actionId, () => {\r\n        isAnswerSubmitted.value = false;\r\n        errorMessage.value = \"\";\r\n    });\r\n</script>\r\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <div class=\"experience-action experience-action-type-9256a5b7-480d-4ffa-86d1-03b8aefc254e\" :class=\"additionalActionClasses\">\r\n        <div class=\"question\">\r\n            {{ questionText }}\r\n        </div>\r\n\r\n        <div class=\"answers\">\r\n            <RadioButtonList v-model=\"answerText\" :items=\"answerItems\" disabled />\r\n        </div>\r\n\r\n        <NotificationBox v-if=\"errorMessage\" alertType=\"warning\">\r\n            {{ errorMessage }}\r\n        </NotificationBox>\r\n\r\n        <div class=\"submit\">\r\n            <RockButton :btnType=\"BtnType.Primary\"\r\n                        :disabled=\"isButtonDisabled\"\r\n                        @click=\"onSubmitClick\">\r\n                Submit\r\n            </RockButton>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<!-- Cannot use scoped here otherwise it becomes very difficult to override by custom CSS. -->\r\n<style>\r\n.experience-action-type-9256a5b7-480d-4ffa-86d1-03b8aefc254e .question::before,\r\n.experience-action-type-9256a5b7-480d-4ffa-86d1-03b8aefc254e .answers::before {\r\n    display: block;\r\n    margin-bottom: 4px;\r\n    font-size: 3em;\r\n    font-weight: 700;\r\n    line-height: 1.2;\r\n    content: 'Q:';\r\n}\r\n\r\n.experience-action-type-9256a5b7-480d-4ffa-86d1-03b8aefc254e .answers::before {\r\n    content: 'A:';\r\n}\r\n\r\n.experience-action-type-9256a5b7-480d-4ffa-86d1-03b8aefc254e .answers {\r\n    margin-top: 18px;\r\n}\r\n\r\n.experience-action-type-9256a5b7-480d-4ffa-86d1-03b8aefc254e .answers .radio {\r\n    padding-left: 0;\r\n    margin-bottom: 12px;\r\n}\r\n\r\n.experience-action-type-9256a5b7-480d-4ffa-86d1-03b8aefc254e .answers .radio .label-text::before,\r\n.experience-action-type-9256a5b7-480d-4ffa-86d1-03b8aefc254e .answers .radio .label-text::after {\r\n    display: none;\r\n}\r\n\r\n.experience-action-type-9256a5b7-480d-4ffa-86d1-03b8aefc254e .answers label {\r\n    display: block;\r\n}\r\n\r\n.experience-action-type-9256a5b7-480d-4ffa-86d1-03b8aefc254e .answers input {\r\n    display: none;\r\n}\r\n\r\n.experience-action-type-9256a5b7-480d-4ffa-86d1-03b8aefc254e .answers .label-text {\r\n    display: block;\r\n    padding: 6px 12px;\r\n    border: 2px solid var(--experience-action-secondary-btn-bg);\r\n    border-radius: var(--border-radius-base, 4px);\r\n    transition: background-color .25s ease-in-out, color .25s ease-in-out;\r\n}\r\n\r\n.experience-action-type-9256a5b7-480d-4ffa-86d1-03b8aefc254e .answers input:checked + .label-text {\r\n    color: var(--experience-action-secondary-btn-color);\r\n    background-color: var(--experience-action-secondary-btn-bg);\r\n}\r\n\r\n.experience-action-type-9256a5b7-480d-4ffa-86d1-03b8aefc254e .submit {\r\n    margin-top: 18px;\r\n}\r\n</style>\r\n\r\n<script setup lang=\"ts\">\r\n    import RockButton from \"@Obsidian/Controls/rockButton\";\r\n    import RadioButtonList from \"@Obsidian/Controls/radioButtonList\";\r\n    import { BtnType } from \"@Obsidian/Enums/Controls/btnType\";\r\n    import { computed, ref, watch } from \"vue\";\r\n    import { actionProps } from \"./util.partial\";\r\n    import { ListItemBag } from \"@Obsidian/ViewModels/Utility/listItemBag\";\r\n\r\n    const props = defineProps(actionProps);\r\n\r\n    // #region Values\r\n\r\n    const answerText = ref(\"\");\r\n    const isAnswerSubmitted = ref(false);\r\n    const errorMessage = ref(\"\");\r\n\r\n    // #endregion\r\n\r\n    // #region Computed Values\r\n\r\n    const answerItems = computed((): ListItemBag[] => {\r\n        const answers: string[] = JSON.parse(props.renderConfiguration.configurationValues?.answers ?? \"[]\") ?? [];\r\n\r\n        return answers.map(a => ({\r\n            value: a,\r\n            text: a,\r\n            category: isAnswerSubmitted.value && !props.renderConfiguration.isMultipleSubmissionAllowed ? \"disabled\" : undefined\r\n        }));\r\n    });\r\n\r\n    const additionalActionClasses = computed((): string => {\r\n        return `experience-action-${props.renderConfiguration.actionId}`;\r\n    });\r\n\r\n    const questionText = computed((): string => {\r\n        return props.renderConfiguration.configurationValues?.[\"question\"] ?? \"\";\r\n    });\r\n\r\n    const isButtonDisabled = computed((): boolean => {\r\n        return !answerText.value;\r\n    });\r\n\r\n    // #endregion\r\n\r\n    // #region Functions\r\n\r\n    // #endregion\r\n\r\n    // #region Event Handlers\r\n\r\n    async function onSubmitClick(): Promise<void> {\r\n        let result: number;\r\n\r\n        try {\r\n            result = await props.realTimeTopic.server.postResponse(props.eventId, props.actionId, answerText.value);\r\n        }\r\n        catch (error) {\r\n            result = 400;\r\n            console.error(error);\r\n        }\r\n\r\n        if (result === 200) {\r\n            answerText.value = \"\";\r\n            errorMessage.value = \"\";\r\n            isAnswerSubmitted.value = true;\r\n        }\r\n        else if (result === 409) {\r\n            answerText.value = \"\";\r\n            errorMessage.value = \"Multiple answers are not allowed and you have previously submitted an answer.\";\r\n            isAnswerSubmitted.value = true;\r\n        }\r\n        else {\r\n            errorMessage.value = \"Unable to submit your answer.\";\r\n        }\r\n    }\r\n\r\n    // #endregion\r\n\r\n    watch(() => props.actionId, () => {\r\n        isAnswerSubmitted.value = false;\r\n        errorMessage.value = \"\";\r\n    });\r\n</script>\r\n","<!-- Copyright by the Spark Development Network; Licensed under the Rock Community License -->\r\n<template>\r\n    <div class=\"styled-scroll\">\r\n        <div class=\"live-experience-body\" :style=\"experienceStyles\">\r\n            <NotificationBox v-if=\"isExperienceInactive\" alertType=\"warning\">\r\n                This experience has ended.\r\n            </NotificationBox>\r\n            <div v-if=\"isWelcomeContentVisible\" class=\"welcome\">\r\n                <div class=\"welcome-header\">\r\n                    <img v-if=\"welcomeHeaderImageUrl\" :src=\"welcomeHeaderImageUrl\" class=\"header-image\" />\r\n                    <h1 v-if=\"config.style?.welcome?.title\" class=\"welcome-title\">{{ config.style.welcome.title }}</h1>\r\n                </div>\r\n                <div class=\"welcome-message\">{{ config.style?.welcome?.message }}</div>\r\n            </div>\r\n            <div v-if=\"isNoActionContentVisible\" class=\"no-action\">\r\n                <div class=\"no-action-header\">\r\n                    <img v-if=\"noActionHeaderImageUrl\" :src=\"noActionHeaderImageUrl\" class=\"header-image\" />\r\n                    <h1 v-if=\"config.style?.noAction?.title\" class=\"no-action-title\">{{ config.style.noAction.title }}</h1>\r\n                </div>\r\n                <div class=\"no-action-message\">{{ config.style?.noAction?.message }}</div>\r\n            </div>\r\n            <component v-if=\"activeActionComponent\"\r\n                       :is=\"activeActionComponent\"\r\n                       :eventId=\"eventId\"\r\n                       :actionId=\"activeActionId\"\r\n                       :renderConfiguration=\"activeActionRenderConfiguration\"\r\n                       :realTimeTopic=\"realTimeTopic\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<!-- Cannot use scoped here otherwise it becomes very difficult to override by custom CSS. -->\r\n<style>\r\nbody {\r\n    touch-action: none;\r\n}\r\n\r\n.live-experience-body {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    padding: 18px;\r\n    color: var(--experience-action-color, inherit);\r\n    background-color: var(--experience-action-bg, inherit);\r\n    background-image: var(--experience-action-bg-image, initial);\r\n    background-size: cover;\r\n    overflow: auto;\r\n}\r\n\r\n.live-experience-body .btn-primary,\r\n.live-experience-body .btn-primary:hover,\r\n.live-experience-body .btn-primary:focus {\r\n    color: var(--experience-action-primary-btn-color);\r\n    background-color: var(--experience-action-primary-btn-bg);\r\n    border-color: var(--experience-action-primary-btn-bg);\r\n    box-shadow: none;\r\n}\r\n\r\n.live-experience-body .btn-secondary,\r\n.live-experience-body .btn-secondary:hover,\r\n.live-experience-body .btn-secondary:focus {\r\n    color: var(--experience-action-secondary-btn-color);\r\n    background-color: var(--experience-action-secondary-btn-bg);\r\n    border-color: var(--experience-action-secondary-btn-bg);\r\n}\r\n\r\n.live-experience-body .header-image {\r\n    display: block;\r\n    max-width: 100%;\r\n    height: auto;\r\n}\r\n</style>\r\n\r\n<script setup lang=\"ts\">\r\n    import ActionShortAnswer from \"./LiveExperience/actionShortAnswer.partial.obs\";\r\n    import ActionPoll from \"./LiveExperience/actionPoll.partial.obs\";\r\n    import NotificationBox from \"@Obsidian/Controls/notificationBox.obs\";\r\n    import { Component as VueComponent, computed, ref } from \"vue\";\r\n    import { getTopic, ITopic } from \"@Obsidian/Utility/realTime\";\r\n    import { IParticipantTopic } from \"./types.partial\";\r\n    import { LiveExperienceInitializationBox } from \"@Obsidian/ViewModels/Blocks/Event/InteractiveExperiences/LiveExperience/liveExperienceInitializationBox\";\r\n    import { ActionRenderConfigurationBag } from \"@Obsidian/ViewModels/Event/InteractiveExperiences/actionRenderConfigurationBag\";\r\n    import { onConfigurationValuesChanged, useConfigurationValues, useReloadBlock } from \"@Obsidian/Utility/block\";\r\n    import { Guid } from \"@Obsidian/Types\";\r\n\r\n    const config = useConfigurationValues<LiveExperienceInitializationBox>();\r\n\r\n    const actionTypeLookup: Record<Guid, VueComponent> = {\r\n        \"5ffe1f8f-5f0b-4b34-9c3f-1706d9093210\": ActionShortAnswer,\r\n        \"9256a5b7-480d-4ffa-86d1-03b8aefc254e\": ActionPoll\r\n    };\r\n\r\n    // #region Values\r\n\r\n    const eventId = ref<string | null>(null);\r\n    const isReady = ref(false);\r\n    const realTimeTopic = ref<ITopic<IParticipantTopic> | null>(null);\r\n    const activeActionId = ref<string | null>(null);\r\n    const activeActionComponent = ref<VueComponent | null>(null);\r\n    const activeActionRenderConfiguration = ref<ActionRenderConfigurationBag | null>(null);\r\n    const isExperienceInactive = ref(config.isExperienceInactive);\r\n    const isWelcomeState = ref(!isExperienceInactive.value);\r\n    const experienceStyles = getExperienceStyles();\r\n\r\n    // #endregion\r\n\r\n    // #region Computed Values\r\n\r\n    const isWelcomeContentVisible = computed((): boolean => {\r\n        return isReady.value && !isExperienceInactive.value && !!realTimeTopic.value && isWelcomeState.value;\r\n    });\r\n\r\n    const isNoActionContentVisible = computed((): boolean => {\r\n        return isReady.value && !isExperienceInactive.value && !isWelcomeContentVisible.value && !activeActionComponent.value;\r\n    });\r\n\r\n    const welcomeHeaderImageUrl = computed((): string | null => {\r\n        return config.style?.welcome?.headerImage ?? null;\r\n    });\r\n\r\n    const noActionHeaderImageUrl = computed((): string | null => {\r\n        return config.style?.noAction?.headerImage ?? null;\r\n    });\r\n\r\n    // #endregion\r\n\r\n    // #region Functions\r\n\r\n    async function startRealTime(isReconnecting: boolean): Promise<void> {\r\n        const experienceToken = config.experienceToken;\r\n\r\n        if (!experienceToken) {\r\n            throw new Error(\"Missing experience token from server.\");\r\n        }\r\n\r\n        const topic = await getTopic<IParticipantTopic>(\"Rock.RealTime.Topics.InteractiveExperienceParticipantTopic\");\r\n\r\n        topic.onDisconnected(async () => {\r\n            await startRealTime(true);\r\n        });\r\n\r\n        const response = await topic.server.joinExperience(experienceToken);\r\n        eventId.value = response.occurrenceIdKey ?? null;\r\n\r\n        topic.on(\"showAction\", onShowAction);\r\n        topic.on(\"clearActions\", onClearActions);\r\n\r\n        realTimeTopic.value = topic;\r\n        isReady.value = true;\r\n\r\n        if (response.currentActionIdKey && response.currentActionConfiguration) {\r\n            setupActionComponent(response.currentActionIdKey, response.currentActionConfiguration);\r\n        }\r\n\r\n        if (!isReconnecting) {\r\n            setTimeout(onPingTimer, config.keepAliveInterval * 1_000);\r\n        }\r\n    }\r\n\r\n    function setupActionComponent(actionId: string, renderConfiguration: ActionRenderConfigurationBag): void {\r\n        if (!isReady.value || isExperienceInactive.value || !renderConfiguration.actionTypeGuid || !actionTypeLookup[renderConfiguration.actionTypeGuid]) {\r\n            activeActionComponent.value = null;\r\n            activeActionId.value = null;\r\n            activeActionRenderConfiguration.value = null;\r\n            isWelcomeState.value = false;\r\n            return;\r\n        }\r\n\r\n        activeActionComponent.value = actionTypeLookup[renderConfiguration.actionTypeGuid];\r\n        activeActionId.value = actionId;\r\n        activeActionRenderConfiguration.value = renderConfiguration;\r\n        isWelcomeState.value = false;\r\n    }\r\n\r\n    function getExperienceStyles(): Record<string, string> {\r\n        const styles: Record<string, string> = {};\r\n\r\n        if (config.style?.welcome?.headerImage) {\r\n            styles[\"--welcome-header-image\"] = `url('${config.style.welcome.headerImage}')`;\r\n        }\r\n\r\n        if (config.style?.noAction?.headerImage) {\r\n            styles[\"--no-action-header-image\"] = `url('${config.style.noAction.headerImage}')`;\r\n        }\r\n\r\n        if (config.style?.action?.backgroundColor) {\r\n            styles[\"--experience-action-bg\"] = config.style.action.backgroundColor;\r\n        }\r\n\r\n        if (config.style?.action?.backgroundImage) {\r\n            styles[\"--experience-action-bg-image\"] = `url('${config.style.action.backgroundImage}')`;\r\n        }\r\n\r\n        if (config.style?.action?.primaryButtonColor) {\r\n            styles[\"--experience-action-primary-btn-bg\"] = config.style.action.primaryButtonColor;\r\n        }\r\n        else {\r\n            styles[\"--experience-action-primary-btn-bg\"] = \"var(--brand-primary)\";\r\n        }\r\n\r\n        if (config.style?.action?.primaryButtonTextColor) {\r\n            styles[\"--experience-action-primary-btn-color\"] = config.style.action.primaryButtonTextColor;\r\n        }\r\n        else {\r\n            styles[\"--experience-action-primary-btn-color\"] = \"#fff\";\r\n        }\r\n\r\n        if (config.style?.action?.secondaryButtonColor) {\r\n            styles[\"--experience-action-secondary-btn-bg\"] = config.style.action.secondaryButtonColor;\r\n        }\r\n        else {\r\n            styles[\"--experience-action-secondary-btn-bg\"] = \"var(--brand-info)\";\r\n        }\r\n\r\n        if (config.style?.action?.secondaryButtonTextColor) {\r\n            styles[\"--experience-action-secondary-btn-color\"] = config.style.action.secondaryButtonTextColor;\r\n        }\r\n        else {\r\n            styles[\"--experience-action-secondary-btn-color\"] = \"#fff\";\r\n        }\r\n\r\n        if (config.style?.action?.textColor) {\r\n            styles[\"--experience-action-color\"] = config.style.action.textColor;\r\n        }\r\n        else {\r\n            styles[\"--experience-action-color\"] = \"var(--text-color)\";\r\n        }\r\n\r\n        return styles;\r\n    }\r\n\r\n    function setupCustomStyles(): void {\r\n        if (config.style?.action?.customCss) {\r\n            const styleNode = document.createElement(\"style\");\r\n            styleNode.textContent = config.style.action.customCss;\r\n            document.head.appendChild(styleNode);\r\n        }\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Event Handlers\r\n\r\n    function onShowAction(id: string, actionId: string, renderConfiguration: ActionRenderConfigurationBag): void {\r\n        if (eventId.value === id) {\r\n            setupActionComponent(actionId, renderConfiguration);\r\n        }\r\n    }\r\n\r\n    function onClearActions(id: string): void {\r\n        if (eventId.value === id) {\r\n            activeActionComponent.value = null;\r\n            activeActionId.value = null;\r\n            activeActionRenderConfiguration.value = null;\r\n        }\r\n    }\r\n\r\n    async function onPingTimer(): Promise<void> {\r\n        try {\r\n            if (realTimeTopic.value && eventId.value) {\r\n                await realTimeTopic.value.server.pingExperience(eventId.value);\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.error(error instanceof Error ? error.message : error);\r\n        }\r\n        finally {\r\n            setTimeout(onPingTimer, config.keepAliveInterval * 1000);\r\n        }\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // Add viewport meta tag if it doesn't exist.\r\n    if (document.querySelector(\"meta[name='viewport']\") === null) {\r\n        const metaNode = document.createElement(\"meta\");\r\n        metaNode.name = \"viewport\";\r\n        metaNode.content = \"width=device-width, initial-scale=1\";\r\n        document.head.appendChild(metaNode);\r\n    }\r\n\r\n    onConfigurationValuesChanged(useReloadBlock());\r\n\r\n    setupCustomStyles();\r\n    startRealTime(false);\r\n</script>\r\n"],"names":["actionProps","eventId","type","String","required","actionId","renderConfiguration","Object","realTimeTopic","answerText","ref","isAnswerSubmitted","errorMessage","additionalActionClasses","computed","concat","props","questionText","_props$renderConfigur","_props$renderConfigur2","configurationValues","isButtonDisabled","value","isAnswerDisabled","isMultipleSubmissionAllowed","onSubmitClick","_onSubmitClick","apply","arguments","_asyncToGenerator","result","server","postResponse","error","console","watch","styleInject","css","insertAt","document","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","answerItems","_JSON$parse","answers","JSON","parse","map","a","text","category","undefined","_props$renderConfigur3","_props$renderConfigur4","config","useConfigurationValues","actionTypeLookup","ActionShortAnswer","ActionPoll","isReady","activeActionId","activeActionComponent","activeActionRenderConfiguration","isExperienceInactive","isWelcomeState","experienceStyles","getExperienceStyles","isWelcomeContentVisible","isNoActionContentVisible","welcomeHeaderImageUrl","_config$style$welcome","_config$style","_config$style$welcome2","welcome","headerImage","noActionHeaderImageUrl","_config$style$noActio","_config$style2","_config$style2$noActi","noAction","startRealTime","_x","_startRealTime","isReconnecting","_response$occurrenceI","experienceToken","Error","topic","getTopic","onDisconnected","response","joinExperience","occurrenceIdKey","on","onShowAction","onClearActions","currentActionIdKey","currentActionConfiguration","setupActionComponent","setTimeout","onPingTimer","keepAliveInterval","actionTypeGuid","_config$style3","_config$style3$welcom","_config$style4","_config$style4$noActi","_config$style5","_config$style5$action","_config$style6","_config$style6$action","_config$style7","_config$style7$action","_config$style8","_config$style8$action","_config$style9","_config$style9$action","_config$style10","_config$style10$actio","_config$style11","_config$style11$actio","styles","action","backgroundColor","backgroundImage","primaryButtonColor","primaryButtonTextColor","secondaryButtonColor","secondaryButtonTextColor","textColor","setupCustomStyles","_config$style12","_config$style12$actio","customCss","styleNode","textContent","id","_onPingTimer","pingExperience","message","querySelector","metaNode","name","content","onConfigurationValuesChanged","useReloadBlock"],"mappings":"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"}