{"version":3,"file":"rockPage.js","sources":["../../../Framework/Templates/rockBlock.partial.ts","../../../Framework/Templates/rockPage.ts"],"sourcesContent":["ï»¿// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\n\r\nimport { Guid } from \"@Obsidian/Types\";\r\nimport { doApiCall, provideHttp } from \"@Obsidian/Utility/http\";\r\nimport { Component, computed, defineComponent, nextTick, onErrorCaptured, onMounted, PropType, provide, ref, watch } from \"vue\";\r\nimport { useStore } from \"@Obsidian/PageState\";\r\nimport { RockDateTime } from \"@Obsidian/Utility/rockDateTime\";\r\nimport { HttpBodyData, HttpMethod, HttpResult, HttpUrlParams } from \"@Obsidian/Types/Utility/http\";\r\nimport { InvokeBlockActionFunc } from \"@Obsidian/Types/Utility/block\";\r\nimport { provideBlockGuid, provideConfigurationValuesChanged, provideReloadBlock } from \"@Obsidian/Utility/block\";\r\nimport { areEqual, emptyGuid } from \"@Obsidian/Utility/guid\";\r\nimport { PanelAction } from \"@Obsidian/Types/Controls/panelAction\";\r\nimport { ObsidianBlockConfigBag } from \"@Obsidian/ViewModels/Cms/obsidianBlockConfigBag\";\r\n\r\nconst store = useStore();\r\n\r\n// Can be removed once WebForms is no longer in use.\r\n// eslint-disable-next-line @typescript-eslint/naming-convention,@typescript-eslint/no-explicit-any\r\ndeclare const Sys: any;\r\n\r\n/**\r\n * Handles the logic to detect when the standard block settings modal has closed\r\n * via a Save click for the specified block.\r\n * \r\n * @param blockId The unique identifier of the block to be watched.\r\n * @param callback The callback to be invoked when the block settings have been saved.\r\n */\r\nfunction addBlockChangedEventListener(blockId: Guid, callback: (() => void)): void {\r\n    function onTriggerClick(): void {\r\n        const dataElement = document.querySelector(\"#rock-config-trigger-data\") as HTMLInputElement;\r\n        if (dataElement.value.toLowerCase().startsWith(\"block_updated:\")) {\r\n            const dataSegments = dataElement.value.toLowerCase().split(\":\");\r\n\r\n            if (dataSegments.length >= 3 && areEqual(dataSegments[2], blockId)) {\r\n                callback();\r\n            }\r\n        }\r\n    }\r\n\r\n    document.querySelector(\"#rock-config-trigger\")?.addEventListener(\"click\", onTriggerClick, true);\r\n\r\n    // This code can be removed once WebForms is no longer in use.\r\n    if (Sys) {\r\n        Sys.Application.add_load(() => {\r\n            document.querySelector(\"#rock-config-trigger\")?.addEventListener(\"click\", onTriggerClick, true);\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * Update the custom actions in the configuration bar to match those provided.\r\n * \r\n * @param blockContainerElement The element that contains the block component.\r\n * @param actions The array of actions to put in the configuration bar.\r\n */\r\nfunction updateConfigurationBarActions(blockContainerElement: HTMLElement, actions: PanelAction[]): void {\r\n    // Find the configuration bar. We don't want to use querySelector at the\r\n    // blockContent level because that would include the block content which\r\n    // might have matching class names and cause issues.\r\n    const blockContent = blockContainerElement.closest(\".block-content\");\r\n    const blockConfiguration = Array.from(blockContent?.children ?? [])\r\n        .find(el => el.classList.contains(\"block-configuration\"));\r\n    const configurationBar = blockConfiguration?.querySelector(\".block-configuration-bar\") as HTMLElement | undefined;\r\n\r\n    if (!configurationBar) {\r\n        return;\r\n    }\r\n\r\n    // Find the name element, which is what we will use as our insertion point.\r\n    const nameElement = Array.from(configurationBar.children).find(el => el.tagName == \"SPAN\");\r\n    if (!nameElement) {\r\n        return;\r\n    }\r\n\r\n    // Find and remove any existing custom actions.\r\n    Array.from(configurationBar.querySelectorAll(\"a\"))\r\n        .filter(el => el.dataset[\"customAction\"] === \"true\")\r\n        .forEach(el => el.remove());\r\n\r\n    // Add new custom actions.\r\n    actions.forEach(action => {\r\n        const hyperlinkElement = document.createElement(\"a\");\r\n        hyperlinkElement.href = \"#\";\r\n        hyperlinkElement.title = action.title ?? \"\";\r\n        hyperlinkElement.dataset[\"customAction\"] = \"true\";\r\n        hyperlinkElement.addEventListener(\"click\", e => {\r\n            e.preventDefault();\r\n            if (action.handler) {\r\n                action.handler(e);\r\n            }\r\n        });\r\n\r\n        const iconElement = document.createElement(\"i\");\r\n        iconElement.className = action.iconCssClass ?? \"fa fa-question\";\r\n\r\n        hyperlinkElement.appendChild(iconElement);\r\n\r\n        nameElement.after(hyperlinkElement);\r\n    });\r\n}\r\n\r\nexport default defineComponent({\r\n    name: \"RockBlock\",\r\n\r\n    props: {\r\n        config: {\r\n            type: Object as PropType<ObsidianBlockConfigBag>,\r\n            required: true\r\n        },\r\n        blockComponent: {\r\n            type: Object as PropType<Component>,\r\n            default: null\r\n        },\r\n        startTimeMs: {\r\n            type: Number as PropType<number>,\r\n            required: true\r\n        }\r\n    },\r\n\r\n    setup(props) {\r\n        const error = ref(\"\");\r\n        const finishTimeMs = ref<number | null>(null);\r\n        const blockContainerElement = ref<HTMLElement | null>(null);\r\n        const configurationValues = ref(props.config.configurationValues);\r\n        const configCustomActions = ref(props.config.customConfigurationActions);\r\n        const customActionComponent = ref<Component | null>(null);\r\n        const currentBlockComponent = ref<Component | null>(props.blockComponent);\r\n\r\n        // #region Computed Values\r\n\r\n        // The current config bar actions that should be included in the block's\r\n        // administrative configuration bar.\r\n        const configBarActions = computed((): PanelAction[] => {\r\n            const customActions: PanelAction[] = [];\r\n\r\n            if (configCustomActions.value) {\r\n                for (const cca of configCustomActions.value) {\r\n                    if (cca.iconCssClass && cca.tooltip && cca.componentFileUrl) {\r\n                        customActions.push({\r\n                            type: \"default\",\r\n                            title: cca.tooltip,\r\n                            iconCssClass: cca.iconCssClass,\r\n                            handler: async () => {\r\n                                try {\r\n                                    const module = await import(cca.componentFileUrl ?? \"\");\r\n                                    customActionComponent.value = module?.default ?? module ?? null;\r\n                                }\r\n                                catch (e) {\r\n                                    // Log the error, but continue setting up the app so the UI will show the user an error\r\n                                    console.error(e);\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            return customActions;\r\n        });\r\n\r\n        // #endregion\r\n\r\n        // #region Functions\r\n\r\n        const httpCall = async <T>(method: HttpMethod, url: string, params: HttpUrlParams = undefined, data: HttpBodyData = undefined): Promise<HttpResult<T>> => {\r\n            return await doApiCall<T>(method, url, params, data);\r\n        };\r\n\r\n        const get = async <T>(url: string, params: HttpUrlParams = undefined): Promise<HttpResult<T>> => {\r\n            return await httpCall<T>(\"GET\", url, params);\r\n        };\r\n\r\n        const post = async <T>(url: string, params: HttpUrlParams = undefined, data: HttpBodyData = undefined): Promise<HttpResult<T>> => {\r\n            return await httpCall<T>(\"POST\", url, params, data);\r\n        };\r\n\r\n        const invokeBlockAction: InvokeBlockActionFunc = async <T>(actionName: string, data: HttpBodyData = undefined) => {\r\n            return await post<T>(`/api/v2/BlockActions/${store.state.pageGuid}/${props.config.blockGuid}/${actionName}`, undefined, {\r\n                __context: {\r\n                    pageParameters: store.state.pageParameters\r\n                },\r\n                ...data\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Reload the block by requesting the new initialization data and then\r\n         * remove the block component and re-add it.\r\n         */\r\n        const reloadBlock = async (): Promise<void> => {\r\n            const result = await invokeBlockAction<ObsidianBlockConfigBag>(\"RefreshObsidianBlockInitialization\");\r\n\r\n            if (result.isSuccess && result.data) {\r\n                currentBlockComponent.value = null;\r\n\r\n                // Waiting for the next tick forces Vue to remove the component\r\n                // so that we can re-add it causing a full initialization again.\r\n                nextTick(() => {\r\n                    configurationValuesChanged.reset();\r\n                    configurationValues.value = result.data?.configurationValues;\r\n                    configCustomActions.value = result.data?.customConfigurationActions;\r\n                    currentBlockComponent.value = props.blockComponent;\r\n                });\r\n            }\r\n            else {\r\n                console.error(\"Failed to reload block:\", result.errorMessage || \"Unknown error\");\r\n            }\r\n        };\r\n\r\n        // #endregion\r\n\r\n        // #region Event Handlers\r\n\r\n        /**\r\n         * Event handler for when a close event is emitted by a custom action\r\n         * component.\r\n         */\r\n        const onCustomActionClose = (): void => {\r\n            customActionComponent.value = null;\r\n        };\r\n\r\n        // #endregion\r\n\r\n        // Watch for changes in our config bar actions and make sure the UI\r\n        // is also updated to match.\r\n        watch(configBarActions, () => {\r\n            if (blockContainerElement.value) {\r\n                updateConfigurationBarActions(blockContainerElement.value, configBarActions.value);\r\n            }\r\n        });\r\n\r\n        // Called when an error in a child component has been captured.\r\n        onErrorCaptured(err => {\r\n            const defaultMessage = \"An unknown error was caught from the block.\";\r\n\r\n            if (err instanceof Error) {\r\n                error.value = err.message || defaultMessage;\r\n            }\r\n            else if (err) {\r\n                error.value = JSON.stringify(err) || defaultMessage;\r\n            }\r\n            else {\r\n                error.value = defaultMessage;\r\n            }\r\n        });\r\n\r\n        // Called when the component has mounted and is presented on the UI.\r\n        onMounted(() => {\r\n            finishTimeMs.value = RockDateTime.now().toMilliseconds();\r\n            const componentName = props.blockComponent?.name || \"\";\r\n            const nameParts = componentName.split(\".\");\r\n            let subtitle = nameParts[0] || \"\";\r\n\r\n            if (subtitle && subtitle.indexOf(\"(\") !== 0) {\r\n                subtitle = `(${subtitle})`;\r\n            }\r\n\r\n            if (nameParts.length) {\r\n                store.addPageDebugTiming({\r\n                    title: nameParts[1] || \"<Unnamed>\",\r\n                    subtitle: subtitle,\r\n                    startTimeMs: props.startTimeMs,\r\n                    finishTimeMs: finishTimeMs.value\r\n                });\r\n            }\r\n\r\n\r\n            // If we have any custom configuration actions then populate the\r\n            // custom buttons in the configuration bar.\r\n            if (blockContainerElement.value) {\r\n                updateConfigurationBarActions(blockContainerElement.value, configBarActions.value);\r\n            }\r\n        });\r\n\r\n        provideHttp({\r\n            doApiCall,\r\n            get,\r\n            post\r\n        });\r\n\r\n        provide(\"invokeBlockAction\", invokeBlockAction);\r\n        provide(\"configurationValues\", configurationValues);\r\n        provideReloadBlock(reloadBlock);\r\n        const configurationValuesChanged = provideConfigurationValuesChanged();\r\n\r\n        if (props.config.blockGuid) {\r\n            provideBlockGuid(props.config.blockGuid);\r\n        }\r\n\r\n        // If we have a block guid, then add an event listener for configuration\r\n        // changes to the block.\r\n        if (props.config.blockGuid) {\r\n            addBlockChangedEventListener(props.config.blockGuid, () => {\r\n                configurationValuesChanged.invoke();\r\n            });\r\n        }\r\n\r\n        return {\r\n            blockContainerElement,\r\n            blockFileUrl: props.config.blockFileUrl,\r\n            blockGuid: props.config.blockGuid ?? emptyGuid,\r\n            currentBlockComponent,\r\n            customActionComponent,\r\n            onCustomActionClose,\r\n            error\r\n        };\r\n    },\r\n\r\n    // Note: We are using a custom alert so there is no dependency on the\r\n    // Controls package.\r\n    template: `\r\n<div ref=\"blockContainerElement\" class=\"obsidian-block\">\r\n    <div v-if=\"!blockComponent\" class=\"alert alert-danger\">\r\n        <strong>Not Found</strong>\r\n        Could not find block component: \"{{blockFileUrl}}\"\r\n    </div>\r\n\r\n    <div v-if=\"error\" class=\"alert alert-danger\">\r\n        <strong>Uncaught Error</strong>\r\n        {{error}}\r\n    </div>\r\n\r\n    <component :is=\"currentBlockComponent\" :blockGuid=\"blockGuid\" />\r\n\r\n    <div style=\"display: none;\">\r\n        <component :is=\"customActionComponent\" @close=\"onCustomActionClose\" />\r\n    </div>\r\n</div>`\r\n});\r\n","ï»¿// <copyright>\r\n// Copyright by the Spark Development Network\r\n//\r\n// Licensed under the Rock Community License (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n// http://www.rockrms.com/license\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n// </copyright>\r\n//\r\nimport { App, Component, createApp, defineComponent, h, markRaw, onMounted, VNode } from \"vue\";\r\nimport RockBlock from \"./rockBlock.partial\";\r\nimport { useStore } from \"@Obsidian/PageState\";\r\nimport \"@Obsidian/ValidationRules\";\r\nimport \"@Obsidian/FieldTypes/index\";\r\nimport { DebugTiming } from \"@Obsidian/ViewModels/Utility/debugTiming\";\r\nimport { ObsidianBlockConfigBag } from \"@Obsidian/ViewModels/Cms/obsidianBlockConfigBag\";\r\nimport { PageConfig } from \"@Obsidian/Utility/page\";\r\nimport { RockDateTime } from \"@Obsidian/Utility/rockDateTime\";\r\nimport { BasicSuspenseProvider, provideSuspense } from \"@Obsidian/Utility/suspense\";\r\n\r\ntype DebugTimingConfig = {\r\n    elementId: string;\r\n    debugTimingViewModels: DebugTiming[];\r\n};\r\n\r\nconst store = useStore();\r\n\r\n/**\r\n * This is a special use component that allows developers to include style\r\n * tags inside a string-literal component (i.e. not an SFC). It should only\r\n * be used temporarily until the styling team can move the styles into the\r\n * LESS and CSS files.\r\n */\r\nconst developerStyle = defineComponent({\r\n    render(): VNode {\r\n        return h(\"style\", {}, this.$slots.default ? this.$slots.default() : undefined);\r\n    }\r\n});\r\n\r\n\r\n/**\r\n* This should be called once per block on the page. The config contains configuration provided by the block's server side logic\r\n* counterpart.  This adds the block to the page and allows it to begin initializing.\r\n* @param config\r\n* @param blockComponent\r\n*/\r\nexport async function initializeBlock(config: ObsidianBlockConfigBag): Promise<App> {\r\n    const blockPath = `${config.blockFileUrl}.js`;\r\n    let blockComponent: Component | null = null;\r\n    let errorMessage = \"\";\r\n\r\n    if (!config || !config.blockFileUrl || !config.blockGuid || !config.rootElementId) {\r\n        console.error(\"Invalid block configuration:\", config);\r\n        throw \"Could not initialize Obsidian block because the configuration is invalid.\";\r\n    }\r\n\r\n    const rootElement = document.getElementById(config.rootElementId);\r\n\r\n    if (!rootElement) {\r\n        throw \"Could not initialize Obsidian block because the root element was not found.\";\r\n    }\r\n\r\n    try {\r\n        const blockComponentModule = await import(blockPath);\r\n        blockComponent = blockComponentModule ?\r\n            (blockComponentModule.default || blockComponentModule) :\r\n            null;\r\n    }\r\n    catch (e) {\r\n        // Log the error, but continue setting up the app so the UI will show the user an error\r\n        console.error(e);\r\n        errorMessage = `${e}`;\r\n    }\r\n\r\n    const name = `Root${config.blockFileUrl.replace(/\\//g, \".\")}`;\r\n    const startTimeMs = RockDateTime.now().toMilliseconds();\r\n\r\n    const app = createApp({\r\n        name,\r\n        components: {\r\n            RockBlock\r\n        },\r\n        setup() {\r\n            let isLoaded = false;\r\n\r\n            // Create a suspense provider so we can monitor any asynchronous load\r\n            // operations that should delay the display of the page.\r\n            const suspense = new BasicSuspenseProvider(undefined);\r\n            provideSuspense(suspense);\r\n\r\n            /** Called to note on the body element that this block is loading. */\r\n            const startLoading = (): void => {\r\n                let pendingCount = parseInt(document.body.getAttribute(\"data-obsidian-pending-blocks\") ?? \"0\");\r\n                pendingCount++;\r\n                document.body.setAttribute(\"data-obsidian-pending-blocks\", pendingCount.toString());\r\n            };\r\n\r\n            /** Called to note when this block has finished loading. */\r\n            const finishedLoading = (): void => {\r\n                if (isLoaded) {\r\n                    return;\r\n                }\r\n\r\n                isLoaded = true;\r\n\r\n                // Get the number of pending blocks. If this is the last one\r\n                // then signal the page that all blocks are loaded and ready.\r\n                let pendingCount = parseInt(document.body.getAttribute(\"data-obsidian-pending-blocks\") ?? \"0\");\r\n                if (pendingCount > 0) {\r\n                    pendingCount--;\r\n                    document.body.setAttribute(\"data-obsidian-pending-blocks\", pendingCount.toString());\r\n                    if (pendingCount === 0) {\r\n                        document.body.classList.remove(\"obsidian-loading\");\r\n                    }\r\n                }\r\n            };\r\n\r\n            // Start loading and wait for up to 5 seconds for the block to finish.\r\n            startLoading();\r\n            setTimeout(finishedLoading, 5000);\r\n\r\n            // Called when all our child components have initialized.\r\n            onMounted(() => {\r\n                if (!suspense.hasPendingOperations()) {\r\n                    finishedLoading();\r\n                }\r\n                else {\r\n                    suspense.addFinishedHandler(() => {\r\n                        finishedLoading();\r\n                    });\r\n                }\r\n            });\r\n\r\n            return {\r\n                config: config,\r\n                blockComponent: blockComponent ? markRaw(blockComponent) : null,\r\n                startTimeMs,\r\n                errorMessage\r\n            };\r\n        },\r\n\r\n        // Note: We are using a custom alert so there is not a dependency on\r\n        // the Controls package.\r\n        template: `\r\n<div v-if=\"errorMessage\" class=\"alert alert-danger\">\r\n    <strong>Error Initializing Block</strong>\r\n    <br />\r\n    {{errorMessage}}\r\n</div>\r\n<RockBlock v-else :config=\"config\" :blockComponent=\"blockComponent\" :startTimeMs=\"startTimeMs\" />`\r\n    });\r\n\r\n    app.component(\"v-style\", developerStyle);\r\n    app.mount(rootElement);\r\n\r\n    return app;\r\n}\r\n\r\n/**\r\n* This should be called once per page with data from the server that pertains to the entire page. This includes things like\r\n* page parameters and context entities.\r\n* @param {object} pageData\r\n*/\r\nexport async function initializePage(pageConfig: PageConfig): Promise<void> {\r\n    await store.initialize(pageConfig);\r\n}\r\n\r\n/**\r\n * Shows the Obsidian debug timings\r\n * @param debugTimingConfig\r\n */\r\nexport async function initializePageTimings(config: DebugTimingConfig): Promise<void> {\r\n    const rootElement = document.getElementById(config.elementId);\r\n\r\n    if (!rootElement) {\r\n        console.error(\"Could not show Obsidian debug timings because the HTML element did not resolve.\");\r\n        return;\r\n    }\r\n\r\n    const pageDebugTimings = (await import(\"@Obsidian/Controls/pageDebugTimings\")).default;\r\n\r\n    const app = createApp({\r\n        name: \"PageDebugTimingsRoot\",\r\n        components: {\r\n            PageDebugTimings: pageDebugTimings\r\n        },\r\n        data() {\r\n            return {\r\n                viewModels: config.debugTimingViewModels\r\n            };\r\n        },\r\n        template: `<PageDebugTimings :serverViewModels=\"viewModels\" />`\r\n    });\r\n    app.mount(rootElement);\r\n}\r\n"],"names":["store","useStore","addBlockChangedEventListener","blockId","callback","_document$querySelect","onTriggerClick","dataElement","document","querySelector","value","toLowerCase","startsWith","dataSegments","split","length","areEqual","addEventListener","Sys","Application","add_load","_document$querySelect2","updateConfigurationBarActions","blockContainerElement","actions","_blockContent$childre","blockContent","closest","blockConfiguration","Array","from","children","find","el","classList","contains","configurationBar","nameElement","tagName","querySelectorAll","filter","dataset","forEach","remove","action","_action$title","_action$iconCssClass","hyperlinkElement","createElement","href","title","e","preventDefault","handler","iconElement","className","iconCssClass","appendChild","after","defineComponent","name","props","config","type","Object","required","blockComponent","default","startTimeMs","Number","setup","_props$config$blockGu","error","ref","finishTimeMs","configurationValues","configCustomActions","customConfigurationActions","customActionComponent","currentBlockComponent","configBarActions","computed","customActions","_iterator","_createForOfIteratorHelper","_step","_loop","cca","tooltip","componentFileUrl","push","_handler","_asyncToGenerator","_cca$componentFileUrl","_ref","_module$default","module","console","apply","arguments","s","n","done","err","f","httpCall","_ref2","method","url","params","undefined","data","doApiCall","_x","_x2","get","_ref3","_x3","post","_ref4","_x4","invokeBlockAction","_ref5","actionName","concat","state","pageGuid","blockGuid","_objectSpread","__context","pageParameters","_x5","reloadBlock","_ref6","result","isSuccess","nextTick","_result$data","_result$data2","configurationValuesChanged","reset","errorMessage","onCustomActionClose","watch","onErrorCaptured","defaultMessage","Error","message","JSON","stringify","onMounted","_props$blockComponent","RockDateTime","now","toMilliseconds","componentName","nameParts","subtitle","indexOf","addPageDebugTiming","provideHttp","provide","provideReloadBlock","provideConfigurationValuesChanged","provideBlockGuid","invoke","blockFileUrl","emptyGuid","template","developerStyle","render","h","$slots","initializeBlock","_initializeBlock","blockPath","rootElementId","rootElement","getElementById","blockComponentModule","replace","app","createApp","components","RockBlock","isLoaded","suspense","BasicSuspenseProvider","provideSuspense","startLoading","_document$body$getAtt","pendingCount","parseInt","body","getAttribute","setAttribute","toString","finishedLoading","_document$body$getAtt2","setTimeout","hasPendingOperations","addFinishedHandler","markRaw","component","mount","initializePage","_initializePage","pageConfig","initialize","initializePageTimings","_initializePageTimings","elementId","pageDebugTimings","PageDebugTimings","viewModels","debugTimingViewModels"],"mappings":"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"}